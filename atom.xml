<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>V make the world smart</title>
  <subtitle>houzhiwei&#39;s blogs</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="houzw.github.io.git/"/>
  <updated>2018-07-02T01:24:32.459Z</updated>
  <id>houzw.github.io.git/</id>
  
  <author>
    <name>侯志伟 - houzhiwei</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MapServer学习之 WMS</title>
    <link href="houzw.github.io.git/2018/06/11/MapServer%E5%AD%A6%E4%B9%A0%E4%B9%8B-WMS/"/>
    <id>houzw.github.io.git/2018/06/11/MapServer学习之-WMS/</id>
    <published>2018-06-11T00:45:13.000Z</published>
    <updated>2018-07-02T01:24:32.459Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="使用-MapServer-发布和处理-WMS"><a href="#使用-MapServer-发布和处理-WMS" class="headerlink" title="使用 MapServer 发布和处理 WMS"></a>使用 MapServer 发布和处理 WMS</h1><p>MapServer中，由 <code>mapserv</code> CGI 程序处理WMS请求，同时需要在map文件中设置恰当的元数据。</p><p>[TOC]</p><h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><p>检查是否支持WMS服务：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">mapserv -v # 命令</div><div class="line"># 查看输出内容是否包含  “SUPPORTS=WMS_SERVER”.</div></pre></td></tr></table></figure><h2 id="WMS的Map文件"><a href="#WMS的Map文件" class="headerlink" title="WMS的Map文件"></a>WMS的Map文件</h2><blockquote><p>更多的配置参考官网文档 <a href="http://mapserver.org/ogc/wms_server.html" target="_blank" rel="external">http://mapserver.org/ogc/wms_server.html</a></p></blockquote><p>用于WMS的Map文件同普通的map文件一样，但是有一些内容是必须的（或强烈建议设置）：</p><ul><li><p><strong>MAP</strong> 层</p><ul><li>NAME</li><li>PROJECTION</li><li><strong>WEB</strong> 对象中的 <strong>METADATA</strong><ul><li>wms_title</li><li>wms_onlineresource</li><li>wms_srs (至少PROJECTION 对象需要使用 “init=epsg:…”进行设置)</li><li>wms_enable_request</li></ul></li></ul></li><li><p>每个<strong>LAYER</strong>层</p><ul><li>NAME</li><li>PROJECTION</li><li>METADATA<ul><li>wms_title</li><li>wms_srs (可选，因为可以继承自map对象的SRS信息)</li></ul></li><li>STATUS<ul><li>STATUS DEFAULT 将被发送给客户端</li><li>STATUS ON / OFF 可被客户端请求</li></ul></li><li>TEMPLATE (GetFeatureInfo 请求时需要，查看 <a href="http://mapserver.org/mapfile/template.html#template" target="_blank" rel="external">Templating</a> )</li></ul></li></ul><p>###详细说明</p><ul><li><p><strong>Map Name 和 wms_title</strong></p><p>每一个图层的 WMS Capabilities 都需要一个 Name 和 Title 标签. Map 的 NAME 和 wms_title 元数据将被用作 GetCapabilities XML 输出的根图层（root layer）的 name 和 title. WMS 中的根图层与整个map文件上下文对应.</p></li><li><p><strong>Map PROJECTION 和 wms_srs :</strong></p><p>WMS 服务器需要使用EPSG投影编码来说明其提供的数据的投影. 最新版本的 PROJ4 库自带了一个 EPSG 初始化编码表，允许用户采用如下方式定义投影：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><div class="line">PROJECTION</div><div class="line">   <span class="string">"init=epsg:4269"</span> <span class="comment"># epsg 需要为小写字母</span></div><div class="line">END</div></pre></td></tr></table></figure><p>很多时候，若数据的投影能够使用EPSG编码表示，采用上述方式设置就已足够，不再需要 wms_srs。<strong>但是</strong>，当数据的投影没有完全对应的EPSG编码时，就需要</p><ul><li>在PROJECTION部分使用PROJ4的方式定义真正的投影信息</li><li>在wms_srs中定义可以使用的EPSG编码</li></ul><figure class="highlight yaml"><table><tr><td class="code"><pre><div class="line">MAP    </div><div class="line">    NAME <span class="string">"DEMO"</span></div><div class="line">    ...</div><div class="line">    WEB</div><div class="line">      ...</div><div class="line">      METADATA</div><div class="line">        <span class="string">"wms_title"</span>           <span class="string">"WMS Demo Server"</span></div><div class="line">        <span class="string">"wms_onlineresource"</span>  <span class="string">"http://my.host.com/cgi-bin/mapserv?map=wms.map&amp;"</span></div><div class="line">        <span class="string">"wms_srs"</span>             <span class="string">"EPSG:4269 EPSG:4326"</span></div><div class="line">      END</div><div class="line">    END</div><div class="line">    PROJECTION</div><div class="line">      <span class="string">"init=epsg:42304"</span>  <span class="comment"># 数据真正的投影</span></div><div class="line">    END</div><div class="line">4...</div><div class="line">END</div></pre></td></tr></table></figure></li><li><p><strong>wms_onlineresource:</strong></p><p>wms_onlineresource 元数据在map的<strong>WEB</strong>对象中设置，指定用于访问你的服务器的URL . 在GetCapabilities 输出中这是必须的. 若没有设置 wms_onlineresource ，那么 MapServer 互尝试使用脚本的名称和主机名(<em>hostname</em>) 提供一个默认的地址。但强烈建议设置 wms_onlineresource 信息.</p><p>基本上, <strong>wms_onlineresource</strong> 是一个完整的 HTTP URL，包括<code>http://</code>前缀, 主机名（hostname）, 脚本名, “map=” 参数，并以<code>?</code> 或 <code>&amp;</code>结束</p><p>一个有效的 online resource URL:</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">http://my.host.com/cgi-bin/mapserv?map=mywms.map&amp;</div></pre></td></tr></table></figure><p>上述URL看上去“很丑”。通过在服务器上建立一个包装脚本（ wrapper script ），可以实现隐藏 “map=” 参数的目的 ，最后的URL看起来是这样的:</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">http://my.host.com/cgi-bin/mywms?</div></pre></td></tr></table></figure><p>详细的内容后面介绍。</p></li></ul><ul><li><p><strong>wms_enable_request:</strong></p><p>指定启用哪一个请求. 若没有指定，这没有请求被启用!</p><ul><li><p><strong>Layer Name 和 wms_title :</strong></p><p>每个单独的图层都需要它自己的唯一 name 和 title. 图层的名称（name）同时被用于 GetMap 和GetFeatureInfo 请求中表示需要添加到地图输出和请求中的图层. 图层名称必须以字母开头 (不应以数字开头并不能包含空格).</p></li><li><p><strong>Layer PROJECTION 和 wms_srs :</strong></p><p>默认情况下，图层会继承其父图层的SRS (map的 PROJECTION ). 因此，虽然强烈建议，但是并不是必须要为每个图层设置 PROJECTION 和 wms_srs.</p><p>图层的PROJECTION 和 wms_srs 设置方式同MAP中的一样.</p><p>对于矢量图层，若提供了<code>init=epsg:xxxx</code> 形式的 PROJECTION ，则 MapServer 会用其来生成WMS capabilities文档中的<code>BoundingBox</code>标签. BoundingBox 是 WMS 1.3.0 规范中 capabilities 文档中必须的元素（因此，最好在每个图层提供<code>init=epsg:xxxx</code> 形式的 PROJECTION）.</p></li><li><p><strong>配置 GetFeatureInfo 请求:</strong></p><p><code>REQUEST=GetFeatureInfo&amp;INFO_FORMAT=text/plain</code> 或 <code>text/html</code> 或 <code>gml</code></p><p>如 <code>http://demo.mapserver.org/cgi-bin/wms?SERVICE=WMS&amp;VERSION=1.1.1&amp;REQUEST=GetFeatureInfo&amp;BBOX=-11.332970,24.121208,47.584718,57.965035&amp;SRS=EPSG:4326&amp;WIDTH=1001&amp;HEIGHT=575&amp;LAYERS=cities&amp;STYLES=&amp;FORMAT=image/png&amp;TRANSPARENT=true&amp;QUERY_LAYERS=cities&amp;INFO_FORMAT=text/plain&amp;X=229&amp;Y=280</code></p><p><strong>必须</strong>设置图层的 <strong>TEMPLATE</strong> 参数才能使图层能够处理 GetFeatureInfo 的查询请求（参考 <a href="http://mapserver.org/mapfile/template.html" target="_blank" rel="external">模板 Templating</a>） . 对于 “text/html” 类型的请求，也需要设置图层的 HEADER 和 FOOTER 参数.</p><figure class="highlight yaml"><table><tr><td class="code"><pre><div class="line">LAYER</div><div class="line">    NAME <span class="string">"test_layer"</span></div><div class="line">    TYPE POLYGON</div><div class="line">    METADATA</div><div class="line">        <span class="string">"wms_title"</span> <span class="string">"test_layer"</span></div><div class="line">        <span class="string">"wms_srs"</span> <span class="string">"EPSG:3857"</span></div><div class="line">    END</div><div class="line">    CONNECTIONTYPE postgis</div><div class="line">    CONNECTION <span class="string">"host=xx.xx.xx.xx port=xxxx dbname='xxxx' user=xxxx password=xxxx"</span></div><div class="line">    DATA <span class="string">"geom from xxx using unique gid using srid=3857"</span></div><div class="line">    TEMPLATE <span class="string">"template.html"</span> <span class="comment"># for GetFeatureInfo </span></div><div class="line">    CLASS</div><div class="line">        NAME <span class="string">"polygon_style"</span></div><div class="line">        STYLE</div><div class="line">            COLOR <span class="string">"#5eff4d"</span></div><div class="line">            OUTLINECOLOR <span class="string">"#ff4a2e"</span></div><div class="line">            WIDTH <span class="number">1</span></div><div class="line">        END</div><div class="line">    END</div><div class="line">END</div></pre></td></tr></table></figure></li></ul></li></ul><h2 id="修改Online-Resource-的-URL"><a href="#修改Online-Resource-的-URL" class="headerlink" title="修改Online Resource 的 URL"></a><a href="http://mapserver.org/ogc/wms_server.html#table-of-contents" target="_blank" rel="external">修改Online Resource 的 URL</a></h2><p><a href="http://osgeo-org.1560.x6.nabble.com/Rewrite-rule-problem-td5339356.html" target="_blank" rel="external">http://osgeo-org.1560.x6.nabble.com/Rewrite-rule-problem-td5339356.html</a></p><h3 id="使用-Apache-ReWrite-规则（Apache-mod-rewrite）"><a href="#使用-Apache-ReWrite-规则（Apache-mod-rewrite）" class="headerlink" title="使用 Apache ReWrite 规则（Apache mod_rewrite）"></a>使用 Apache ReWrite 规则（Apache mod_rewrite）</h3><blockquote><p>未成功，not found</p></blockquote><p><code>mod_rewrite</code> 提供了基于<a href="http://httpd.apache.org/docs/current/rewrite/intro.html#regex" target="_blank" rel="external">正则表达式</a>规则动态修改传入的请求的 URL 的方法。 这允许以自己喜欢的任意方法映射任意 URL 到你的内部 URL 结构。 (<a href="http://httpd.apache.org/docs/current/rewrite/" target="_blank" rel="external">http://httpd.apache.org/docs/current/rewrite/</a> )</p><p>可以使用Apache 的 mod_rewrite 规则来避免指定 map文件地址，或者其他的任何参数。包括三个步骤：</p><ul><li>指定加载的 mod_rewrite 模块</li><li>为选定的目录启用 mod_rewrite 模块</li><li>编写用于重写的<code>.htaccess</code>文件</li></ul><p>在<code>httpd.conf</code>文件中，去掉 <code>#LoadModule rewrite_module modules/mod_rewrite.so</code> 中的<code>#</code></p><p>为了启用这一模块，需要使用 AllowOverride 指令。可以对每个服务器或目录进行设置。若只有一个server，则 在<code>https.conf</code>文件中添加行：<code>AllowOverride All</code>。针对每个目录的设置是最简单的方式。在<code>&lt;virtualHost&gt;</code>部分添加内容：</p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Directory</span> <span class="attr">myhtdocsdir</span>&gt;</span></div><div class="line">  AllowOverride All</div><div class="line"><span class="tag">&lt;/<span class="name">Directory</span>&gt;</span></div></pre></td></tr></table></figure><p>myhtdocsdir 是实际的虚拟服务器中被定义为文档根路径的目录 （documentroot for the actual virtual server），即需要支持url重写的目录（如网站的目录）</p><p>设置好之后，需要<strong>重启Apache服务</strong></p><p>（任何对<code>httpd.conf</code>文件的修改都需要重启服务才能生效。<code>apache-restart.bat</code>）。</p><p>在myhtdocsdir路径下新建 <code>.htaccess</code>文件，写入以下内容</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">RewriteEngine on</div><div class="line">RewriteRule wmsmap?(.*)  /cgi-bin/mapserv?map=/home/www/mapserverstuff/mymapfile.map&amp;$1</div></pre></td></tr></table></figure><p>这个规则的意思是: 给定一个以wmsmap为起始的网页，获取其查询参数，发起一个新的以 <code>/cgi-bin/mapserv?map=(…)?</code>开头的页面查询，并添加原始页面查询中的所有查询参数.</p><p>即，用<code>wmsmap</code>来指代<code>/cgi-bin/mapserv?map=/home/www/mapserverstuff/mymapfile.map&amp;</code>，而不改变其查询参数，实现URL的重写。</p><p>如, URL <code>wmsmap?mode=map</code> 将被重写为<code>/cgi-bin/mapserv?map=/home/www/mapserverstuff/mymapfile.map&amp;mode=map</code></p><p>若 URL这是给出了<code>wmsmap</code>但没有带参数，将会抛出<code>page not found</code>错误，因为不匹配上述的<code>wmsmap?</code>的规则表达式.</p><h3 id="使用Apache-环境变量-MS-MAPFILE"><a href="#使用Apache-环境变量-MS-MAPFILE" class="headerlink" title="使用Apache 环境变量- MS_MAPFILE"></a>使用Apache 环境变量- MS_MAPFILE</h3><p>在<code>httpd.conf</code>文件中（约400行），通过<strong>MS_MAPFILE </strong>指定一个默认的 mapfile :</p><figure class="highlight html"><table><tr><td class="code"><pre><div class="line">Alias /wms /usr/lib/cgi-bin/mapserver # "d:/ms4w/Apache/cgi-bin/mapserv.exe"</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">Location</span> /<span class="attr">wms</span>&gt;</span></div><div class="line">   SetHandler cgi-script</div><div class="line">   Options ExecCGI</div><div class="line">   SetEnv MS_MAPFILE /path/to/mymapfile.map # "d:/ms4w/apps/cgi-viewer/map/wmsdemo1.map"</div><div class="line"><span class="tag">&lt;/<span class="name">Location</span>&gt;</span></div><div class="line"></div><div class="line"># http://localhost/wms?SERVICE=WMS&amp;VERSION=1.3.0&amp;REQUEST=GetCapabilities</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">Location</span> /<span class="attr">wms</span>/<span class="attr">demo1</span>&gt;</span></div><div class="line">   SetHandler cgi-script</div><div class="line">   Options ExecCGI</div><div class="line">   SetEnv MS_MAPFILE /path/to/mymapfile.map # "d:/ms4w/apps/cgi-viewer/map/wmsdemo1.map"</div><div class="line"><span class="tag">&lt;/<span class="name">Location</span>&gt;</span></div><div class="line"></div><div class="line"># http://localhost/wms/demo1?SERVICE=WMS&amp;VERSION=1.3.0&amp;REQUEST=GetCapabilities</div></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><h3 id="GetCapabilities"><a href="#GetCapabilities" class="headerlink" title="GetCapabilities"></a>GetCapabilities</h3><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">http://demo.mapserver.org/cgi-bin/wms?SERVICE=WMS&amp;VERSION=1.1.1&amp;REQUEST=GetCapabilities</div></pre></td></tr></table></figure><p>在 <strong>wms_onlineresource</strong> 的URL后面加上请求参数 （不需要指定图层） <code>SERVICE=WMS&amp;VERSION=1.1.1&amp;REQUEST=GetCapabilities</code></p><p>返回结果的 MIME type为 <code>application/vnd.ogc.wms_xml</code> （这是一个坑）</p><blockquote><p>发送GetCapabilities请求时出现下载 mapserv.exe 或 mapserv 文件的问题：</p><p>这是由于浏览器不识别1.1.1版本WMS返回数据的 MIME type，即 <code>application/vnd.ogc.wms_xml</code> , 将请求的VERSION版本改为 <strong>1.3.0</strong> 则可正常打开。</p><p>实际上下载的 mapserv.exe 或 mapserv 并非可执行的exe文件，用文本编辑器打开之后，可以发现其实是<code>WMT_MS_Capabilities</code>文档，或者是错误信息（若map配置有错的话）。这和访问上面MapServer给出的测试链接，即<code>http://demo.mapserver.org/cgi-bin/wms?SERVICE=WMS&amp;VERSION=1.1.1&amp;REQUEST=GetCapabilities</code>时下载的内容是相似的，因为其修改了wms_onlineresource地址，所有文件名不同。</p><p><a href="https://gis.stackexchange.com/questions/23605/wms-request-fails" target="_blank" rel="external">https://gis.stackexchange.com/questions/23605/wms-request-fails</a></p></blockquote><h3 id="GetMap"><a href="#GetMap" class="headerlink" title="GetMap"></a>GetMap</h3><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">http://demo.mapserver.org/cgi-bin/wms?SERVICE=WMS&amp;VERSION=1.1.1&amp;REQUEST=GetMap&amp;BBOX=-180,-90,180,90&amp;SRS=EPSG:4326&amp;WIDTH=953&amp;HEIGHT=480&amp;LAYERS=bluemarble,cities&amp;STYLES=&amp;FORMAT=image/png&amp;TRANSPARENT=true</div></pre></td></tr></table></figure><p>####所需参数：</p><ul><li><p><strong>VERSION=version:</strong> 请求版本，1.1.1 或 1.3.0 （版本不同，请求参数有差异，混用可能导致空白页面）</p></li><li><p><strong>REQUEST=GetMap:</strong> 请求的名称</p></li><li><p><strong>LAYERS=layer_list:</strong> 逗号分隔的图层列表（Comma-separated list）. 如 <code>LAYERS=bluemarble,cities</code>。若提供了 <a href="http://www.opengeospatial.org/standards/sld" target="_blank" rel="external">SLD</a> 参数则此项为可选的.</p></li><li><p><strong>STYLES=style_list:</strong> 逗号分隔的、每一个请求图层的渲染样式列表（Comma-separated list）. 若提供了 <a href="http://www.opengeospatial.org/standards/sld" target="_blank" rel="external">SLD</a> 参数则此项为可选的.</p><p>若使用默认样式，设置 “STYLES=”为空. 支持命名样式（由map文件中的 CLASS GROUP 名称控制）</p></li><li><p><strong>SRS=namespace:identifier:</strong> Spatial Reference System， 如 <code>EPSG:4326</code>（1.3.0 改为CRS）</p></li><li><p><strong>BBOX=minx,miny,maxx,maxy:</strong> 左下，右上角坐标，采用SRS定义的单位</p></li><li><p><strong>WIDTH=output_width:</strong> Width in pixels of map picture. 宽</p></li><li><p><strong>HEIGHT=output_height:</strong> Height in pixels of map picture. 高</p></li><li><p><strong>FORMAT=output_format:</strong> 输出地图的格式，如 <code>FORMAT=image/png</code></p></li></ul><blockquote><p>SLD 可参考 <a href="http://docs.geoserver.org/latest/en/user/styling/sld/index.html" target="_blank" rel="external">http://docs.geoserver.org/latest/en/user/styling/sld/index.html</a></p></blockquote><h2 id="GetLegendGraphic"><a href="#GetLegendGraphic" class="headerlink" title="GetLegendGraphic"></a>GetLegendGraphic</h2><p>绘制图层中所有定义的 <strong>CLASS</strong> 的图标和标签。</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">http://127.0.0.1/cgi-bin/mapserv.exe?SERVICE=WMS&amp;VERSION=1.1.1&amp;layer=park&amp;</div><div class="line">REQUEST=getlegendgraphic&amp;FORMAT=image/png</div></pre></td></tr></table></figure><p>####要求在<strong>Map</strong>文件中具备以下内容：</p><ul><li><strong>LEGEND</strong> 对象.</li><li>每个图层中定义了 <strong>CLASS</strong> 对象.</li><li>CLASS 对象中定义了 <strong>NAME</strong> .</li><li>每个 LAYER 的 <strong>STATUS</strong> 必须为 <strong>ON</strong>.</li></ul><p>####请求参数：</p><ul><li><strong>LAYER</strong> - (必须) 需要返回图例图形的WMS图层的名称，同 GetCapabilities 请求中的图层名称一样</li><li><strong>FORMAT</strong> - (必须) 如. <code>image/png</code></li><li><strong>WIDTH</strong> - (可选) 图例图形的宽度. 只有当使用<strong>Rule</strong>参数时，才需要设置此参数</li><li><strong>HEIGHT</strong> - (可选) 图例图形的高度，同上.</li><li><strong>SLD</strong> - (可选) SLD的 URL. Applies the SLD on the layer and the legend is drawn after the SLD is applied (using the classes specified by the SLD). Note here that you need to put a<name>class1</name>inside the Rule element so that a class name is created from the SLD and therefore a correct legend image.</li><li><strong>SLD_BODY</strong> - (可选) The body (code) of the SLD, instead of specifying a URL (as in the ‘SLD’ parameter).</li><li><strong>SLD_VERSION</strong> - (可选).</li><li><strong>SCALE</strong> - (可选) 指定比例尺，满足此比例尺的图层才会生成图例</li><li><strong>STYLE</strong> - (可选) The style.</li><li><strong>RULE</strong> - (可选) 指定 CLASS 的名称来生成图例图片 (相对于为图层的所有 CLASS生成图例).</li></ul><h4 id="基于内容的图例"><a href="#基于内容的图例" class="headerlink" title="基于内容的图例"></a>基于内容的图例</h4><p>当客户端发送的 GetLegendGraphic 请求包含(non-standard) BBOX, SRS/CRS 和 WIDTH/HEIGHT 参数时，且图层为POINT, LINE 和POLYGON 时支持。</p><h2 id="WMS-1-3-0"><a href="#WMS-1-3-0" class="headerlink" title="WMS 1.3.0"></a>WMS 1.3.0</h2><p>###相对1.1.1需要注意的变化：</p><ul><li>坐标轴的变化</li><li>新的坐标参考系统</li><li>使用 <strong>CRS</strong> 代替 SRS 参数</li><li>GetMap 中的 EXCEPTIONS 参数有效值为 XML, INIMAGE, BLANK</li><li>GetFeatureInfo 中的 EXCEPTIONS 参数有效值为 XML</li><li>新增了 LayerLimit 参数, 允许服务器发布和限制客户端在 GetMap 请求中允许包含的图层数量。</li><li>WMS 1.3.0 Post 请求应该是一个包含不同操作和参数的XML文档</li></ul><p>在之前版本的WMS中，横轴（easting）为 x 或 经度（lon），纵轴（northing）为 y 或纬度（lat）。而在WMS1.3.0 中，根据 CRS 的不同，x 轴不一定是东西向（may or may not be oriented West-to-East，大部分是）, y 轴也不一定是南北向。WMS 的描述操作决定了轴的顺序. 这一点对一些常用的 EPSG 代码有影响，如 ESPG:4326（WGS 84 latitude-longitude）.</p><p><a href="http://portal.opengeospatial.org/files/?artifact_id=14416" target="_blank" rel="external">WMS 1.3.0 规范</a>中支持的坐标系统：</p><ul><li><strong>CRS:84</strong> (WGS 84 longitude-latitude)</li><li>CRS:83 (NAD83 longitude-latitude)</li><li>CRS:27 (NAD27 longitude-latitude)</li><li>AUTO2:42001 (WGS 84 / Auto UTM )</li><li>AUTO2:42002 (WGS 84 / Auto Tr. Mercator)</li><li>AUTO2:42003 (WGS 84 / Auto Orthographic)</li><li>AUTO2:42004 (WGS 84 / Auto Equirectangular)</li><li>AUTO2:42005 (WGS 84 / Auto Mollweide)</li></ul><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><ul><li><p>CRS:84 且 BBOX 坐标为 <strong>经度-纬度</strong> long/lat</p><p><strong><code>BBOX=-180,-90,180,90&amp;CRS=CRS:84</code></strong></p></li><li><p>ESPG:4326 且 BBOX 坐标为 <strong>纬度-经度</strong> lat/long:</p><p><strong><code>BBOX=-90,-180,90,180&amp;CRS=EPSG:4326</code></strong></p></li></ul><hr><p>##示例</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">MAP</div><div class="line">  NAME &quot;WMS-test&quot;</div><div class="line">  STATUS ON</div><div class="line">  SIZE 400 300</div><div class="line">  EXTENT -2200000 -712631 3072800 3840000</div><div class="line">  UNITS METERS</div><div class="line">  SHAPEPATH &quot;../data&quot;</div><div class="line">  IMAGECOLOR 255 255 255</div><div class="line">  FONTSET ../etc/fonts.txt</div><div class="line"></div><div class="line">  WEB</div><div class="line">    IMAGEPATH &quot;/ms4w/tmp/ms_tmp/&quot;</div><div class="line">    IMAGEURL &quot;/ms_tmp/&quot;</div><div class="line">    METADATA</div><div class="line">      &quot;wms_title&quot;     &quot;WMS Demo Server&quot;  ##required</div><div class="line">      &quot;wms_onlineresource&quot; &quot;http://yourpath/cgi-bin/mapserv.exe?&quot;   ##required</div><div class="line">      &quot;wms_srs&quot;       &quot;EPSG:42304 EPSG:42101 EPSG:4269 EPSG:4326&quot;  ##recommended</div><div class="line">      &quot;wms_enable_request&quot; &quot;*&quot;   ##necessary</div><div class="line">    END</div><div class="line">  END # Web</div><div class="line"></div><div class="line">  PROJECTION</div><div class="line">    &quot;init=epsg:42304&quot;   ##required</div><div class="line">  END</div><div class="line"></div><div class="line">  SYMBOL</div><div class="line">    NAME &quot;circle&quot;</div><div class="line">    TYPE ellipse</div><div class="line">    POINTS 1 1 END</div><div class="line">  END # Symbol</div><div class="line"></div><div class="line">  #</div><div class="line">  # Start of layer definitions</div><div class="line">  #</div><div class="line"></div><div class="line">  LAYER</div><div class="line">    NAME &quot;park&quot;</div><div class="line">    METADATA</div><div class="line">      &quot;wms_title&quot;    &quot;Parks&quot;   ##required</div><div class="line">    END</div><div class="line">    TYPE POLYGON</div><div class="line">    STATUS OFF</div><div class="line">    DATA park</div><div class="line">    PROJECTION</div><div class="line">      &quot;init=epsg:42304&quot;   ##recommended</div><div class="line">    END</div><div class="line">    CLASS</div><div class="line">      NAME &quot;Parks&quot;</div><div class="line">      STYLE</div><div class="line">        COLOR 200 255 0</div><div class="line">        OUTLINECOLOR 120 120 120</div><div class="line">      END # Style</div><div class="line">    END # Class</div><div class="line">  END # Layer</div><div class="line"></div><div class="line">  LAYER</div><div class="line">    NAME popplace</div><div class="line">    METADATA</div><div class="line">      &quot;wms_title&quot;    &quot;Cities&quot;  ##required</div><div class="line">    END</div><div class="line">    TYPE POINT</div><div class="line">    STATUS ON</div><div class="line">    DATA popplace</div><div class="line">    PROJECTION</div><div class="line">      &quot;init=epsg:42304&quot;   ##recommended</div><div class="line">    END</div><div class="line">    CLASS</div><div class="line">      NAME &quot;Cities&quot;</div><div class="line">      STYLE</div><div class="line">        SYMBOL &quot;circle&quot;</div><div class="line">        SIZE 8</div><div class="line">        COLOR 0 0 0</div><div class="line">      END # Style</div><div class="line">    END # Class</div><div class="line">  END # Layer</div><div class="line"></div><div class="line">END # Map File</div></pre></td></tr></table></figure><hr><p>参考博客：</p><blockquote><p><a href="https://blog.csdn.net/qingyafan/article/details/49756681" target="_blank" rel="external">MapServer 之 发布 WMS GetFeatureInfo 服务</a></p><p><a href="https://blog.csdn.net/qingyafan/article/details/46500127" target="_blank" rel="external">MapServer 之 发布网络地图服务（WMS-Web Map Service）</a></p><p><a href="https://blog.csdn.net/qingyafan/article/details/50434132" target="_blank" rel="external">MapServer 之 发布网络覆盖数据服务（WCS-Web Coverage Service）</a></p><p><a href="https://gis.stackexchange.com/questions/230088/mapserver-geojson-output-template" target="_blank" rel="external">MapServer GeoJSON output template</a></p></blockquote><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
       
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CentOS MySql 安装</title>
    <link href="houzw.github.io.git/2018/05/25/CentOS-MySql-%E5%AE%89%E8%A3%85/"/>
    <id>houzw.github.io.git/2018/05/25/CentOS-MySql-安装/</id>
    <published>2018-05-25T09:30:02.000Z</published>
    <updated>2018-05-25T09:38:11.501Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:01 GMT+0800 (中国标准时间) --><p>##YUM源安装</p><blockquote><p><a href="http://dev.mysql.com/doc/refman/5.7/en/linux-installation-yum-repo.html" target="_blank" rel="external">Installing MySQL on Linux Using the MySQL Yum Repository</a></p><p><a href="http://dev.mysql.com/doc/refman/5.7/en/binary-installation.html" target="_blank" rel="external">Installing MySQL on Unix/Linux Using Generic Binaries</a></p><p>或者使用MariaDB Database替代MySQL（是MySQL的完整分支）</p><p><a href="http://www.jianshu.com/p/15a1659bc38d" target="_blank" rel="external">http://www.jianshu.com/p/15a1659bc38d</a></p><p><a href="http://www.bkjia.com/Mysql/1115394.html" target="_blank" rel="external">http://www.bkjia.com/Mysql/1115394.html</a></p></blockquote><h4 id="卸载mariadb"><a href="#卸载mariadb" class="headerlink" title="卸载mariadb"></a>卸载mariadb</h4><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">rpm -qa | grep mariadb # 是否安装了mariadb</div><div class="line">rpm -e mariadb-libs # 卸载</div><div class="line"># rpm -e --nodeps mariadb-libs ## 强力卸载，忽略依赖</div><div class="line">yum install vim libaio net-tools # 安装mysql依赖，可先检查是否安装了依赖</div></pre></td></tr></table></figure><h4 id="下载rpm包"><a href="#下载rpm包" class="headerlink" title="下载rpm包"></a>下载rpm包</h4><blockquote><p>一般的yum源中可能没有mysql的rpm，故需要先下载mysql的repo源</p></blockquote><p><code>wget http://dev.mysql.com/get/mysql57-community-release-el7-9.noarch.rpm</code></p><h5 id="安装源"><a href="#安装源" class="headerlink" title="安装源"></a>安装源</h5><p>下面命令将 MySQL 的 Yum repository 添加到系统的仓库列表之中，并下载 GnuPG key 来检查软件包的完整性（integrity）（可以用<code>yum repolist enabled | grep &quot;mysql.*-community.*&quot;</code>检查）</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">sudo yum rpm -ivh mysql57-community-release-el7-9.noarch.rpm</div></pre></td></tr></table></figure><p>查看子仓库，选择发行版</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">[houzw@MiWiFi-R1CM softwares]$ yum repolist all | grep mysql</div><div class="line">mysql-connectors-community/x86_64 MySQL Connectors Community        启用:     24</div><div class="line">mysql-connectors-community-source MySQL Connectors Community - Sour 禁用</div><div class="line">mysql-tools-community/x86_64      MySQL Tools Community             启用:     38</div><div class="line">mysql-tools-community-source      MySQL Tools Community - Source    禁用</div><div class="line">mysql-tools-preview/x86_64        MySQL Tools Preview               禁用</div><div class="line">mysql-tools-preview-source        MySQL Tools Preview - Source      禁用</div><div class="line">mysql55-community/x86_64          MySQL 5.5 Community Server        禁用</div><div class="line">mysql55-community-source          MySQL 5.5 Community Server - Sour 禁用</div><div class="line">mysql56-community/x86_64          MySQL 5.6 Community Server        禁用</div><div class="line">mysql56-community-source          MySQL 5.6 Community Server - Sour 禁用</div><div class="line">mysql57-community/x86_64          MySQL 5.7 Community Server        启用:    146</div><div class="line">mysql57-community-source          MySQL 5.7 Community Server - Sour 禁用</div><div class="line">mysql80-community/x86_64          MySQL 8.0 Community Server        禁用</div><div class="line">mysql80-community-source          MySQL 8.0 Community Server - Sour 禁用</div></pre></td></tr></table></figure><p>安装最新发行版时，不需要任何的配置。如果要安装其他版本，必须禁用最新版本，启用相应的版本</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">&gt; sudo yum-config-manager --disable mysql57-community</div><div class="line">&gt; sudo yum-config-manager --enable mysql56-community</div></pre></td></tr></table></figure><p>或者手动编辑<code>/etc/yum.repos.d/mysql-community.repo</code> 文件</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">[mysql57-community]</div><div class="line">name=MySQL 5.7 Community Server</div><div class="line">baseurl=http://repo.mysql.com/yum/mysql-5.7-community/el/6/$basearch/</div><div class="line">enabled=1</div><div class="line">gpgcheck=1</div><div class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql</div></pre></td></tr></table></figure><p>如果想安装5.6</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line"># Enable to use MySQL 5.6</div><div class="line">[mysql56-community]</div><div class="line">name=MySQL 5.6 Community Server</div><div class="line">baseurl=http://repo.mysql.com/yum/mysql-5.6-community/el/6/$basearch/</div><div class="line">enabled=1 # 启用 。 设置5.7 的enabled=0 表示不启用5.7</div><div class="line">gpgcheck=1</div><div class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql</div></pre></td></tr></table></figure><p>查看启用的版本</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">yum repolist enabled | grep mysql</div></pre></td></tr></table></figure><h4 id="安装mysql-server"><a href="#安装mysql-server" class="headerlink" title="安装mysql-server"></a>安装mysql-server</h4><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">sudo yum install mysql-server</div></pre></td></tr></table></figure><p>然后会进行下载安装相应的软件</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">mysql-community-server         x86_64         5.7.16-1.el7          mysql57-community    </div><div class="line"># 为依赖而安装:</div><div class="line">mysql-community-client         x86_64         5.7.16-1.el7          mysql57-community</div><div class="line">mysql-community-common         x86_64         5.7.16-1.el7          mysql57-community</div><div class="line">mysql-community-libs</div></pre></td></tr></table></figure><h2 id="RPM二进制包安装"><a href="#RPM二进制包安装" class="headerlink" title="RPM二进制包安装"></a>RPM二进制包安装</h2><blockquote><p>安装参考：</p><p>官方：<a href="http://dev.mysql.com/doc/refman/5.7/en/binary-installation.html" target="_blank" rel="external">http://dev.mysql.com/doc/refman/5.7/en/binary-installation.html</a></p><p>博客（主要参考）：</p><p><a href="http://blog.csdn.net/okh258/article/details/53171653" target="_blank" rel="external">linux 下安装mysql-5.7.16-1.el6.x86_64.rpm-bundle</a></p><p><a href="http://blog.csdn.net/babyfish13/article/details/51221673" target="_blank" rel="external">CentOS6.6-64下rpm方式mysql-5.7.12安装实录</a></p></blockquote><p>下载</p><p><code>wget http://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.16-1.el7.x86_64.rpm-bundle.tar</code></p><p>解压</p><p><code>tar -xf mysql-5.7.16-1.el7.x86_64.rpm-bundle.tar</code></p><p>得到一系列安装包</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">mysql-community-client-5.7.16-1.el7.x86_64.rpm</div><div class="line">mysql-community-common-5.7.16-1.el7.x86_64.rpm</div><div class="line">mysql-community-devel-5.7.16-1.el7.x86_64.rpm</div><div class="line">mysql-community-embedded-5.7.16-1.el7.x86_64.rpm</div><div class="line">mysql-community-embedded-compat-5.7.16-1.el7.x86_64.rpm</div><div class="line">mysql-community-embedded-devel-5.7.16-1.el7.x86_64.rpm</div><div class="line">mysql-community-libs-5.7.16-1.el7.x86_64.rpm</div><div class="line">mysql-community-libs-compat-5.7.16-1.el7.x86_64.rpm</div><div class="line">mysql-community-minimal-debuginfo-5.7.16-1.el7.x86_64.rpm</div><div class="line">mysql-community-server-5.7.16-1.el7.x86_64.rpm</div><div class="line">mysql-community-server-minimal-5.7.16-1.el7.x86_64.rpm</div><div class="line">mysql-community-test-5.7.16-1.el7.x86_64.rpm</div></pre></td></tr></table></figure><p>依次安装(官方说要安装依赖，不过一般都已经有了 <code>yum install libaio</code>)</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">sudo rpm -ivh mysql-community-common-5.7.16-1.el7.x86_64.rpm</div><div class="line">sudo rpm -ivh mysql-community-libs-5.7.16-1.el7.x86_64.rpm</div><div class="line">sudo rpm -ivh mysql-community-client-5.7.16-1.el7.x86_64.rpm</div><div class="line">sudo rpm -ivh mysql-community-server-5.7.16-1.el7.x86_64.rpm</div></pre></td></tr></table></figure><p>安装后可以查看</p><p><code>rpm -qa | grep mysql</code></p><h2 id="MySQL使用"><a href="#MySQL使用" class="headerlink" title="MySQL使用"></a>MySQL使用</h2><h4 id="启动mysql"><a href="#启动mysql" class="headerlink" title="启动mysql"></a>启动mysql</h4><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">$ sudo service mysqld start</div><div class="line">Redirecting to /bin/systemctl start  mysqld.service</div></pre></td></tr></table></figure><p>启动后查看日志获取随机密码</p><p><code>sudo cat /var/log/mysqld.log | more</code>或<code>grep &quot;password&quot; /var/log/mysqld.log</code>直接在文件中查找</p><p><code>[Note] A temporary password is generated for root@localhost: h4aci)6GVpxw</code></p><p>停止：<code>sudo service mysqld stop</code><br>重启：<code>sudo service mysqld restart</code></p><h4 id="登录mysql，修改初始密码"><a href="#登录mysql，修改初始密码" class="headerlink" title="登录mysql，修改初始密码"></a>登录mysql，修改初始密码</h4><p><code>mysql -uroot -p</code></p><p>然后修改密码(注意：新密码<strong>必须包含有数字，大写字母，小写字母，特殊符号</strong>，否则报错，不能修改)</p><figure class="highlight"><table><tr><td class="code"><pre><div class="line">mysql&gt; alter user 'root'@'localhost' identified by 'newpassword';</div><div class="line">mysql&gt; flush privileges;</div></pre></td></tr></table></figure><p>或者<code>mysql&gt; set password= PASSWORD(&quot;newpassword&quot;);</code>修改当前用户密码，加密保存</p><h4 id="打开3306端口"><a href="#打开3306端口" class="headerlink" title="打开3306端口"></a>打开3306端口</h4><p><code>/sbin/iptables -I INPUT -p tcp --dport 3306 -j ACCEPT</code></p><p>或使用<code>firewall-cmd</code>命令</p><p><code>若 FirewallD is not running</code>可以执行 <code>systemctl start firewalld</code> 开启防火墙。</p><p>开启端口</p><p><code>firewall-cmd --zone=public --add-port=3306/tcp --permanent</code></p><h4 id="MySQL管理"><a href="#MySQL管理" class="headerlink" title="MySQL管理"></a>MySQL管理</h4><ul><li>查看用户</li></ul><p><code>mysql&gt; select distinct concat(&#39;User: &#39;&#39;&#39;,user,&#39;&#39;&#39;@&#39;&#39;&#39;,host,&#39;&#39;&#39;;&#39;) as usr from mysql.user;</code></p><ul><li>查看数据库中具体某个用户的权限</li></ul><p><code>mysql&gt; show grants for [&#39;cactiuser&#39;@&#39;%&#39;](mailto:&#39;cactiuser&#39;@&#39;%&#39;);</code></p><ul><li>查看user表结构　需要具体的项可结合表结构来查询</li></ul><p><code>mysql&gt; desc mysql.user;</code></p><ul><li>修改密码（不用登录mysql）</li></ul><p><code>mysqladmin -u用户名 -p旧密码 password 新密码</code></p><ul><li>修改密码（登录mysql之后）</li></ul><p><code>mysql&gt; update user set password=password(“newpwd”) where user=’root’;// 修改密码</code><br><code>mysql&gt; flush privileges; //刷新数据库</code></p><ul><li>创建用户，用%可以代表任意主机，也可以用all privileges代表所有权限。</li></ul><p><code>mysql&gt; grant all privileges on 数据库.* to &#39;用户名&#39;@&#39;登录主机&#39; identified by &#39;密码&#39;;</code></p><p>语法：<code>GRANT privileges ON databasename.tablename TO &#39;username&#39;@&#39;host&#39;;</code></p><p>其中，<code>host</code>可以是<code>localhost</code>或<code>%</code>（任意ip）或具体的<code>ip</code>地址</p><ul><li>或者</li></ul><figure class="highlight"><table><tr><td class="code"><pre><div class="line">mysql&gt; CREATE USER 'user'@'localhost' IDENTIFIED BY '123456'; </div><div class="line">mysql&gt; SET PASSWORD FOR 'username'@'host' = PASSWORD('newpassword'); --修改密码，加密保存</div><div class="line">       --如果是当前登陆用户用 SET PASSWORD = PASSWORD("newpassword");</div></pre></td></tr></table></figure><ul><li>修改root可以在其他地址登录</li></ul><p><code>mysql&gt; grant all privileges on *.* to &#39;root&#39;@&#39;%&#39; identified by &#39;&lt;pw&gt;&#39;;</code></p><p>或使用</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">mysql&gt; update user set host = &apos;%&apos; where user = &apos;root&apos;;</div><div class="line">mysql&gt; flush privileges;</div></pre></td></tr></table></figure><ul><li>忘记密码时，可用如下方法重置（未测试）</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">service mysqld stop</div><div class="line">mysqld_safe --user=root --skip-grant-tables --skip-networking &amp;</div><div class="line">mysql -u root </div><div class="line">mysql&gt; use mysql;</div><div class="line">mysql&gt; update user set password=password(&quot;new_password&quot;) where user=&quot;root&quot;; </div><div class="line">mysql&gt; flush privileges;</div></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
       
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>开源地理信息软件或算法库</title>
    <link href="houzw.github.io.git/2018/03/13/%E5%BC%80%E6%BA%90%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E8%BD%AF%E4%BB%B6%E6%88%96%E7%AE%97%E6%B3%95%E5%BA%93/"/>
    <id>houzw.github.io.git/2018/03/13/开源地理信息软件或算法库/</id>
    <published>2018-03-13T08:01:27.000Z</published>
    <updated>2018-06-09T15:00:45.803Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><p>[doc]</p><h2 id="开源地理信息基金会-OSGEO"><a href="#开源地理信息基金会-OSGEO" class="headerlink" title="开源地理信息基金会 OSGEO"></a>开源地理信息基金会 <a href="http://www.osgeo.org/" target="_blank" rel="external">OSGEO</a></h2><p><img src="https://www.osgeo.org/wp-content/themes/roots/assets/img/logo-osgeo.svg" alt="osgeo"></p><p>包括著名的 GDAL、GRASS GIS、QGIS、GeoServer、OpenLayers、PostGIS、GeoTools、MapServer、GEOS、Geonetwork等</p><h2 id="GSLIB"><a href="#GSLIB" class="headerlink" title="GSLIB"></a><a href="http://www.gslib.com/" target="_blank" rel="external">GSLIB</a></h2><p>GSLIB: Geostatistical Software Library and related software. 地统计及相关软件库</p><ul><li>Point researchers and practitioners to the public-domain GSLIB programs for geostatistical problem solving.</li><li>Provide the latest GSLIB source code and PC executables to download. Bug fixes and frequently asked questions are updated from time to time.</li><li>Inform users of a commercial supplement to GSLIB, <strong>WinGslib</strong>, a Windows interface to GSLIB and related programs.</li><li>Announce training, support, and consultation opportunities. Although GSLIB comes with no support, arrangements will be made on a case-by-case basis.</li></ul><p><img src="http://www.gslib.com/images/logo23.gif" alt="img"> 由 Clayton Deutsch 和 Emmanuel Schnetzler 维护.</p><h2 id="The-Remote-Sensing-and-GIS-Software-Library-RSGISLib"><a href="#The-Remote-Sensing-and-GIS-Software-Library-RSGISLib" class="headerlink" title="The Remote Sensing and GIS Software Library (RSGISLib)"></a>The Remote Sensing and GIS Software Library (<a href="https://www.rsgislib.org/" target="_blank" rel="external">RSGISLib</a>)</h2><p>The Remote Sensing and GIS software library (RSGISLib) is a collection of tools for processing remote sensing and GIS datasets. The tools are accessed using Python bindings or an XML interface.</p><p>The project is hosted on Bitbucket and is available to download from <a href="https://bitbucket.org/petebunting/rsgislib" target="_blank" rel="external">https://bitbucket.org/petebunting/rsgislib</a></p><p>The project is jointly led by Pete Bunting (<a href="http://www.aber.ac.uk/en/iges/research-groups/earth-observation-laboratory/" target="_blank" rel="external">Earth Observation and Ecosystem Dynamics Group</a> , <a href="http://www.aber.ac.uk/" target="_blank" rel="external">Aberystwyth University</a>) and Dan Clewley (<a href="http://pml.ac.uk/" target="_blank" rel="external">Plymouth Marine Laboratory</a>).</p><h2 id="whitebox"><a href="#whitebox" class="headerlink" title="whitebox"></a>whitebox</h2><p>由 吴秋生 和加拿大 University of Guelph 的 John Lindsay 教授合作开发的 Python 软件包。该软件包目前包含<strong>323个</strong>工具；可用于各种 GIS 分析和遥感图像处理；可跨平台使用 (包括 Windows, macOS, Linux)；支持 Python 3.x；所有工具的算法和代码都是开源的 (编程语言：Rust)；可独立运行，不依赖任何第三方软件；新的工具在还在持续增加中。</p><p>如何安装：</p><ul><li><em>pip install</em> <em>whitebox</em></li></ul><p>工具分组列表：</p><ul><li>Data Tools</li><li>Geomorphometric Analysis</li><li>GIS Analysis</li><li>Hydrological Analysis</li><li>Image Analysis</li><li>LiDAR Analysis</li><li>Mathematical and Statistical Analysis</li><li>Stream Network Analysis</li><li>Terrain Analysis</li></ul><p>PyPI: <a href="https://pypi.org/project/whitebox/" target="_blank" rel="external">https://pypi.org/project/whitebox/</a></p><p>GitHub: <a href="https://github.com/giswqs/whitebox" target="_blank" rel="external">https://github.com/giswqs/whitebox</a></p><p>Docs: <a href="https://whitebox.readthedocs.io" target="_blank" rel="external">https://whitebox.readthedocs.io</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      收集、整理开源的地理信息软件或者算法库，便于后续开发、研究。
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Data Portal Collection</title>
    <link href="houzw.github.io.git/2018/03/13/Data%20Portal%20Collection/"/>
    <id>houzw.github.io.git/2018/03/13/Data Portal Collection/</id>
    <published>2018-03-13T08:01:27.000Z</published>
    <updated>2018-06-08T05:49:04.744Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:01 GMT+0800 (中国标准时间) --><h1 id="Data-Portal-Collection"><a href="#Data-Portal-Collection" class="headerlink" title="Data Portal Collection"></a>Data Portal Collection</h1><blockquote><p>按主要提供的数据类型分</p></blockquote><h1 id="1-综合类"><a href="#1-综合类" class="headerlink" title="1. 综合类"></a>1. 综合类</h1><h2 id="国家地球系统科学数据共享平台"><a href="#国家地球系统科学数据共享平台" class="headerlink" title="国家地球系统科学数据共享平台"></a>国家地球系统科学数据共享平台</h2><p><a href="http://www.geodata.cn/" target="_blank" rel="external">http://www.geodata.cn/</a></p><blockquote><p>申请或直接下载</p></blockquote><p>大气圈、陆地表层、陆地水圈、冰冻圈、自然资源、海洋、极地、固体地球、古环境、日地空间环境与天文、遥感数据</p><h2 id="寒区旱区科学数据中心"><a href="#寒区旱区科学数据中心" class="headerlink" title="寒区旱区科学数据中心"></a>寒区旱区科学数据中心</h2><p><a href="http://westdc.westgis.ac.cn/" target="_blank" rel="external">http://westdc.westgis.ac.cn/</a></p><h2 id="全球变化科学研究数据出版系统"><a href="#全球变化科学研究数据出版系统" class="headerlink" title="全球变化科学研究数据出版系统"></a>全球变化科学研究数据出版系统</h2><p><a href="http://www.geodoi.ac.cn/WebCn/Default.aspx" target="_blank" rel="external">http://www.geodoi.ac.cn/WebCn/Default.aspx</a></p><p>直接下载，发表成果时引用</p><h2 id="中科院资源环境科学数据中心"><a href="#中科院资源环境科学数据中心" class="headerlink" title="中科院资源环境科学数据中心"></a>中科院资源环境科学数据中心</h2><p><a href="http://www.resdc.cn/" target="_blank" rel="external">http://www.resdc.cn/</a></p><blockquote><p>网站VIP会员可以免费下载数据，网站将对会员施行VIP身份认证，通过认证的 VIP会员就可以下载网站的所有数据。</p><p>部分有偿</p></blockquote><p>中国行政区划数据、自然地理分区数据、中国气象要素空间插值数据、中国土地利用数据、中国陆地生态系统宏观结构数据、植被类型数据、土壤数据、社会经济数据、城市空气质量监测数据、中国净第一性生产力NPP数据、高分辨率卫星遥感影像数据、中分辨率卫星遥感影像数据、全球100万基础地理数据、地形地貌数据、中国长时间序列1公里植被指数（NDVI）数据集、中国水系流域空间分布数据集、中国农田生产潜力数据、全球夜间灯光数据</p><h2 id="国家遥感中心-GEO共享数据列表"><a href="#国家遥感中心-GEO共享数据列表" class="headerlink" title="国家遥感中心  GEO共享数据列表"></a>国家遥感中心 GEO共享数据列表</h2><p><a href="http://www.nrscc.gov.cn/nrscc/gjhz/gjdqgczz/gzqkjs/sjgx/geogxsjlb/" target="_blank" rel="external">http://www.nrscc.gov.cn/nrscc/gjhz/gjdqgczz/gzqkjs/sjgx/geogxsjlb/</a></p><blockquote><p>里面列举了<em>近21年表面太阳辐射数据</em>、<em>CEOS陆地表面中分辨率光学影像</em>、<em>全球陆地覆盖地球科学数据</em>（包括SRTM、GTOPO30）、<em>EROS数据服务</em>、<em>全球ASTER G-DEM数据</em>、<em>地球系统图集</em> 等的数据服务地址</p></blockquote><p>###EarthServer</p><p><a href="http://www.earthserver.eu/" target="_blank" rel="external">http://www.earthserver.eu/</a></p><p>Big Earth Data at your fingertips - this is the vision of EarthServer, an intercontinental initiative for unleashing the potential of Big Data through a disruptive paradigm shift in technology:</p><ul><li>from isolated silos of data with disparate functionality towards a single, uniform information space;</li><li>from a difficult, artificial differentiation between data and metadata access to unified retrieval;</li><li>from zillions of files towards few whatever-size datacubes;</li><li>from limited functionality to the freedom of asking anything, anytime, any server in a peer network of data centers worldwide.</li></ul><h2 id="Data-Ordering-Tools-amp-Resources"><a href="#Data-Ordering-Tools-amp-Resources" class="headerlink" title="Data Ordering Tools &amp; Resources"></a>Data Ordering Tools &amp; Resources</h2><p><a href="https://modis.gsfc.nasa.gov/tools/" target="_blank" rel="external">https://modis.gsfc.nasa.gov/tools/</a></p><ul><li><a href="https://lpdaacsvc.cr.usgs.gov/appeears/" target="_blank" rel="external">AppEEARS</a></li><li><a href="http://earthdata.nasa.gov/" target="_blank" rel="external">Earth Data</a></li><li><a href="https://search.earthdata.nasa.gov/" target="_blank" rel="external">Earthdata Search</a></li><li><a href="https://earthexplorer.usgs.gov/" target="_blank" rel="external">USGS EarthExplorer</a></li><li><a href="EOS Clearing House (ECHO">EOS Clearing House (ECHO) / Reverb</a> / Reverb)</li><li><a href="http://giovanni.gsfc.nasa.gov/giovanni/" target="_blank" rel="external">Giovanni</a> 或 <a href="http://disc.sci.gsfc.nasa.gov/giovanni/overview" target="_blank" rel="external">http://disc.sci.gsfc.nasa.gov/giovanni/overview</a></li><li><a href="http://gcmd.gsfc.nasa.gov/" target="_blank" rel="external">Global Change Master Directory (GCMD)</a></li><li><a href="http://hdfeos.org/software/heg.php" target="_blank" rel="external">HDF-EOS to GeoTIFF converter (HEG)</a></li><li><a href="http://www.space-research.org/" target="_blank" rel="external">HDFExplorer</a> &amp; <a href="http://www-loa.univ-lille1.fr/informatique/index.php?lang=us&amp;p=about&amp;app=HDFLook" target="_blank" rel="external">HDFLook</a></li><li><a href="http://www.hdfgroup.org/products/" target="_blank" rel="external">HDF Technologies</a></li><li><a href="https://lpdaac.usgs.gov/data_access/data_pool" target="_blank" rel="external">LP DAAC2Disk Download Manager</a></li><li><a href="http://www.ssec.wisc.edu/mcidas/software/mclite/" target="_blank" rel="external">McIDAS</a></li><li><a href="http://modis-atmos.gsfc.nasa.gov/IMAGES/" target="_blank" rel="external">MODIS Atmosphere Global Browse Images</a></li><li><a href="http://nsidc.org/data/mist/index.html" target="_blank" rel="external">MODIS Interactive Subsetting Tool (MIST)</a></li><li><a href="http://landweb.nascom.nasa.gov/cgi-bin/browse/browse.cgi" target="_blank" rel="external">MODIS Land Global Browse Images</a></li><li><a href="https://lpdaac.usgs.gov/products/modis_products_table" target="_blank" rel="external">MODIS Land QA tutorials</a></li><li><a href="https://ladsweb.nascom.nasa.gov/" target="_blank" rel="external">MODIS Level 1 Atmosphere Archive and Distribution System (LAADS Web)</a></li><li><a href="https://lpdaac.usgs.gov/tools/ldope_tools" target="_blank" rel="external">MODIS LDOPE QA Tools</a></li><li><a href="https://nsidc.org/data/modis/ms2gt/index.html" target="_blank" rel="external">MODIS Swath-to-Grid Toolbox (MS2GT)</a></li><li><a href="https://lpdaac.usgs.gov/tools/modis_reprojection_tool_swath" target="_blank" rel="external">MODIS Swath Reprojection Tool (MRT Swath) and MODIS Reprojection Tool (MRT)</a><br><a href="https://lpdaac.usgs.gov/tools/modis_reprojection_tool" target="_blank" rel="external">https://lpdaac.usgs.gov/tools/modis_reprojection_tool</a></li><li><a href="https://daac.ornl.gov/MODIS/MODIS-menu/modis_webservice.html" target="_blank" rel="external">MODIS Web Service</a></li><li><a href="http://daac.ornl.gov/modisglobal" target="_blank" rel="external">ORNL DAAC MODIS Land Products Subsetting and Visualization Tools</a></li><li><a href="https://earthdata.nasa.gov/labs/worldview/" target="_blank" rel="external">WorldView</a></li></ul><h2 id="Geospatial-Platform"><a href="#Geospatial-Platform" class="headerlink" title="Geospatial Platform"></a>Geospatial Platform</h2><p><a href="https://www.geoplatform.gov/" target="_blank" rel="external">https://www.geoplatform.gov/</a></p><p>The GeoPlatform provides shared and trusted geospatial data, services, and applications for use by the public and by government agencies and partners to meet their mission needs.</p><h2 id="NEO"><a href="#NEO" class="headerlink" title="NEO"></a>NEO</h2><p>NASA Earth Observation</p><p><a href="https://neo.sci.gsfc.nasa.gov/" target="_blank" rel="external">https://neo.sci.gsfc.nasa.gov/</a></p><p>Atmosphere/Energy/Land/Life/Ocean</p><h2 id="NASA-Earth-Observation-Data"><a href="#NASA-Earth-Observation-Data" class="headerlink" title="NASA Earth Observation Data"></a>NASA Earth Observation Data</h2><p><a href="https://earthdata.nasa.gov/earth-observation-data" target="_blank" rel="external">https://earthdata.nasa.gov/earth-observation-data</a></p><p>##NOAA Geospatial Data and Services</p><p><a href="https://maps.ngdc.noaa.gov/" target="_blank" rel="external">https://maps.ngdc.noaa.gov/</a></p><blockquote><p>提供REST、WMS服务</p></blockquote><p>###NOAA CLASS</p><p><a href="https://www.class.ngdc.noaa.gov/saa/products/welcome" target="_blank" rel="external">https://www.class.ngdc.noaa.gov/saa/products/welcome</a></p><p>The Comprehensive Large Array-data Stewardship System (CLASS) is an electronic library of NOAA environmental data. This web site provides capabilities for finding and obtaining those data.</p><p>CLASS is NOAA’s premiere on-line facility for the distribution of NOAA and US Department of Defense (DoD) Polar-orbiting Operational Environmental Satellite (POES) data, NOAA’s Geostationary Operational Environmental Satellite (GOES) data, and derived data.</p><p>###NEODAAS</p><p><a href="https://www.neodaas.ac.uk/" target="_blank" rel="external">https://www.neodaas.ac.uk/</a></p><p>NEODAAS is a unique service providing Earth observation data to support and inform a wide range of scientific sectors, including water quality, meteorology, habitat monitoring, volcano research and monitoring, aquaculture, transport, and recreation.</p><p>###IPUMS Terra</p><p><a href="https://www.terrapop.org/" target="_blank" rel="external">https://www.terrapop.org/</a></p><p>IPUMS Terra integrates population and environmental data across disciplinary scientific domains, enabling research into dramatic transformations of human populations, the environment, and their interactions.</p><p>IPUMS stands for data integrated across time, space and scientific domains. IPUMS makes it easy to study change and conduct comparative research–by imposing consistent codes, supplying detailed documentation, and creating customized datasets. Data and services are available free of charge</p><p>###DataONE</p><p><a href="https://www.dataone.org/" target="_blank" rel="external">https://www.dataone.org/</a></p><p>Data Observation Network for Earth (DataONE) is the foundation of new innovative environmental science through a distributed framework and sustainable cyberinfrastructure that meets the needs of science and society for open, persistent, robust, and secure access to well-described and easily discovered Earth observational data.</p><p>Supported by the U.S. National Science Foundation (Phase 1 Grant <a href="http://nsf.gov/awardsearch/showAward.do?AwardNumber=0830944" target="_blank" rel="external">#ACI-0830944</a>, Phase 2 Grant <a href="http://www.nsf.gov/awardsearch/showAward?AWD_ID=1430508" target="_blank" rel="external">#ACI-1430508</a>) as one of the initial DataNets, DataONE will ensure the preservation, access, use and reuse of multi-scale, multi-discipline, and multi-national science data via three primary cyberinfrastucture elements and a broad education and outreach program.</p><h2 id="GeoNetwork-nodes"><a href="#GeoNetwork-nodes" class="headerlink" title="GeoNetwork nodes"></a>GeoNetwork nodes</h2><p>List of known GeoNetwork opensource based catalogues.</p><p><a href="https://geonetwork-opensource.org/gallery/gallery.html" target="_blank" rel="external">https://geonetwork-opensource.org/gallery/gallery.html</a></p><h1 id="2-GIS-RS-空间数据类"><a href="#2-GIS-RS-空间数据类" class="headerlink" title="2. GIS/RS 空间数据类"></a>2. GIS/RS 空间数据类</h1><h2 id="全国地理信息资源目录服务系统"><a href="#全国地理信息资源目录服务系统" class="headerlink" title="全国地理信息资源目录服务系统"></a>全国地理信息资源目录服务系统</h2><p><a href="http://www.webmap.cn/main.do?method=index" target="_blank" rel="external">http://www.webmap.cn/main.do?method=index</a></p><h3 id="国家测绘地理信息局标准地图服务"><a href="#国家测绘地理信息局标准地图服务" class="headerlink" title="国家测绘地理信息局标准地图服务"></a>国家测绘地理信息局标准地图服务</h3><p><a href="http://bzdt.nasg.gov.cn/index.jsp" target="_blank" rel="external">http://bzdt.nasg.gov.cn/index.jsp</a></p><p>标准地图依据中国和世界各国国界线画法标准编制而成，可用于新闻宣传用图、书刊报纸插图、广告展示背景图、工艺品设计底图等，也可作为编制公开版地图的参考底图。社会公众可以免费浏览、下载标准地图，直接使用标准地图时需要标注审图号。</p><p>标准地图有JPG、EPS两种数据格式，地图幅面分为64开、32开、16开、8开等。需要编辑EPS格式地图时，建议使用Adobe Illustra软件。对地图内容编辑(包括放大、缩小和裁切)改动的，公开使用前需要送测绘地理信息行政主管部门审核。</p><p>目前发布的标准地图包括中国地图83幅，世界地图51幅，专题13幅，中国地图和世界地图自助数据各1幅。</p><h3 id="Global-Data-Explorer"><a href="#Global-Data-Explorer" class="headerlink" title="Global Data Explorer"></a>Global Data Explorer</h3><p><a href="https://gdex.cr.usgs.gov/gdex/" target="_blank" rel="external">https://gdex.cr.usgs.gov/gdex/</a></p><h3 id="GEOSS"><a href="#GEOSS" class="headerlink" title="GEOSS"></a>GEOSS</h3><p><a href="http://www.geoportal.org/" target="_blank" rel="external">http://www.geoportal.org/</a></p><h3 id="National-Geoscience-Data-Centre"><a href="#National-Geoscience-Data-Centre" class="headerlink" title="National Geoscience Data Centre"></a>National Geoscience Data Centre</h3><p><a href="http://www.bgs.ac.uk/services/ngdc/home.html" target="_blank" rel="external">http://www.bgs.ac.uk/services/ngdc/home.html</a></p><h2 id="USGS-Geo-Data-Portal"><a href="#USGS-Geo-Data-Portal" class="headerlink" title="USGS Geo Data Portal"></a>USGS Geo Data Portal</h2><p><a href="https://cida.usgs.gov/gdp/" target="_blank" rel="external">https://cida.usgs.gov/gdp/</a></p><p>The Geo Data Portal (GDP) provides access to numerous datasets, including <strong>gridded data for climate and land use</strong>. Datasets can be subsetted or sumarized before download using several algorithms, and these algorithms can also be applied to other datasets hosted elsewhere.</p><p>Users can interact with the GDP through the tools listed below.</p><p>pyGDP/GDP web/geonife</p><blockquote><p><a href="https://github.com/USGS-CIDA/pyGDP" target="_blank" rel="external">pyGDP</a> provides a fast and efficient way of making calls to the USGS GeoData Portal.</p><p>pyGDP has the following algorithms: - FeatureCategoricalGridCoverage - FeatureWeightedGridStatistics - FeatureCoverageOPenDap - FeatureCoverageWCSIntersection</p><p>Blodgett, David L., Nathaniel L. Booth, Thomas C. Kunicki, Jordan I. Walker, and Roland J. Viger. Description and testing of the Geo Data Portal: Data integration framework and Web processing services for environmental science collaboration. No. 2011-1157. US Geological Survey, 2011.</p></blockquote><h3 id="INSPIRE-GEOPORTAL"><a href="#INSPIRE-GEOPORTAL" class="headerlink" title="INSPIRE GEOPORTAL"></a>INSPIRE GEOPORTAL</h3><p><a href="http://inspire-geoportal.ec.europa.eu/" target="_blank" rel="external">http://inspire-geoportal.ec.europa.eu/</a></p><h2 id="地理空间数据云"><a href="#地理空间数据云" class="headerlink" title="地理空间数据云"></a>地理空间数据云</h2><p><a href="http://www.gscloud.cn/" target="_blank" rel="external">http://www.gscloud.cn/</a></p><p>免费数据包括：</p><ul><li>Landsat系列</li><li>modis陆地标准产品、modis中国合成产品、modis 1b 标准产品</li><li><a href="http://www.gscloud.cn/sources/?cdataid=302&amp;pdataid=10" target="_blank" rel="external">DEM数字高程数据</a></li><li>NOAAA VHRR数据产品</li><li>大气污染插值数据</li><li>Sentinel 数据</li><li>TRMM系列数据</li></ul><h3 id="ASTER-GDEM"><a href="#ASTER-GDEM" class="headerlink" title="ASTER GDEM"></a>ASTER GDEM</h3><p><a href="https://gdex.cr.usgs.gov/gdex/" target="_blank" rel="external">https://gdex.cr.usgs.gov/gdex/</a></p><blockquote><p>也包括SRTM</p></blockquote><h3 id="SRTM"><a href="#SRTM" class="headerlink" title="SRTM"></a>SRTM</h3><p><a href="http://srtm.csi.cgiar.org/" target="_blank" rel="external">http://srtm.csi.cgiar.org/</a></p><p><a href="https://lta.cr.usgs.gov/SRTM" target="_blank" rel="external">https://lta.cr.usgs.gov/SRTM</a></p><h3 id="OpenTopography"><a href="#OpenTopography" class="headerlink" title="OpenTopography"></a>OpenTopography</h3><p><a href="http://www.opentopography.org/developers" target="_blank" rel="external">http://www.opentopography.org/developers</a></p><p><strong>RESTful Web service</strong> for global raster data（SRTM） access</p><h3 id="cgiar-csi-Consortium-for-Spatial-Information"><a href="#cgiar-csi-Consortium-for-Spatial-Information" class="headerlink" title="cgiar-csi |Consortium for Spatial Information"></a>cgiar-csi |<strong>Consortium for Spatial Information</strong></h3><p><a href="http://www.cgiar-csi.org/" target="_blank" rel="external">http://www.cgiar-csi.org/</a></p><p>包含 SRTM 90m</p><p>###Virtual Terrain Project</p><p><a href="http://vterrain.org/" target="_blank" rel="external">http://vterrain.org/</a></p><p>###WFS Geodata Catalog</p><p><a href="https://geoclub.de/wfs/index.php" target="_blank" rel="external">https://geoclub.de/wfs/index.php</a></p><p>Crowdsourced WFS Geodata Catalog</p><h3 id="Google-Maps-API-Elevation-API"><a href="#Google-Maps-API-Elevation-API" class="headerlink" title="Google Maps API - Elevation API"></a>Google Maps API - Elevation API</h3><p><a href="https://developers.google.com/maps/documentation/elevation/intro" target="_blank" rel="external">https://developers.google.com/maps/documentation/elevation/intro</a></p><p>通过一个简单的接口查询地球上各个位置的海拔高度数据。此外，还可以请求路径沿途的抽样海拔高度数据，以便计算路线沿途的海拔高度变化。</p><blockquote><h3 id="Bing-Map-Elevations-API"><a href="#Bing-Map-Elevations-API" class="headerlink" title="Bing Map Elevations API"></a>Bing Map Elevations API</h3><p><a href="https://msdn.microsoft.com/en-us/library/jj158959.aspx" target="_blank" rel="external">https://msdn.microsoft.com/en-us/library/jj158959.aspx</a></p><h3 id="Natural-Resources-Canada-Elevation-API"><a href="#Natural-Resources-Canada-Elevation-API" class="headerlink" title="Natural Resources Canada Elevation API"></a>Natural Resources Canada Elevation API</h3><p><a href="http://geogratis.gc.ca/site/eng/elevation" target="_blank" rel="external">http://geogratis.gc.ca/site/eng/elevation</a></p><p>###MapQuest Open Elevation API</p><p><a href="https://developer.mapquest.com/documentation/open/elevation-api" target="_blank" rel="external">https://developer.mapquest.com/documentation/open/elevation-api</a></p></blockquote><h2 id="MSDIS"><a href="#MSDIS" class="headerlink" title="MSDIS"></a>MSDIS</h2><p><a href="http://msdis.missouri.edu/" target="_blank" rel="external">http://msdis.missouri.edu/</a></p><p><a href="https://modis.ornl.gov/" target="_blank" rel="external">https://modis.ornl.gov/</a></p><p><strong>MSDIS</strong> is responsible for data storage and access, standardization of both digital and tabular data, creation of the data dictionary, compilation of metadata, and statewide GIS user information networks.</p><h4 id="MODIS-WebService"><a href="#MODIS-WebService" class="headerlink" title="MODIS WebService"></a>MODIS WebService</h4><p><a href="https://modis.ornl.gov/data/modis_webservice.html" target="_blank" rel="external">https://modis.ornl.gov/data/modis_webservice.html</a></p><h3 id="WorldDEM"><a href="#WorldDEM" class="headerlink" title="WorldDEM"></a>WorldDEM</h3><p><a href="http://www.intelligence-airbusds.com/worlddem/" target="_blank" rel="external">http://www.intelligence-airbusds.com/worlddem/</a></p><blockquote><p>高精度商业数据</p></blockquote><h2 id="遥感数据"><a href="#遥感数据" class="headerlink" title="遥感数据"></a>遥感数据</h2><p>###Copernicus Open Access Hub</p><p><a href="https://scihub.copernicus.eu/dhus/#/home" target="_blank" rel="external">https://scihub.copernicus.eu/dhus/#/home</a></p><hr><h3 id="OGC-WebService"><a href="#OGC-WebService" class="headerlink" title="OGC WebService"></a>OGC WebService</h3><p><a href="http://www.skylab-mobilesystems.com/en/wms_serverlist.html" target="_blank" rel="external">http://www.skylab-mobilesystems.com/en/wms_serverlist.html</a></p><p><a href="https://www.gebco.net/" target="_blank" rel="external">https://www.gebco.net/</a></p><p><a href="http://inspire-geoportal.ec.europa.eu/discovery/" target="_blank" rel="external">http://inspire-geoportal.ec.europa.eu/discovery/</a></p><p><a href="https://nowcoast.noaa.gov/help/#!section=mapservices" target="_blank" rel="external">https://nowcoast.noaa.gov/help/#!section=mapservices</a></p><p><a href="https://statuschecker.fgdc.gov/" target="_blank" rel="external">https://statuschecker.fgdc.gov/</a></p><p><a href="http://mesonet.agron.iastate.edu/ogc/" target="_blank" rel="external">http://mesonet.agron.iastate.edu/ogc/</a></p><p><a href="http://directory.spatineo.com/" target="_blank" rel="external">http://directory.spatineo.com/</a></p><p>天地图</p><hr><h1 id="3-水文数据"><a href="#3-水文数据" class="headerlink" title="3. 水文数据"></a>3. 水文数据</h1><p>###水利部信息中心（监测数据）</p><p><a href="http://xxzx.mwr.gov.cn/" target="_blank" rel="external">http://xxzx.mwr.gov.cn/</a></p><h3 id="CUAHSI"><a href="#CUAHSI" class="headerlink" title="CUAHSI"></a>CUAHSI</h3><p><a href="http://data.cuahsi.org/" target="_blank" rel="external">http://data.cuahsi.org/</a></p><blockquote><p>提供地图检索、数据WebService</p><p>All Registered Data Services <a href="http://hiscentral.cuahsi.org/pub_services.aspx" target="_blank" rel="external">http://hiscentral.cuahsi.org/pub_services.aspx</a></p></blockquote><h3 id="National-Snow-and-Ice-Data-Center-NSIDC"><a href="#National-Snow-and-Ice-Data-Center-NSIDC" class="headerlink" title="National Snow and Ice Data Center (NSIDC)"></a>National Snow and Ice Data Center (NSIDC)</h3><p><a href="http://nsidc.org" target="_blank" rel="external">http://nsidc.org</a></p><p>The National Snow and Ice Data Center (NSIDC) supports research into our world’s frozen realms: the snow, ice, glaciers, frozen ground, and climate interactions that make up Earth’s cryosphere. NSIDC manages and distributes scientific data, creates tools for data access, supports data users, performs scientific research, and educates the public about the cryosphere.</p><h2 id="great-lakes-observing-system"><a href="#great-lakes-observing-system" class="headerlink" title="great lakes observing system"></a>great lakes observing system</h2><p><a href="https://www.glos.us/" target="_blank" rel="external">https://www.glos.us/</a></p><p>GLOS works to make real-time and historical data publicly available to the larger Great Lakes community, benefiting data users and decision makers</p><h2 id="water-data-portal"><a href="#water-data-portal" class="headerlink" title="water data portal"></a>water data portal</h2><p><a href="http://waterdata.iwmi.org/" target="_blank" rel="external">http://waterdata.iwmi.org/</a></p><p>The International Water Management Institute (IWMI) has been doing research on water for the last 30 years. Being a non-profit research organization all the research outputs and data used for the research are shared with researchers across the globe as a global public goods (GPGs).</p><p>The Water Data Portal (WDP), following “one-stop shop” approach, provides access to a large amount of data related to <strong>water and agriculture</strong>. WDP contains <strong>meteorological, hydrological, socio-economic, spatial data layer, satellite images as well as hydrological model setups.</strong> The data in the WDP, both spatial &amp; non-spatial, are supported by the standardized metadata and are available for download by user including academia, scientists, researchers and decision makers. However, access is provided in compliance with copyrights, intellectual property rights and data agreements with our partners.</p><p>The portal is maintained by GIS, RS and Data Management (GRandD) Unit to facilitate sharing and reuse of data.</p><h3 id="USGS-Water-Services"><a href="#USGS-Water-Services" class="headerlink" title="USGS Water Services"></a>USGS Water Services</h3><p><a href="https://waterservices.usgs.gov/" target="_blank" rel="external">https://waterservices.usgs.gov/</a></p><p>This site serves <a href="http://waterdata.usgs.gov/" target="_blank" rel="external">USGS water data</a> <img src="https://waterservices.usgs.gov/images/extlink.jpeg" alt="External Link"> via automated means using web services and extensible markup language (XML) , as well as other popular media types. Services are invoked with the <strong>REST</strong> protocol. These services designed for high fault tolerance and very high availability.</p><h1 id="4-气象-天气数据"><a href="#4-气象-天气数据" class="headerlink" title="4. 气象/天气数据"></a>4. 气象/天气数据</h1><h3 id="中国气象数据网"><a href="#中国气象数据网" class="headerlink" title="中国气象数据网"></a>中国气象数据网</h3><p><a href="http://data.cma.cn/" target="_blank" rel="external">http://data.cma.cn/</a></p><h3 id="National-Weather-Service"><a href="#National-Weather-Service" class="headerlink" title="National Weather Service"></a>National Weather Service</h3><p><a href="https://www.weather.gov/gis/" target="_blank" rel="external">https://www.weather.gov/gis/</a></p><p>###Climate Data Online</p><p><a href="https://www.ncdc.noaa.gov/cdo-web/" target="_blank" rel="external">https://www.ncdc.noaa.gov/cdo-web/</a></p><h1 id="5-土壤数据"><a href="#5-土壤数据" class="headerlink" title="5. 土壤数据"></a>5. 土壤数据</h1><p>###中国土壤科学数据库</p><p><a href="http://vdb3.soil.csdb.cn/" target="_blank" rel="external">http://vdb3.soil.csdb.cn/</a></p><blockquote><p>开放在线查询或离线申请</p></blockquote><p>土壤资源数据库、肥力数据库、环境数据库、生物数据库、典型地域土壤数据库、重大项目专题数据库</p><p><a href="http://vdb3.soil.csdb.cn/extend/jsp/integrated_database_search" target="_blank" rel="external">中国土种数据库检索</a></p><h3 id="Harmonized-World-Soil-Database"><a href="#Harmonized-World-Soil-Database" class="headerlink" title="Harmonized World Soil Database"></a>Harmonized World Soil Database</h3><p><a href="http://www.fao.org/soils-portal/soil-survey/soil-maps-and-databases/harmonized-world-soil-database-v12/en/" target="_blank" rel="external">http://www.fao.org/soils-portal/soil-survey/soil-maps-and-databases/harmonized-world-soil-database-v12/en/</a></p><p>世界土壤数据库，可直接下载</p><p>###Web Soil Survey</p><p><a href="https://websoilsurvey.sc.egov.usda.gov/App/HomePage.htm" target="_blank" rel="external">https://websoilsurvey.sc.egov.usda.gov/App/HomePage.htm</a></p><p>###UK Soil Observatory (UKSO)</p><p>英国土壤数据检索入口。可以免费下载或通过数据Web服务获取数据</p><p><a href="http://www.ukso.org/home.html" target="_blank" rel="external">http://www.ukso.org/home.html</a></p><h1 id="6-土地覆被"><a href="#6-土地覆被" class="headerlink" title="6. 土地覆被"></a>6. 土地覆被</h1><h3 id="全球30米地表覆盖数据（GlobeLand30）"><a href="#全球30米地表覆盖数据（GlobeLand30）" class="headerlink" title="全球30米地表覆盖数据（GlobeLand30）"></a>全球30米地表覆盖数据（GlobeLand30）</h3><p><a href="http://www.globallandcover.com/GLC30Download/index.aspx" target="_blank" rel="external">http://www.globallandcover.com/GLC30Download/index.aspx</a></p><h3 id="马里兰大学土地覆被数据"><a href="#马里兰大学土地覆被数据" class="headerlink" title="马里兰大学土地覆被数据"></a>马里兰大学土地覆被数据</h3><p><a href="http://glcfapp.glcf.umd.edu:8080/esdi/index.jsp" target="_blank" rel="external">http://glcfapp.glcf.umd.edu:8080/esdi/index.jsp</a></p><h3 id="欧空局-GlobCover"><a href="#欧空局-GlobCover" class="headerlink" title="欧空局 GlobCover"></a>欧空局 <strong>GlobCover</strong></h3><p><a href="http://due.esrin.esa.int/page_globcover.php" target="_blank" rel="external">http://due.esrin.esa.int/page_globcover.php</a></p><h2 id="7-数据处理服务"><a href="#7-数据处理服务" class="headerlink" title="7. 数据处理服务"></a>7. 数据处理服务</h2><h3 id="TerraClip"><a href="#TerraClip" class="headerlink" title="TerraClip"></a>TerraClip</h3><p><a href="https://data.terrapop.org/terraclip" target="_blank" rel="external">https://data.terrapop.org/terraclip</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      各类空间数据平台收集、整理
    
    </summary>
    
      <category term="GIS" scheme="houzw.github.io.git/categories/GIS/"/>
    
    
      <category term="空间数据" scheme="houzw.github.io.git/tags/%E7%A9%BA%E9%97%B4%E6%95%B0%E6%8D%AE/"/>
    
  </entry>
  
  <entry>
    <title>GIS / RS   主要学术期刊</title>
    <link href="houzw.github.io.git/2017/12/10/GIS%20RS%20%20%E5%AD%A6%E6%9C%AF%E6%9C%9F%E5%88%8A/"/>
    <id>houzw.github.io.git/2017/12/10/GIS RS  学术期刊/</id>
    <published>2017-12-09T16:00:00.000Z</published>
    <updated>2018-06-27T01:34:14.463Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="GIS-RS-主要学术期刊"><a href="#GIS-RS-主要学术期刊" class="headerlink" title="GIS / RS   主要学术期刊"></a>GIS / RS 主要学术期刊</h1><blockquote><p>除特殊说明，影响因子与（中科院）分区都为2016年数据</p><p>（15）表示2015年IF。OA 表示 Open Access，Top 表示 Top 期刊。</p><p>分区指中科院JCR期刊分区，以地学为主，部分属于生态学或环境科学等分区</p></blockquote><table><thead><tr><th>领域</th><th>期刊名称</th><th>SCI/SSCI</th><th>影响因子</th><th>分区</th></tr></thead><tbody><tr><td>地理</td><td>Nature Geosciences</td><td>是 Top</td><td>13.941</td><td>1</td></tr><tr><td>地学</td><td>Earth-Science Reviews</td><td>是 Top</td><td>7.051</td><td>1</td></tr><tr><td>GIS</td><td>ISPRS Journal of Photogrammetry and Remote Sensing</td><td>是 Top</td><td>6.387</td><td>1</td></tr><tr><td>RS</td><td>Remote Sensing of Environment</td><td>是 Top</td><td>6.265</td><td>1</td></tr><tr><td>环境</td><td>Environmental Science &amp; Technology</td><td>是 Top</td><td>6.198</td><td>1</td></tr><tr><td>GIS</td><td>Environmental Modelling &amp; Software <a href="计算机1区，环境科学2区">^1</a></td><td>是 Top</td><td>4.404/4.177</td><td>1</td></tr><tr><td>地学</td><td>Geoscience Frontiers [^2]</td><td>是 Top</td><td>4.256</td><td>1</td></tr><tr><td>地学</td><td>Geophysical Research Letters</td><td>是 Top</td><td>4.253</td><td>1</td></tr><tr><td>土壤</td><td>Geoderma<a href="农林科学1区，土壤科学2区">^3</a></td><td>是 Top</td><td>4.036</td><td>1</td></tr><tr><td>GIS</td><td>International Journal of Applied Earth Observation and GeoInformation</td><td>是</td><td>3.930</td><td>2</td></tr><tr><td>GIS</td><td>IEEE Transactions on Geoscience and Remote Sensing</td><td>是</td><td>4.942</td><td>2</td></tr><tr><td>地学</td><td>Geoscientific Model Development</td><td>是</td><td>3.458</td><td>2</td></tr><tr><td>地学</td><td>Journal of Geophysical Research</td><td>是</td><td>3.318（15）</td><td></td></tr><tr><td>RS</td><td>Remote Sensing</td><td>是 / OA</td><td>3.244</td><td>2</td></tr><tr><td>GIS/RS</td><td>GIScience &amp; Remote Sensing</td><td>是</td><td>3.049</td><td>3</td></tr><tr><td>水文</td><td>Hydrological Processes</td><td>是</td><td>3.014</td><td>2</td></tr><tr><td>地理</td><td>Journal of Geographical Sciences<a href="《地理学报》英文版">^4</a></td><td>是</td><td>2.364</td><td>3</td></tr><tr><td>GIS</td><td>International Journal of Digital Earth</td><td>是</td><td>2.292</td><td>2</td></tr><tr><td>地理</td><td>Annals of the Association of American Geographers</td><td>是</td><td>2.756（15）</td><td></td></tr><tr><td>地学</td><td>Progress in Physical Geography</td><td>是</td><td>3.375</td><td>2</td></tr><tr><td>地学</td><td>IEEE Geoscience and Remote Sensing Letters</td><td>是</td><td>2.761</td><td>3</td></tr><tr><td>地理</td><td>Applied Geography</td><td>是</td><td>2.687</td><td></td></tr><tr><td>GIS</td><td>Computers &amp; Geosciences</td><td>是</td><td>2.533</td><td>3</td></tr><tr><td>GIS</td><td>Geoinformatica</td><td>是</td><td>2.392</td><td>4</td></tr><tr><td>生态</td><td>Ecological Modelling</td><td>是</td><td>2.363</td><td>3</td></tr><tr><td>GIS</td><td>Cartography and Geographic Information Science</td><td>是</td><td>2.224（15）</td><td></td></tr><tr><td>GIS</td><td>Computers, Environment and Urban Systems</td><td>是</td><td>2.092（15）</td><td></td></tr><tr><td>GIS</td><td>International Journal of Geographical Information Science</td><td>是</td><td>2.502/2.37</td><td>3</td></tr><tr><td>地学</td><td>Science China-Earth Sciences</td><td>是</td><td>1.989/2.058</td><td>3</td></tr><tr><td>RS</td><td>International Journal of Remote Sensing</td><td>是</td><td>1.724</td><td>4</td></tr><tr><td>地理</td><td>Geographical Analysis</td><td>是</td><td>1.571（15）</td><td></td></tr><tr><td>GIS</td><td>Transactions in GIS</td><td>是</td><td>2.252/1.91</td><td></td></tr><tr><td>GIS</td><td>ISPRS International Journal of Geo-Information</td><td>是 / OA</td><td>1.502</td><td>4</td></tr><tr><td>GIS</td><td>Earth Science Informatics</td><td>是</td><td>1.495</td><td>4</td></tr><tr><td>环境</td><td>Environment and Planning A</td><td>是</td><td>1.460（15）</td><td></td></tr><tr><td>GIS</td><td>Photogrammetric Engineering &amp; Remote Sensing</td><td>是</td><td>1.288（15）</td><td></td></tr><tr><td>GIS</td><td>IEEE Computer Graphics and Applications</td><td>是</td><td>1.367</td><td>3</td></tr><tr><td>环境</td><td>Environment and Planning B</td><td>是</td><td>1.195（15）</td><td></td></tr><tr><td>地学</td><td>Spatial Statistics</td><td>是</td><td>1.176</td><td>4</td></tr><tr><td>地理</td><td>Chinese Geographical Science</td><td>是</td><td>1.154</td><td>4</td></tr><tr><td>RS</td><td>Journal of Applied Remote Sensing</td><td>是</td><td>1.107</td><td>4</td></tr><tr><td>地学</td><td>Journal of Earth System Sciencee</td><td>是</td><td>0.955</td><td>4</td></tr><tr><td>地理</td><td>地理学报</td><td>否</td><td></td><td>—</td></tr><tr><td>地理</td><td>地理科学进展</td><td>否</td><td>3.213</td><td>—</td></tr><tr><td>地理</td><td>地理科学</td><td>否</td><td>2.768</td><td>—</td></tr><tr><td>地理</td><td>地理研究</td><td>否</td><td>2.781</td><td>—</td></tr><tr><td>地学</td><td>测绘学报</td><td>否</td><td>1.581</td><td>—</td></tr><tr><td>地理</td><td>地理与地理信息科学</td><td>否</td><td>0.912</td><td>—</td></tr><tr><td>GIS</td><td>地球信息科学学报</td><td>否</td><td>0.911</td><td>—</td></tr><tr><td>GIS</td><td>武汉大学学报（信息科学版）</td><td>否-EI</td><td>0.811</td><td>—</td></tr></tbody></table><blockquote><p>参考：秦承志, 陈旻. 地理信息科学领域国际学术期刊等级的调查分析[J]. 地理学报, 2014, 69(4):566-572.</p></blockquote><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      总结了地理、GIS 和 RS 等相关领域的一些SCI期刊和中文期刊，标注了其16年IF以及JCR分区
    
    </summary>
    
    
      <category term="GIS" scheme="houzw.github.io.git/tags/GIS/"/>
    
      <category term="地理信息系统" scheme="houzw.github.io.git/tags/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>Spring MVC 接受的请求参数</title>
    <link href="houzw.github.io.git/2017/11/24/Spring%20MVC%20%E6%8E%A5%E5%8F%97%E7%9A%84%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0/"/>
    <id>houzw.github.io.git/2017/11/24/Spring MVC 接受的请求参数/</id>
    <published>2017-11-24T09:35:04.023Z</published>
    <updated>2018-03-18T03:25:49.113Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="Spring-MVC-接受的请求参数"><a href="#Spring-MVC-接受的请求参数" class="headerlink" title="Spring MVC 接受的请求参数"></a>Spring MVC 接受的请求参数</h1><p>[TOC]</p><h2 id="1-概述"><a href="#1-概述" class="headerlink" title="1. 概述"></a>1. 概述</h2><p>Spring MVC 允许以多种方式将客户端的数据传送到控制器的处理方法中：</p><ul><li>查询参数（Query Parameter）</li><li>表单参数（Form Parameter）</li><li>路径变量（Path Variable）<h2 id="2-详解"><a href="#2-详解" class="headerlink" title="2. 详解"></a>2. 详解</h2><h3 id="2-1-处理查询参数"><a href="#2-1-处理查询参数" class="headerlink" title="2.1 处理查询参数"></a>2.1 处理查询参数</h3><blockquote><p>查询参数都是String类型的，但当绑定到方法参数时会转换为相应的类型</p></blockquote></li></ul><p>在方法中使用 <code>@RequestParam</code>注解，同时可通过<code>defaultValue</code>属性设置当参数不存在时的默认值，如<br></p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">public List&lt;Spittle&gt; spittles( @RequestParam(value=&quot;max&quot;,defaultValue=MAX_LONG_AS_STRING) long max,@RequestParam(value=&quot;count&quot;,defaultValue=&quot;20&quot;) int count )</div><div class="line">// 不设置默认值时</div><div class="line">public List&lt;Spittle&gt; spittles( @RequestParam(&quot;max&quot;) long max,@RequestParam(&quot;count&quot;) int count )</div></pre></td></tr></table></figure><p></p><h3 id="2-2-处理路径参数接受输入"><a href="#2-2-处理路径参数接受输入" class="headerlink" title="2.2 处理路径参数接受输入"></a>2.2 处理路径参数接受输入</h3><ol><li>在<code>@RequestMapping</code>中添加占位符（用{}括起来）表示变量部分，如 <code>@RequestMapping(value=&quot;/{spittleId}&quot;)</code>,这样就能够处理针对“/spittles/123454”的请求。</li><li>在方法参数上添加<code>@PathVariable(&quot;spittleId&quot;)</code> 注解，如<code>public String spittle(@PathVariable(&quot;spittleId&quot;) long spittleId, Model model)</code></li><li>若方法参数名与占位符名称<strong>相同</strong>（都是spittleId），则可去掉<code>@PathVariable</code>的 value 属性：<code>public String spittle(@PathVariable long spittleId, Model model)</code><blockquote><p>此时若修改参数名，需要同步修改占位符名称</p></blockquote></li></ol><h3 id="2-3-处理表单"><a href="#2-3-处理表单" class="headerlink" title="2.3 处理表单"></a>2.3 处理表单</h3><p>使用HTML的<code>&lt;form&gt;</code>标签。</p><blockquote><p>如果form所在视图是通过return 视图名的形式渲染的，那么，form中可以没有action属性。此时，其将提交到与展现是相同的URL路径上。如，访问“/register”得到带form的<code>“/registerForm”</code>视图，则提交form时会提交到“/register”</p></blockquote><p>处理表单提交时，相应的方法参数可以使用<strong>包含与请求参数同名属性的对象</strong>（即对象属性与form中的input的<strong>name</strong>同名。若Spitter对象有属性username，则某个表单域中的name需要为username）<br>若需要对参数进行校验时，可使用Spring对Java Validation API的支持。即对参数使用<code>@Valid</code>注解，并紧跟Errors参数，以便对错误进行处理。<br>具体的校验规则在参数对象中设置，如<br></p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Spitter</span></span>&#123;</div><div class="line">    <span class="meta">@NotNull</span>   <span class="comment">//所有的注解位于 javax.validation.constraints 包中</span></div><div class="line">    <span class="meta">@Size</span>(min=<span class="number">5</span>,max=<span class="number">16</span>)</div><div class="line">    <span class="keyword">private</span> String username;<span class="comment">//非空，5-16个字符</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>则：<br></p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">processRegistration</span><span class="params">(@Valid Spitter spitter, Errors errs)</span></span></div><div class="line">&#123;</div><div class="line">   <span class="keyword">if</span>(errs.hasErrors)&#123;</div><div class="line">       <span class="keyword">return</span> <span class="string">"registerForm"</span>;<span class="comment">//如果校验失败，重新返回表单，避免重复提交</span></div><div class="line">   &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><hr><h2 id="3-补充内容"><a href="#3-补充内容" class="headerlink" title="3. 补充内容"></a>3. 补充内容</h2><blockquote><p>此部分非《Spring 实战》内容</p><h3 id="3-1-Ajax-JSON-输入"><a href="#3-1-Ajax-JSON-输入" class="headerlink" title="3.1 Ajax/JSON 输入"></a>3.1 Ajax/JSON 输入</h3><p><a href="http://blog.csdn.net/oTengYue/article/details/51598277" target="_blank" rel="external">http://blog.csdn.net/oTengYue/article/details/51598277</a><br>请求的<code>Content-Type</code>为<code>application/json</code>，请求数据在request的body中</p><ul><li>不能使用<code>String xxx</code>形式</li><li>不能使用<code>@RequestParam</code></li></ul></blockquote><p><code>@RequestBody</code>注释进行参数传递</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"buAuth/save1"</span>)</div><div class="line"><span class="meta">@ResponseBody</span></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">save1</span><span class="params">(@RequestBody BuAuth buAuth)</span></span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="string">"SUCCESS"</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>采用<code>@RequestBody</code>标注的参数，SpringMVC 框架底层能够自动完成JSON字符串转对应的Bean并注入到方法参数中，主要是通过使用<code>HandlerAdapter</code> 配置的<code>HttpMessageConverters</code>来解析post data body，然后绑定到相应的bean上的。此时Ajax发送的data值必须为Json字符串，如果Controller中需要映射到自定义Bean对象上上，则必须设置Ajax的contentType为<code>application/json</code>（或<code>application/xml</code>）。这种方式完整举例如下：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">$.ajax(&#123;</div><div class="line">    <span class="attr">type</span>: <span class="string">"POST"</span>,</div><div class="line">    <span class="attr">url</span>: <span class="string">"$!&#123;_index&#125;/buAuth/save1"</span>,</div><div class="line">    <span class="attr">data</span>:<span class="built_in">JSON</span>.stringify(dataObj) ,<span class="comment">//传递参数必须是Json字符串</span></div><div class="line">    contentType: <span class="string">"application/json; charset=utf-8"</span>,<span class="comment">//必须声明contentType为application/json,否则后台使用@RequestBody标注的话无法解析参数</span></div><div class="line">    dataType: <span class="string">"json"</span>,</div><div class="line">    <span class="attr">success</span>: <span class="function"><span class="keyword">function</span> (<span class="params">response, info</span>) </span>&#123;&#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"buAuth/save1"</span>)</div><div class="line"><span class="meta">@ResponseBody</span></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">save1</span><span class="params">(@RequestBody BuAuth buAuth)</span></span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="string">"SUCCESS"</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>注：（1）此时前端直接用<code>$.post()直接请求会有问题，ContentType默认是application/x-www-form-urlencoded</code>。需要使用<code>$.ajaxSetup()</code>标示下ContentType为<code>application/json</code>（或<code>application/xml</code>）。<br></p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">$.ajaxSetup(&#123;ContentType:&quot; application/json&quot;&#125;);</div><div class="line"></div><div class="line">$.post(&quot;$!&#123;_index&#125;/buAuth/save&quot;,&#123;buAuth:JSON.stringify(dataObj),menuIds:menu_ids&#125;,function(result)&#123;&#125;);</div></pre></td></tr></table></figure><p></p><p>（2）可以使用<code>@ResponseBody</code>传递数组，如下举例（做为整理直接引用其他博客例子）</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">var</span> saveDataAry=[];</div><div class="line"><span class="keyword">var</span> data1=&#123;<span class="string">"userName"</span>:<span class="string">"test"</span>,<span class="string">"address"</span>:<span class="string">"gz"</span>&#125;;</div><div class="line"><span class="keyword">var</span> data2=&#123;<span class="string">"userName"</span>:<span class="string">"ququ"</span>,<span class="string">"address"</span>:<span class="string">"gr"</span>&#125;;</div><div class="line">saveDataAry.push(data1);</div><div class="line">saveDataAry.push(data2);</div><div class="line">$.ajax(&#123;</div><div class="line">    <span class="attr">type</span>:<span class="string">"POST"</span>,</div><div class="line">    <span class="attr">url</span>:<span class="string">"user/saveUser"</span>,</div><div class="line">    <span class="attr">dataType</span>:<span class="string">"json"</span>,</div><div class="line">    <span class="attr">contentType</span>:<span class="string">"application/json"</span>,</div><div class="line">    <span class="attr">data</span>:<span class="built_in">JSON</span>.stringify(saveData),</div><div class="line">    <span class="attr">success</span>:<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123; &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"saveUser"</span>, method = &#123;RequestMethod.POST &#125;&#125;) </div><div class="line"><span class="meta">@ResponseBody</span>  </div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveUser</span><span class="params">(@RequestBody List&lt;User&gt; users)</span> </span>&#123; </div><div class="line">    userService.batchSave(users); </div><div class="line">&#125;</div></pre></td></tr></table></figure><p>（3）Controller中的同一个方法只能使用<code>@ResponseBody</code>标记一个参数。也即是说无法直接通过该方法同时传递多个对象，不过可以间接通过设置一个中间pojo对象（设置不同的属性）来达到传递多个对象的效果。举例如下：<br></p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> buAuthPage = &#123;</div><div class="line">    <span class="attr">buAuth</span> :   data,</div><div class="line">    <span class="attr">menuInfo</span> : &#123;<span class="attr">code</span>:<span class="string">"100"</span>&#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">$.ajax(&#123;</div><div class="line">    <span class="attr">type</span>: <span class="string">"POST"</span>,</div><div class="line">    <span class="attr">url</span>: <span class="string">"$!&#123;_index&#125;/buAuth/save5"</span>,</div><div class="line">    <span class="attr">data</span>: <span class="built_in">JSON</span>.stringify(buAuthPage),</div><div class="line">    <span class="attr">contentType</span>: <span class="string">"application/json; charset=utf-8"</span>,</div><div class="line">    <span class="attr">dataType</span>: <span class="string">"json"</span>,</div><div class="line">    <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure><p></p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BuAuthPage</span> </span>&#123;</div><div class="line">    BuAuth buAuth;</div><div class="line">    <span class="function"><span class="keyword">public</span> BuAuth <span class="title">getBuAuth</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> buAuth;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBuAuth</span><span class="params">(BuAuth buAuth)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.buAuth = buAuth;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> MenuInfo <span class="title">getMenuInfo</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> menuInfo;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMenuInfo</span><span class="params">(MenuInfo menuInfo)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.menuInfo = menuInfo;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"buAuth/save5"</span>)</div><div class="line"><span class="meta">@ResponseBody</span></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">save5</span><span class="params">(@RequestBody BuAuthPage buAuthPage)</span></span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="string">"SUCCESS"</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>（4）Axios默认的请求数据类型就是<code>application/json</code></p><h3 id="3-2-multipart参数"><a href="#3-2-multipart参数" class="headerlink" title="3.2 multipart参数"></a>3.2 multipart参数</h3><h3 id="3-3-接收-header-数据"><a href="#3-3-接收-header-数据" class="headerlink" title="3.3 接收 header 数据"></a>3.3 接收 header 数据</h3><blockquote><p><a href="http://www.logicbig.com/tutorials/spring-framework/spring-web-mvc/spring-mvc-request-header/" target="_blank" rel="external">http://www.logicbig.com/tutorials/spring-framework/spring-web-mvc/spring-mvc-request-header/</a><br>有时候，需要接收并处理请求头中的数据，此时使用<code>@RequestHeader</code>注解（Controller方法参数）</p></blockquote><p>几种形式：</p><ul><li><code>@RequestHeader(&quot;User-Agent&quot;) String userAgent</code>、 <code>@RequestHeader(&quot;If-Modified-Since&quot;) Date date</code></li><li><code>@RequestHeader(value=&quot;User-Agent&quot;, defaultValue=&quot;foo&quot;) String userAgent</code></li><li><code>@RequestHeader HttpHeaders headers</code></li><li><code>@RequestHeader Map&lt;String, String&gt; header</code></li></ul><blockquote><p>也可以使用<code>HttpServletRequest</code>， <code>request.getHeader(&quot;code&quot;)</code></p></blockquote><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      Spring MVC 开发中控制器接受的请求参数
    
    </summary>
    
    
      <category term="Spring MVC" scheme="houzw.github.io.git/tags/Spring-MVC/"/>
    
  </entry>
  
  <entry>
    <title>Mybatis分页插件PageHelper使用</title>
    <link href="houzw.github.io.git/2017/11/24/Mybatis%E5%88%86%E9%A1%B5%E6%8F%92%E4%BB%B6PageHelper%E4%BD%BF%E7%94%A8/"/>
    <id>houzw.github.io.git/2017/11/24/Mybatis分页插件PageHelper使用/</id>
    <published>2017-11-24T09:35:03.948Z</published>
    <updated>2017-11-24T09:45:53.926Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h2 id="Mybatis分页插件PageHelper使用"><a href="#Mybatis分页插件PageHelper使用" class="headerlink" title="Mybatis分页插件PageHelper使用"></a>Mybatis分页插件PageHelper使用</h2><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sqlSessionFactory"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.SqlSessionFactoryBean"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"druidDataSource"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"configLocation"</span> <span class="attr">value</span>=<span class="string">"classpath:config/mybatis.xml"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"mapperLocations"</span> <span class="attr">value</span>=<span class="string">"classpath*:org/egc/cybersolim/xml/*.xml"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"typeAliasesPackage"</span> <span class="attr">value</span>=<span class="string">"org.egc.cybersolim.domain"</span>/&gt;</span></div><div class="line">    <span class="comment">&lt;!-- Mybatis_PageHelper 分页插件配置 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"plugins"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">array</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.github.pagehelper.PageHelper"</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"properties"</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">value</span>&gt;</span></div><div class="line">                        dialect=postgresql</div><div class="line">                        offsetAsPageNum=true</div><div class="line">                        rowBoundsWithCount=true</div><div class="line">                        reasonable=true</div><div class="line">                    <span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">array</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div></pre></td></tr></table></figure><h2 id="使用实例"><a href="#使用实例" class="headerlink" title="使用实例"></a>使用实例</h2><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"queryByType"</span>)</div><div class="line"><span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">queryByType</span><span class="params">(@RequestParam(<span class="string">"types[]"</span>)</span> String[] types, Integer limit, Integer offset, String order)</span></div><div class="line">    &#123;</div><div class="line">        String querytype = <span class="string">""</span>;</div><div class="line">        <span class="keyword">for</span> (String type : types) &#123;</div><div class="line">            <span class="keyword">if</span> (Strings.isNullOrEmpty(type))</div><div class="line">                <span class="keyword">continue</span>;</div><div class="line">            <span class="keyword">else</span></div><div class="line">                querytype = type;</div><div class="line">        &#125;</div><div class="line">        PageHelper.startPage(offset / limit + <span class="number">1</span>, limit);</div><div class="line">        List&lt;Res&gt; list = resService.queryByParentCode(querytype);</div><div class="line">        PageInfo pageInfo = <span class="keyword">new</span> PageInfo(list);<span class="comment">//分页信息</span></div><div class="line">        DataTable dt = <span class="keyword">new</span> DataTable(list, pageInfo.getTotal());</div><div class="line">        dt.setPageNumber(pageInfo.getPageNum());</div><div class="line">        dt.setPageSize(pageInfo.getPageSize());</div><div class="line">        dt.setSortOrder(order);</div><div class="line">        Map&lt;String, Object&gt; result = dt.getDataMap();</div><div class="line">        <span class="keyword">return</span> result;</div><div class="line">    &#125;</div></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      简单介绍Mybatis分页插件PageHelper的使用 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>52°North-WPS-学习-发布处理服务-01</title>
    <link href="houzw.github.io.git/2017/08/21/52%C2%B0North-WPS-%E5%AD%A6%E4%B9%A0-%E5%8F%91%E5%B8%83%E5%A4%84%E7%90%86%E6%9C%8D%E5%8A%A1-01/"/>
    <id>houzw.github.io.git/2017/08/21/52°North-WPS-学习-发布处理服务-01/</id>
    <published>2017-08-21T02:03:02.000Z</published>
    <updated>2018-05-11T15:46:41.581Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:01 GMT+0800 (中国标准时间) --><h1 id="52°North-WPS-学习-发布处理服务-01"><a href="#52°North-WPS-学习-发布处理服务-01" class="headerlink" title="52°North-WPS-学习-发布处理服务-01"></a>52°North-WPS-学习-发布处理服务-01</h1><blockquote><p><a href="https://wiki.52north.org/Geoprocessing/TutorialProcessDevelopmentKit" target="_blank" rel="external">使用 52°North WPS-Extension-Skeleton开发自定义处理过程</a></p><p>WPS-Extension-Skeleton 项目的 <a href="https://github.com/52North/WPS-Extension-Skeleton" target="_blank" rel="external">GitHub</a></p></blockquote><h3 id="使用Maven"><a href="#使用Maven" class="headerlink" title="使用Maven"></a>使用Maven</h3><p>项目POM文件</p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">n52-wps.version</span>&gt;</span>3.6.1<span class="tag">&lt;/<span class="name">n52-wps.version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">slf4j.version</span>&gt;</span>1.7.25<span class="tag">&lt;/<span class="name">slf4j.version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;slf4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-over-slf4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;slf4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jul-to-slf4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;slf4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jcl-over-slf4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;slf4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.n52.wps<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>52n-wps-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;n52-wps.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">      	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.n52.wps<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>52n-wps-io-geotools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;n52-wps.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.n52.wps<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>52n-wps-algorithm<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;n52-wps.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 拷贝依赖jar包 --&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-dependency-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">executions</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">execution</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>copy-dependencies<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></div><div class="line">              <span class="tag">&lt;<span class="name">goal</span>&gt;</span>copy-dependencies<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">              	<span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span>$&#123;project.build.directory&#125;/lib<span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div><div class="line">          <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">repositories</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">repository</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">id</span>&gt;</span>n52-releases<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">name</span>&gt;</span>n52-releases<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://52north.org/maven/repo/releases/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="编译源码"><a href="#编译源码" class="headerlink" title="编译源码"></a>编译源码</h3><blockquote><p>可选， 可以选择下载已经打包好的 war 包： <a href="https://github.com/52North/WPS/releases" target="_blank" rel="external">https://github.com/52North/WPS/releases</a></p></blockquote><p>开始之前，需要配置好 WPS source. 按此 <a href="https://wiki.52north.org/Geoprocessing/TutorialWpsEclipseIndigoGit" target="_blank" rel="external">说明</a> 进行操作，并参考 <a href="https://github.com/52North/WPS。" target="_blank" rel="external">https://github.com/52North/WPS。</a></p><p>即，安装配置好 git 和 maven之后，获取 WPS源码：<code>git clone https://github.com/52North/WPS.git</code></p><p>然后导入 Eclipse 或 IDEA，等待maven 下载相关依赖。</p><p>然后 <code>mvn clean install -P with-geotools -DSkipTests</code> 其中，<code>-DSkipTests</code>为跳过测试，可以去掉。</p><p>并且，WPS的pom中，若部分插件如果报错，可以注释掉</p><p>确保项目pom文件中WPS模块的版本与需要使用的WPS版本相匹配</p><h2 id="扩展WPS-扩展抽象自描述算法"><a href="#扩展WPS-扩展抽象自描述算法" class="headerlink" title="扩展WPS-扩展抽象自描述算法"></a>扩展WPS-扩展抽象自描述算法</h2><blockquote><p><a href="https://wiki.52north.org/Geoprocessing/ExtendAbstractSelfDescribingAlgorithm" target="_blank" rel="external">Extend AbstractSelfDescribingAlgorithm</a></p></blockquote><p>此部分内容说明如何在52°North WPS中使用一个java文件开发和部署一个自定义处理过程。此过程将会生成一个 <strong>ProcessDescription</strong> 文件。</p><p><strong>注意</strong>，支持所选定的DataBinding 的所有Parsers/Generators的格式将会被添加到 ProcessDescription 文件中。如果你需要控制你的算法所支持的格式类型，你可能需要选择使用 <a href="https://wiki.52north.org/Geoprocessing/ExtendAbstractAlgorithm" target="_blank" rel="external">AbstractAlgorithm</a>，并参照此<a href="https://wiki.52north.org/Geoprocessing/ExtendAbstractAlgorithm" target="_blank" rel="external">教程</a>. AbstractSelfDescribingAlgorithm 对ProcessDescription的某些特定元素有所限制。例如，你<em>不能指定处理（process）的标题和摘要</em>。如果需要更多的控制，可以 <a href="https://wiki.52north.org/Geoprocessing/ExtendAbstractAnnotatedAlgorithm" target="_blank" rel="external">继承 AbstractAnnotatedAlgorithm</a>.</p><h2 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h2><blockquote><p>完整代码 <a href="https://wiki.52north.org/pub/Geoprocessing/ExtendAbstractSelfDescribingAlgorithm/ConvexHullDemo.java" target="_blank" rel="external">https://wiki.52north.org/pub/Geoprocessing/ExtendAbstractSelfDescribingAlgorithm/ConvexHullDemo.java</a></p></blockquote><h3 id="创建自定义处理文件"><a href="#创建自定义处理文件" class="headerlink" title="创建自定义处理文件"></a>创建自定义处理文件</h3><ol><li>新建 package: 如 <code>org.n52.wps.demo</code></li><li>新建Class <code>ConvexHullDemo</code></li><li>使新类继承 <code>AbstractSelfDescribingAlgorithm</code></li></ol><h3 id="实现处理"><a href="#实现处理" class="headerlink" title="实现处理"></a>实现处理</h3><p>继承 <code>AbstractSelfDescribingAlgorithm</code>之后，需要实现5个方法</p><ol><li><code>public List getInputIdentifiers()</code></li></ol><p>此方法给出所有<strong>输入数据</strong>的<strong>标识符列表</strong>。因为我们实现的是ConvexHull 算法，因此只需要 几何要素类型的数据。定义标识符为“<em>FEATURES</em>”</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">List&lt;String&gt; list = <span class="keyword">new</span> ArrayList();</div><div class="line">list.add(<span class="string">"FEATURES"</span>);</div><div class="line"><span class="keyword">return</span> list;</div></pre></td></tr></table></figure><ol><li><code>public List getOutputIdentifiers()</code></li></ol><p>此方法给出所有产生的<strong>输出数据</strong>的标识符列表。ConvexHull 算法生成多边形，因此命名数据标识符为“polygons”</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">List&lt;String&gt; list = <span class="keyword">new</span> ArrayList();</div><div class="line">list.add(<span class="string">"polygons"</span>);</div><div class="line"><span class="keyword">return</span> list;</div></pre></td></tr></table></figure><ol><li><code>public Class getInputDataType(String identifier)</code></li></ol><p>此方法列出指定输入数据标识符的<strong>所有输入数据类型</strong>。此例中，输入数据为<em>FEATURES</em>，输出类必须是<strong>特定的绑定 </strong><em>binding</em>。</p><p>由于我们想使用 JTS 中支持Geotools 特性的算法, 因而使用 <strong>GTVectorDataBinding</strong> 并返回:</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">if</span> (identifier.equalsIgnoreCase(<span class="string">"FEATURES"</span>)) &#123;</div><div class="line">        <span class="keyword">return</span> GTVectorDataBinding.class;</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</div></pre></td></tr></table></figure><ol><li><code>public Class getOutputDataType(String identifier)</code></li></ol><p>此方法列出给定输出数据标识符的所有输出数据类型。在本例中，输出数据为<em>polygons</em>，此外亦知 JTS输出GeoTools要素，因此</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">if</span> (identifier.equalsIgnoreCase(<span class="string">"polygons"</span>)) &#123;</div><div class="line">        <span class="keyword">return</span> GTVectorDataBinding.class;</div><div class="line">&#125; </div><div class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</div></pre></td></tr></table></figure><ol><li><p><code>public Map&lt;String, IData&gt; run(Map&lt;String, List&lt;IData&gt;&gt; inputData)</code></p><p>此方法处理<strong>业务逻辑</strong>。</p><p>首先<strong>检查所有输入数据是否已准备</strong>：</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">if</span> (inputData == <span class="keyword">null</span> || !inputData.containsKey(<span class="string">"FEATURES"</span>)) &#123;</div><div class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Error while allocating input parameters"</span>);</div><div class="line">&#125;</div><div class="line">List&lt;IData&gt; dataList = inputData.get(<span class="string">"FEATURES"</span>);</div><div class="line"><span class="keyword">if</span> (dataList == <span class="keyword">null</span> || dataList.size() != <span class="number">1</span>) &#123;</div><div class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Error while allocating input parameters"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>然后获取Geotools 要素集合：</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">IData firstInputData = dataList.get(<span class="number">0</span>);</div><div class="line">FeatureCollection featureCollection = ((GTVectorDataBinding) firstInputData).getPayload();</div></pre></td></tr></table></figure><p>迭代所有要素以获取所有的坐标信息，存储在coordinateList列表中</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">FeatureIterator iter = featureCollection.features();</div><div class="line">List&lt;Coordinate&gt; coordinateList = <span class="keyword">new</span> ArrayList&lt;Coordinate&gt;();</div><div class="line"><span class="keyword">int</span> counter = <span class="number">0</span>;</div><div class="line"><span class="keyword">while</span> (iter.hasNext()) &#123;</div><div class="line">      SimpleFeature feature = (SimpleFeature) iter.next();</div><div class="line">      <span class="keyword">if</span> (feature.getDefaultGeometry() == <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NullPointerException(<span class="string">"defaultGeometry is null in feature id: "</span>+ feature.getID());</div><div class="line">          &#125;</div><div class="line">        Geometry geom = (Geometry) feature.getDefaultGeometry();</div><div class="line">        Coordinate[] coordinateArray = geom.getCoordinates();</div><div class="line">        <span class="keyword">for</span>(Coordinate coordinate : coordinateArray)&#123;</div><div class="line">              coordinateList.add(coordinate);</div><div class="line">         &#125;</div><div class="line">&#125;</div><div class="line">iter.close();</div></pre></td></tr></table></figure><p>下一步，将coordinateList转为数组，以作为JTS中函数的输入</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">Coordinate[] coordinateArray = <span class="keyword">new</span> Coordinate[coordinateList.size()];</div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;coordinateList.size(); i++)&#123;</div><div class="line">        coordinateArray[i] = coordinateList.get(i);</div><div class="line">&#125;</div><div class="line">com.vividsolutions.jts.algorithm.ConvexHull convexHull = <span class="keyword">new</span> com.vividsolutions.jts.algorithm.ConvexHull(coordinateArray, <span class="keyword">new</span> GeometryFactory());</div><div class="line">Geometry geometry = convexHull.getConvexHull();</div></pre></td></tr></table></figure><p>同时使用生成的geometry新建Geotools要素</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">String uuid = UUID.randomUUID().toString();</div><div class="line">SimpleFeatureType featureType = GTHelper.createFeatureType(geometry, uuid, featureCollection.getSchema().getCoordinateReferenceSystem());</div><div class="line">GTHelper.createGML3SchemaForFeatureType(featureType);</div><div class="line">Feature feature = GTHelper.createFeature(<span class="string">"0"</span>, geometry, featureType);</div></pre></td></tr></table></figure><p>然后新建要素集合，并将上面的结果添加到里面</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">SimpleFeatureCollection fOut = DefaultFeatureCollections.newCollection();</div><div class="line">fOut.add((SimpleFeature) feature);</div></pre></td></tr></table></figure><p>最后的步骤是创建一个标准的输出hashmap，以输出标识符为key，以一个IData对象（此例中为GTVectordataBinding）为value。</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">HashMap&lt;String, IData&gt; result = <span class="keyword">new</span> HashMap&lt;String, IData&gt;();</div><div class="line">result.put(<span class="string">"polygons"</span>, <span class="keyword">new</span> GTVectorDataBinding(fOut));</div><div class="line"><span class="keyword">return</span> result;</div></pre></td></tr></table></figure></li></ol><h2 id="发布处理服务"><a href="#发布处理服务" class="headerlink" title="发布处理服务"></a>发布处理服务</h2><h2 id="1-使用管理控制台发布处理服务"><a href="#1-使用管理控制台发布处理服务" class="headerlink" title="1. 使用管理控制台发布处理服务"></a>1. 使用管理控制台发布处理服务</h2><blockquote><p>原文中包含图片说明</p><p><a href="https://wiki.52north.org/Geoprocessing/DeployProcessViaAdminConsole" target="_blank" rel="external">https://wiki.52north.org/Geoprocessing/DeployProcessViaAdminConsole</a></p></blockquote><h4 id="打开管理控制台"><a href="#打开管理控制台" class="headerlink" title="打开管理控制台"></a>打开管理控制台</h4><ul><li>确认servlet容器（如tomcat）已经运行</li><li>浏览器中打开<a href="http://localhost:8080/wps/" target="_blank" rel="external">http://localhost:8080/wps/</a></li><li>点击52°North <strong>WPS Web Admin Console</strong> 或 直接 <a href="http://localhost:8080/wps/webAdmin/index.jsp" target="_blank" rel="external">http://localhost:8080/wps/webAdmin/index.jsp</a></li><li>以用户名 <em>wps</em> 和密码 <em>wps</em> 登录</li></ul><h4 id="上传处理文件"><a href="#上传处理文件" class="headerlink" title="上传处理文件"></a>上传处理文件</h4><ul><li><p>单击<strong>Upload Process</strong></p></li><li><p>在弹出的对话框中，在第一个文本框中输入开发的java处理程序的完整限定名, e.g.: <code>org.n52.wps.demo.AbstractAlgorithmExample</code></p></li><li><p>根据说明选择实现类 java 文件</p></li><li><p>若实现类继承自 AbstractAlgorithm，那么还需要指定ProcessDescription 文件的路径</p></li><li><p>点击 <strong>Send files</strong>.</p></li><li><p>源码文件将会在服务后台编译，并成为一个新的WPS服务.</p><blockquote><p><strong>特别注意</strong>：由于此示例中包含了Geotools的内容，因此 <strong>一定要额外下载官方提供的 geotools-package！</strong>例如 <a href="https://52north.org/delivery/releases/wps/3.6.2/wps-3.6.2-geotools-package.zip" target="_blank" rel="external">WPS 3.6.2 GeoTools package</a> ，并将解压后得到的 <code>WEB-INF</code> 下的<strong><code>lib</code> 和 <code>web.xml</code> </strong>覆盖掉 war 包中的 相应内容！不然的话，不管是上传源码进行发布，或是采用jar包形式发布，都会导致<strong>编译失败、部署失败</strong>！</p><p><code>Could not load algorithm com.vtech.wps.ConvexHullDemo. ProcessDescription Not Valid.</code></p><p>同理，如果使用了其他的 jar，也应该加入到<code>WEB-INF</code> 下的 <code>lib</code> 中！</p></blockquote></li></ul><h4 id="激活处理服务"><a href="#激活处理服务" class="headerlink" title="激活处理服务"></a>激活处理服务</h4><ul><li><p>切换到 <strong>Algorithm Repositories</strong> 选项卡</p></li><li><p>滚动到 <strong>LocalAlgorithmReporitory</strong></p></li><li><p>点击算法仓库中最后一个算法下面的 <strong>加号</strong></p></li><li><p>添加 key 为<strong>Algorithm</strong> ，值为处理类的全限定名，如<code>org.n52.wps.demo.AbstractAlgorithmExample</code></p></li><li><p>点击<strong>save</strong></p></li><li><p>点击<strong>Save and Activate Configuration</strong></p></li><li><p>新建的处理服务将会出现在<a href="http://localhost:8080/wps/WebProcessingService?Request=GetCapabilities&amp;Service=WPS" target="_blank" rel="external">http://localhost:8080/wps/WebProcessingService?Request=GetCapabilities&amp;Service=WPS</a> 列表中，例如</p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">wps:Process</span> <span class="attr">wps:processVersion</span>=<span class="string">"1.0.0"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">ows:Identifier</span>&gt;</span>com.vtech.wps.ConvexHullDemo<span class="tag">&lt;/<span class="name">ows:Identifier</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">ows:Title</span>&gt;</span>com.vtech.wps.ConvexHullDemo<span class="tag">&lt;/<span class="name">ows:Title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">wps:Process</span>&gt;</span></div></pre></td></tr></table></figure></li></ul><h3 id="2-使用打包的jar文件发布一个或多个服务"><a href="#2-使用打包的jar文件发布一个或多个服务" class="headerlink" title="2. 使用打包的jar文件发布一个或多个服务"></a>2. 使用打包的jar文件发布一个或多个服务</h3><blockquote><p><a href="https://wiki.52north.org/Geoprocessing/DeployProcessesViaJarFile" target="_blank" rel="external">https://wiki.52north.org/Geoprocessing/DeployProcessesViaJarFile</a></p><p><a href="https://github.com/52North/WPS-Extension-Skeleton" target="_blank" rel="external">https://github.com/52North/WPS-Extension-Skeleton</a></p></blockquote><h4 id="将jar文件添加到WPS库"><a href="#将jar文件添加到WPS库" class="headerlink" title="将jar文件添加到WPS库"></a>将jar文件添加到WPS库</h4><p>定位到 <code>%PATH_TO_WPS_WEBAPP%/WEB-INF/lib</code>，然后将jar文件拷贝进去</p><h4 id="在WPS中激活处理服务"><a href="#在WPS中激活处理服务" class="headerlink" title="在WPS中激活处理服务"></a>在WPS中激活处理服务</h4><p>若你将处理服务的实现类的全限定名添加到了<code>org.n52.wps.server.IAlgorithm</code>文件中（<code>/META-INF/services/org.n52.wps.server.IAlgorithm</code>，没有则新建一个）， 那么不需要额外的操作，处理服务会自动添加到WPS中。</p><p>若需要使处理服务失效，需要disable <code>ServiceLoaderAlgorithmRepository</code> 或者直接从<code>lib</code>中移除对应的jar文件。</p><p>若没有使用ServiceLoaderAlgorithmRepository，那么你需要手动添加处理服务到WPS配置：</p><ul><li>登录到管理控制台<a href="http://localhost:8080/wps/webAdmin/index.jsp" target="_blank" rel="external">http://localhost:8080/wps/webAdmin/index.jsp</a></li><li>按照上面的<strong>激活处理服务</strong>操作</li></ul><h2 id="执行发布的服务"><a href="#执行发布的服务" class="headerlink" title="执行发布的服务"></a>执行发布的服务</h2><ul><li>使用内置的 XML 客户端</li><li>使用<a href="https://wiki.52north.org/Geoprocessing/TutorialClientAPI" target="_blank" rel="external">客户端 API</a></li><li>使用 ArcMap 客户端</li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
       
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>52°North-WPS-学习-客户端API教程</title>
    <link href="houzw.github.io.git/2017/08/20/52%C2%B0North-WPS-%E5%AD%A6%E4%B9%A0-%E5%AE%A2%E6%88%B7%E7%AB%AFAPI%E6%95%99%E7%A8%8B/"/>
    <id>houzw.github.io.git/2017/08/20/52°North-WPS-学习-客户端API教程/</id>
    <published>2017-08-20T08:40:01.000Z</published>
    <updated>2018-05-18T16:05:34.015Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:01 GMT+0800 (中国标准时间) --><h1 id="52°North-WPS-学习-客户端API教程"><a href="#52°North-WPS-学习-客户端API教程" class="headerlink" title="52°North-WPS-学习-客户端API教程"></a>52°North-WPS-学习-客户端API教程</h1><blockquote><p><a href="https://wiki.52north.org/Geoprocessing/ClientAPI" target="_blank" rel="external">https://wiki.52north.org/Geoprocessing/ClientAPI</a></p><p><a href="https://wiki.52north.org/Geoprocessing/TutorialClientAPI" target="_blank" rel="external">https://wiki.52north.org/Geoprocessing/TutorialClientAPI</a></p></blockquote><h2 id="1-获取SDK-maven"><a href="#1-获取SDK-maven" class="headerlink" title="1. 获取SDK (maven)"></a>1. 获取SDK (maven)</h2><p>在maven的配置文件的相关profile中，或者项目的pom文件中添加组件仓库</p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">repository</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">id</span>&gt;</span>n52-releases<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">name</span>&gt;</span>52n Releases<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://52north.org/maven/repo/releases<span class="tag">&lt;/<span class="name">url</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">releases</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">repository</span>&gt;</span></div></pre></td></tr></table></figure><p>添加项目依赖<br></p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.n52.wps<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>52n-wps-client-lib<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.6.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>从github获取<a href="https://github.com/52North/WPS/blob/master/52n-wps-webapp/src/main/webapp/config/wps_config.xml" target="_blank" rel="external">wps_config.xml</a>文件（如果直接使用的war包，一般在<code>config</code>目录下已经存在），将其放置到 classpath 目录（maven项目的 resources下面），或者在第一次调用代码时使用它：</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">WPSConfig.getInstance(<span class="string">"path to your wps_config.xml"</span>);</div></pre></td></tr></table></figure><h2 id="2-GetCapabilities"><a href="#2-GetCapabilities" class="headerlink" title="2. GetCapabilities"></a>2. GetCapabilities</h2><p>此部分说明如何请求 WPS Capabilities文档并处理响应。示例：</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> CapabilitiesDocument <span class="title">requestGetCapabilities</span><span class="params">(String url)</span> <span class="keyword">throws</span> WPSClientException </span>&#123;</div><div class="line">        WPSClientSession wpsClient = WPSClientSession.getInstance(); <span class="comment">// 初始化WPSClient session</span></div><div class="line">        <span class="keyword">boolean</span> connected = wpsClient.connect(url);<span class="comment">//注册WPS URL</span></div><div class="line"></div><div class="line">        CapabilitiesDocument capabilities = wpsClient.getWPSCaps(url);<span class="comment">// 发生capabilities 请求</span></div><div class="line"></div><div class="line">        ProcessBriefType[] processList = capabilities.getCapabilities()             .getProcessOfferings().getProcessArray();</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (ProcessBriefType process : processList) &#123;</div><div class="line">            System.out.println(process.getIdentifier().getStringValue());</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> capabilities;</div><div class="line">    &#125;</div></pre></td></tr></table></figure><p>请求获得的Capabilities Document 结构与WPS规范中的一样。要获取详细信息，例如处理列表（ list of processes），需要通过ProcessOfferings ：</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">capabilities.getCapabilities().getProcessOfferings().getProcessArray();</div></pre></td></tr></table></figure><p>每个处理都是遵循WPS规范的ProcessBriefType 类型。获取处理过程实例标识符的方法：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">process.getIdentifier().getStringValue());</div></pre></td></tr></table></figure><h2 id="3-DescribeProcess"><a href="#3-DescribeProcess" class="headerlink" title="3. DescribeProcess"></a>3. DescribeProcess</h2><p>此部分说明如何请求 WPS DescribeProcess 文档并处理响应。示例：</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> ProcessDescriptionType <span class="title">requestDescribeProcess</span><span class="params">(String url, String processID)</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line"></div><div class="line">        WPSClientSession wpsClient = WPSClientSession.getInstance();</div><div class="line">       <span class="comment">// 获取处理方法描述，processID 是上面获得的实例标识符，即 ows:Identifier 的值</span></div><div class="line">        ProcessDescriptionType processDescription = wpsClient.getProcessDescription(url, processID); </div><div class="line">44System.out.println(<span class="string">"Process description:\n"</span> + processDescription.xmlText() + <span class="string">"\n"</span>);</div><div class="line">        <span class="comment">// 获取处理过程的所有的输入数据描述</span></div><div class="line">  		InputDescriptionType[] inputList = processDescription.getDataInputs().getInputArray(); </div><div class="line"></div><div class="line">        <span class="keyword">for</span> (InputDescriptionType input : inputList) &#123;</div><div class="line">            System.out.println(input.getIdentifier().getStringValue());</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> processDescription;</div><div class="line">    &#125;</div></pre></td></tr></table></figure><h2 id="4-Execute"><a href="#4-Execute" class="headerlink" title="4. Execute"></a>4. Execute</h2><p>此部分说明如何执行 WPS 处理并处理响应。示例：</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">// create the request, add literal input</span></div><div class="line"><span class="function"><span class="keyword">public</span> IData <span class="title">executeProcess</span><span class="params">(String url, String processID, ProcessDescriptionType processDescription, HashMap&lt;String, Object&gt; inputs)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        ExecuteRequestBuilder executeBuilder = <span class="keyword">new</span> ExecuteRequestBuilder(processDescription);</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (InputDescriptionType input : processDescription.getDataInputs().getInputArray()) &#123;</div><div class="line">            String inputName = input.getIdentifier().getStringValue();</div><div class="line">            Object inputValue = inputs.get(inputName);</div><div class="line">            <span class="keyword">if</span> (input.getLiteralData() != <span class="keyword">null</span>) &#123;</div><div class="line">                <span class="keyword">if</span> (inputValue <span class="keyword">instanceof</span> String) &#123;</div><div class="line">                    executeBuilder.addLiteralData(inputName,(String) inputValue);</div><div class="line">                &#125;</div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (input.getComplexData() != <span class="keyword">null</span>) &#123;</div><div class="line">                <span class="comment">// Complexdata by value</span></div><div class="line">                <span class="keyword">if</span> (inputValue <span class="keyword">instanceof</span> FeatureCollection) &#123;</div><div class="line">                    IData data = <span class="keyword">new</span> GTVectorDataBinding((FeatureCollection) inputValue);</div><div class="line">                    executeBuilder.addComplexData(inputName,data,</div><div class="line">                                    <span class="string">"http://schemas.opengis.net/gml/3.1.1/base/feature.xsd"</span>,</div><div class="line">                                    <span class="keyword">null</span>, <span class="string">"text/xml"</span>);</div><div class="line">                &#125;</div><div class="line">                <span class="comment">// Complexdata Reference</span></div><div class="line">                <span class="keyword">if</span> (inputValue <span class="keyword">instanceof</span> String) &#123;</div><div class="line">                    executeBuilder.addComplexDataReference(inputName, (String) inputValue,</div><div class="line">                                    <span class="string">"http://schemas.opengis.net/gml/3.1.1/base/feature.xsd"</span>,</div><div class="line">                                    <span class="keyword">null</span>, <span class="string">"text/xml"</span>);</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                <span class="keyword">if</span> (inputValue == <span class="keyword">null</span> &amp;&amp; input.getMinOccurs().intValue() &gt; <span class="number">0</span>) &#123;</div><div class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> IOException(<span class="string">"Property not set, but mandatory: "</span>+ inputName);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        executeBuilder.setMimeTypeForOutput(<span class="string">"text/xml"</span>, <span class="string">"result"</span>);</div><div class="line">        executeBuilder.setSchemaForOutput(</div><div class="line">                <span class="string">"http://schemas.opengis.net/gml/3.1.1/base/feature.xsd"</span>,<span class="string">"result"</span>);</div><div class="line">        <span class="comment">// build and send the request document</span></div><div class="line">  		ExecuteDocument execute = executeBuilder.getExecute();</div><div class="line">        execute.getExecute().setService(<span class="string">"WPS"</span>);</div><div class="line">        WPSClientSession wpsClient = WPSClientSession.getInstance();</div><div class="line">        Object response = wpsClient.execute(url, execute);</div><div class="line"> 		</div><div class="line">        <span class="keyword">if</span> (response <span class="keyword">instanceof</span> ExecuteResponseDocument) &#123;</div><div class="line">            ExecuteResponseDocument responseDoc = (ExecuteResponseDocument) responseObject;</div><div class="line">            ExecuteResponseAnalyser analyser = <span class="keyword">new</span> ExecuteResponseAnalyser(</div><div class="line">                    execute, responseDoc, processDescription);</div><div class="line">            IData data = (IData) analyser.getComplexDataByIndex(<span class="number">0</span>,GTVectorDataBinding.class);</div><div class="line">            <span class="keyword">return</span> data;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"Exception: "</span> + response.toString());</div><div class="line">    &#125;</div></pre></td></tr></table></figure><p>首先需要初始化一个 ExecuteRequestBuilder 对象，用于构建一个真正的WPS Execute请求。其需要的 ProcessDescriptionType 对象可通过第3部分的DescribeProcess 获取。</p><p>然后，需要设置输入数据，有3种方式：</p><h4 id="Literaldata-input"><a href="#Literaldata-input" class="headerlink" title="Literaldata input"></a>Literaldata input</h4><p>字符型数据，如数字、字符串等。</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">executeBuilder.addLiteralData(inputName, (String)inputValue);</div></pre></td></tr></table></figure><p>输入数据的标识符（inputName）可通过ProcessDescription获取。</p><h4 id="Complexdata-input-by-value"><a href="#Complexdata-input-by-value" class="headerlink" title="Complexdata input by value"></a>Complexdata input by value</h4><p>复合型数据，如GML Features，使用</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">IData data = <span class="keyword">new</span> GTVectorDataBinding((FeatureCollection) inputValue);</div><div class="line">executeBuilder.addComplexData(inputName, data, <span class="string">"http://schemas.opengis.net/gml/3.1.1/base/feature.xsd"</span>, <span class="keyword">null</span>,<span class="string">"text/xml"</span>);</div></pre></td></tr></table></figure><p>需要一个输入数据标识符和一个IData类型的实际数据。<code>IData</code> 是一个接口，常用的实现类有：</p><ul><li>Geotools 中用于矢量数据的 <strong>GTVectorDataBinding</strong></li><li>用于任意文件数据的 <strong>GenericFileDataBinding</strong> . 同样需要数据模式（ schema）, 编码（encoding） 和输入数据类型的 mimetype. 支持的数据格式可通过 ProcessDescription查看。</li></ul><h4 id="Complexdata-input-by-reference"><a href="#Complexdata-input-by-reference" class="headerlink" title="Complexdata input by reference"></a>Complexdata input by reference</h4><p>复合型数据，如只通过<strong>URL</strong>获取的 GML Features，使用</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">executeBuilder.addComplexDataReference(inputName, (String) inputValue, <span class="string">"http://schemas.opengis.net/gml/3.1.1/base/feature.xsd"</span>, <span class="keyword">null</span>,<span class="string">"text/xml"</span>);</div></pre></td></tr></table></figure><p>需要输入数据标识符以及一个指向地理数据资源的<strong>URL</strong>的<strong>字符串</strong>，如 WFS Getlayers 请求（URL）. 此外还需要In schema, encoding 和mimetype.</p><p>当设置完所有输入数据之后，必须设置输出数据的格式，包括<strong>mimetype</strong>和 可选的schema（用于矢量数据），例如</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">executeBuilder.setMimeTypeForOutput(<span class="string">"text/xml"</span>, <span class="string">"result"</span>);</div><div class="line">executeBuilder.setSchemaForOutput(<span class="string">"http://schemas.opengis.net/gml/3.1.1/base/feature.xsd"</span>, <span class="string">"result"</span>);</div></pre></td></tr></table></figure><p>此方法为标识符为“result”的输出数据设置了schema。支持的schema列表可在ProcessDescription 中查询得到。</p><p><strong>Note</strong>: 编码（encoding）只有在与默认的编码不一致时才需要设置。如果需要参数二进制数据值，可以设置编码为 “<strong>base64</strong>“ 。</p><h3 id="完整示例代码"><a href="#完整示例代码" class="headerlink" title="完整示例代码"></a><a href="https://github.com/52North/WPS/blob/master/52n-wps-client-lib/src/main/java/org/n52/wps/client/example/WPSClientExample.java" target="_blank" rel="external">完整示例代码</a></h3><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">import</span> net.opengis.wps.x100.CapabilitiesDocument;</div><div class="line"><span class="keyword">import</span> net.opengis.wps.x100.ExecuteDocument;</div><div class="line"><span class="keyword">import</span> net.opengis.wps.x100.ExecuteResponseDocument;</div><div class="line"><span class="keyword">import</span> net.opengis.wps.x100.InputDescriptionType;</div><div class="line"><span class="keyword">import</span> net.opengis.wps.x100.ProcessBriefType;</div><div class="line"><span class="keyword">import</span> net.opengis.wps.x100.ProcessDescriptionType;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.geotools.feature.FeatureCollection;</div><div class="line"><span class="keyword">import</span> org.n52.wps.client.ExecuteResponseAnalyser;</div><div class="line"><span class="keyword">import</span> org.n52.wps.client.WPSClientException;</div><div class="line"><span class="keyword">import</span> org.n52.wps.client.WPSClientSession;</div><div class="line"><span class="keyword">import</span> org.n52.wps.io.data.IData;</div><div class="line"><span class="keyword">import</span> org.n52.wps.io.data.binding.complex.GTVectorDataBinding;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WPSClientExample</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testExecute</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">        String wpsURL = <span class="string">"http://localhost:8080/wps/WebProcessingService"</span>;</div><div class="line"></div><div class="line">        String processID = <span class="string">"org.n52.wps.server.algorithm.SimpleBufferAlgorithm"</span>;</div><div class="line"></div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            ProcessDescriptionType describeProcessDocument = requestDescribeProcess(</div><div class="line">                    wpsURL, processID);</div><div class="line">            System.out.println(describeProcessDocument);</div><div class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">            <span class="comment">// TODO Auto-generated catch block</span></div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            CapabilitiesDocument capabilitiesDocument = requestGetCapabilities(wpsURL);</div><div class="line">            ProcessDescriptionType describeProcessDocument = requestDescribeProcess(</div><div class="line">                    wpsURL, processID);</div><div class="line">            <span class="comment">// define inputs</span></div><div class="line">            HashMap&lt;String, Object&gt; inputs = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</div><div class="line">            <span class="comment">// complex data by reference</span></div><div class="line">            inputs.put(</div><div class="line">                    <span class="string">"data"</span>,</div><div class="line">                    <span class="string">"http://geoprocessing.demo.52north.org:8080/geoserver/ows?service=WFS&amp;version=1.0.0&amp;request=GetFeature&amp;typeName=topp:tasmania_roads&amp;outputFormat=GML3"</span>);</div><div class="line">            <span class="comment">// literal data</span></div><div class="line">            inputs.put(<span class="string">"width"</span>, <span class="string">"0.05"</span>);</div><div class="line">            IData data = executeProcess(wpsURL, processID,</div><div class="line">                    describeProcessDocument, inputs);</div><div class="line"></div><div class="line">            <span class="keyword">if</span> (data <span class="keyword">instanceof</span> GTVectorDataBinding) &#123;</div><div class="line">                FeatureCollection featureCollection = ((GTVectorDataBinding) data)</div><div class="line">                        .getPayload();</div><div class="line">                System.out.println(featureCollection.size());</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (WPSClientException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> CapabilitiesDocument <span class="title">requestGetCapabilities</span><span class="params">(String url)</span></span></div><div class="line">            <span class="keyword">throws</span> WPSClientException &#123;</div><div class="line"></div><div class="line">        WPSClientSession wpsClient = WPSClientSession.getInstance();</div><div class="line"></div><div class="line">        wpsClient.connect(url);</div><div class="line"></div><div class="line">        CapabilitiesDocument capabilities = wpsClient.getWPSCaps(url);</div><div class="line"></div><div class="line">        ProcessBriefType[] processList = capabilities.getCapabilities()</div><div class="line">                .getProcessOfferings().getProcessArray();</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (ProcessBriefType process : processList) &#123;</div><div class="line">            System.out.println(process.getIdentifier().getStringValue());</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> capabilities;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> ProcessDescriptionType <span class="title">requestDescribeProcess</span><span class="params">(String url,</span></span></div><div class="line">            String processID) <span class="keyword">throws</span> IOException &#123;</div><div class="line"></div><div class="line">        WPSClientSession wpsClient = WPSClientSession.getInstance();</div><div class="line"></div><div class="line">        ProcessDescriptionType processDescription = wpsClient.getProcessDescription(url, processID);</div><div class="line"></div><div class="line">        InputDescriptionType[] inputList = processDescription.getDataInputs()</div><div class="line">                .getInputArray();</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (InputDescriptionType input : inputList) &#123;</div><div class="line">            System.out.println(input.getIdentifier().getStringValue());</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> processDescription;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> IData <span class="title">executeProcess</span><span class="params">(String url, String processID,</span></span></div><div class="line">            ProcessDescriptionType processDescription,</div><div class="line">            HashMap&lt;String, Object&gt; inputs) <span class="keyword">throws</span> Exception &#123;</div><div class="line">        org.n52.wps.client.ExecuteRequestBuilder executeBuilder = <span class="keyword">new</span> org.n52.wps.client.ExecuteRequestBuilder(processDescription);</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (InputDescriptionType input : processDescription.getDataInputs()</div><div class="line">                .getInputArray()) &#123;</div><div class="line">            String inputName = input.getIdentifier().getStringValue();</div><div class="line">            Object inputValue = inputs.get(inputName);</div><div class="line">            <span class="keyword">if</span> (input.getLiteralData() != <span class="keyword">null</span>) &#123;</div><div class="line">                <span class="keyword">if</span> (inputValue <span class="keyword">instanceof</span> String) &#123;</div><div class="line">                    executeBuilder.addLiteralData(inputName,</div><div class="line">                            (String) inputValue);</div><div class="line">                &#125;</div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (input.getComplexData() != <span class="keyword">null</span>) &#123;</div><div class="line">                <span class="comment">// Complexdata by value</span></div><div class="line">                <span class="keyword">if</span> (inputValue <span class="keyword">instanceof</span> FeatureCollection) &#123;</div><div class="line">                    IData data = <span class="keyword">new</span> GTVectorDataBinding(</div><div class="line">                            (FeatureCollection) inputValue);</div><div class="line">                    executeBuilder</div><div class="line">                            .addComplexData(</div><div class="line">                                    inputName,</div><div class="line">                                    data,</div><div class="line">                                    <span class="string">"http://schemas.opengis.net/gml/3.1.1/base/feature.xsd"</span>,</div><div class="line">                                    <span class="keyword">null</span>, <span class="string">"text/xml"</span>);</div><div class="line">                &#125;</div><div class="line">                <span class="comment">// Complexdata Reference</span></div><div class="line">                <span class="keyword">if</span> (inputValue <span class="keyword">instanceof</span> String) &#123;</div><div class="line">                    executeBuilder</div><div class="line">                            .addComplexDataReference(</div><div class="line">                                    inputName,</div><div class="line">                                    (String) inputValue,</div><div class="line">                                    <span class="string">"http://schemas.opengis.net/gml/3.1.1/base/feature.xsd"</span>,</div><div class="line">                                    <span class="keyword">null</span>, <span class="string">"text/xml"</span>);</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                <span class="keyword">if</span> (inputValue == <span class="keyword">null</span> &amp;&amp; input.getMinOccurs().intValue() &gt; <span class="number">0</span>) &#123;</div><div class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> IOException(<span class="string">"Property not set, but mandatory: "</span></div><div class="line">                            + inputName);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        executeBuilder.setMimeTypeForOutput(<span class="string">"text/xml"</span>, <span class="string">"result"</span>);</div><div class="line">        executeBuilder.setSchemaForOutput(</div><div class="line">                <span class="string">"http://schemas.opengis.net/gml/3.1.1/base/feature.xsd"</span>,</div><div class="line">                <span class="string">"result"</span>);</div><div class="line">        ExecuteDocument execute = executeBuilder.getExecute();</div><div class="line">        execute.getExecute().setService(<span class="string">"WPS"</span>);</div><div class="line">        WPSClientSession wpsClient = WPSClientSession.getInstance();</div><div class="line">        Object responseObject = wpsClient.execute(url, execute);</div><div class="line">        <span class="keyword">if</span> (responseObject <span class="keyword">instanceof</span> ExecuteResponseDocument) &#123;</div><div class="line">            ExecuteResponseDocument response = (ExecuteResponseDocument) responseObject;</div><div class="line">            ExecuteResponseAnalyser analyser = <span class="keyword">new</span> ExecuteResponseAnalyser(</div><div class="line">                    execute, response, processDescription);</div><div class="line">            IData data = (IData) analyser.getComplexDataByIndex(<span class="number">0</span>,</div><div class="line">                    GTVectorDataBinding.class);</div><div class="line">            <span class="keyword">return</span> data;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"Exception: "</span> + responseObject.toString());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        WPSClientExample client = <span class="keyword">new</span> WPSClientExample();</div><div class="line">        client.testExecute();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="测试中出现的问题"><a href="#测试中出现的问题" class="headerlink" title="测试中出现的问题"></a>测试中出现的问题</h3><p>出现<code>org.n52.wps.commons.WPSConfig - Can not get java:comp/env context</code></p><p>并报错</p><p><code>ERROR org.n52.wps.client.ExecuteResponseAnalyser - Could not find suitable parser</code></p><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><ol><li><p>使用<code>wps_config_geotools.xml</code>文件，不要用<code>wps_config.xml</code></p></li><li><p>默认会查找<code>src/main/resources</code>下的<code>wps_config.xml</code>，所有可以将<code>wps_config_geotools.xml</code>文件放到resources下并改名为<code>wps_config.xml</code></p></li><li><p>或者</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">// testExecute 方法中</span></div><div class="line">String path = <span class="keyword">this</span>.getClass().getResource(<span class="string">"/"</span>).getPath();</div><div class="line"><span class="comment">// 此处放在 src/main/resources/config 下</span></div><div class="line">WPSConfig.getInstance(path + <span class="string">"config/wps_config_geotools.xml"</span>);</div></pre></td></tr></table></figure><p>​</p></li></ol><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
       
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>GeoTools 读取 Geotiff 文件</title>
    <link href="houzw.github.io.git/2017/07/27/GeoTools-%E8%AF%BB%E5%8F%96-Geotiff-%E6%96%87%E4%BB%B6/"/>
    <id>houzw.github.io.git/2017/07/27/GeoTools-读取-Geotiff-文件/</id>
    <published>2017-07-27T12:30:59.000Z</published>
    <updated>2017-07-28T00:32:26.723Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="GeoTools-读取-Geotiff-文件"><a href="#GeoTools-读取-Geotiff-文件" class="headerlink" title="GeoTools 读取 Geotiff 文件"></a>GeoTools 读取 Geotiff 文件</h1><h2 id="maven-相关配置"><a href="#maven-相关配置" class="headerlink" title="maven 相关配置"></a>maven 相关配置</h2><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">4<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">   		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.geotools<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">   		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gt-geotiff<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">4<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.geotools<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gt-epsg-hsql<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- ... --&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">repositories</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">repository</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>osgeo<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">name</span>&gt;</span>Open Source Geospatial Foundation Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://download.osgeo.org/webdav/geotools/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></div></pre></td></tr></table></figure><h2 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h2><blockquote><p><a href="https://gis.stackexchange.com/questions/106882/reading-each-pixel-of-each-band-of-multiband-geotiff-with-geotools-java" target="_blank" rel="external">Reading each pixel of each band of multiband GeoTiff with GeoTools</a></p></blockquote><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">(java.io.File file)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line"></div><div class="line">        ParameterValue&lt;OverviewPolicy&gt; policy = AbstractGridFormat.OVERVIEW_POLICY.createValue();</div><div class="line">        policy.setValue(OverviewPolicy.IGNORE);</div><div class="line"></div><div class="line">        <span class="comment">//this will basically read 4 tiles worth of data at once from the disk...</span></div><div class="line">        ParameterValue&lt;String&gt; gridsize = AbstractGridFormat.SUGGESTED_TILE_SIZE.createValue();</div><div class="line"></div><div class="line">        <span class="comment">//Setting read type: use JAI ImageRead (true) or ImageReaders read methods (false)</span></div><div class="line">        ParameterValue&lt;Boolean&gt; useJaiRead = AbstractGridFormat.USE_JAI_IMAGEREAD.createValue();</div><div class="line">        useJaiRead.setValue(<span class="keyword">true</span>);</div><div class="line"></div><div class="line">        GridCoverage2DReader reader = <span class="keyword">new</span> GeoTiffReader(file);</div><div class="line">        GridEnvelope dimensions = reader.getOriginalGridRange();</div><div class="line">        GridCoordinates maxDimensions = dimensions.getHigh();</div><div class="line">        <span class="keyword">int</span> w = maxDimensions.getCoordinateValue(<span class="number">0</span>)+<span class="number">1</span>;</div><div class="line">        <span class="keyword">int</span> h = maxDimensions.getCoordinateValue(<span class="number">1</span>)+<span class="number">1</span>;</div><div class="line">        <span class="keyword">int</span> numBands = reader.getGridCoverageCount();</div><div class="line"></div><div class="line">        GridCoverage2D coverage = reader.read(</div><div class="line">            <span class="keyword">new</span> GeneralParameterValue[]&#123;policy, gridsize, useJaiRead&#125;</div><div class="line">        );</div><div class="line">        GridGeometry2D geometry = coverage.getGridGeometry();</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;w; i++) &#123;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;h; j++) &#123;</div><div class="line">                org.geotools.geometry.Envelope2D pixelEnvelop =</div><div class="line">                geometry.gridToWorld(<span class="keyword">new</span> GridEnvelope2D(i, j, <span class="number">1</span>, <span class="number">1</span>));</div><div class="line"></div><div class="line">                <span class="keyword">double</span> lat = pixelEnvelop.getCenterY();</div><div class="line">                <span class="keyword">double</span> lon = pixelEnvelop.getCenterX();</div><div class="line">              </div><div class="line">                <span class="keyword">double</span>[] vals = <span class="keyword">new</span> <span class="keyword">double</span>[numBands];</div><div class="line">                coverage.evaluate(<span class="keyword">new</span> GridCoordinates2D(i, j), vals);</div><div class="line">                <span class="comment">//Do something!</span></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><blockquote><p><a href="https://dzone.com/articles/access-information-geotiff" target="_blank" rel="external">Access Information from GeoTIFF using Java</a></p></blockquote><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GeoTIFFTest</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String url = <span class="string">"jdbc:postgresql://localhost/bag"</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> GridCoverage2D grid;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Raster gridData; <span class="comment">// java.awt.image.Raster;</span></div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        initTif();</div><div class="line">        loadData();</div><div class="line">    &#125;</div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">initTif</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        File tiffFile = <span class="keyword">new</span> File(<span class="string">"/Volumes/Iomega_HDD/mac/data/r44hn1.tif"</span>);</div><div class="line">        GeoTiffReader reader = <span class="keyword">new</span> GeoTiffReader(tiffFile);</div><div class="line">        grid =reader.read(<span class="keyword">null</span>);</div><div class="line">        gridData = grid.getRenderedImage().getData();</div><div class="line">    &#125;</div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">getValue</span><span class="params">(<span class="keyword">double</span> x, <span class="keyword">double</span> y)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        GridGeometry2D gg = grid.getGridGeometry();</div><div class="line">        DirectPosition2D posWorld = <span class="keyword">new</span> DirectPosition2D(x,y);</div><div class="line">        GridCoordinates2D posGrid = gg.worldToGrid(posWorld);</div><div class="line"> </div><div class="line">        <span class="comment">// envelope is the size in the target projection</span></div><div class="line">        <span class="keyword">double</span>[] pixel=<span class="keyword">new</span> <span class="keyword">double</span>[<span class="number">1</span>];</div><div class="line">        <span class="keyword">double</span>[] data = gridData.getPixel(posGrid.x, posGrid.y, pixel);</div><div class="line">        <span class="keyword">return</span> data[<span class="number">0</span>];</div><div class="line">    &#125;</div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">loadData</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        Connection conn = DriverManager.getConnection(url);</div><div class="line">        QueryRunner runner = <span class="keyword">new</span> QueryRunner(); <span class="comment">// org.apache.commons.dbutils.QueryRunner;</span></div><div class="line">        <span class="keyword">final</span> Map&lt;Long, Double&gt; map = <span class="keyword">new</span> HashMap&lt;Long, Double&gt;();</div><div class="line">        ResultSetHandler handler = <span class="keyword">new</span> ResultSetHandler() &#123;</div><div class="line"> </div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> Object <span class="title">handle</span><span class="params">(ResultSet resultSet)</span> <span class="keyword">throws</span> SQLException </span>&#123;</div><div class="line">                <span class="keyword">while</span> (resultSet.next()) &#123;</div><div class="line">                    String point = resultSet.getString(<span class="string">"point"</span>);</div><div class="line">                    <span class="keyword">double</span> x = Double.parseDouble(point.substring(</div><div class="line">                            point.indexOf(<span class="string">'('</span>) + <span class="number">1</span>,</div><div class="line">                            point.indexOf(<span class="string">' '</span>)</div><div class="line">                    ));</div><div class="line"> </div><div class="line">                    <span class="keyword">double</span> y = Double.parseDouble(point.substring(</div><div class="line">                            point.indexOf(<span class="string">' '</span>) + <span class="number">1</span>,</div><div class="line">                            point.indexOf(<span class="string">')'</span>)</div><div class="line">                    ));</div><div class="line"> </div><div class="line">                    <span class="keyword">try</span> &#123;</div><div class="line">                        <span class="keyword">double</span> hoogte = getValue(x, y);</div><div class="line">                        map.put(resultSet.getLong(<span class="string">"gid"</span>),hoogte);</div><div class="line">                    &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">                        e.printStackTrace();  </div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;  </div><div class="line">            &#125;</div><div class="line">        &#125;;</div><div class="line">        runner.query(conn, <span class="string">"SELECT gid, ST_AsText(ST_Centroid(geovlak)) as point \n"</span> +</div><div class="line">                <span class="string">"FROM bag8mrt2014.pand\n"</span> +</div><div class="line">                <span class="string">"WHERE geovlak &amp;&amp; ST_MakeEnvelope(130153, 408769,132896, 410774, 28992) ORDER by gid ;"</span>, handler);</div><div class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span> (Long key : map.keySet()) &#123;</div><div class="line">            System.out.println(<span class="string">"Inserting for key = "</span> + key + <span class="string">" value: "</span> + map.get(key));</div><div class="line">            <span class="keyword">int</span> col = runner.update(conn, <span class="string">"UPDATE bag8mrt2014.pand SET hoogte= ? where gid = ?"</span>,</div><div class="line">            map.get(key), key);</div><div class="line">            count++;</div><div class="line">            <span class="keyword">if</span> (count%<span class="number">100</span> == <span class="number">0</span>) &#123;</div><div class="line">                System.out.println(<span class="string">"count = "</span> + count);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><blockquote><p><a href="http://docs.geotools.org/latest/userguide/tutorial/raster/image.html" target="_blank" rel="external">http://docs.geotools.org/latest/userguide/tutorial/raster/image.html</a></p></blockquote><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
       
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>BAT 批处理程序学习</title>
    <link href="houzw.github.io.git/2017/05/30/BAT-%E6%89%B9%E5%A4%84%E7%90%86%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/"/>
    <id>houzw.github.io.git/2017/05/30/BAT-批处理程序学习/</id>
    <published>2017-05-30T08:09:25.000Z</published>
    <updated>2017-05-31T01:08:47.007Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:01 GMT+0800 (中国标准时间) --><h1 id="批处理文件编写与使用"><a href="#批处理文件编写与使用" class="headerlink" title="批处理文件编写与使用"></a>批处理文件编写与使用</h1><blockquote><p><a href="http://www.cnblogs.com/mq0036/p/3412171.html" target="_blank" rel="external">BAT 批处理脚本教程</a></p><p><a href="http://xstarcd.github.io/wiki/windows/windows_cmd_summary_commands.html" target="_blank" rel="external">批处理常用命令总结 - 批处理命令简介</a></p></blockquote><p><strong>批处理</strong>（Batch）是一种简化的脚本语言，它应用于DOS和Windows系统中，它是由DOS或者Windows系统内嵌的命令解释器（通常是COMMAND.COM或者CMD.EXE）解释运行。</p><p>批处理文件具有<code>.bat</code>或者<code>.cmd</code>的扩展名 ，这个文件的每一行都是一条DOS命令。</p><p>批处理文件也是一种简单的程序，可以通过条件语句(if)和流程控制语句(goto)来控制命令运行的流程，在批处理中也可以使用循环语句(for)来循环执行一条命令。</p><h3 id="入门示例"><a href="#入门示例" class="headerlink" title="入门示例"></a>入门示例</h3><p>新建<code>bat</code>文件之后，输入内容</p><ul><li><p>打开文本编辑器</p><p><code>notepad.exe</code></p></li><li><p>把屏幕上的内容拷贝进文本文件中</p><p><code>copy con 1.txt</code> 回车后输入内容，ctrl+z 结束输入</p></li></ul><h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><blockquote><p>查看使用说明： <code>命令 /?</code>, 如 <code>start /?</code></p></blockquote><ol><li><p><strong><code>echo [{on|off}][message]</code>：用于在屏幕显示文字信息。</strong></p><p>on：允许批处理文件在执行的过程中显示命令。</p><p>off：禁止…。即只执行命令但是不显示在屏幕上面</p><p><code>echo. echo, echo] echo[ echo; echo: echo/ echo\ echo+ echo=</code> 等都可以实现换行，但<code>echo.</code>最常用</p></li><li><p><strong><code>rem</code> 表示此命令后的字符为解释行（注释），不执行</strong>，只是给自己今后参考用的（相当于程序中的注释）。</p></li><li><p><strong><code>@[command]</code>：用于屏蔽执行的命令显示在屏幕上。</strong></p><p>屏蔽单条命令</p></li><li><p><strong><code>goto label</code> 跳转到指定标号处</strong></p><p>以<code>:label</code>来构建一个标号，然后<code>GOTO label</code> 跳转到标号<code>:label</code> 处，执行标号后的命令。</p></li><li><p><strong><code>pause</code>：用于暂停。</strong></p></li><li><p><strong><code>call [绝对路径] Filename 或者 [:label]</code> 在一个批处理文件中调用另外一个批处理文件</strong></p><p><code>[绝对路径]Filename</code>：另一个批处理文件。</p><p><code>[:label]</code> ：像goto一样，call也可以跳到某个标签之后执行</p></li><li><p><strong>start：用于启动一个单独的命令行窗口。</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">START [&quot;title&quot;] [/D path] [/I] [/MIN] [/MAX] [/SEPARATE | /SHARED]</div><div class="line">      [/LOW | /NORMAL | /HIGH | /REALTIME | /ABOVENORMAL | /BELOWNORMAL]</div><div class="line">      [/NODE &lt;NUMA node&gt;] [/AFFINITY &lt;hex affinity mask&gt;] [/WAIT] [/B]</div><div class="line">      [command/program] [parameters]</div><div class="line">      </div><div class="line">    &quot;title&quot;     在窗口标题栏中显示的标题。</div><div class="line">    path        启动目录。</div><div class="line">    B           启动应用程序，但不创建新窗口。</div><div class="line">                应用程序已忽略 ^C 处理。除非应用程序</div><div class="line">                启用 ^C 处理，否则 ^Break 是唯一可以中断</div><div class="line">                该应用程序的方式。</div><div class="line">    I           新的环境将是传递</div><div class="line">                给 cmd.exe 的原始环境，而不是当前环境。</div><div class="line">    MIN         以最小化方式启动窗口。</div><div class="line">    MAX         以最大化方式启动窗口。</div><div class="line">    SEPARATE    在单独的内存空间中启动 16 位 Windows 程序。</div><div class="line">    SHARED      在共享内存空间中启动 16 位 Windows 程序。</div><div class="line">    LOW         在 IDLE 优先级类中启动应用程序。</div><div class="line">    NORMAL      在 NORMAL 优先级类中启动应用程序。</div><div class="line">    HIGH        在 HIGH 优先级类中启动应用程序。</div><div class="line">    REALTIME    在 REALTIME 优先级类中启动应用程序。</div><div class="line">    ABOVENORMAL 在 ABOVENORMAL 优先级类中启动应用程序。</div><div class="line">    BELOWNORMAL 在 BELOWNORMAL 优先级类中启动应用程序。</div><div class="line">    NODE        将首选非一致性内存结构(NUMA)节点指定为</div><div class="line">                十进制整数。</div><div class="line">    AFFINITY    将处理器关联掩码指定为十六进制数字。</div><div class="line">                进程被限制在这些处理器上运行。</div><div class="line"></div><div class="line">                将 /AFFINITY 和 /NODE 结合使用时，会对关联掩码</div><div class="line">                进行不同的解释。指定关联掩码，以便将零位作为起始位置(就如将 NUMA</div><div class="line">                节点的处理器掩码向右移位一样)。</div><div class="line">                进程被限制在指定关联掩码和 NUMA 节点之间的</div><div class="line">                那些通用处理器上运行。</div><div class="line">                如果没有通用处理器，则进程被限制在</div><div class="line">                指定的 NUMA 节点上运行。</div><div class="line">    WAIT        启动应用程序并等待它终止。</div><div class="line">    command/program</div><div class="line">                如果它是内部 cmd 命令或批文件，则</div><div class="line">                该命令处理器是使用 cmd.exe 的 /K 开关运行的。</div><div class="line">                这表示运行该命令之后，该窗口</div><div class="line">                将仍然存在。</div><div class="line"></div><div class="line">                如果它不是内部 cmd 命令或批文件，则</div><div class="line">                它就是一个程序，并将作为一个窗口化应用程序或</div><div class="line">                控制台应用程序运行。</div><div class="line"></div><div class="line">    parameters  这些是传递给 command/program 的参数。</div><div class="line"></div><div class="line">注意: 在 64 位平台上不支持 SEPARATE 和 SHARED 选项。</div></pre></td></tr></table></figure></li><li><p><strong>set [variable=[string]]：定义变量和设置环境。</strong></p><p>variable 指定环境变量名。string 指定要指派给变量的一系列字符串。</p><p>SET 命令不允许变量名含有等号。</p><p>SET 命令中添加了两个新命令行开关:</p><ul><li><code>SET /A expression</code> 指定等号右边的字符串为被评估的<strong>数字表达式</strong>（用 , 分割）。</li><li><code>SET /P variable=[promptString]</code> 允许<strong>将变量数值设成用户输入的一行输入</strong>。读取输入行之前，显示指定的 promptString（提示字符串）。promptString 可以是空的。</li></ul></li><li><p><strong>条件语句 if…else…</strong></p></li><li><p><strong>循环语句</strong></p></li><li><p><strong>子程序</strong></p></li></ol><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>批处理中存在两种类型变量，一类可称为<strong>系统变量</strong>，即系统已经给这些变量定义了值，我们只需要调用；另一类可称为<strong>用户变量</strong>或<strong>自定义变量</strong>，即由用户来赋予变量值。</p><h4 id="系统变量"><a href="#系统变量" class="headerlink" title="系统变量"></a>系统变量</h4><blockquote><p>举例</p></blockquote><ul><li><p><code>%APPDATA%</code> 本地 返回默认情况下<strong>应用程序存储数据的位置</strong>。</p></li><li><p><code>%CMDCMDLINE%</code> 本地 返回用来启动当前的 Cmd.exe 的准确命令行。</p></li><li><p><code>%COMPUTERNAME%</code> 系统 返回<strong>计算机的名称</strong>。</p></li><li><p><code>%DATE%</code> 系统 返回<strong>当前日期</strong>。 <code>%TIME%</code></p></li><li><p><code>%HOMEPATH%</code> 系统 返回<strong>用户主目录</strong>的完整路径。基于主目录值而设置。用户主目录是在“本地用户和组”中指定的。</p></li><li><p><code>%PATH%</code> 系统 指定<strong>可执行文件的搜索路径</strong></p></li><li><p><code>%PATHEXT%</code> 系统 返回操作系统认为可执行的文件扩展名的列表。</p></li><li><p><code>%NUMBER_OF_PROCESSORS%</code> 系统 指定安装在计算机上的<strong>处理器的数目</strong>。类似的还有<code>%PROCESSOR_ARCHITECTURE%</code>、<code>%PROCESSOR_IDENTFIER%</code>、<code>%PROCESSOR_LEVEL%</code> 、<code>%PROCESSOR_REVISION%</code></p></li><li><p><code>%SYSTEMROOT%</code> 系统 返回 Windows server operating system 根目录的位置。 <code>%SYSTEMDRIVE%</code> <code>%WINDIR%</code></p></li><li><p><code>%ERRORLEVEL%</code> 系统 返回<strong>上一条命令的错误代码</strong>。通常用非零值表示错误。</p></li><li><p><code>%RANDOM%</code> 系统 返回 0 到 32767 之间的<strong>任意十进制数字</strong>。由 Cmd.exe 生成。</p></li><li><p><code>%USERNAME%</code> 本地 返回当前登录的用户的名称。</p><h5 id="参数变量"><a href="#参数变量" class="headerlink" title="参数变量"></a>参数变量</h5><p><code>%0 %1 %2 %3 %4 %5 %6 %7 %8 %9 %*</code></p><p><code>%1 %2 %3 %4 %5 %6 %7 %8 %9</code> 表示执行bat时输入的第1个、第2个。。。第9个参数，可以在后面的命令中使用</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">:: 若本文件名为test.bat。执行时输入参数：test.bat paramA paramB</div><div class="line">echo %1 %2</div><div class="line">:: 输出第1个变量值：paramA</div><div class="line">echo %1</div></pre></td></tr></table></figure><p><code>%*</code>是一次返回所有参数</p><p><code>%0</code> 这个不是返回参数的值，其作用有两种：</p><ul><li>返回批处理所在绝对路径（<code>echo %0</code> ）</li><li>无限循环执行BAT</li></ul></li></ul><h4 id="用户变量"><a href="#用户变量" class="headerlink" title="用户变量"></a>用户变量</h4><blockquote><p>使用set命令赋值</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">:: 注意set中的 “=” 两侧不能有空格！</div><div class="line">set var=值 </div><div class="line">echo %var%</div></pre></td></tr></table></figure><p>如果想让<strong>用户手工输入变量的值</strong>,而不是在代码里指定,可以用用set命令的<code>/p</code> 参数：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">@echo off</div><div class="line">set /p var=请输入变量的值</div><div class="line">echo %var%</div><div class="line">pause</div></pre></td></tr></table></figure><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>1、<strong><code>:: 注释内容</code></strong>（第一个冒号后也可以跟任何一个非字母数字的字符）<br>2、<strong><code>rem 注释内容</code> </strong>（不能出现重定向符号和管道符号）<br>3、<code>echo 注释内容</code> （不能出现重定向符号和管道符号）〉nul<br>4、if not exist nul 注释内容（不能出现重定向符号和管道符号）<br>5、<code>:注释内容</code> （注释文本不能与已有标签重名）<br>6、<strong><code>%注释内容%</code></strong> （可以用作行间注释，不能出现重定向符号和管道符号）<br>7、goto 标签 注释内容（可以用作说明goto的条件和执行内容）<br>8、:标签 注释内容（可以用作标签下方段的执行内容）</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
       
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>使用Jena执行SPARQL的Select和Ask查询</title>
    <link href="houzw.github.io.git/2017/05/10/%E4%BD%BF%E7%94%A8Jena%E6%89%A7%E8%A1%8CSPARQL%E7%9A%84Select%E5%92%8CAsk%E6%9F%A5%E8%AF%A2/"/>
    <id>houzw.github.io.git/2017/05/10/使用Jena执行SPARQL的Select和Ask查询/</id>
    <published>2017-05-10T13:22:38.000Z</published>
    <updated>2017-05-10T13:34:07.695Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="使用Jena执行SPARQL的Select和ask查询"><a href="#使用Jena执行SPARQL的Select和ask查询" class="headerlink" title="使用Jena执行SPARQL的Select和ask查询"></a>使用Jena执行SPARQL的Select和ask查询</h1><p>提供基本的接口和实现类，可在其他代码中直接调用</p><h2 id="Select查询"><a href="#Select查询" class="headerlink" title="Select查询"></a>Select查询</h2><h3 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h3><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * The interface Select dao.</div><div class="line"> * 本体模型数据操作 ：Sparql的Select查询</div><div class="line"> *</div><div class="line"> * <span class="doctag">@author</span> houzhiwei</div><div class="line"> * <span class="doctag">@date</span> 2016年4月18日 下午5:16:26</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">SelectDao</span> </span>&#123;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 执行select查询 同一个resultset只能被使用一次</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> sparqlStr the sparql string</div><div class="line">     * <span class="doctag">@param</span> model     the model</div><div class="line">     * <span class="doctag">@return</span> Json格式结果 string</div><div class="line">     */</div><div class="line">    <span class="function">String <span class="title">execSelectJSON</span><span class="params">(String sparqlStr, Model model)</span></span>;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 执行select查询</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> sparqlStr the sparql string</div><div class="line">     * <span class="doctag">@param</span> model     the model</div><div class="line">     * <span class="doctag">@return</span> result set</div><div class="line">     * <span class="doctag">@author</span> houzhiwei at 2016年4月28日下午9:42:48</div><div class="line">     */</div><div class="line">    <span class="function">ResultSet <span class="title">execSelect</span><span class="params">(String sparqlStr, Model model)</span></span>;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 执行select查询</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> sparqlStr the sparql string</div><div class="line">     * <span class="doctag">@param</span> ds        the ds</div><div class="line">     * <span class="doctag">@return</span> result set</div><div class="line">     * <span class="doctag">@author</span> houzhiwei at 2016年4月28日下午9:42:48</div><div class="line">     */</div><div class="line">    <span class="function">ResultSet <span class="title">execSelect</span><span class="params">(String sparqlStr, Dataset ds)</span></span>;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 获取查询语句中查询变量（subject等）</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> query the query</div><div class="line">     * <span class="doctag">@return</span> string [ ]</div><div class="line">     * <span class="doctag">@author</span> houzhiwei at 2016年1月15日上午11:43:51</div><div class="line">     */</div><div class="line">    String[] getQueryVars(Query query);</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 内部类。为本接口的实现类提供公共代码</div><div class="line">     *</div><div class="line">     * <span class="doctag">@author</span> houzhiwei</div><div class="line">     */</div><div class="line">    <span class="class"><span class="keyword">class</span> <span class="title">BaseSelect</span> </span>&#123;</div><div class="line">        <span class="comment">/**</span></div><div class="line">         * Exec select json string.</div><div class="line">         *</div><div class="line">         * <span class="doctag">@param</span> sparqlStr the sparql string</div><div class="line">         * <span class="doctag">@param</span> model     the model</div><div class="line">         * <span class="doctag">@return</span> the string</div><div class="line">         */</div><div class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">execSelectJSON</span><span class="params">(String sparqlStr, Model model)</span></span></div><div class="line">        &#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                ResultSet results = execSelect(sparqlStr, model);</div><div class="line">                ByteArrayOutputStream bout = <span class="keyword">new</span> ByteArrayOutputStream();</div><div class="line">                ResultSetFormatter.outputAsJSON(bout, results);<span class="comment">//将结果输出为Json格式</span></div><div class="line">                <span class="keyword">return</span> <span class="keyword">new</span> String(bout.toByteArray(), <span class="string">"UTF-8"</span>);<span class="comment">// 输出为Json字符串</span></div><div class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">                e.printStackTrace();</div><div class="line">                <span class="keyword">return</span> e.getLocalizedMessage() + <span class="string">"\n 查询失败! 请检查SPARQL!"</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">/**</span></div><div class="line">         * Exec select result set.</div><div class="line">         *</div><div class="line">         * <span class="doctag">@param</span> sparqlStr the sparql string</div><div class="line">         * <span class="doctag">@param</span> model     the model</div><div class="line">         * <span class="doctag">@return</span> the result set</div><div class="line">         */</div><div class="line">        <span class="function"><span class="keyword">public</span> ResultSet <span class="title">execSelect</span><span class="params">(String sparqlStr, Model model)</span></span></div><div class="line">        &#123;</div><div class="line">            Query query = QueryFactory.create(sparqlStr);</div><div class="line">            QueryExecution queryExec = QueryExecutionFactory.create(query, model);</div><div class="line">            ResultSet results = queryExec.execSelect();</div><div class="line">            <span class="keyword">return</span> results;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">/**</span></div><div class="line">         * Exec select result set.</div><div class="line">         *</div><div class="line">         * <span class="doctag">@param</span> sparqlStr the sparql string</div><div class="line">         * <span class="doctag">@param</span> ds        the Dataset</div><div class="line">         * <span class="doctag">@return</span> the result set</div><div class="line">         */</div><div class="line">        <span class="function"><span class="keyword">public</span> ResultSet <span class="title">execSelect</span><span class="params">(String sparqlStr, Dataset ds)</span></span></div><div class="line">        &#123;</div><div class="line">            Query query = QueryFactory.create(sparqlStr);</div><div class="line">            QueryExecution queryExec = QueryExecutionFactory.create(query, ds);</div><div class="line">            ResultSet results = queryExec.execSelect();</div><div class="line">            <span class="keyword">return</span> results;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">/**</span></div><div class="line">         * Get query vars.</div><div class="line">         * 获取查询变量，若sparql中使用了 ?subject, 则有变量 subject</div><div class="line">         *</div><div class="line">         * <span class="doctag">@param</span> query the query</div><div class="line">         * <span class="doctag">@return</span> the string [ ]</div><div class="line">         */</div><div class="line">        <span class="keyword">public</span> String[] getQueryVars(Query query)</div><div class="line">        &#123;</div><div class="line">            List&lt;Var&gt; vars = query.getProjectVars();</div><div class="line">            String[] varArr = <span class="keyword">new</span> String[vars.size()];</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, len = vars.size(); i &lt; len; i++) &#123;</div><div class="line">                varArr[i] = vars.get(i).getVarName();</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">return</span> varArr;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="实现类"><a href="#实现类" class="headerlink" title="实现类"></a>实现类</h2><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * <span class="doctag">@author</span> Houzw</div><div class="line"> * <span class="doctag">@Description</span>: 执行SPARQL的Select查询</div><div class="line"> */</div><div class="line"><span class="meta">@Service</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SelectDaoImpl</span> <span class="keyword">implements</span> <span class="title">SelectDao</span></span></div><div class="line">&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">execSelectJSON</span><span class="params">(String sparqlStr, Model model)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BaseSelect().execSelectJSON(sparqlStr, model);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> ResultSet <span class="title">execSelect</span><span class="params">(String sparqlStr, Model model)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BaseSelect().execSelect(sparqlStr, model);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> ResultSet <span class="title">execSelect</span><span class="params">(String sparqlStr, Dataset ds)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BaseSelect().execSelect(sparqlStr, ds);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> String[] getQueryVars(Query query)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BaseSelect().getQueryVars(query);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="Ask查询"><a href="#Ask查询" class="headerlink" title="Ask查询"></a>Ask查询</h2><h3 id="接口-1"><a href="#接口-1" class="headerlink" title="接口"></a>接口</h3><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * <span class="doctag">@author</span> Houzw</div><div class="line"> * <span class="doctag">@Description</span> 利用SPARQL的ASK操作查询数据</div><div class="line"> * <span class="doctag">@date</span> 2016年4月18日 下午4:57:16</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AskDao</span> </span>&#123;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 执行ASK查询</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> sparqlStr</div><div class="line">     * <span class="doctag">@param</span> model</div><div class="line">     * <span class="doctag">@return</span> T/F</div><div class="line">     * <span class="doctag">@Houzw</span> at 2016年4月18日下午5:03:54</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">execAsk</span><span class="params">(String sparqlStr, Model model)</span></span>;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 执行ASK查询</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> sparqlStr</div><div class="line">     * <span class="doctag">@param</span> ds</div><div class="line">     * <span class="doctag">@return</span> T/F</div><div class="line">     * <span class="doctag">@Houzw</span> at 2016年4月18日下午5:03:54</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">execAsk</span><span class="params">(String sparqlStr, Dataset ds)</span></span>;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 执行ASK查询</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> sub_uri</div><div class="line">     * <span class="doctag">@param</span> prop_uri</div><div class="line">     * <span class="doctag">@param</span> obj_uri</div><div class="line">     * <span class="doctag">@param</span> model</div><div class="line">     * <span class="doctag">@return</span> T/F</div><div class="line">     * <span class="doctag">@Houzw</span> at 2016年3月30日下午3:22:02</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">execAsk</span><span class="params">(String sub_uri, String prop_uri, String obj_uri, Model model)</span></span>;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 实例是否存在</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> uri</div><div class="line">     * <span class="doctag">@param</span> model</div><div class="line">     * <span class="doctag">@return</span> T/F</div><div class="line">     * <span class="doctag">@Houzw</span> at 2016年4月1日下午10:18:23</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">isIndividual</span><span class="params">(String uri, Model model)</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="实现类-1"><a href="#实现类-1" class="headerlink" title="实现类"></a>实现类</h3><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="meta">@Service</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AskDaoImpl</span> <span class="keyword">implements</span> <span class="title">AskDao</span> </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">execAsk</span><span class="params">(String sparqlStr, Model model)</span></span></div><div class="line">    &#123;</div><div class="line">        Query query = QueryFactory.create(sparqlStr);</div><div class="line">        QueryExecution queryExec = QueryExecutionFactory.create(query, model);</div><div class="line">        <span class="keyword">return</span> queryExec.execAsk();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">execAsk</span><span class="params">(String sparqlStr, Dataset ds)</span></span></div><div class="line">    &#123;</div><div class="line">        Query query = QueryFactory.create(sparqlStr);</div><div class="line">        QueryExecution queryExec = QueryExecutionFactory.create(query, ds);</div><div class="line">        <span class="keyword">return</span> queryExec.execAsk();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">execAsk</span><span class="params">(String sub_uri, String prop_uri, String obj_uri, Model model)</span></span></div><div class="line">    &#123;</div><div class="line">        StringBuilder s = <span class="keyword">new</span> StringBuilder(<span class="string">"ASK &#123; "</span>);</div><div class="line">        <span class="keyword">if</span> (StringUtils.isBlank(sub_uri))</div><div class="line">            s.append(<span class="string">"?s "</span>);</div><div class="line">        <span class="keyword">else</span></div><div class="line">            s.append(<span class="string">"&lt;"</span> + sub_uri + <span class="string">"&gt; "</span>);</div><div class="line">        <span class="keyword">if</span> (StringUtils.isBlank(prop_uri))</div><div class="line">            s.append(<span class="string">"?p "</span>);</div><div class="line">        <span class="keyword">else</span></div><div class="line">            s.append(<span class="string">"&lt;"</span> + prop_uri + <span class="string">"&gt; "</span>);</div><div class="line">        <span class="keyword">if</span> (StringUtils.isBlank(obj_uri))</div><div class="line">            s.append(<span class="string">"?o"</span>);</div><div class="line">        <span class="keyword">else</span></div><div class="line">            s.append(<span class="string">"&lt;"</span> + obj_uri + <span class="string">"&gt; "</span>);</div><div class="line">        s.append(<span class="string">" &#125;"</span>);</div><div class="line">        Query query = QueryFactory.create(s.toString());</div><div class="line">        QueryExecution queryExec = QueryExecutionFactory.create(query, model);</div><div class="line">        <span class="keyword">return</span> queryExec.execAsk();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isIndividual</span><span class="params">(String uri, Model model)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span> execAsk(uri, RDF.type.getURI(), OWL2.NamedIndividual.getURI(), model);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      Jena执行本体SPARQL查询。提供基本的接口和实现类，可在其他代码中直接调用 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>知识图谱-资源收集</title>
    <link href="houzw.github.io.git/2017/05/08/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1-%E8%B5%84%E6%BA%90%E6%94%B6%E9%9B%86/"/>
    <id>houzw.github.io.git/2017/05/08/知识图谱-资源收集/</id>
    <published>2017-05-08T13:23:27.000Z</published>
    <updated>2017-05-25T00:40:54.643Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="知识图谱-资源收集"><a href="#知识图谱-资源收集" class="headerlink" title="知识图谱-资源收集"></a>知识图谱-资源收集</h1><ol><li><a href="http://tie.istic.ac.cn/ch/reader/view_abstract.aspx?file_no=201701002" target="_blank" rel="external">漆桂林,高桓,吴天星.知识图谱研究进展[J].情报工程,2017,3(1):004-025</a></li><li><a href="http://www.xb.uestc.edu.cn/nature/index.php?p=pdfdownload&amp;file=public/uploadfiles/UESTC20160412.pdf&amp;item_id=1894" target="_blank" rel="external">徐增林, 盛泳潘, 贺丽荣, 等. 知识图谱技术综述[J]. 电子科技大学学报, 2016, 45(4): 590.</a></li><li><a href="https://www.google.com/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=3&amp;ved=0ahUKEwjjr7KnueDTAhUGtY8KHRPjDv4QFgguMAI&amp;url=%68%74%74%70%3a%2f%2f%62%6c%6f%67%2e%73%63%69%65%6e%63%65%6e%65%74%2e%63%6e%2f%68%6f%6d%65%2e%70%68%70%3f%6d%6f%64%3d%61%74%74%61%63%68%6d%65%6e%74%26%69%64%3d%35%32%38%31%37&amp;usg=AFQjCNFt-DSGY-fbA1P5Nv7qg-g8PZbT_g&amp;sig2=cIT8yX4p7cfGwxszQwNYKQ" target="_blank" rel="external">大规模知识图谱技术-PDF</a></li><li><a href="http://www.36dsj.com/archives/39306" target="_blank" rel="external">知识图谱技术原理介绍</a></li><li><a href="http://blog.sina.com.cn/s/blog_574a437f0102w2bk.html" target="_blank" rel="external">《大数据智能》第2章：知识图谱——刘知远THU</a></li><li><a href="http://www.infoq.com/cn/articles/Application-of-Knowledge-Graph?utm_source=articles_about_knowledge-map&amp;utm_medium=link&amp;utm_campaign=knowledge-map" target="_blank" rel="external">知识图谱在互联网金融中的应用</a></li><li><a href="http://www.infoq.com/cn/articles/constructing-linkedin-knowledge-map?utm_source=articles_about_knowledge-map&amp;utm_medium=link&amp;utm_campaign=knowledge-map" target="_blank" rel="external">构建LinkedIn知识图谱</a></li><li><a href="http://www.jiqizhixin.com/article/2510" target="_blank" rel="external">知识图谱研究进展</a></li><li><a href="http://jiqizhixin.com/article/1508" target="_blank" rel="external">东南大学漆桂林教授：知识图谱不仅是一项技术，更是一项工程</a></li><li><a href="https://wenku.baidu.com/view/c360027800f69e3143323968011ca300a6c3f620.html" target="_blank" rel="external">数据驱动的大规模知识图谱构建方法——百度文库</a></li><li><a href="http://tie.istic.ac.cn/ch/reader/create_pdf.aspx?file_no=201701003&amp;year_id=2017&amp;quarter_id=1&amp;falg=1" target="_blank" rel="external">规则增强的知识图谱表示学习方法-PDF</a></li><li><a href="http://blog.csdn.net/zjxiaolu/article/details/47434187" target="_blank" rel="external">王昊奋：大规模知识图谱技术</a></li><li><a href="http://blog.openkg.cn/hiknowledge-%E5%A4%A7%E8%A7%84%E6%A8%A1%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E5%AE%9E%E6%88%98%E8%A7%A3%E6%9E%90/" target="_blank" rel="external">HiKnowledge | 大规模知识图谱数据存储实战解析</a></li></ol><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
       
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>GRASS GIS 下 TOPMODEL 运行</title>
    <link href="houzw.github.io.git/2017/04/19/GRASS-GIS%20%E4%B8%8B%20TOPMODEL%20%E8%BF%90%E8%A1%8C/"/>
    <id>houzw.github.io.git/2017/04/19/GRASS-GIS 下 TOPMODEL 运行/</id>
    <published>2017-04-19T09:25:57.000Z</published>
    <updated>2017-05-03T07:24:32.670Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="GRASS-GIS-下-TOPMODEL-运行"><a href="#GRASS-GIS-下-TOPMODEL-运行" class="headerlink" title="GRASS GIS 下 TOPMODEL 运行"></a>GRASS GIS 下 TOPMODEL 运行</h1><blockquote><p><a href="https://grass.osgeo.org/grass72/manuals/r.topmodel.html" target="_blank" rel="external">https://grass.osgeo.org/grass72/manuals/r.topmodel.html</a></p></blockquote><h2 id="名称"><a href="#名称" class="headerlink" title="名称"></a>名称</h2><p><strong>r.topmodel</strong></p><p>模拟有物理基础的（分布式）水文模型 TOPMODEL</p><h2 id="命令概要"><a href="#命令概要" class="headerlink" title="命令概要"></a>命令概要</h2><p><strong><code>r.topmodel</code></strong></p><p><code>r.topmodel --help</code></p><p><strong>r.topmodel</strong> [-<strong>p</strong>] <strong>parameters</strong>=<em>name</em> <strong>topidxstats</strong>=<em>name</em> <strong>input</strong>=<em>name</em> <strong>output</strong>=<em>name</em> [<strong>timestep</strong>=<em>integer</em>][<strong>topidxclass</strong>=<em>integer</em>] [<strong>topidx</strong>=<em>name</em>][<strong>ntopidxclasses</strong>=<em>integer</em>] [<strong>outtopidxstats</strong>=<em>name</em>][–<strong>overwrite</strong>] [–<strong>help</strong>][–<strong>verbose</strong>] [–<strong>quiet</strong>][–<strong>ui</strong>]</p><h3 id="标记"><a href="#标记" class="headerlink" title="标记:"></a>标记:</h3><ul><li><strong>-p</strong> 只进行预处理，并在生成outtopidxstats之后停止</li><li><strong>–overwrite</strong> 允许输出文件覆盖已存在文件</li><li><strong>–help</strong> 输出使用帮助内容</li><li><strong>–verbose</strong> 打印详细的模块输出</li><li><strong>–quiet</strong> 安静模式得到模块输出</li><li><strong>–ui</strong> 强制启动GUI对话框</li></ul><h3 id="参数"><a href="#参数" class="headerlink" title="参数:"></a>参数:</h3><ul><li><p><strong>parameters</strong>=<em>name</em> <strong>[必须]</strong></p><p>输入的TOPMODEL参数文件名称</p></li><li><p><strong>topidxstats</strong>=<em>name</em> <strong>[必须]</strong></p><p>输入地形索引统计文件（topographic index statistics file）的名称</p></li><li><p><strong>input</strong>=<em>name</em> <strong>[必须]</strong><br>输入的降雨量和潜在蒸散发（potential evapotranspiration ）数据文件名称</p></li><li><strong>output</strong>=<em>name</em> <strong>[必须]</strong><br>输出文件名称</li><li><strong>timestep</strong>=<em>integer</em><br>时间步长。为此时间段生成输出</li><li><strong>topidxclass</strong>=<em>integer</em><br>地形索引类 Topographic index class<br>为此地形索引类生成输出</li><li><strong>topidx</strong>=<em>name</em><br>输入的地形索引栅格图的名称。必须剪切到集水边界。用于产生outtopidxstats</li><li><strong>ntopidxclasses</strong>=<em>integer</em><br>地形索引类的数量。用于产生outtopidxstats<br>默认: <em>30</em></li><li><strong>outtopidxstats</strong>=<em>name</em><br>输出的地形索引统计文件的名称。 需要topidx和ntopidxclasses<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2></li></ul><h3 id="参数描述"><a href="#参数描述" class="headerlink" title="参数描述"></a>参数描述</h3><ul><li><p><strong>parameters</strong></p><p>此文件包含描述研究区的 TOPMODEL 参数. 任何以<code>#</code>的行开始或空行被忽略。</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">#  Subcatchment name 子流域名称 </div><div class="line">Subcatchment 1</div><div class="line"></div><div class="line">################################################################################</div><div class="line"># A [m^2]:  Total subcatchment area 总的子流域面积（平方米）</div><div class="line">3.31697E+07</div><div class="line"></div><div class="line">################################################################################</div><div class="line"># qs0 [m/h]: Initial subsurface flow per unit area 单位面积初始地下流量</div><div class="line">#		&quot;The first streamflow input is assumed to represent</div><div class="line">#		 only the subsurface flow contribution in the watershed.&quot;</div><div class="line">#								- Liaw (1988)</div><div class="line">#        </div><div class="line">0.000075</div><div class="line"></div><div class="line"># lnTe [ln(m^2/h)]: Areal average of the soil surface transmissivity</div><div class="line"># 土壤表面透射率的面积平均</div><div class="line">4.</div><div class="line"></div><div class="line"># m [m]: Scaling parameter 缩放参数</div><div class="line">0.0125</div><div class="line"></div><div class="line"># Sr0 [m]: Initial root zone storage deficit </div><div class="line">0.0025</div><div class="line"></div><div class="line"># Srmax [m]: Maximum root zone storage deficit</div><div class="line">0.041</div><div class="line"></div><div class="line"># td [h]: Unsaturated zone time delay per unit storage deficit if greater than 0</div><div class="line">#  OR</div><div class="line"># -alpha: Effective vertical hydraulic gradient if not greater than 0.</div><div class="line">#</div><div class="line"># For example, -10 means alpha=10.</div><div class="line">60.</div><div class="line"></div><div class="line"># vch [m/h]: Main channel routing velocity</div><div class="line">20000.</div><div class="line"></div><div class="line"># vr [m/h]: Internal subcatchment routing velocity</div><div class="line">10000.</div><div class="line"></div><div class="line">################################################################################</div><div class="line"># infex: Calculate infiltration excess if not zero (integer)</div><div class="line">0</div><div class="line"></div><div class="line"># K0 [m/h]: Surface hydraulic conductivity 表面水力传导率</div><div class="line">2.</div><div class="line"></div><div class="line"># psi [m]: Wetting front suction</div><div class="line">0.1</div><div class="line"></div><div class="line"># dtheta: Water content change across the wetting front</div><div class="line">0.1</div><div class="line"></div><div class="line">################################################################################</div><div class="line"># d [m]: Distance from the catchment outlet 距离集水口的距离</div><div class="line">#		The first value should be the mainstream distance from</div><div class="line">#		the subcatchment outlet to the catchment outlet.</div><div class="line"># 第一个值应该是主流到集水处出口的距离</div><div class="line"># Ad_r:  子流域的累积面积比 Cumulative area ratio of subcatchment (0.0 - 1.0)</div><div class="line">#		The first and last values should be 0 and 1, respectively. 第一个和最后一个值分别为0和1。</div><div class="line"></div><div class="line">#   d  Ad_r</div><div class="line">    0   0.0</div><div class="line"> 1000   0.2</div><div class="line"> 2000   0.4</div><div class="line"> 3000   0.6</div><div class="line"> 4000   0.8</div><div class="line"> 5000   1.0</div></pre></td></tr></table></figure></li><li><p><strong>input</strong></p><p>此文件包含天气观测数据.</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line"># dt [h]: 时间步长</div><div class="line">24</div><div class="line"></div><div class="line">################################################################################</div><div class="line"># R [m/dt]:  Rainfall 降雨</div><div class="line"># Ep [m/dt]: Potential evapotranspiration 潜在蒸散发量</div><div class="line"></div><div class="line"># R             Ep</div><div class="line">0.000033        0.000000</div><div class="line">0.000053        0.011938</div><div class="line">0.004821        0.000000</div><div class="line">.</div><div class="line">.</div><div class="line">.</div></pre></td></tr></table></figure></li><li><p><strong>timestep</strong></p><p>如果指定了时间步长，则除了出口处的总结和总流量之外，还将为特定时间步长生成输出。该参数可以与<strong>topidxclass</strong>组合，以同时指定时间步长和地形索引类。如果没有<strong>topidxclass</strong>给出，输出会为所有的地形指数类生成。</p><p>If a time step is specified, output will be generated for the specific time step in addition to the summary and total flows at the outlet. This parameter can be combined with <strong>topidxclass</strong> to specify a time step and topographic index class at the same time. If no <strong>topidxclass</strong> is given, output will be generated for all the topographic index classes.</p></li><li><p><strong>toptopidxclass</strong></p><p>如果指定了地形索引类，将为给定的地形索引类生成输出。该参数可以与<strong>时间步长</strong>组合。如果没有给出<strong>时间步长</strong>，则将为所有<strong>时间步长生成</strong>输出。</p><p>If a topographic index class is specified, output will be generated for the given topographic index class. This parameter can be combined with <strong>timestep</strong>. If no <strong>timestep</strong> is given, output will be generated for all the time steps.</p></li><li><p><strong>topidx</strong>, <strong>ntoptopidxclasses</strong>, <strong>outtoptopidxstats</strong></p><p>该<strong>topidx</strong>地图可以选择用于创建一个新的地形指数统计文件。该地图必须已经剪切到流域边界。地形索引值的整个范围将分为<strong>ntoptopidx</strong>类，并且每个类的面积比将在<strong>outtoptopidxstats</strong>文件中报告 。除非需要创建新的<strong>topidxstats</strong>文件，否则可以省略这三个参数 。</p><p>The <strong>topidx</strong> map can optionally be used for creating a new topographic index statistics file. This map has to be already clipped to the catchment boundary. The entire range of topographic index values will be divided into <strong>ntoptopidxclasses</strong> and the area ratio of each class will be reported in the <strong>outtoptopidxstats</strong> file. These three parameters can be omitted unless a new <strong>topidxstats</strong> file needs to be created.</p></li></ul><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul><li>Cho, H., 2000. GIS Hydrological Modeling System by Using Programming Interface of GRASS. Master’s Thesis, Department of Civil Engineering, Kyungpook National University, Korea.</li><li>Beven K., R. Lamb, P. Quinn, R. Romanowicz, and J. Freer, 1995. TOPMODEL, in V.P. Singh (Ed.). Computer Models of Watershed Hydrology. Water Resources Publications.</li><li>Liaw, S.C., 1988. Streamflow Simulation Using a Physically Based Hydrologic Model in Humid Forested Watersheds. Dissertation, Colorado State University, CO. p163.</li></ul><h2 id="其他内容"><a href="#其他内容" class="headerlink" title="其他内容"></a>其他内容</h2><p><a href="https://grass.osgeo.org/grass72/manuals/r.fill.dir.html" target="_blank" rel="external">r.fill.dir</a>, <a href="https://grass.osgeo.org/grass72/manuals/r.mapcalc.html" target="_blank" rel="external">r.mapcalc</a>, <a href="https://grass.osgeo.org/grass72/manuals/r.topidx.html" target="_blank" rel="external">r.topidx</a></p><p><a href="http://idea.isnew.info/r.topmodel.html" target="_blank" rel="external">如何运行 r.topmodel</a></p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">g.region raster=dem # set the region and resolution correctly</div><div class="line">r.watershed elevation=dem drainage=drain # Create a drainage(水系) map (drain).don’t need to fill sinks in the elevation map because r.watershed uses a least-cost algorithm. （流域分析）</div><div class="line">r.water.outlet input=drain output=basin coord=-109050.647255,1141527.27768 # a watershed boundary map (basin) to define the study area. （流域盆地生成）</div><div class="line">r.mask raster=basin # 可选。掩膜</div><div class="line">r.topidx input=dem output=topidx # Create a topographic index map (topidx) 地形指数</div><div class="line">r.topmodel -p topidx=topidx ntopidxclasses=30 outtopidxstats=topidxstats.txt # Create a topographic index statistics file （topidxstats.txt）</div><div class="line">r.topmodel param=params.txt topidxstats=topidxstats.txt input=input.txt output=output.txt # TOPMPDEL模拟。 input.txt contains observed weather data (Rainfall &amp; Potential evapotranspiration)</div></pre></td></tr></table></figure><h4 id="Calibrating-model-parameters-using-R"><a href="#Calibrating-model-parameters-using-R" class="headerlink" title="Calibrating model parameters using R"></a>Calibrating model parameters using R</h4><p>read and write the parameters file：write params.txt，read output.tx</p><h2 id="作者"><a href="#作者" class="headerlink" title="作者"></a>作者</h2><p>Huidae Cho, Hydro Laboratory, Kyungpook National University, South Korea</p><p>Based on TMOD9502.FOR by Keith Beven.</p><p><em>Last changed: $Date: 2017-03-01 03:45:44 -0800 (Wed, 01 Mar 2017) $</em></p><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><p><a href="https://trac.osgeo.org/grass/browser/grass/branches/releasebranch_7_2/raster/r.topmodel" target="_blank" rel="external">r.topmodel source code</a> (<a href="https://trac.osgeo.org/grass/log/grass/branches/releasebranch_7_2/raster/r.topmodel" target="_blank" rel="external">history</a>)</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
       
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>52°North WPS 学习</title>
    <link href="houzw.github.io.git/2017/04/11/52%C2%B0North-WPS-%E5%AD%A6%E4%B9%A0/"/>
    <id>houzw.github.io.git/2017/04/11/52°North-WPS-学习/</id>
    <published>2017-04-11T06:18:57.000Z</published>
    <updated>2018-03-18T03:37:36.288Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:01 GMT+0800 (中国标准时间) --><h1 id="52°North-WPS"><a href="#52°North-WPS" class="headerlink" title="52°North WPS"></a>52°North WPS</h1><blockquote><p><a href="http://52north.org/communities/geoprocessing/wps/index.html" target="_blank" rel="external">主页</a></p><p><a href="https://github.com/52North/WPS" target="_blank" rel="external">GitHub</a></p></blockquote><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>52°North Web Processing Service 以标准化的方式在网络上部署地理处理服务. 它具有用于处理和数据编码的可插拔架构. 该实现基于当前的OpenGIS 规范: 05-007r7 .</p><p>其专注于创建可扩展的框架来为网络提供泛化算法.</p><h3 id="当前功能特点"><a href="#当前功能特点" class="headerlink" title="当前功能特点"></a>当前功能特点</h3><ul><li><p>一般特性与使用规范</p><ul><li>全 Java开源实现.</li><li>支持所有的WPS 1.0.0 (05-007r7)规范功能与操作</li><li>用于算法和XML数据处理框架的可插拔框架</li><li>基于强键的库构建 (JTS, geotools, xmlBeans, servlet API, derby)</li><li>支持服务活动全纪录<ul><li>支持根据规范的异常处理</li><li>存储执行结果</li><li>全Maven支持</li></ul></li></ul></li><li><p>客户端</p><ul><li>访问WPS的基本客户端实现 （包括完整的XML编码)</li></ul></li><li>WPS 调用<ul><li>同步/异步调用</li><li>原始数据支持</li><li>支持HTTP-GET</li><li>支持HTTP-POST</li></ul></li><li><p>支持WPS 数据类型(选择)</p><ul><li>GeoTiff</li><li>ArcGrid</li><li>对ComplexData的完整GML2 支持</li><li>对ComplexData的完整GML3 支持</li><li>Shapefiles</li><li>KML</li><li>WKT</li></ul></li><li><p>扩展</p><ul><li><a href="https://wiki.52north.org/bin/view/Geostatistics/WPS4R" target="_blank" rel="external">WPS4R - R 后端</a></li><li><a href="http://52north.org/communities/geoprocessing/wps/backends/52n-wps-grass.html" target="_blank" rel="external">GRASS 开箱即用扩展</a></li><li><a href="http://52north.org/communities/geoprocessing/wps/backends/52n-wps-sextante.html" target="_blank" rel="external">220+ SEXTANTE 处理</a></li><li>Web GUI 服务维护</li><li><a href="http://52north.org/communities/geoprocessing/wps/backends/52n-wps-ags.html" target="_blank" rel="external">ArcGIS Server 连接</a></li></ul></li><li><p>结果存储</p><ul><li>全部结果可存储为简单地使用URL访问的网络资源</li><li>Raster/Vector 结果可直接存储为WMS 图层</li><li>Vector 可直接存储为 WFS 图层</li><li>Raster 可直接存储为 WCS 图层</li></ul></li></ul><h3 id="未来方向"><a href="#未来方向" class="headerlink" title="未来方向"></a>未来方向</h3><ul><li>流式 WPS</li><li>数据溯源</li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a><a href="http://52north.org/communities/geoprocessing/wps/download.html" target="_blank" rel="external">下载</a></h4><p><a href="http://52north.org/downloads/send/15-wps/504-52n-wps-webapp-3-6-1" target="_blank" rel="external">52°North WPS 3.6.1</a>, <a href="http://52north.org/downloads/send/15-wps/505-wps-3-6-1-geotools-package" target="_blank" rel="external">额外的GeoTools 包</a></p><p>源码： <code>git clone https://github.com/52North/WPS.git</code></p><h4 id="系统要求"><a href="#系统要求" class="headerlink" title="系统要求"></a>系统要求</h4><p>Java 7+，Tomcat 6 +</p><h4 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h4><ul><li>重命名下载的 downloaded .war 文件为 wps.war</li><li>将war包放到tomcat的webapp目录下</li></ul><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p><a href="https://wiki.52north.org/Geoprocessing/ConfiguringTheWPS" target="_blank" rel="external">https://wiki.52north.org/Geoprocessing/ConfiguringTheWPS</a></p><h4 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h4><p><a href="https://wiki.52north.org/Geoprocessing/GeoprocessingTutorials" target="_blank" rel="external">https://wiki.52north.org/Geoprocessing/GeoprocessingTutorials</a></p><h4 id="处理后台"><a href="#处理后台" class="headerlink" title="处理后台"></a>处理后台</h4><ul><li><a href="http://52north.org/communities/geoprocessing/wps/backends/52n-wps-grass.html" target="_blank" rel="external">GRASS Backend</a>.</li></ul><ul><li><a href="http://52north.org/communities/geoprocessing/wps/backends/52n-wps-ags.html" target="_blank" rel="external">ArcGIS Server Backend</a>.</li><li><a href="http://52north.org/communities/geoprocessing/wps/backends/52n-wps-sextante.html" target="_blank" rel="external">Sextante Backend</a>.</li><li><a href="https://wiki.52north.org/bin/view/Geostatistics/WPS4R" target="_blank" rel="external">WPS4R</a>.</li></ul><h3 id="GRASS-处理后台"><a href="#GRASS-处理后台" class="headerlink" title="GRASS 处理后台"></a>GRASS 处理后台</h3><ol><li>从<a href="http://52north.org/downloads/category/15-wps" target="_blank" rel="external">这里</a>下载最新的WPS release包.(需要源码的话查看 <a href="https://wiki.52north.org/Geoprocessing/TutorialWpsEclipseIndigoGit" target="_blank" rel="external">教程</a> )</li><li>重命名 downloaded .war（52n-wps-webapp-3.6.1.war） 文件为 wps.war ，并将其放到你的<code>tomcat/webapp</code>目录下.</li><li>从 <a href="http://grass.osgeo.org/grass70/binary/mswindows/native/" target="_blank" rel="external">这里</a>下载 GRASS 7.0 安装文件.</li><li>使用安装文件安装 GRASS 7.0</li><li>打开 <code>&lt;GRASS_INSTALL_PATH&gt;\demolocation</code> （如<code>D:\Program Files\GRASS GIS 7.2.0\demolocation</code> ）目录下的<code>.grassrc70</code> 文件. 修改 GISDBASE 参数为你的 GRASS 安装路径，e.g. <code>GISDBASE: C:/Programme/GRASS-70-SVN</code> (使用斜杠代替反斜杠).（<code>&quot;D:/Program Files/GRASS GIS 7.2.0&quot;</code> ?）</li><li>从 <a href="http://52north.org/files/geoprocessing/GRASS/wps-grass-bridge-patched.zip" target="_blank" rel="external">这里</a> 下载并解压 wps-grass-bridge，或使用 <a href="http://wps-grass-bridge.googlecode.com/svn/trunk/" target="_blank" rel="external">SVN</a>检出 . <img src="https://wiki.52north.org/pub/System/DocumentGraphics/warning.png" alt="ALERT!"> 注意，GRASS后台目前不能与bridge的trunk 版兼容 .</li><li>下载和安装 Python. 虽然 python 可执行文件与 GRASS 7.0 一起提供, 但GrassModuleStarter 需要一些额外的库. 因而，需要安装完整的 python.</li><li>启动 Apache Tomcat</li><li>访问 <a href="http://localhost:8080/wps/webAdmin/index.jsp" target="_blank" rel="external">http://localhost:8080/wps/webAdmin/index.jsp</a> 用户名: wps 密码: wps<ul><li>标签页 <code>&lt;Server Settings&gt;</code><ul><li>需要时，点击 edit 按钮并修改端口</li></ul></li><li>标签页<code>&lt;Algorithm Repositories&gt;</code><ul><li>启用 Grass Repository</li><li>点击edit 按钮并设置变量<ul><li><code>Grass_Home</code> 必须指向 GRASS 7.0 的安装目录</li><li><code>Python_Home</code> 必须指向 python 可执行文件(e.g. the extrabin directory of the GRASS 7.0 installation or the path to the python installation (see step 7.))</li><li><code>Python_Path</code> 必须指向 python 安装目录.</li><li><code>Addon_Dir</code> (可选) 必须指向包含GRASS扩展的目录 (同名的python 脚本和 .exe 文件).</li><li><code>ModuleStarter_Home</code> 变量必须指向wps-grass-bridge包含<code>GrassModuleStarter.py</code>文件的子目录.</li><li><code>GISRC_Dir</code> 必须指向 <code>.grassrc70</code> 文件. 父目录必须也包含PERMANENT 目录. 这一点在安装 GRASS 7.0时会自动创建,因而除非你知道自己在干啥，不然在此处填上 <code>&lt;GRASS_INSTALL_PATH&gt;\demolocation\.grassrc70</code> . 参考第5步.</li><li><code>TMP_Dir</code> 必须指向一个非只读目录. <strong>注意</strong>: 每次包含GRASS-backend 的WPS启动时，此临时目录内的文件会全部删除, 因此不要将其指向存有重要文件的目录!</li><li>所有的将被暴露为WPS 处理的 Grass 处理将展示在此仓库下的 algorithm-properties 列表中. 在这里，你可以根据你的需要添加、删除、激活或失效一个Grass 处理.</li></ul></li></ul></li><li>示例<img src="https://wiki.52north.org/pub/Geoprocessing/TutorialBackendGRASSWin/grass_settings_windows_cropped.png" alt=""></li><li>配置完成之后点击<code>Save and activate Configuration</code></li><li>WPS Admin Console 的用户名和密码可以在文件 <code>_TOMCAT_INSTALL_PATH_\webapps\wps\WEB-INF\classes\users.xml</code> 中修改</li></ul></li></ol><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      52°North WPS 开发框架介绍 
    
    </summary>
    
      <category term="GIS - GIS开发" scheme="houzw.github.io.git/categories/GIS-GIS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="WPS" scheme="houzw.github.io.git/tags/WPS/"/>
    
  </entry>
  
  <entry>
    <title>Linux 目录结构</title>
    <link href="houzw.github.io.git/2017/04/08/Linux-%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84/"/>
    <id>houzw.github.io.git/2017/04/08/Linux-目录结构/</id>
    <published>2017-04-08T07:39:41.000Z</published>
    <updated>2017-04-08T08:17:38.510Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="linux-目录结构"><a href="#linux-目录结构" class="headerlink" title="linux 目录结构"></a>linux 目录结构</h1><blockquote><p>参考地址:</p><p><a href="http://www.178linux.com/9736" target="_blank" rel="external">http://www.178linux.com/9736</a></p><p><a href="http://www.iteye.com/topic/1125162" target="_blank" rel="external">http://www.iteye.com/topic/1125162</a></p><p><a href="http://yangrong.blog.51cto.com/6945369/1288072" target="_blank" rel="external">http://yangrong.blog.51cto.com/6945369/1288072</a></p><p><a href="http://itlab.idcquan.com/linux/administer/939529_1.html" target="_blank" rel="external">http://itlab.idcquan.com/linux/administer/939529_1.html</a></p><p><a href="http://itlab.idcquan.com/linux/administer/939529_2.html" target="_blank" rel="external">http://itlab.idcquan.com/linux/administer/939529_2.html</a></p></blockquote><h2 id="1、linux哲学思想："><a href="#1、linux哲学思想：" class="headerlink" title="1、linux哲学思想："></a>1、linux哲学思想：</h2><ul><li><p>一切皆文件,把几乎所有的资源，包括硬件设备都组织为文件格式；</p></li><li><p>由众多目的单一的小程序组成，一个程序只做一件事，并且要好，组合小程序完成复杂任务；</p></li><li>尽量避免跟用户交互,实现脚本编程，自动完成某些功能；</li><li>使用纯文本文件保存配置信息，管理员只需使用一款文本编辑器既能完成系统配置工作；</li><li>提供机制，而非策略，管道是机制，应用管道处理各种数据是策略，机制就是提供各种接口供使用者组合调用得到想要的数据。</li></ul><h2 id="2、FHS-Filesystem-Hierarchy-Standard-意义"><a href="#2、FHS-Filesystem-Hierarchy-Standard-意义" class="headerlink" title="2、FHS (Filesystem Hierarchy Standard)意义"></a>2、FHS (Filesystem Hierarchy Standard)意义</h2><p>linux核心思想<strong>一切皆文件</strong>，因此,了解linux的文件层次结构以及根据FHS规定的目录名的含义是相当重要的。</p><p>Linux和UNIX的文件系统是一个以“<code>/</code> “为根的阶层式的树状文件结构，<code>/</code> 因此被称为根目录。</p><p>所有的文件和目录都置于根目录<code>/</code>之下。根目录<code>/</code>下面有<code>/etc</code>, <code>/usr</code>, <code>/var</code>, <code>/root</code>, <code>/home</code>, <code>/dev</code>等子目录。</p><p>早期的 UNIX 系统中，各个厂家各自定义了自己的UNIX系统的文件系统构成，比较混乱。为了避免在Linux也产生同样的问题，在Linux面世不久，就开始了对Linux文件系统进行标准化的活动，于1994年推出了名为 FSSTND(Filesystem Standard)的Linux文件系统层次结构标准。之后，FSSTND标准吸引了UNIX社团的开发人员，他们把FSSTND扩大到UNIX系统，FSSTND就变为FHS (Filesystem Hierarchy Standard)。</p><h2 id="3、树状目录结构图"><a href="#3、树状目录结构图" class="headerlink" title="3、树状目录结构图"></a>3、树状目录结构图</h2><p><img src="http://ofcj2lgtd.bkt.clouddn.com/1450239746595149.jpg" alt="230817424.jpg"></p><blockquote><p>软件安装目录惯例：</p><p><code>/usr</code>：系统级的目录；<code>/usr/lib</code> 类似<code>C:/Windows/System32</code> .</p><p><code>/usr/local</code> ：用户级的程序目录。用户自己编译的软件默认会安装到这个目录下。</p><p><code>/opt</code>：用户级的程序目录，opt有可选的意思，可以用于放置第三方大型软件（或游戏）。当不需要时，直接<code>rm -rf</code>掉即可。在硬盘容量不够时，也可将<code>/opt</code>单独挂载到其他磁盘上使用。</p><p><code>/usr/src</code>：系统级的源码目录。</p><p><code>/usr/local/src</code>：用户级的源码目录。</p></blockquote><h2 id="4、目录详细介绍目录"><a href="#4、目录详细介绍目录" class="headerlink" title="4、目录详细介绍目录"></a>4、目录详细介绍目录</h2><h3 id="1-目录-根文件系统"><a href="#1-目录-根文件系统" class="headerlink" title="1./目录(根文件系统)"></a>1.<code>/</code>目录(根文件系统)</h3><table><thead><tr><th>目录</th><th>描述</th></tr></thead><tbody><tr><td><code>/</code></td><td>第一层次结构的根、整个文件系统层次结构的根目录。 <code>cd /</code></td></tr><tr><td><code>/bin</code></td><td>供所有用户使用的基本命令，不能关联至独立分区，OS启动即会用到的程序。主要有：<code>ls cp mkdir cat mv netstat pwd rm sync tar touch sort</code> 等等常用的指令。类似的目录还 <code>/usr/bin</code> ， <code>/usr/local/bin</code>等等。这个目录中的文件都是<strong>可执行的</strong>、<strong>普通用户都可使用的命令</strong>。作为基础系统所需要的<strong>最基础的命令</strong>就是放在这里。</td></tr><tr><td><code>/sbin</code></td><td>存放大多涉及<strong>系统管理</strong>的命令（如引导系统的 init 程序），是超级权限用户 root 的可执行命令存放地，普通用户无权限执行这个目录下的命令（但是有时普通用户也可能会用到）。这个目录和 <code>/usr/sbin</code> ,<code>/usr/X11R6/sbin</code>或<code>/usr/local/sbin</code> 等目录是相似的，要记住，凡是 sbin 中包含的都是 root 权限才能执行的。</td></tr><tr><td><code>/boot</code></td><td>引导程序，内核等存放的目录。 放置linux系统启动时用到的一些文件。<code>/boot/vmlinuz</code>为linux的内核文件，引导加载器（bootloader, gurb)。建议单独分区, 大小100M即可。如果机器中包含多个操作系统，那么可通过修改此目录中的某个配置文件（如 grub.conf ）来调整启动的默认系统，系统启动的选择菜单，以及启动延迟等参数。</td></tr><tr><td><code>/lib</code></td><td>根目录下程序的基本共享库目录，以及内核模块文件（lib/modules）. 此目录下包含系统引导和在根用户执行命令时候所必需用到的共享库。</td></tr><tr><td><code>/lib64</code></td><td>专用于x86_64系统上的铺助共享库文件存放位置</td></tr><tr><td><code>/etc</code></td><td><strong>配置文件目录</strong>（纯文本文件），系统主要的配置文件几乎都放置在这个目录内，例如人员的账号密码文件、 各种服务的启始档等等。一般来说，这个目录下的各文件属性是可以让一般使用者查阅的， 但是只有 root 有权力修改。FHS 建议不要放置可执行文件(binary)在这个目录中喔。比较重要的档案有： <code>/etc/inittab, /etc/init.d/, /etc/modprobe.conf, /etc/X11/,/etc/fstab, /etc/sysconfig/</code> 等等。另外，其下重要的目录有： <code>/etc/init.d/</code>：所有服务的预设启动 script 都是放在这里的，例如要启动或者关闭 iptables 的话：『 <code>/etc/init.d/iptables start</code>』、『<code>/etc/init.d/iptables stop</code>』</td></tr><tr><td><code>/home/USERNAME</code></td><td>这是系统默认的用户主目录( home directory，<code>$HOME</code> 目录)。在你新增一个一般使用者账号时，不给用户家目录都会归范到这里来。比较重要的是，家目录有两种代号：<code>~</code>：代表<strong>当前用户</strong>的家目录，而<code>~dmtsai</code> ：则代表 dmtsai 的家目录! 该目录中保存了绝大多数的<strong>用户文件</strong>(用户自己的配置文件，定制文件，文档，数据等)</td></tr><tr><td><code>/root</code></td><td>系统管理员(root)的主目录（<code>$HOME</code>）。之所以放在这里，是因为如果进入单人维护模式而仅挂载根目录时，该目录就能够拥有 root 的主目录，所以我们会希望root主目录不与根目录放置在同一个分割槽中。</td></tr><tr><td><code>/media</code></td><td>便捷式移动设备挂载点（cdrom, usb），media 是『媒体』的英文，顾名思义，这个/media 底下放置的就是可移除的装置啦! 包括软盘、光盘、DVD 等等装置都暂时挂载二此。常见的档名有：/media/floppy, /media/cdrom 等等。</td></tr><tr><td><code>/mnt</code></td><td>如果你想要暂时挂载某些额外的装置，一般建议你可以放置到这个目录中。 在古早时候，这个目录的用途与/media 相同啦!只是有了/media 之后，这个目录就用来暂时挂载用了。</td></tr><tr><td><code>/dev</code></td><td>设备文件及特殊文件存储位置（b:block device 离散访问 c:character device 线性访问）.任何装置不接口设备都是以档案的型态存在二这个目录当中的。 你只要透过存取这个目录底下的某个档案，就等二存取某个装置啰～ 比要重要的档案有<code>/dev/null, /dev/zero, /dev/tty, /dev/lp*, /dev/hd*, /dev/sd*</code>等等</td></tr><tr><td><code>/opt</code></td><td>这个是给第三方程序软件放置的目录。什么是第三方协力软件啊? 举例来说，KDE这个桌面管理系统是一个独立的计划，不过他可以安装到 Linux 系统中，因此 KDE的软件就建议放置到此目录下了。 另外，如果你想要自行安装额外的软件(非原本的distribution 提供的)，那也能够将你的软件安装到这里来。 不过以前的 Linux 系统中，我们还是习惯放置在/usr/local 目录下呢!</td></tr><tr><td><code>/srv</code></td><td>系统上运动的服务用到的数据，srv 可以规为『service』的缩写，是一些网络服务启动之后，这些服务所需要取用的数据目录。 常见的服务例如 WWW, FTP 等等。示例来说，WWW 服务器需要的网页资料就可以放置在/srv/www/里面。</td></tr><tr><td><code>/tmp</code></td><td>这是让一般用户或者是正在执行的程序暂时放置档案的地方。</td></tr><tr><td><code>/usr</code></td><td>universal shared <strong>read-only</strong> data. <strong>默认软件</strong>都会存于该目录下。用于存储只读用户数据的第二层次；此目录中包含了命令库文件和在通常操作中不会修改的文件</td></tr><tr><td><code>/media</code></td><td>便捷式移动设备挂载点,media 是『媒体』的英文，顾名思义，这个/media 底下放置的就是可移除的装置啦! 包括软盘、光盘、DVD 等等装置都暂时挂载二此。常见的档名有：/media/floppy, /media/cdrom 等等</td></tr><tr><td><code>/var</code></td><td>变量文件——在正常运行的系统中其内容不断变化的文件，如日志，脱机文件和临时电子邮件文件。有时是一个单独的分区。如果不单独分区，有可能会把整个分区充满。如果单独分区，给大给小都不合适。</td></tr><tr><td><code>/proc</code></td><td>目录本身是一个『虚拟文件系统(virtual filesystem)』! 放置的数据都是在内存当中， 如系统核心、进程信息(process)、周边装置的状态及网络状态等等。因为这个目录下的数据都是在内存当中，故本身不占任何硬盘空间! 比较重要的档案如：<code>/proc/cpuinfo, /proc/dma, /proc/interrupts,/proc/ioports, /proc/net/*</code>等等。</td></tr><tr><td><code>/sys</code></td><td>这个目录跟<code>/proc</code> 非常类似，也是一个虚拟的文件系统，主要也是记录不核心相关的信息。 包括目前已加载的核心模块不核心侦测到的硬件装置信息等等。这个目录同样不占硬盘容量!</td></tr><tr><td><code>/selinux</code></td><td>security enhanced Linux，selinux相关的安全策略等信息的存储位置。</td></tr><tr><td><code>/lost+found</code></td><td>在ext3文件系统中，当系统意外崩溃或机器意外关机，会产生一些文件碎片在这里。当系统在开机启动的过程中fsck工具会检查这里，并修复已经损坏的文件系统。当系统发生问题。可能会有文件被移动到这个目录中，可能需要用手工的方式来修复，或移到文件到原来的位置上。</td></tr></tbody></table><h3 id="2-etc-目录（配置文件目录-纯文本文件）"><a href="#2-etc-目录（配置文件目录-纯文本文件）" class="headerlink" title="2./etc/目录（配置文件目录,纯文本文件）"></a>2.<code>/etc/</code>目录（配置文件目录,纯文本文件）</h3><table><thead><tr><th>目录</th><th>描述</th></tr></thead><tbody><tr><td><code>/etc/rc</code> <code>/etc/rc.d</code> <code>/etc/rc*.d</code></td><td>启动、或改变运行级时运行的scripts或scripts的目录.</td></tr><tr><td><code>/etc/hosts</code></td><td>本地域名解析文件/etc/sysconfig/networkIP、掩码、网关、主机名配置</td></tr><tr><td><code>/etc/resolv.conf</code></td><td>DNS服务器配置/etc/fstab开机自动挂载系统，所有分区开机都会自动挂载</td></tr><tr><td><code>/etc/inittab</code></td><td>设定系统启动时Init进程将把系统设置成什么样的 runlevel及加载相关的启动文件配置</td></tr><tr><td><code>/etc/exports</code></td><td>设置NFS系统用的配置文件路径</td></tr><tr><td><code>/etc/init.d</code></td><td>这个目录来存放系统启动脚本</td></tr><tr><td><code>/etc/profile, /etc/csh.login, /etc/csh.cshrc</code></td><td>全局系统环境配置变量</td></tr><tr><td><code>/etc/issue</code></td><td>认证前的输出信息，默认输出版本内核信息</td></tr><tr><td><code>/etc/motd</code></td><td>设置认证后的输出信息</td></tr><tr><td><code>/etc/mtab</code></td><td>当前安装的文件系统列表.由scripts初始化，并由mount 命令自动更新.需要一个当前安装的文件系统的列表时使用，例如df 命令<code>/etc/group</code>类似<code>/etc/passwd</code> ，但说明的不是用户而是组.</td></tr><tr><td><code>/etc/passwd</code></td><td>用户数据库，其中的域给出了用户名、真实姓名、家目录、加密的口令和用户的其他信息.</td></tr><tr><td><code>/etc/shadow</code></td><td>在安装了影子口令软件的系统上的影子口令文件.影子口令文件将<code>/etc/passwd</code> 文件中的加密口令移动到<code>/etc/shadow</code> 中，而后者只对root可读.这使破译口令更困难.</td></tr><tr><td><code>/etc/sudoers</code></td><td>可以sudo命令的配置文件</td></tr><tr><td><code>/etc/syslog.conf</code></td><td>系统日志参数配置</td></tr><tr><td><code>/etc/login.defs</code></td><td>设置用户帐号限制的文件</td></tr><tr><td><code>/etc/securetty</code></td><td>确认安全终端，即哪个终端允许root登录.一般只列出虚拟控制台，这样就不可能(至少很困难)通过modem或网络闯入系统并得到超级用户特权.</td></tr><tr><td><code>/etc/printcap</code></td><td>类似<code>/etc/termcap</code> ，但针对打印机.语法不同.</td></tr><tr><td><code>/etc/shells</code></td><td>列出可信任的shell.chsh 命令允许用户在本文件指定范围内改变登录shell.提供一台机器FTP服务的服务进程ftpd 检查用户shell是否列在 <code>/etc/shells</code> 文件中，如果不是将不允许该用户登录.</td></tr><tr><td><code>/etc/xinetd.d</code></td><td>如果服务器是通过xinetd模式运行的，它的脚本要放在这个目录下。有些系统没有这个目录，比如Slackware，有些老的版本也没有。在Redhat Fedora中比较新的版本中存在。</td></tr><tr><td><code>/etc/opt/</code></td><td><code>/opt/</code>的配置文件</td></tr><tr><td><code>/etc/X11/</code></td><td>X_Window系统(版本11)的配置文件</td></tr><tr><td><code>/etc/sgml/</code></td><td>SGML的配置文件</td></tr><tr><td><code>/etc/xml/</code></td><td>XML的配置文件</td></tr><tr><td><code>/etc/skel/</code></td><td>默认创建用户时，把该目录拷贝到家目录下</td></tr></tbody></table><h3 id="3、-usr-目录"><a href="#3、-usr-目录" class="headerlink" title="3、/usr/目录"></a>3、<code>/usr/</code>目录</h3><p>默认软件都会存于该目录下。用于存储只读用户数据的第二层次；包含绝大多数的用户工具和应用程序。</p><table><thead><tr><th>目录</th><th>描述</th></tr></thead><tbody><tr><td><code>/usr/X11R6</code></td><td>存放X-Windows的目录；</td></tr><tr><td><code>/usr/doc</code></td><td>Linux技术文档；/usr/include用来存放Linux下开发和编译应用程序所需要的头文件；</td></tr><tr><td><code>/usr/lib</code></td><td>32位系统使用的函数库目录。存放一些常用的动态链接共享库和静态档案库；</td></tr><tr><td><code>/usr/man</code></td><td>帮助文档所在的目录；</td></tr><tr><td><code>/usr/src</code></td><td><strong>源代码</strong>,例如:内核源代码及其头文件。Linux开放的源代码，就存在这个目录，爱好者们别放过哦；</td></tr><tr><td><code>/usr/bin/</code></td><td>非必要可执行文件 (在单用户模式中不需要)；面向所有用户。一般使用者使用并且不是系统自检等所必需可执行文件的目录。此目录相当于根文件系统下的对应目录（<code>/bin</code> ），非启动系统，非修复系统以及非本地安装的程序一般都放在此目录下</td></tr><tr><td><code>/usr/sbin/</code></td><td>管理员使用的非系统必须的可执行文件存放目录，例如：大量网络服务的守护进程。</td></tr><tr><td><code>/usr/share/</code></td><td>体系结构无关（共享）数据。<code>/usr/share/doc</code>: 系统说明文件存放目录。<code>/usr/share/man</code>: 程序说明文件存放目录</td></tr><tr><td><code>/usr/include/</code></td><td>C语言的头文件</td></tr><tr><td><code>/usr/X11R6/</code></td><td>X Window系统版本 11, Release 6.</td></tr><tr><td><code>/usr/local/</code></td><td>安装<strong>本地程序</strong>的一般默认路径。本地数据的第三层次，具体到本台主机。通常而言有进一步的子目录，例如：<code>bin/、lib/、share/</code>.这是提供给一般用户的<code>/usr</code>目录，在这里安装一般的应用软件；</td></tr></tbody></table><h3 id="4、-var-目录"><a href="#4、-var-目录" class="headerlink" title="4、/var/目录"></a>4、<code>/var/</code>目录</h3><p><code>/var</code> 包括系统一般运行时要改变的数据.每个系统是特定的，即不通过网络与其他计算机共享.</p><table><thead><tr><th>目录</th><th>描述</th></tr></thead><tbody><tr><td><code>/var/log/message</code></td><td>日志信息，按周自动轮询</td></tr><tr><td><code>/var/spool/cron/root</code></td><td>定时器配置文件目录，默认按用户命名</td></tr><tr><td><code>/var/log/secure</code></td><td>记录登陆系统存取信息的文件，不管认证成功还是认证失败都会记录</td></tr><tr><td><code>/var/log/wtmp</code></td><td>记录登陆者信息的文件，last,who,w命令信息来源于此</td></tr><tr><td><code>/var/spool/clientmqueue/</code></td><td>当邮件服务未开启时，所有应发给系统管理员的邮件都将堆放在此</td></tr><tr><td><code>/var/spool/mail/</code></td><td>邮件目录</td></tr><tr><td><code>/var/tmp</code></td><td>比/tmp 允许的大或需要存在较长时间的临时文件. (虽然系统管理员可能不允许/var/tmp 有很旧的文件.)</td></tr><tr><td><code>/var/lib</code></td><td>系统正常运行时要改变的文件.</td></tr><tr><td><code>/var/local</code></td><td><code>/usr/local</code> 中安装的程序的可变数据(即系统管理员安装的程序).注意，如果必要，即使本地安装的程序也会使用其他/var 目录，例如<code>/var/lock</code> .</td></tr><tr><td><code>/var/lock</code></td><td>锁定文件.许多程序遵循在/var/lock 中产生一个锁定文件的约定，以支持他们正在使用某个特定的设备或文件.其他程序注意到这个锁定文件，将不试图使用这个设备或文件.</td></tr><tr><td><code>/var/log/</code></td><td>各种程序的Log文件，特别是login (<code>/var/log/wtmp</code> log所有到系统的登录和注销) 和syslog (<code>/var/log/messages</code> 里存储所有核心和系统程序信息.<code>/var/log</code> 里的文件经常不确定地增长，应该定期清除.</td></tr><tr><td><code>/var/run</code></td><td>保存到下次引导前有效的关于系统的信息文件.例如，<code>/var/run/utmp</code> 包含当前登录的用户的信息.</td></tr><tr><td><code>/var/cache/</code></td><td>应用程序缓存数据。这些数据是在本地生成的一个耗时的I/O或计算结果。应用程序必须能够再生或恢复数据。缓存的文件可以被删除而不导致数据丢失。</td></tr></tbody></table><h3 id="5、-proc-目录"><a href="#5、-proc-目录" class="headerlink" title="5、/proc/目录"></a>5、<code>/proc/</code>目录</h3><p>虚拟文件系统，将内核与进程状态归档为文本文件（系统信息都存放这目录下）。<br>例如：uptime、 network。在Linux中，对应Procfs格式挂载。该目录下文件只能看不能改（包括root）</p><table><thead><tr><th>目录</th><th>描述</th></tr></thead><tbody><tr><td><code>/proc/meminfo</code></td><td>查看内存信息</td></tr><tr><td><code>/proc/loadavg</code></td><td>还记得 top 以及 uptime 吧？没错！上头的三个平均数值就是记录在此！</td></tr><tr><td><code>/proc/uptime</code></td><td>就是用 uptime 的时候，会出现的资讯啦！</td></tr><tr><td><code>/proc/cpuinfo</code></td><td>关于处理器的信息，如类型、厂家、型号和性能等。</td></tr><tr><td><code>/proc/cmdline</code></td><td>加载 kernel 时所下达的相关参数！查阅此文件，可了解系统是如何启动的！</td></tr><tr><td><code>/proc/filesystems</code></td><td>目前系统已经加载的文件系统罗！</td></tr><tr><td><code>/proc/interrupts</code></td><td>目前系统上面的 IRQ 分配状态。</td></tr><tr><td><code>/proc/ioports</code></td><td>目前系统上面各个装置所配置的 I/O 位址。</td></tr><tr><td><code>/proc/kcore</code></td><td>这个就是内存的大小啦！好大对吧！但是不要读他啦！</td></tr><tr><td><code>/proc/modules</code></td><td>目前我们的 Linux 已经加载的模块列表，也可以想成是驱动程序啦！</td></tr><tr><td><code>/proc/mounts</code></td><td>系统已经挂载的数据，就是用 mount 这个命令呼叫出来的数据啦！</td></tr><tr><td><code>/proc/swaps</code></td><td>到底系统挂加载的内存在哪里？呵呵！使用掉的 partition 就记录在此啦！</td></tr><tr><td><code>/proc/partitions</code></td><td>使用 fdisk -l 会出现目前所有的 partition 吧？在这个文件当中也有纪录喔！</td></tr><tr><td><code>/proc/pci</code></td><td>在 PCI 汇流排上面，每个装置的详细情况！可用 lspci 来查阅！</td></tr><tr><td><code>/proc/version</code></td><td>核心的版本，就是用 uname -a 显示的内容啦！</td></tr><tr><td><code>/proc/bus/*</code></td><td>一些汇流排的装置，还有 U盘的装置也记录在此喔！</td></tr></tbody></table><h3 id="6、-dev-目录"><a href="#6、-dev-目录" class="headerlink" title="6、/dev/目录"></a>6、<code>/dev/</code>目录</h3><p>设备文件, 分为两种：块设备文件(b)和字符设备文件(c)<br>设备文件一般存放在/dev目录下，对常见设备文件作如下说明：</p><table><thead><tr><th>目录</th><th>描述</th></tr></thead><tbody><tr><td><code>/dev/hd[a-t]</code></td><td>IDE设备</td></tr><tr><td><code>/dev/sd[a-z]</code></td><td>SCSI设备</td></tr><tr><td><code>/dev/fd[0-7]</code></td><td>标准软驱</td></tr><tr><td><code>/dev/md[0-31]</code></td><td>软raid设备</td></tr><tr><td><code>/dev/loop[0-7]</code></td><td>本地回环设备</td></tr><tr><td><code>/dev/ram[0-15]</code></td><td>内存</td></tr><tr><td><code>/dev/null</code></td><td>无限数据接收设备,相当于黑洞</td></tr><tr><td><code>/dev/zero</code></td><td>无限零资源</td></tr><tr><td><code>/dev/tty[0-63]</code></td><td>虚拟终端</td></tr><tr><td><code>/dev/ttyS[0-3]</code></td><td>串口</td></tr><tr><td><code>/dev/lp[0-3]</code></td><td>并口</td></tr><tr><td><code>/dev/console</code></td><td>控制台</td></tr><tr><td><code>/dev/fb[0-31]</code></td><td>framebuffer</td></tr><tr><td><code>/dev/cdrom</code></td><td>=&gt; <code>/dev/hdc</code></td></tr><tr><td><code>/dev/modem</code></td><td>=&gt; <code>/dev/ttyS[0-9]</code></td></tr><tr><td><code>/dev/pilot</code></td><td>=&gt;<code>/dev/ttyS[0-9]</code></td></tr><tr><td><code>/dev/random</code></td><td>随机数设备</td></tr><tr><td><code>/dev/urandom</code></td><td>随机数设备</td></tr></tbody></table><h3 id="7、Linux下的文件类型："><a href="#7、Linux下的文件类型：" class="headerlink" title="7、Linux下的文件类型："></a>7、Linux下的文件类型：</h3><p>– (f)：普通文件；<br>d: 目录文件；<br>b: 块设备；<br>c: 字符设备；<br>l: 符号链接文件；<br>p: 管道文件；<br>s: 套接字文件；socket;</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
       
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Apache CXF Web Service Development笔记 01</title>
    <link href="houzw.github.io.git/2017/04/07/Apache-CXF-Web-Service-Development%E7%AC%94%E8%AE%B0-01/"/>
    <id>houzw.github.io.git/2017/04/07/Apache-CXF-Web-Service-Development笔记-01/</id>
    <published>2017-04-07T07:28:18.000Z</published>
    <updated>2018-03-18T03:35:27.785Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:01 GMT+0800 (中国标准时间) --><h1 id="熟悉-CXF"><a href="#熟悉-CXF" class="headerlink" title="熟悉 CXF"></a>熟悉 CXF</h1><blockquote><p><strong><em>Apache CXF Web Service Development——Develop and deploy SOAP and RESTful Web Services</em></strong></p><p><em>Naveen Balani &amp; Rajeev Hathi</em></p><p>2009 Packt Publishing</p><p><a href="https://www.packtpub.com/sites/default/files/downloads/5401_Code.zip" target="_blank" rel="external">示例代码下载</a></p></blockquote><p>Apache CXF 是一个业界领先的构建在标准web services之上的开发框架 ，其目标是简化 web services 的开发.</p><h2 id="Web-service相关标准"><a href="#Web-service相关标准" class="headerlink" title="Web service相关标准"></a>Web service相关标准</h2><ul><li><p>XML</p></li><li><p>SOAP (Simple Object Access Protocol)</p><p>SOAP is a protocol for exchanging XML-based messages over a network, typically using HTTP protocol.</p></li><li><p>WSDL (Web Services Description language)<br>WSDL 是一种基于XML语言的用于描述 web services 的标准</p></li><li><p>REST (Representational State Transfer)<br>REST is neither a technology nor a standard; it’s an architectural style—a set of guidelines for exposing resources over the Web（by a Uniform Resource Indicator (URI)）.</p></li><li><p>Service Registry</p><p>Service Registry 提供了一种查找 web services 的机制.</p></li></ul><h2 id="web-services-简介"><a href="#web-services-简介" class="headerlink" title="web services 简介"></a>web services 简介</h2><p>World Wide Web Consortium (W3C) 定义：</p><blockquote><p><em>A Web service is a software system identified by a URI whose public interfaces and bindings are defined and described using XML (specifically WSDL). Its definition can be discovered by other software systems. These systems may then interact with the web service in a manner prescribed by its definition, using XML-based messages conveyed by Internet protocols.</em></p></blockquote><p>Web services are next generation web applications, modules, or components that can be thought of as a<br>service provided over the web.</p><p>A web service can be thought of as a self contained, self describing, modular application that can be published, located, and invoked across the web.</p><p>web services 提供的最大好处是交互性： <strong>interoperability</strong>.</p><h2 id="web-service开发方法"><a href="#web-service开发方法" class="headerlink" title="web service开发方法"></a>web service开发方法</h2><p>一个web service包含三种类型的角色—服务消费者 service consumer, 服务提供者 service provider, 和一个可选的服务注册 service registry.</p><p>服务提供者通过网络发布（基于SOAP的服务） WSDL文件，使用者可直接或通过查找服务注册来使用此服务。使用者通常利用web service框架提供的工具根据WSDL文件生成客户端代码来与服务进行交互。</p><p>在RESTful Web Services中没有正式的服务契约（contract ，即WSDL）。服务请求者需要知道消息的格式，如XML或JSON，以及支持的操作。使用者使用URI通过HTTP协议来启用服务。</p><blockquote><p><a href="http://blog.csdn.net/defonds/article/details/49000993" target="_blank" rel="external">REST Vs SOAP，Soap 和 Rest 的区别</a></p><p><em>REST 的最佳场景是当你通过互联网公开一个公共 API 来对数据的 CRUD 操作进行处理的时候。REST 专注于通过一个一致性接口访问命名<strong>资源</strong>。</em><br><em>SOAP提供了自己的协议并专注于公开某些应用逻辑(不是数据)为服务。SOAP 公开的是<strong>操作</strong>。SOAP 专注于访问通过不同的接口实现了某些业务逻辑的命名操作。</em></p></blockquote><h2 id="Web-service-SOAP-通信风格"><a href="#Web-service-SOAP-通信风格" class="headerlink" title="Web service SOAP 通信风格"></a>Web service SOAP 通信风格</h2><p>两种SOAP通信方式：Document和RPC。</p><p>SOAP 通信方式（message styles）在 WSDL 文档中被定义为 SOAP binding. SOAP binding 可以是编码或文本（ encoded use or a literal use）.</p><p>Document style,将XML文档作为载荷（ payloads），这些XML文档遵循定义良好的约定 （well defined contracts）, 通常使用 XML schema 定义来创建. 文本文档（Document literal style）是首选的通讯方式。</p><p>RPC (Remote Procedure Call) style, 表明 SOAP 内容体中包含一个方法的XML表达。传统上RPC与SOAP编码规则结合使用，该组合被称为RPC /编码（RPC/encoded）。</p><h2 id="CXF"><a href="#CXF" class="headerlink" title="CXF"></a>CXF</h2><p>选择CXF的原因：</p><ul><li>支持所有的主流Web Service 标准</li><li>提供简化的SOAP和RESTful服务编程模型</li><li>提供多种其他应用协议选项</li><li>使用简便</li><li>部署灵活</li></ul><h2 id="使用CXF开发WebService"><a href="#使用CXF开发WebService" class="headerlink" title="使用CXF开发WebService"></a>使用CXF开发WebService</h2><p>一般过程：</p><ul><li>新建 Service Endpoint Interface (SEI) 并定义业务方法供服务使用</li><li>创建实现类，标注其为web service.</li><li>创建 beans.xml 并使用 JAX-WS frontend定义此服务类为 Spring bean.</li></ul><h3 id="SEI"><a href="#SEI" class="headerlink" title="SEI"></a>SEI</h3><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">package</span> demo.order;</div><div class="line"><span class="keyword">import</span> javax.jws.WebService;</div><div class="line"><span class="meta">@WebService</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderProcess</span> </span>&#123;</div><div class="line">    <span class="meta">@WebMethod</span></div><div class="line">    <span class="function">String <span class="title">processOrder</span><span class="params">(Order order)</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><code>@WebService</code> 注解表示此接口为 Service Endpoint Interface，是 JAX-WS 提供的注解之一。</p><p><code>@WebMethod</code> 注解是可选的，用于自定义web服务操作。<code>@WebMethod</code> 提供了operationName, action, exclude三个属性设置（最终反映在WSDL文档中）。</p><p>实体类Order可在类上添加<code>@XmlRootElement(name = &quot;Order&quot;)</code>。 其属于Java Architecture for XML Binding (JAXB) 注解。JAXB 注解用于映射XML schema与Java代码。<code>@XmlRootElement</code> 将类Order映射为XML中的根元素，类中的属性默认映射为<code>@XmlElement</code>.</p><h3 id="实现类"><a href="#实现类" class="headerlink" title="实现类"></a>实现类</h3><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">package</span> demo.order;</div><div class="line"><span class="meta">@WebService</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderProcessImpl</span> <span class="keyword">implements</span> <span class="title">OrderProcess</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">processOrder</span><span class="params">(Order order)</span> </span>&#123;</div><div class="line">        String orderID = validate(order);</div><div class="line">        <span class="keyword">return</span> orderID;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">validate</span><span class="params">(Order order)</span> </span>&#123;</div><div class="line">      ...</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="基于Spring-Bean的服务端"><a href="#基于Spring-Bean的服务端" class="headerlink" title="基于Spring Bean的服务端"></a>基于Spring Bean的服务端</h2><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="comment">&lt;!-- beans.xml --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:jaxws</span>=<span class="string">"http://cxf.apache.org/jaxws"</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></div><div class="line">http://www.springframework.org/schema/beans</div><div class="line">http://www.springframework.org/schema/beans/spring-beans.xsd</div><div class="line">http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd"&gt;</div><div class="line">    <span class="comment">&lt;!-- core components of CXF --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">"classpath:META-INF/cxf/cxf.xml"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">"classpath:META-INF/cxf/cxf-extension-soap.xml"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">"classpath:META-INF/cxf/cxf-servlet.xml"</span> /&gt;</span></div><div class="line">    <span class="comment">&lt;!-- publish the web service --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">jaxws:endpoint</span> <span class="attr">id</span>=<span class="string">"orderProcess"</span> <span class="attr">implementor</span>=<span class="string">"demo.order.OrderProcessImpl"</span> <span class="attr">address</span>=<span class="string">"/OrderProcess"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="开发客户端"><a href="#开发客户端" class="headerlink" title="开发客户端"></a>开发客户端</h3><p>一般过程：</p><ul><li>开发 <code>client-beans.xml</code> 来定义客户端的工厂类为使用JAX-WS frontend的Spring bean</li><li>开发客户端Java应用来启用web服务</li></ul><h4 id="client-beans-xml"><a href="#client-beans-xml" class="headerlink" title="client-beans.xml"></a>client-beans.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:jaxws</span>=<span class="string">"http://cxf.apache.org/jaxws"</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></div><div class="line">http://www.springframework.org/schema/beans</div><div class="line">http://www.springframework.org/schema/beans/spring-beans.xsd</div><div class="line">http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd"&gt;</div><div class="line">    </div><div class="line">    <span class="tag">&lt;<span class="name">jaxws:client</span> <span class="attr">id</span>=<span class="string">"orderClient"</span> <span class="attr">serviceClass</span>=<span class="string">"demo.order.OrderProcess"</span> <span class="attr">address</span>=<span class="string">"http://localhost:8080/orderapp/OrderProcess"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></div></pre></td></tr></table></figure><ul><li>serviceClass：指定 web service SEI</li><li>address：指定SEI发布的URL地址（客户端访问地址）</li></ul><h4 id="客户端Java代码"><a href="#客户端Java代码" class="headerlink" title="客户端Java代码"></a>客户端Java代码</h4><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">package</span> demo.order.client;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Client</span><span class="params">()</span> </span>&#123;&#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">            <span class="comment">// START SNIPPET: client</span></div><div class="line">            ClassPathXmlApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="keyword">new</span> String[] &#123; <span class="string">"demo/order/client/client-beans.xml"</span> &#125;);</div><div class="line">      		<span class="comment">//获得 SEI</span></div><div class="line">            OrderProcess client = (OrderProcess) context.getBean(<span class="string">"orderClient"</span>);</div><div class="line">            <span class="comment">// Populate the Order bean</span></div><div class="line">            Order order = <span class="keyword">new</span> Order();</div><div class="line">            <span class="comment">//...  //set order属性</span></div><div class="line">      		<span class="comment">//使用SEI调用web服务</span></div><div class="line">            String orderID = client.processOrder(order);</div><div class="line">            String message = (orderID == <span class="keyword">null</span>) ?<span class="string">"Order not approved"</span> : <span class="string">"Order approved; order ID is "</span> + orderID;</div><div class="line">            System.out.println(message);</div><div class="line">            System.exit(<span class="number">0</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="Web-xml配置"><a href="#Web-xml配置" class="headerlink" title="Web.xml配置"></a>Web.xml配置</h3><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></div><div class="line">  ...</div><div class="line">    <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></div><div class="line">44<span class="tag">&lt;<span class="name">param-value</span>&gt;</span>WEB-INF/beans.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></div><div class="line">4<span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>CXFServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>CXF Servlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span></div><div class="line">            org.apache.cxf.transport.servlet.CXFServlet</div><div class="line">        <span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>CXFServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></div></pre></td></tr></table></figure><h4 id="项目结构说明"><a href="#项目结构说明" class="headerlink" title="项目结构说明"></a>项目结构说明</h4><ul><li><code>beans.xml</code> 和<code>web.xml</code> 位于<code>webapp\WEB-INF</code> 文件夹</li><li><code>client-beans.xml</code>位于<code>demo\order\client</code> 文件夹（client类所在目录）</li></ul><h4 id="项目运行说明"><a href="#项目运行说明" class="headerlink" title="项目运行说明"></a>项目运行说明</h4><p>依赖tomcat。原文依赖ant</p><h2 id="CXF架构"><a href="#CXF架构" class="headerlink" title="CXF架构"></a>CXF架构</h2><p>• Bus<br>• Frontend<br>• Messaging and Interceptors<br>• Service Model<br>• Data bindings<br>• Protocol bindings<br>• Transport</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
       
    
    </summary>
    
      <category term="开发 - WebService" scheme="houzw.github.io.git/categories/%E5%BC%80%E5%8F%91-WebService/"/>
    
    
  </entry>
  
  <entry>
    <title>Vuex 学习</title>
    <link href="houzw.github.io.git/2017/03/31/Vuex-%E5%AD%A6%E4%B9%A0/"/>
    <id>houzw.github.io.git/2017/03/31/Vuex-学习/</id>
    <published>2017-03-31T00:37:16.000Z</published>
    <updated>2017-04-05T15:00:28.115Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="Vuex-Vue的状态管理模式"><a href="#Vuex-Vue的状态管理模式" class="headerlink" title="Vuex : Vue的状态管理模式"></a>Vuex : Vue的状态管理模式</h1><blockquote><p>摘自 <a href="https://vuex.vuejs.org/zh-cn/" target="_blank" rel="external">https://vuex.vuejs.org/zh-cn/</a></p></blockquote><h2 id="State"><a href="#State" class="headerlink" title="State"></a>State</h2><p>Vuex 使用 <strong>单一状态树</strong> :用一个对象包含全部的<strong>应用层级</strong>状态。它作为一个『唯一数据源(<a href="https://en.wikipedia.org/wiki/Single_source_of_truth" target="_blank" rel="external">SSOT</a>)』而存在。这意味着，每个应用将<strong>仅仅包含一个 store 实例</strong>。</p><h3 id="在-Vue-组件中获得-Vuex-状态"><a href="#在-Vue-组件中获得-Vuex-状态" class="headerlink" title="在 Vue 组件中获得 Vuex 状态"></a>在 Vue 组件中获得 Vuex 状态</h3><p>在<a href="http://cn.vuejs.org/guide/computed.html" target="_blank" rel="external">计算属性</a>中返回某个状态:</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">//Counter 组件</span></div><div class="line">computed: &#123;</div><div class="line">    count () &#123;</div><div class="line">      <span class="keyword">return</span> store.state.count  <span class="comment">//依赖全局状态单例 store</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>Vuex 通过 <code>store</code> 选项将状态从<strong>根组件</strong>『注入』到每一个子组件中</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">Vue.use(Vuex); <span class="comment">//必需调用</span></div><div class="line"><span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</div><div class="line">  <span class="attr">el</span>: <span class="string">'#app'</span>,</div><div class="line">  <span class="comment">// 把 store 对象提供给 “store” 选项，这可以把 store 的实例注入所有的子组件</span></div><div class="line">  store,</div><div class="line">  <span class="attr">components</span>: &#123; Counter &#125;,</div><div class="line"> <span class="comment">// ...</span></div></pre></td></tr></table></figure><p>在子组件 Counter 中</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">const</span> Counter = &#123;</div><div class="line">  <span class="comment">//...</span></div><div class="line">  computed: &#123;</div><div class="line">    count () &#123;</div><div class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.$store.state.count <span class="comment">// 子组件能通过 this.$store 访问到</span></div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="mapState-辅助函数"><a href="#mapState-辅助函数" class="headerlink" title="mapState 辅助函数"></a><code>mapState</code> 辅助函数</h3><p>当一个组件需要获取多个状态时候，将这些状态都声明为计算属性会有些重复和冗余。可使用 <code>mapState</code> 辅助函数帮助生成计算属性：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">// 在单独构建的版本中辅助函数为 Vuex.mapState</span></div><div class="line"><span class="keyword">import</span> &#123; mapState &#125; <span class="keyword">from</span> <span class="string">'vuex'</span></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</div><div class="line">  <span class="comment">// ...</span></div><div class="line">computed: mapState(&#123;</div><div class="line">    <span class="attr">count</span>: <span class="function"><span class="params">state</span> =&gt;</span> state.count,</div><div class="line">    <span class="comment">// 传字符串参数 'count' 等同于 `state =&gt; state.count`</span></div><div class="line">    countAlias: <span class="string">'count'</span>,</div><div class="line">    <span class="comment">// 为了能够使用 `this` 获取局部状态，必须使用常规函数</span></div><div class="line">    countPlusLocalState (state) &#123;</div><div class="line">      <span class="keyword">return</span> state.count + <span class="keyword">this</span>.localCount</div><div class="line">    &#125;</div><div class="line">  &#125;)</div><div class="line">  <span class="comment">//...</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><p>当映射的计算属性的名称与 state 的子节点<strong>名称相同</strong>时，我们也可以给 <code>mapState</code> 传一个<strong>字符串数组</strong>。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">computed: mapState([</div><div class="line">  <span class="string">'count'</span> <span class="comment">// 映射 this.count 为 store.state.count</span></div><div class="line">])</div></pre></td></tr></table></figure><h3 id="对象展开运算符"><a href="#对象展开运算符" class="headerlink" title="对象展开运算符"></a>对象展开运算符</h3><p><code>mapState</code> 函数返回的是一个<strong>对象</strong>。我们如何将它与局部计算属性混合使用呢？使用<a href="https://github.com/sebmarkbage/ecmascript-rest-spread" target="_blank" rel="external">对象展开运算符</a>，可以极大地简化写法：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">computed: &#123;</div><div class="line">  localComputed () &#123; <span class="comment">/* ... */</span> &#125;,</div><div class="line">  <span class="comment">// 使用对象展开运算符将此对象混入到外部对象中</span></div><div class="line">  ...mapState(&#123;</div><div class="line">    <span class="comment">// ...</span></div><div class="line">  &#125;)</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="Getters"><a href="#Getters" class="headerlink" title="Getters"></a>Getters</h2><p>Vuex 允许在 store 中定义『getters』（可认为是 <strong>store 的计算属性</strong>），从而可以派生出新的状态（通过filter等等）。</p><p>Getters 接受 state 作为其第一个参数：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> Vuex.Store(&#123;</div><div class="line">  <span class="attr">state</span>: &#123;</div><div class="line">    <span class="attr">todos</span>: [</div><div class="line">      &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">text</span>: <span class="string">'...'</span>, <span class="attr">done</span>: <span class="literal">true</span> &#125;,</div><div class="line">      &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">text</span>: <span class="string">'...'</span>, <span class="attr">done</span>: <span class="literal">false</span> &#125;</div><div class="line">    ]</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">getters</span>: &#123;</div><div class="line">    <span class="attr">doneTodos</span>: <span class="function"><span class="params">state</span> =&gt;</span> &#123;</div><div class="line">      <span class="keyword">return</span> state.todos.filter(<span class="function"><span class="params">todo</span> =&gt;</span> todo.done)</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure><p>Getters 会暴露为 <code>store.getters</code> 对象：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">store.getters.doneTodos <span class="comment">// -&gt; [&#123; id: 1, text: '...', done: true &#125;]</span></div></pre></td></tr></table></figure><p>Getters 也可以接受其他 getters 作为第二个参数.</p><p>可在任何组件中使用它：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">computed: &#123;</div><div class="line">  doneTodos () &#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.$store.getters.doneTodos</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="mapGetters-辅助函数"><a href="#mapGetters-辅助函数" class="headerlink" title="mapGetters 辅助函数"></a><code>mapGetters</code> 辅助函数</h3><p><code>mapGetters</code> 辅助函数仅仅是将 store 中的 getters 映射到局部计算属性：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; mapGetters &#125; <span class="keyword">from</span> <span class="string">'vuex'</span></div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</div><div class="line">  <span class="comment">// ...</span></div><div class="line">  computed: &#123;</div><div class="line">  <span class="comment">// 使用对象展开运算符将 getters 混入 computed 对象中</span></div><div class="line">    ...mapGetters([</div><div class="line">      <span class="string">'doneTodosCount'</span>,</div><div class="line">      <span class="string">'anotherGetter'</span>,</div><div class="line">      <span class="comment">// ...</span></div><div class="line">    ])</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>如果想将一个 getter 属性<strong>另取一个名字</strong>，使用对象形式：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">mapGetters(&#123;</div><div class="line">  <span class="comment">// 映射 this.doneCount 为 store.getters.doneTodosCount</span></div><div class="line">  doneCount: <span class="string">'doneTodosCount'</span></div><div class="line">&#125;)</div></pre></td></tr></table></figure><h1 id="Mutations"><a href="#Mutations" class="headerlink" title="Mutations"></a>Mutations</h1><p>更改 Vuex 的 store 中的状态的<strong>唯一方法</strong>是<strong>提交 mutation</strong>。</p><p>mutations 非常类似于<strong>事件</strong>：每个 mutation 都有一个字符串的 <strong>事件类型 (type)</strong> 和 一个 <strong>回调函数 (handler)</strong>。这个回调函数就是我们<strong>实际进行状态更改的地方</strong>，并且它会接受 <strong>state 作为第一个参数</strong>：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> Vuex.Store(&#123;</div><div class="line">  <span class="attr">state</span>: &#123;</div><div class="line">    <span class="attr">count</span>: <span class="number">1</span></div><div class="line">  &#125;,</div><div class="line">  <span class="attr">mutations</span>: &#123;</div><div class="line">    increment (state) &#123;</div><div class="line">      <span class="comment">// 变更状态</span></div><div class="line">      state.count++</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure><p><strong>不能直接调用一个 mutation handler</strong>。要唤醒一个 mutation handler，需<strong>以 store.commit 方法调用相应的 type </strong>：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">store.commit(<span class="string">'increment'</span>)</div></pre></td></tr></table></figure><h3 id="提交载荷（Payload，额外参数）"><a href="#提交载荷（Payload，额外参数）" class="headerlink" title="提交载荷（Payload，额外参数）"></a>提交载荷（Payload，额外参数）</h3><p>可以向 <code>store.commit</code> 传入额外的参数，即 mutation 的 <strong>载荷（payload）</strong>：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">// ...</span></div><div class="line">mutations: &#123;</div><div class="line">  increment (state, n) &#123;</div><div class="line">    state.count += n</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">store.commit(<span class="string">'increment'</span>, <span class="number">10</span>)</div></pre></td></tr></table></figure><p>在大多数情况下，载荷应该是一个<strong>对象</strong>.</p><h3 id="对象风格的提交方式"><a href="#对象风格的提交方式" class="headerlink" title="对象风格的提交方式"></a>对象风格的提交方式</h3><p>直接使用包含 <code>type</code> 属性的对象：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">store.commit(&#123;</div><div class="line">  <span class="attr">type</span>: <span class="string">'increment'</span>,</div><div class="line">  <span class="attr">amount</span>: <span class="number">10</span></div><div class="line">&#125;)</div></pre></td></tr></table></figure><p>此时，整个对象都作为载荷传给 mutation 函数，因此 handler 保持不变：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">mutations: &#123;</div><div class="line">  increment (state, payload) &#123;</div><div class="line">    state.count += payload.amount</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="Mutations-需遵守-Vue-的响应规则"><a href="#Mutations-需遵守-Vue-的响应规则" class="headerlink" title="Mutations 需遵守 Vue 的响应规则"></a>Mutations 需遵守 Vue 的响应规则</h3><p>Vuex 中的 mutation 也需要与使用 Vue 一样遵守一些注意事项：</p><ol><li><p>最好提前在 store 中初始化好所有所需属性。</p></li><li><p>当需要在对象上添加<strong>新属性</strong>时，你应该</p><ul><li><p>使用 <code>Vue.set(obj, &#39;newProp&#39;, 123)</code>, 或者 -</p></li><li><p>以<strong>新对象替换老对象</strong>。例如，利用 stage-3 的<a href="https://github.com/sebmarkbage/ecmascript-rest-spread" target="_blank" rel="external">对象展开运算符</a>我们可以这样写：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">state.obj = &#123; ...state.obj, <span class="attr">newProp</span>: <span class="number">123</span> &#125;</div></pre></td></tr></table></figure></li></ul></li></ol><h3 id="使用常量替代-Mutation-事件类型"><a href="#使用常量替代-Mutation-事件类型" class="headerlink" title="使用常量替代 Mutation 事件类型"></a>使用常量替代 Mutation 事件类型</h3><p>使用常量替代 mutation 事件类型可以使 linter 之类的工具发挥作用，同时把这些常量放在单独的文件中可让代码合作者对整个 app 包含的 mutation 一目了然：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">// mutation-types.js</span></div><div class="line"><span class="keyword">export</span> <span class="keyword">const</span> SOME_MUTATION = <span class="string">'SOME_MUTATION'</span></div><div class="line"></div><div class="line"><span class="comment">// store.js</span></div><div class="line"><span class="keyword">import</span> Vuex <span class="keyword">from</span> <span class="string">'vuex'</span></div><div class="line"><span class="keyword">import</span> &#123; SOME_MUTATION &#125; <span class="keyword">from</span> <span class="string">'./mutation-types'</span></div><div class="line"></div><div class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> Vuex.Store(&#123;</div><div class="line">  <span class="attr">state</span>: &#123; ... &#125;,</div><div class="line">  <span class="attr">mutations</span>: &#123;</div><div class="line">    <span class="comment">// 使用 ES6 风格的计算属性命名功能来使用一个常量作为函数名</span></div><div class="line">    [SOME_MUTATION] (state) &#123;</div><div class="line">      <span class="comment">// mutate state</span></div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure><h3 id="mutation-必须是同步函数"><a href="#mutation-必须是同步函数" class="headerlink" title="mutation 必须是同步函数"></a>mutation 必须是同步函数</h3><h3 id="在组件中提交-Mutations"><a href="#在组件中提交-Mutations" class="headerlink" title="在组件中提交 Mutations"></a>在组件中提交 Mutations</h3><p>可以在组件中使用 <code>this.$store.commit(&#39;xxx&#39;)</code> 提交 mutation，或者使用 <strong><code>mapMutations</code></strong> 辅助函数将组件中的 methods 映射为 <code>store.commit</code> 调用（需要在根节点注入 <code>store</code>）。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; mapMutations &#125; <span class="keyword">from</span> <span class="string">'vuex'</span></div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</div><div class="line">  <span class="comment">// ...</span></div><div class="line">  methods: &#123;</div><div class="line">    <span class="comment">//字符串数组形式</span></div><div class="line">    ...mapMutations([</div><div class="line">      <span class="string">'increment'</span> <span class="comment">// 映射 this.increment() 为 this.$store.commit('increment')</span></div><div class="line">    ]),</div><div class="line">    <span class="comment">//对象形式</span></div><div class="line">    ...mapMutations(&#123;</div><div class="line">      <span class="attr">add</span>: <span class="string">'increment'</span> <span class="comment">// 映射 this.add() 为 this.$store.commit('increment')</span></div><div class="line">    &#125;)</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h1 id="Actions"><a href="#Actions" class="headerlink" title="Actions"></a>Actions</h1><p>Action 类似于 mutation，不同在于：</p><ul><li>Action <strong>提交的是 mutation</strong>，而不是直接变更状态。</li><li>Action <strong>可包含任意异步操作</strong>。</li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> Vuex.Store(&#123;</div><div class="line">  <span class="attr">state</span>: &#123;</div><div class="line">    <span class="attr">count</span>: <span class="number">0</span></div><div class="line">  &#125;,</div><div class="line">  <span class="attr">mutations</span>: &#123;</div><div class="line">    increment (state) &#123;</div><div class="line">      state.count++</div><div class="line">    &#125;</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">actions</span>: &#123;</div><div class="line">    increment (context) &#123;</div><div class="line">      context.commit(<span class="string">'increment'</span>) <span class="comment">//提交 mutation increment</span></div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure><p>Action 函数接受一个<strong>与 store 实例具有相同方法和属性</strong>的 context 对象（ 不是 store 实例本身）。</p><p>可以调用 <code>context.commit</code> 提交一个 mutation，或者通过 <code>context.state</code> 和 <code>context.getters</code> 来获取 state 和 getters。</p><p>用 ES2015 的 <a href="https://github.com/lukehoban/es6features#destructuring" target="_blank" rel="external">参数解构</a> 来简化代码：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">actions: &#123;</div><div class="line">  increment (&#123; commit &#125;) &#123;</div><div class="line">    commit(<span class="string">'increment'</span>)</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="分发-Action"><a href="#分发-Action" class="headerlink" title="分发 Action"></a>分发 Action</h3><p>Action 通过 <code>store.dispatch</code> 方法触发：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">store.dispatch(<span class="string">'increment'</span>)</div></pre></td></tr></table></figure><p><strong>mutation 必须同步执行</strong>, 而在 action 内部可以执行<strong>异步</strong>操作。</p><p>Actions 支持同样的<strong>载荷</strong>方式和<strong>对象</strong>方式进行分发。</p><h3 id="在组件中分发Action"><a href="#在组件中分发Action" class="headerlink" title="在组件中分发Action"></a>在组件中分发Action</h3><p>可以在 组件中使用 <code>this.$store.dispatch(&#39;xxx&#39;)</code> 分发 action，或者使用 <code>mapActions</code> 辅助函数<strong>将组件的 methods 映射为 <code>store.dispatch</code> 调用</strong>（需要先在根节点注入 <code>store</code>）：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; mapActions &#125; <span class="keyword">from</span> <span class="string">'vuex'</span></div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</div><div class="line">  <span class="comment">// ...</span></div><div class="line">  methods: &#123;</div><div class="line">    ...mapActions([</div><div class="line">      <span class="string">'increment'</span> <span class="comment">// 映射 this.increment() 为 this.$store.dispatch('increment')</span></div><div class="line">    ]),</div><div class="line">    ...mapActions(&#123;</div><div class="line">      <span class="attr">add</span>: <span class="string">'increment'</span> <span class="comment">// 映射 this.add() 为 this.$store.dispatch('increment')</span></div><div class="line">    &#125;)</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h1 id="Modules"><a href="#Modules" class="headerlink" title="Modules"></a>Modules</h1><p>当应用变得很大时，store 对象会变得臃肿不堪。为此，Vuex 允许将 store 分割到<strong>模块（module）</strong>。每个模块拥有自己的 <strong>state、mutation、action、getters</strong>、甚至是<strong>嵌套子模块</strong>——从上至下进行类似的分割：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">const</span> moduleA = &#123;</div><div class="line">  <span class="attr">state</span>: &#123; ... &#125;,  <span class="comment">//组件级别的状态</span></div><div class="line">  mutations: &#123; ... &#125;,</div><div class="line">  <span class="attr">actions</span>: &#123; ... &#125;,</div><div class="line">  <span class="attr">getters</span>: &#123; ... &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">const</span> moduleB = &#123;</div><div class="line">  <span class="attr">state</span>: &#123; ... &#125;,</div><div class="line">  <span class="attr">mutations</span>: &#123; ... &#125;,</div><div class="line">  <span class="attr">actions</span>: &#123; ... &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> Vuex.Store(&#123;</div><div class="line">  <span class="attr">modules</span>: &#123;</div><div class="line">    <span class="attr">a</span>: moduleA,</div><div class="line">    <span class="attr">b</span>: moduleB</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">state</span>: &#123; <span class="comment">/*根级别的状态*/</span> &#125;</div><div class="line">&#125;)</div><div class="line"></div><div class="line">store.state.a <span class="comment">// -&gt; moduleA 的状态</span></div><div class="line">store.state.b <span class="comment">// -&gt; moduleB 的状态</span></div></pre></td></tr></table></figure><h3 id="模块的局部状态"><a href="#模块的局部状态" class="headerlink" title="模块的局部状态"></a>模块的局部状态</h3><p>对于模块内部的 mutation 和 getter，接收的第一个参数是<strong>模块的局部状态</strong>。对于getter，根节点状态会作为<strong>第三个参数</strong>。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">const</span> moduleA = &#123;</div><div class="line">  <span class="comment">// ...</span></div><div class="line">  getters: &#123;</div><div class="line">    sumWithRootCount (state, getters, rootState) &#123;</div><div class="line">      <span class="keyword">return</span> state.count + rootState.count</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>对于模块内部的 action，<code>context.state</code> 是局部状态，根节点的状态是 <code>context.rootState</code>.</p><h3 id="命名空间"><a href="#命名空间" class="headerlink" title="命名空间"></a>命名空间</h3><p>模块内部的 action、mutation和 getter 现在仍然注册在<strong>全局命名空间</strong>——这样保证了多个模块能够响应同一 mutation 或 action。即，在 Vuex 模块化中，state 是唯一会根据组合时模块的别名来添加层级的，后面的 getters、mutations 以及 actions 都是直接合并在 store 下。</p><p>可以通过添加前缀或后缀的方式隔离各模块，以避免名称冲突。</p><p><code>export const DONE_COUNT = &#39;todos/DONE_COUNT&#39;</code></p><h3 id="模块动态注册"><a href="#模块动态注册" class="headerlink" title="模块动态注册"></a>模块动态注册</h3><p>在 store 创建<strong>之后</strong>，你可以使用 <code>store.registerModule</code> 方法注册模块：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">store.registerModule(<span class="string">'myModule'</span>, &#123;</div><div class="line">  <span class="comment">// ...</span></div><div class="line">&#125;)</div></pre></td></tr></table></figure><p>模块的状态将是 <code>store.state.myModule</code>。</p><p>也可以使用 <code>store.unregisterModule(moduleName)</code> 动态地卸载模块。</p><blockquote><p>不能使用此方法卸载静态模块（在创建 store 时声明的模块）。</p></blockquote><h2 id="表单处理"><a href="#表单处理" class="headerlink" title="表单处理"></a>表单处理</h2><p>当在严格模式中使用 Vuex 时，在属于 Vuex 的 state 上使用 <code>v-model</code> 会比较棘手：<code>&lt;input v-model=&quot;obj.message&quot;&gt;</code></p><p>假设这里的 <code>obj</code> 是在计算属性中返回的一个属于 Vuex store 的对象，在用户输入时，<code>v-model</code> 会试图直接修改<code>obj.message</code>。在严格模式中，由于这个修改不是在 mutation 函数中执行的, 会抛出一个错误。</p><p>用『Vuex 的思维』去解决这个问题的方法是：给 <code>&lt;input&gt;</code> 中绑定 value，然后侦听 <code>input</code> 或者 <code>change</code> 事件，在事件回调中调用 action:</p><p><code>&lt;input :value=&quot;message&quot; @input=&quot;updateMessage&quot;&gt;</code></p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">// ...</span></div><div class="line">computed: &#123;</div><div class="line">  ...mapState(&#123;</div><div class="line">    <span class="attr">message</span>: <span class="function"><span class="params">state</span> =&gt;</span> state.obj.message</div><div class="line">  &#125;)</div><div class="line">&#125;,</div><div class="line"><span class="attr">methods</span>: &#123;</div><div class="line">  updateMessage (e) &#123;</div><div class="line">    <span class="keyword">this</span>.$store.commit(<span class="string">'updateMessage'</span>, e.target.value)</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// ...</span></div><div class="line">mutations: &#123;</div><div class="line">  updateMessage (state, message) &#123;</div><div class="line">    state.obj.message = message</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="双向绑定的计算属性"><a href="#双向绑定的计算属性" class="headerlink" title="双向绑定的计算属性"></a>双向绑定的计算属性</h3><p>另一个方法是使用带有 setter 的双向绑定计算属性：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">&lt;input v-model=<span class="string">"message"</span>&gt;</div><div class="line"><span class="comment">// ...</span></div><div class="line">computed: &#123;</div><div class="line">  <span class="attr">message</span>: &#123;</div><div class="line">    get () &#123;</div><div class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.$store.state.obj.message</div><div class="line">    &#125;,</div><div class="line">    set (value) &#123;</div><div class="line">      <span class="keyword">this</span>.$store.commit(<span class="string">'updateMessage'</span>, value)</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><hr><p>定义状态state，为了获得派生状态，定义getters；定义改变状态的方法mutations，然后定义actions来调用mutation，通过dispatch触发actions。</p><p><code>mapGetters</code> 将 store 中的 getters 映射到局部计算属性，<code>mapMutations</code> 将组件中的 methods 映射为 <code>store.commit</code> 调用，<code>mapActions</code> 将组件的 methods 映射为 <code>store.dispatch</code> 调用</p><hr><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">|——— store</div><div class="line">4├── index.js          # 组装模块并导出 store 的地方</div><div class="line">4├── actions.js        # 根级别的 action</div><div class="line">4├── mutations.js      # 根级别的 mutation</div><div class="line">4├── mutation-types.js # 使用常量替代 mutation 事件类型</div><div class="line">4└── modules</div><div class="line">        ├── m1.js         # 模块,内部包含模块的state、action、getter、mutation</div><div class="line">        └── m2.js</div></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      Vuex学习记录 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>TauDEM 计算 TWI</title>
    <link href="houzw.github.io.git/2017/03/30/TauDEM-%E8%AE%A1%E7%AE%97TWI/"/>
    <id>houzw.github.io.git/2017/03/30/TauDEM-计算TWI/</id>
    <published>2017-03-30T02:34:58.000Z</published>
    <updated>2017-05-03T06:51:44.300Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h2 id="TauDEM-计算-Topographic-Wetness-Index"><a href="#TauDEM-计算-Topographic-Wetness-Index" class="headerlink" title="TauDEM 计算 Topographic Wetness Index"></a>TauDEM 计算 Topographic Wetness Index</h2><p>根据 TauDEM 的 <a href="http://hydrology.usu.edu/taudem/taudem5/help53/TopographicWetnessIndex.html" target="_blank" rel="external">TWI方法</a>，需要两个数据：slp 坡度，sca 单位汇水面积/Specific Catchment Area. 而坡度计算又需要先填洼；</p><h3 id="填洼-PitRemove"><a href="#填洼-PitRemove" class="headerlink" title="填洼 PitRemove"></a>填洼 PitRemove</h3><p><code>mpiexec -n &lt;number of processes&gt; PitRemove -z &lt;demfile&gt; -fel &lt;felfile&gt; [ -4way ][ -depmask depmaskfile]</code></p><ul><li>demfile: <strong>Input</strong> elevation grid 输入高程格网</li><li>depmaskfile: depression mask file(Optional input) 可选的洼地掩膜</li><li>felfile: <strong>Output</strong> elevation grid with pits filled 填洼之后的高程格网文件</li><li>-4way: 4 directions, ie. N, S, E or W neighbors</li></ul><h3 id="计算坡度（-流向，D8FlowDir-）"><a href="#计算坡度（-流向，D8FlowDir-）" class="headerlink" title="计算坡度（+流向，D8FlowDir ）"></a>计算坡度（+流向，D8FlowDir ）</h3><p><code>mpiexec -n &lt;number of processes&gt; D8FlowDir -fel &lt;felfile&gt; -p &lt;pfile&gt; -sd8 &lt;sd8file&gt;</code></p><ul><li>felfile: <strong>Pit filled</strong> elevation input data 已经填洼的高程输入文件</li></ul><ul><li>pfile: D8 flow directions output 输出的D8流向数据</li><li>sd8file: D8 <strong>slopes</strong> output 生成的D8 坡度数据</li></ul><h3 id="或DinfFlowDir-流向，taudem中TWI基于此流向算法"><a href="#或DinfFlowDir-流向，taudem中TWI基于此流向算法" class="headerlink" title="或DinfFlowDir (+流向，taudem中TWI基于此流向算法)"></a>或DinfFlowDir (+流向，taudem中TWI基于此流向算法)</h3><p><code>mpiexec -n &lt;number of processes&gt; DinfFlowDir -fel &lt;felfile&gt; -ang &lt;angfile&gt; -slp &lt;slpfile&gt;</code></p><ul><li>felfile: <em>Pit filled</em> elevation <strong>input</strong> data 已经填洼的高程输入文件</li><li>angfile: Dinf flow <strong><em>directions</em></strong> <strong>output</strong> 输出的Dinf算法流向数据</li><li>slpfile: Dinf <strong><em>slopes</em></strong> <strong>output</strong> 基于Dinf算法的坡度数据</li></ul><h3 id="AreaDinf-计算SCA（Dinf算法）"><a href="#AreaDinf-计算SCA（Dinf算法）" class="headerlink" title="AreaDinf 计算SCA（Dinf算法）"></a>AreaDinf 计算SCA（Dinf算法）</h3><p><code>mpiexec -n &lt;number of processes&gt; AreaDinf -ang &lt;angfile&gt; -sca &lt;scafile&gt; [ -o &lt;outletfile&gt;][ -wg ] [ -nc][ -lyrname ] [ -lyrno &lt;layer number&gt;]</code></p><ul><li><p>angfile: <strong>Input</strong> Dinfflow <strong>directions</strong> grid 输入的流向格网</p></li><li><p>scafile: <strong>Output</strong> Dinf contributing area grid 输出的集水面积格网</p></li><li><p>outletfile: <strong>input</strong> outlets file (OGR readable dataset)(optional) 可选|流域出口输入文件</p></li><li><p>wgfile: <strong>Input</strong> weight grid (optional) 可选|权重格网</p></li><li><p>nc: Flag for edge contamination(optional)可选|</p></li><li><p>layer name: OGR layer name if outlets are not the first layer in outletfile (optional) 可选|</p></li><li><p>layer number: OGR layer number if outlets are not the first layer in outletfile (optional) 可选|</p><p>Layer name and layer number should not both be specified.</p></li></ul><h3 id="计算TWI"><a href="#计算TWI" class="headerlink" title="计算TWI"></a>计算TWI</h3><p><code>mpiexec -n &lt;number of processes&gt; TWI -slp &lt; slpfile&gt; -sca &lt;scafile &gt; -twi &lt;twifile &gt;</code></p><ul><li>slpfile: <strong>input</strong> <strong>slope</strong> file 输入的坡度数据文件</li><li><p>scafile: <strong>input</strong> specific catchment area file 输入的单位汇水面积文件</p><blockquote><p>A grid of <strong>specific catchment area</strong> which is the <strong>contributing area per unit contour length</strong>. This should have units of length (area per contour width). It may be the output of the multiple flow direction D-Infinity contributing area function in which case the function by default (without an input weight grid) scales the contributing area in number of cells by the cell size to produce specific catchment area.</p><p>If D8 or some other contributing area evaluated using the number of cells is used here it should first be scaled by cell size to give specific catchment area in length units.</p></blockquote></li><li><p>twifile: <strong>output</strong> topographic wetness index file</p></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
       
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Ibatis/Mybatis模糊查询</title>
    <link href="houzw.github.io.git/2017/03/30/Mybatis%E6%A8%A1%E7%B3%8A%E6%9F%A5%E8%AF%A2/"/>
    <id>houzw.github.io.git/2017/03/30/Mybatis模糊查询/</id>
    <published>2017-03-30T02:34:58.000Z</published>
    <updated>2017-11-24T09:38:18.408Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h2 id="Ibatis-Mybatis模糊查询"><a href="#Ibatis-Mybatis模糊查询" class="headerlink" title="Ibatis/Mybatis模糊查询"></a>Ibatis/Mybatis模糊查询</h2><h3 id="Ibatis中"><a href="#Ibatis中" class="headerlink" title="Ibatis中"></a>Ibatis中</h3><ol><li>使用<code>$</code>代替<code>#</code>。此种方法就是去掉了类型检查，使用字符串连接，不过可能会<strong>有sql注入风险</strong>。</li></ol><p>Sql代码 <code>select * from table1 where name like &#39;%$name$%&#39;</code></p><ol><li><p>使用连接符。不过不同的数据库中方式不同。</p><figure class="highlight sql"><table><tr><td class="code"><pre><div class="line">mysql：  <span class="keyword">select</span>  *  <span class="keyword">from</span> table1 <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="keyword">concat</span>(<span class="string">'%'</span>, #<span class="keyword">name</span>#, <span class="string">'%'</span>) </div><div class="line"><span class="keyword">oracle</span>:  <span class="keyword">select</span>  *  <span class="keyword">from</span> table1 <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="string">'%'</span> || #<span class="keyword">name</span># || <span class="string">'%'</span>  </div><div class="line"><span class="keyword">sql</span> <span class="keyword">server</span>:  <span class="keyword">select</span>  *  <span class="keyword">from</span> table1 <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="string">'%'</span> + #<span class="keyword">name</span># + <span class="string">'%'</span></div></pre></td></tr></table></figure></li></ol><p>注意：在实际开发中，往往我们需要将模糊查询的空格去掉。为了防止将去除空格放到业务层去，因此建议如下写（oracle 中，其他数据库雷同）：</p><p>Sql代码 <code>select * from table1 where name like &#39;%&#39; || Trim(#name#) || &#39;%&#39;</code></p><hr><h3 id="MyBatis中"><a href="#MyBatis中" class="headerlink" title="MyBatis中"></a><strong>MyBatis中</strong></h3><figure class="highlight"><table><tr><td class="code"><pre><div class="line">like "%"#&#123;name&#125;"%"   &lt;!--推荐使用--&gt; （psql中有问题）</div><div class="line">like '%'||#&#123;name&#125;||'%'</div><div class="line">like '%$&#123;name&#125;%'</div><div class="line">like CONCAT('%',#&#123;name&#125;,'%')  </div><div class="line">sqlserver: like '%'+#&#123;name&#125;+'%'</div></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      Ibatis/Mybatis开发中XML中的模糊查询SQL语句写法
    
    </summary>
    
    
  </entry>
  
</feed>
