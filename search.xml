<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[MapServer学习之 WMS]]></title>
      <url>houzw.github.io.git/2018/06/11/MapServer%E5%AD%A6%E4%B9%A0%E4%B9%8B-WMS/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="使用-MapServer-发布和处理-WMS"><a href="#使用-MapServer-发布和处理-WMS" class="headerlink" title="使用 MapServer 发布和处理 WMS"></a>使用 MapServer 发布和处理 WMS</h1><p>MapServer中，由 <code>mapserv</code> CGI 程序处理WMS请求，同时需要在map文件中设置恰当的元数据。</p><p>[TOC]</p><h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><p>检查是否支持WMS服务：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">mapserv -v # 命令</div><div class="line"># 查看输出内容是否包含  “SUPPORTS=WMS_SERVER”.</div></pre></td></tr></table></figure><h2 id="WMS的Map文件"><a href="#WMS的Map文件" class="headerlink" title="WMS的Map文件"></a>WMS的Map文件</h2><blockquote><p>更多的配置参考官网文档 <a href="http://mapserver.org/ogc/wms_server.html" target="_blank" rel="external">http://mapserver.org/ogc/wms_server.html</a></p></blockquote><p>用于WMS的Map文件同普通的map文件一样，但是有一些内容是必须的（或强烈建议设置）：</p><ul><li><p><strong>MAP</strong> 层</p><ul><li>NAME</li><li>PROJECTION</li><li><strong>WEB</strong> 对象中的 <strong>METADATA</strong><ul><li>wms_title</li><li>wms_onlineresource</li><li>wms_srs (至少PROJECTION 对象需要使用 “init=epsg:…”进行设置)</li><li>wms_enable_request</li></ul></li></ul></li><li><p>每个<strong>LAYER</strong>层</p><ul><li>NAME</li><li>PROJECTION</li><li>METADATA<ul><li>wms_title</li><li>wms_srs (可选，因为可以继承自map对象的SRS信息)</li></ul></li><li>STATUS<ul><li>STATUS DEFAULT 将被发送给客户端</li><li>STATUS ON / OFF 可被客户端请求</li></ul></li><li>TEMPLATE (GetFeatureInfo 请求时需要，查看 <a href="http://mapserver.org/mapfile/template.html#template" target="_blank" rel="external">Templating</a> )</li></ul></li></ul><p>###详细说明</p><ul><li><p><strong>Map Name 和 wms_title</strong></p><p>每一个图层的 WMS Capabilities 都需要一个 Name 和 Title 标签. Map 的 NAME 和 wms_title 元数据将被用作 GetCapabilities XML 输出的根图层（root layer）的 name 和 title. WMS 中的根图层与整个map文件上下文对应.</p></li><li><p><strong>Map PROJECTION 和 wms_srs :</strong></p><p>WMS 服务器需要使用EPSG投影编码来说明其提供的数据的投影. 最新版本的 PROJ4 库自带了一个 EPSG 初始化编码表，允许用户采用如下方式定义投影：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><div class="line">PROJECTION</div><div class="line">   <span class="string">"init=epsg:4269"</span> <span class="comment"># epsg 需要为小写字母</span></div><div class="line">END</div></pre></td></tr></table></figure><p>很多时候，若数据的投影能够使用EPSG编码表示，采用上述方式设置就已足够，不再需要 wms_srs。<strong>但是</strong>，当数据的投影没有完全对应的EPSG编码时，就需要</p><ul><li>在PROJECTION部分使用PROJ4的方式定义真正的投影信息</li><li>在wms_srs中定义可以使用的EPSG编码</li></ul><figure class="highlight yaml"><table><tr><td class="code"><pre><div class="line">MAP    </div><div class="line">    NAME <span class="string">"DEMO"</span></div><div class="line">    ...</div><div class="line">    WEB</div><div class="line">      ...</div><div class="line">      METADATA</div><div class="line">        <span class="string">"wms_title"</span>           <span class="string">"WMS Demo Server"</span></div><div class="line">        <span class="string">"wms_onlineresource"</span>  <span class="string">"http://my.host.com/cgi-bin/mapserv?map=wms.map&amp;"</span></div><div class="line">        <span class="string">"wms_srs"</span>             <span class="string">"EPSG:4269 EPSG:4326"</span></div><div class="line">      END</div><div class="line">    END</div><div class="line">    PROJECTION</div><div class="line">      <span class="string">"init=epsg:42304"</span>  <span class="comment"># 数据真正的投影</span></div><div class="line">    END</div><div class="line">4...</div><div class="line">END</div></pre></td></tr></table></figure></li><li><p><strong>wms_onlineresource:</strong></p><p>wms_onlineresource 元数据在map的<strong>WEB</strong>对象中设置，指定用于访问你的服务器的URL . 在GetCapabilities 输出中这是必须的. 若没有设置 wms_onlineresource ，那么 MapServer 互尝试使用脚本的名称和主机名(<em>hostname</em>) 提供一个默认的地址。但强烈建议设置 wms_onlineresource 信息.</p><p>基本上, <strong>wms_onlineresource</strong> 是一个完整的 HTTP URL，包括<code>http://</code>前缀, 主机名（hostname）, 脚本名, “map=” 参数，并以<code>?</code> 或 <code>&amp;</code>结束</p><p>一个有效的 online resource URL:</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">http://my.host.com/cgi-bin/mapserv?map=mywms.map&amp;</div></pre></td></tr></table></figure><p>上述URL看上去“很丑”。通过在服务器上建立一个包装脚本（ wrapper script ），可以实现隐藏 “map=” 参数的目的 ，最后的URL看起来是这样的:</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">http://my.host.com/cgi-bin/mywms?</div></pre></td></tr></table></figure><p>详细的内容后面介绍。</p></li></ul><ul><li><p><strong>wms_enable_request:</strong></p><p>指定启用哪一个请求. 若没有指定，这没有请求被启用!</p><ul><li><p><strong>Layer Name 和 wms_title :</strong></p><p>每个单独的图层都需要它自己的唯一 name 和 title. 图层的名称（name）同时被用于 GetMap 和GetFeatureInfo 请求中表示需要添加到地图输出和请求中的图层. 图层名称必须以字母开头 (不应以数字开头并不能包含空格).</p></li><li><p><strong>Layer PROJECTION 和 wms_srs :</strong></p><p>默认情况下，图层会继承其父图层的SRS (map的 PROJECTION ). 因此，虽然强烈建议，但是并不是必须要为每个图层设置 PROJECTION 和 wms_srs.</p><p>图层的PROJECTION 和 wms_srs 设置方式同MAP中的一样.</p><p>对于矢量图层，若提供了<code>init=epsg:xxxx</code> 形式的 PROJECTION ，则 MapServer 会用其来生成WMS capabilities文档中的<code>BoundingBox</code>标签. BoundingBox 是 WMS 1.3.0 规范中 capabilities 文档中必须的元素（因此，最好在每个图层提供<code>init=epsg:xxxx</code> 形式的 PROJECTION）.</p></li><li><p><strong>配置 GetFeatureInfo 请求:</strong></p><p><code>REQUEST=GetFeatureInfo&amp;INFO_FORMAT=text/plain</code> 或 <code>text/html</code> 或 <code>gml</code></p><p>如 <code>http://demo.mapserver.org/cgi-bin/wms?SERVICE=WMS&amp;VERSION=1.1.1&amp;REQUEST=GetFeatureInfo&amp;BBOX=-11.332970,24.121208,47.584718,57.965035&amp;SRS=EPSG:4326&amp;WIDTH=1001&amp;HEIGHT=575&amp;LAYERS=cities&amp;STYLES=&amp;FORMAT=image/png&amp;TRANSPARENT=true&amp;QUERY_LAYERS=cities&amp;INFO_FORMAT=text/plain&amp;X=229&amp;Y=280</code></p><p><strong>必须</strong>设置图层的 <strong>TEMPLATE</strong> 参数才能使图层能够处理 GetFeatureInfo 的查询请求（参考 <a href="http://mapserver.org/mapfile/template.html" target="_blank" rel="external">模板 Templating</a>） . 对于 “text/html” 类型的请求，也需要设置图层的 HEADER 和 FOOTER 参数.</p><figure class="highlight yaml"><table><tr><td class="code"><pre><div class="line">LAYER</div><div class="line">    NAME <span class="string">"test_layer"</span></div><div class="line">    TYPE POLYGON</div><div class="line">    METADATA</div><div class="line">        <span class="string">"wms_title"</span> <span class="string">"test_layer"</span></div><div class="line">        <span class="string">"wms_srs"</span> <span class="string">"EPSG:3857"</span></div><div class="line">    END</div><div class="line">    CONNECTIONTYPE postgis</div><div class="line">    CONNECTION <span class="string">"host=xx.xx.xx.xx port=xxxx dbname='xxxx' user=xxxx password=xxxx"</span></div><div class="line">    DATA <span class="string">"geom from xxx using unique gid using srid=3857"</span></div><div class="line">    TEMPLATE <span class="string">"template.html"</span> <span class="comment"># for GetFeatureInfo </span></div><div class="line">    CLASS</div><div class="line">        NAME <span class="string">"polygon_style"</span></div><div class="line">        STYLE</div><div class="line">            COLOR <span class="string">"#5eff4d"</span></div><div class="line">            OUTLINECOLOR <span class="string">"#ff4a2e"</span></div><div class="line">            WIDTH <span class="number">1</span></div><div class="line">        END</div><div class="line">    END</div><div class="line">END</div></pre></td></tr></table></figure></li></ul></li></ul><h2 id="修改Online-Resource-的-URL"><a href="#修改Online-Resource-的-URL" class="headerlink" title="修改Online Resource 的 URL"></a><a href="http://mapserver.org/ogc/wms_server.html#table-of-contents" target="_blank" rel="external">修改Online Resource 的 URL</a></h2><p><a href="http://osgeo-org.1560.x6.nabble.com/Rewrite-rule-problem-td5339356.html" target="_blank" rel="external">http://osgeo-org.1560.x6.nabble.com/Rewrite-rule-problem-td5339356.html</a></p><h3 id="使用-Apache-ReWrite-规则（Apache-mod-rewrite）"><a href="#使用-Apache-ReWrite-规则（Apache-mod-rewrite）" class="headerlink" title="使用 Apache ReWrite 规则（Apache mod_rewrite）"></a>使用 Apache ReWrite 规则（Apache mod_rewrite）</h3><blockquote><p>未成功，not found</p></blockquote><p><code>mod_rewrite</code> 提供了基于<a href="http://httpd.apache.org/docs/current/rewrite/intro.html#regex" target="_blank" rel="external">正则表达式</a>规则动态修改传入的请求的 URL 的方法。 这允许以自己喜欢的任意方法映射任意 URL 到你的内部 URL 结构。 (<a href="http://httpd.apache.org/docs/current/rewrite/" target="_blank" rel="external">http://httpd.apache.org/docs/current/rewrite/</a> )</p><p>可以使用Apache 的 mod_rewrite 规则来避免指定 map文件地址，或者其他的任何参数。包括三个步骤：</p><ul><li>指定加载的 mod_rewrite 模块</li><li>为选定的目录启用 mod_rewrite 模块</li><li>编写用于重写的<code>.htaccess</code>文件</li></ul><p>在<code>httpd.conf</code>文件中，去掉 <code>#LoadModule rewrite_module modules/mod_rewrite.so</code> 中的<code>#</code></p><p>为了启用这一模块，需要使用 AllowOverride 指令。可以对每个服务器或目录进行设置。若只有一个server，则 在<code>https.conf</code>文件中添加行：<code>AllowOverride All</code>。针对每个目录的设置是最简单的方式。在<code>&lt;virtualHost&gt;</code>部分添加内容：</p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Directory</span> <span class="attr">myhtdocsdir</span>&gt;</span></div><div class="line">  AllowOverride All</div><div class="line"><span class="tag">&lt;/<span class="name">Directory</span>&gt;</span></div></pre></td></tr></table></figure><p>myhtdocsdir 是实际的虚拟服务器中被定义为文档根路径的目录 （documentroot for the actual virtual server），即需要支持url重写的目录（如网站的目录）</p><p>设置好之后，需要<strong>重启Apache服务</strong></p><p>（任何对<code>httpd.conf</code>文件的修改都需要重启服务才能生效。<code>apache-restart.bat</code>）。</p><p>在myhtdocsdir路径下新建 <code>.htaccess</code>文件，写入以下内容</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">RewriteEngine on</div><div class="line">RewriteRule wmsmap?(.*)  /cgi-bin/mapserv?map=/home/www/mapserverstuff/mymapfile.map&amp;$1</div></pre></td></tr></table></figure><p>这个规则的意思是: 给定一个以wmsmap为起始的网页，获取其查询参数，发起一个新的以 <code>/cgi-bin/mapserv?map=(…)?</code>开头的页面查询，并添加原始页面查询中的所有查询参数.</p><p>即，用<code>wmsmap</code>来指代<code>/cgi-bin/mapserv?map=/home/www/mapserverstuff/mymapfile.map&amp;</code>，而不改变其查询参数，实现URL的重写。</p><p>如, URL <code>wmsmap?mode=map</code> 将被重写为<code>/cgi-bin/mapserv?map=/home/www/mapserverstuff/mymapfile.map&amp;mode=map</code></p><p>若 URL这是给出了<code>wmsmap</code>但没有带参数，将会抛出<code>page not found</code>错误，因为不匹配上述的<code>wmsmap?</code>的规则表达式.</p><h3 id="使用Apache-环境变量-MS-MAPFILE"><a href="#使用Apache-环境变量-MS-MAPFILE" class="headerlink" title="使用Apache 环境变量- MS_MAPFILE"></a>使用Apache 环境变量- MS_MAPFILE</h3><p>在<code>httpd.conf</code>文件中（约400行），通过<strong>MS_MAPFILE </strong>指定一个默认的 mapfile :</p><figure class="highlight html"><table><tr><td class="code"><pre><div class="line">Alias /wms /usr/lib/cgi-bin/mapserver # "d:/ms4w/Apache/cgi-bin/mapserv.exe"</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">Location</span> /<span class="attr">wms</span>&gt;</span></div><div class="line">   SetHandler cgi-script</div><div class="line">   Options ExecCGI</div><div class="line">   SetEnv MS_MAPFILE /path/to/mymapfile.map # "d:/ms4w/apps/cgi-viewer/map/wmsdemo1.map"</div><div class="line"><span class="tag">&lt;/<span class="name">Location</span>&gt;</span></div><div class="line"></div><div class="line"># http://localhost/wms?SERVICE=WMS&amp;VERSION=1.3.0&amp;REQUEST=GetCapabilities</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">Location</span> /<span class="attr">wms</span>/<span class="attr">demo1</span>&gt;</span></div><div class="line">   SetHandler cgi-script</div><div class="line">   Options ExecCGI</div><div class="line">   SetEnv MS_MAPFILE /path/to/mymapfile.map # "d:/ms4w/apps/cgi-viewer/map/wmsdemo1.map"</div><div class="line"><span class="tag">&lt;/<span class="name">Location</span>&gt;</span></div><div class="line"></div><div class="line"># http://localhost/wms/demo1?SERVICE=WMS&amp;VERSION=1.3.0&amp;REQUEST=GetCapabilities</div></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><h3 id="GetCapabilities"><a href="#GetCapabilities" class="headerlink" title="GetCapabilities"></a>GetCapabilities</h3><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">http://demo.mapserver.org/cgi-bin/wms?SERVICE=WMS&amp;VERSION=1.1.1&amp;REQUEST=GetCapabilities</div></pre></td></tr></table></figure><p>在 <strong>wms_onlineresource</strong> 的URL后面加上请求参数 （不需要指定图层） <code>SERVICE=WMS&amp;VERSION=1.1.1&amp;REQUEST=GetCapabilities</code></p><p>返回结果的 MIME type为 <code>application/vnd.ogc.wms_xml</code> （这是一个坑）</p><blockquote><p>发送GetCapabilities请求时出现下载 mapserv.exe 或 mapserv 文件的问题：</p><p>这是由于浏览器不识别1.1.1版本WMS返回数据的 MIME type，即 <code>application/vnd.ogc.wms_xml</code> , 将请求的VERSION版本改为 <strong>1.3.0</strong> 则可正常打开。</p><p>实际上下载的 mapserv.exe 或 mapserv 并非可执行的exe文件，用文本编辑器打开之后，可以发现其实是<code>WMT_MS_Capabilities</code>文档，或者是错误信息（若map配置有错的话）。这和访问上面MapServer给出的测试链接，即<code>http://demo.mapserver.org/cgi-bin/wms?SERVICE=WMS&amp;VERSION=1.1.1&amp;REQUEST=GetCapabilities</code>时下载的内容是相似的，因为其修改了wms_onlineresource地址，所有文件名不同。</p><p><a href="https://gis.stackexchange.com/questions/23605/wms-request-fails" target="_blank" rel="external">https://gis.stackexchange.com/questions/23605/wms-request-fails</a></p></blockquote><h3 id="GetMap"><a href="#GetMap" class="headerlink" title="GetMap"></a>GetMap</h3><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">http://demo.mapserver.org/cgi-bin/wms?SERVICE=WMS&amp;VERSION=1.1.1&amp;REQUEST=GetMap&amp;BBOX=-180,-90,180,90&amp;SRS=EPSG:4326&amp;WIDTH=953&amp;HEIGHT=480&amp;LAYERS=bluemarble,cities&amp;STYLES=&amp;FORMAT=image/png&amp;TRANSPARENT=true</div></pre></td></tr></table></figure><p>####所需参数：</p><ul><li><p><strong>VERSION=version:</strong> 请求版本，1.1.1 或 1.3.0 （版本不同，请求参数有差异，混用可能导致空白页面）</p></li><li><p><strong>REQUEST=GetMap:</strong> 请求的名称</p></li><li><p><strong>LAYERS=layer_list:</strong> 逗号分隔的图层列表（Comma-separated list）. 如 <code>LAYERS=bluemarble,cities</code>。若提供了 <a href="http://www.opengeospatial.org/standards/sld" target="_blank" rel="external">SLD</a> 参数则此项为可选的.</p></li><li><p><strong>STYLES=style_list:</strong> 逗号分隔的、每一个请求图层的渲染样式列表（Comma-separated list）. 若提供了 <a href="http://www.opengeospatial.org/standards/sld" target="_blank" rel="external">SLD</a> 参数则此项为可选的.</p><p>若使用默认样式，设置 “STYLES=”为空. 支持命名样式（由map文件中的 CLASS GROUP 名称控制）</p></li><li><p><strong>SRS=namespace:identifier:</strong> Spatial Reference System， 如 <code>EPSG:4326</code>（1.3.0 改为CRS）</p></li><li><p><strong>BBOX=minx,miny,maxx,maxy:</strong> 左下，右上角坐标，采用SRS定义的单位</p></li><li><p><strong>WIDTH=output_width:</strong> Width in pixels of map picture. 宽</p></li><li><p><strong>HEIGHT=output_height:</strong> Height in pixels of map picture. 高</p></li><li><p><strong>FORMAT=output_format:</strong> 输出地图的格式，如 <code>FORMAT=image/png</code></p></li></ul><blockquote><p>SLD 可参考 <a href="http://docs.geoserver.org/latest/en/user/styling/sld/index.html" target="_blank" rel="external">http://docs.geoserver.org/latest/en/user/styling/sld/index.html</a></p></blockquote><h2 id="GetLegendGraphic"><a href="#GetLegendGraphic" class="headerlink" title="GetLegendGraphic"></a>GetLegendGraphic</h2><p>绘制图层中所有定义的 <strong>CLASS</strong> 的图标和标签。</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">http://127.0.0.1/cgi-bin/mapserv.exe?SERVICE=WMS&amp;VERSION=1.1.1&amp;layer=park&amp;</div><div class="line">REQUEST=getlegendgraphic&amp;FORMAT=image/png</div></pre></td></tr></table></figure><p>####要求在<strong>Map</strong>文件中具备以下内容：</p><ul><li><strong>LEGEND</strong> 对象.</li><li>每个图层中定义了 <strong>CLASS</strong> 对象.</li><li>CLASS 对象中定义了 <strong>NAME</strong> .</li><li>每个 LAYER 的 <strong>STATUS</strong> 必须为 <strong>ON</strong>.</li></ul><p>####请求参数：</p><ul><li><strong>LAYER</strong> - (必须) 需要返回图例图形的WMS图层的名称，同 GetCapabilities 请求中的图层名称一样</li><li><strong>FORMAT</strong> - (必须) 如. <code>image/png</code></li><li><strong>WIDTH</strong> - (可选) 图例图形的宽度. 只有当使用<strong>Rule</strong>参数时，才需要设置此参数</li><li><strong>HEIGHT</strong> - (可选) 图例图形的高度，同上.</li><li><strong>SLD</strong> - (可选) SLD的 URL. Applies the SLD on the layer and the legend is drawn after the SLD is applied (using the classes specified by the SLD). Note here that you need to put a<name>class1</name>inside the Rule element so that a class name is created from the SLD and therefore a correct legend image.</li><li><strong>SLD_BODY</strong> - (可选) The body (code) of the SLD, instead of specifying a URL (as in the ‘SLD’ parameter).</li><li><strong>SLD_VERSION</strong> - (可选).</li><li><strong>SCALE</strong> - (可选) 指定比例尺，满足此比例尺的图层才会生成图例</li><li><strong>STYLE</strong> - (可选) The style.</li><li><strong>RULE</strong> - (可选) 指定 CLASS 的名称来生成图例图片 (相对于为图层的所有 CLASS生成图例).</li></ul><h4 id="基于内容的图例"><a href="#基于内容的图例" class="headerlink" title="基于内容的图例"></a>基于内容的图例</h4><p>当客户端发送的 GetLegendGraphic 请求包含(non-standard) BBOX, SRS/CRS 和 WIDTH/HEIGHT 参数时，且图层为POINT, LINE 和POLYGON 时支持。</p><h2 id="WMS-1-3-0"><a href="#WMS-1-3-0" class="headerlink" title="WMS 1.3.0"></a>WMS 1.3.0</h2><p>###相对1.1.1需要注意的变化：</p><ul><li>坐标轴的变化</li><li>新的坐标参考系统</li><li>使用 <strong>CRS</strong> 代替 SRS 参数</li><li>GetMap 中的 EXCEPTIONS 参数有效值为 XML, INIMAGE, BLANK</li><li>GetFeatureInfo 中的 EXCEPTIONS 参数有效值为 XML</li><li>新增了 LayerLimit 参数, 允许服务器发布和限制客户端在 GetMap 请求中允许包含的图层数量。</li><li>WMS 1.3.0 Post 请求应该是一个包含不同操作和参数的XML文档</li></ul><p>在之前版本的WMS中，横轴（easting）为 x 或 经度（lon），纵轴（northing）为 y 或纬度（lat）。而在WMS1.3.0 中，根据 CRS 的不同，x 轴不一定是东西向（may or may not be oriented West-to-East，大部分是）, y 轴也不一定是南北向。WMS 的描述操作决定了轴的顺序. 这一点对一些常用的 EPSG 代码有影响，如 ESPG:4326（WGS 84 latitude-longitude）.</p><p><a href="http://portal.opengeospatial.org/files/?artifact_id=14416" target="_blank" rel="external">WMS 1.3.0 规范</a>中支持的坐标系统：</p><ul><li><strong>CRS:84</strong> (WGS 84 longitude-latitude)</li><li>CRS:83 (NAD83 longitude-latitude)</li><li>CRS:27 (NAD27 longitude-latitude)</li><li>AUTO2:42001 (WGS 84 / Auto UTM )</li><li>AUTO2:42002 (WGS 84 / Auto Tr. Mercator)</li><li>AUTO2:42003 (WGS 84 / Auto Orthographic)</li><li>AUTO2:42004 (WGS 84 / Auto Equirectangular)</li><li>AUTO2:42005 (WGS 84 / Auto Mollweide)</li></ul><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><ul><li><p>CRS:84 且 BBOX 坐标为 <strong>经度-纬度</strong> long/lat</p><p><strong><code>BBOX=-180,-90,180,90&amp;CRS=CRS:84</code></strong></p></li><li><p>ESPG:4326 且 BBOX 坐标为 <strong>纬度-经度</strong> lat/long:</p><p><strong><code>BBOX=-90,-180,90,180&amp;CRS=EPSG:4326</code></strong></p></li></ul><hr><p>##示例</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">MAP</div><div class="line">  NAME &quot;WMS-test&quot;</div><div class="line">  STATUS ON</div><div class="line">  SIZE 400 300</div><div class="line">  EXTENT -2200000 -712631 3072800 3840000</div><div class="line">  UNITS METERS</div><div class="line">  SHAPEPATH &quot;../data&quot;</div><div class="line">  IMAGECOLOR 255 255 255</div><div class="line">  FONTSET ../etc/fonts.txt</div><div class="line"></div><div class="line">  WEB</div><div class="line">    IMAGEPATH &quot;/ms4w/tmp/ms_tmp/&quot;</div><div class="line">    IMAGEURL &quot;/ms_tmp/&quot;</div><div class="line">    METADATA</div><div class="line">      &quot;wms_title&quot;     &quot;WMS Demo Server&quot;  ##required</div><div class="line">      &quot;wms_onlineresource&quot; &quot;http://yourpath/cgi-bin/mapserv.exe?&quot;   ##required</div><div class="line">      &quot;wms_srs&quot;       &quot;EPSG:42304 EPSG:42101 EPSG:4269 EPSG:4326&quot;  ##recommended</div><div class="line">      &quot;wms_enable_request&quot; &quot;*&quot;   ##necessary</div><div class="line">    END</div><div class="line">  END # Web</div><div class="line"></div><div class="line">  PROJECTION</div><div class="line">    &quot;init=epsg:42304&quot;   ##required</div><div class="line">  END</div><div class="line"></div><div class="line">  SYMBOL</div><div class="line">    NAME &quot;circle&quot;</div><div class="line">    TYPE ellipse</div><div class="line">    POINTS 1 1 END</div><div class="line">  END # Symbol</div><div class="line"></div><div class="line">  #</div><div class="line">  # Start of layer definitions</div><div class="line">  #</div><div class="line"></div><div class="line">  LAYER</div><div class="line">    NAME &quot;park&quot;</div><div class="line">    METADATA</div><div class="line">      &quot;wms_title&quot;    &quot;Parks&quot;   ##required</div><div class="line">    END</div><div class="line">    TYPE POLYGON</div><div class="line">    STATUS OFF</div><div class="line">    DATA park</div><div class="line">    PROJECTION</div><div class="line">      &quot;init=epsg:42304&quot;   ##recommended</div><div class="line">    END</div><div class="line">    CLASS</div><div class="line">      NAME &quot;Parks&quot;</div><div class="line">      STYLE</div><div class="line">        COLOR 200 255 0</div><div class="line">        OUTLINECOLOR 120 120 120</div><div class="line">      END # Style</div><div class="line">    END # Class</div><div class="line">  END # Layer</div><div class="line"></div><div class="line">  LAYER</div><div class="line">    NAME popplace</div><div class="line">    METADATA</div><div class="line">      &quot;wms_title&quot;    &quot;Cities&quot;  ##required</div><div class="line">    END</div><div class="line">    TYPE POINT</div><div class="line">    STATUS ON</div><div class="line">    DATA popplace</div><div class="line">    PROJECTION</div><div class="line">      &quot;init=epsg:42304&quot;   ##recommended</div><div class="line">    END</div><div class="line">    CLASS</div><div class="line">      NAME &quot;Cities&quot;</div><div class="line">      STYLE</div><div class="line">        SYMBOL &quot;circle&quot;</div><div class="line">        SIZE 8</div><div class="line">        COLOR 0 0 0</div><div class="line">      END # Style</div><div class="line">    END # Class</div><div class="line">  END # Layer</div><div class="line"></div><div class="line">END # Map File</div></pre></td></tr></table></figure><hr><p>参考博客：</p><blockquote><p><a href="https://blog.csdn.net/qingyafan/article/details/49756681" target="_blank" rel="external">MapServer 之 发布 WMS GetFeatureInfo 服务</a></p><p><a href="https://blog.csdn.net/qingyafan/article/details/46500127" target="_blank" rel="external">MapServer 之 发布网络地图服务（WMS-Web Map Service）</a></p><p><a href="https://blog.csdn.net/qingyafan/article/details/50434132" target="_blank" rel="external">MapServer 之 发布网络覆盖数据服务（WCS-Web Coverage Service）</a></p><p><a href="https://gis.stackexchange.com/questions/230088/mapserver-geojson-output-template" target="_blank" rel="external">MapServer GeoJSON output template</a></p></blockquote><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CentOS MySql 安装]]></title>
      <url>houzw.github.io.git/2018/05/25/CentOS-MySql-%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:01 GMT+0800 (中国标准时间) --><p>##YUM源安装</p><blockquote><p><a href="http://dev.mysql.com/doc/refman/5.7/en/linux-installation-yum-repo.html" target="_blank" rel="external">Installing MySQL on Linux Using the MySQL Yum Repository</a></p><p><a href="http://dev.mysql.com/doc/refman/5.7/en/binary-installation.html" target="_blank" rel="external">Installing MySQL on Unix/Linux Using Generic Binaries</a></p><p>或者使用MariaDB Database替代MySQL（是MySQL的完整分支）</p><p><a href="http://www.jianshu.com/p/15a1659bc38d" target="_blank" rel="external">http://www.jianshu.com/p/15a1659bc38d</a></p><p><a href="http://www.bkjia.com/Mysql/1115394.html" target="_blank" rel="external">http://www.bkjia.com/Mysql/1115394.html</a></p></blockquote><h4 id="卸载mariadb"><a href="#卸载mariadb" class="headerlink" title="卸载mariadb"></a>卸载mariadb</h4><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">rpm -qa | grep mariadb # 是否安装了mariadb</div><div class="line">rpm -e mariadb-libs # 卸载</div><div class="line"># rpm -e --nodeps mariadb-libs ## 强力卸载，忽略依赖</div><div class="line">yum install vim libaio net-tools # 安装mysql依赖，可先检查是否安装了依赖</div></pre></td></tr></table></figure><h4 id="下载rpm包"><a href="#下载rpm包" class="headerlink" title="下载rpm包"></a>下载rpm包</h4><blockquote><p>一般的yum源中可能没有mysql的rpm，故需要先下载mysql的repo源</p></blockquote><p><code>wget http://dev.mysql.com/get/mysql57-community-release-el7-9.noarch.rpm</code></p><h5 id="安装源"><a href="#安装源" class="headerlink" title="安装源"></a>安装源</h5><p>下面命令将 MySQL 的 Yum repository 添加到系统的仓库列表之中，并下载 GnuPG key 来检查软件包的完整性（integrity）（可以用<code>yum repolist enabled | grep &quot;mysql.*-community.*&quot;</code>检查）</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">sudo yum rpm -ivh mysql57-community-release-el7-9.noarch.rpm</div></pre></td></tr></table></figure><p>查看子仓库，选择发行版</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">[houzw@MiWiFi-R1CM softwares]$ yum repolist all | grep mysql</div><div class="line">mysql-connectors-community/x86_64 MySQL Connectors Community        启用:     24</div><div class="line">mysql-connectors-community-source MySQL Connectors Community - Sour 禁用</div><div class="line">mysql-tools-community/x86_64      MySQL Tools Community             启用:     38</div><div class="line">mysql-tools-community-source      MySQL Tools Community - Source    禁用</div><div class="line">mysql-tools-preview/x86_64        MySQL Tools Preview               禁用</div><div class="line">mysql-tools-preview-source        MySQL Tools Preview - Source      禁用</div><div class="line">mysql55-community/x86_64          MySQL 5.5 Community Server        禁用</div><div class="line">mysql55-community-source          MySQL 5.5 Community Server - Sour 禁用</div><div class="line">mysql56-community/x86_64          MySQL 5.6 Community Server        禁用</div><div class="line">mysql56-community-source          MySQL 5.6 Community Server - Sour 禁用</div><div class="line">mysql57-community/x86_64          MySQL 5.7 Community Server        启用:    146</div><div class="line">mysql57-community-source          MySQL 5.7 Community Server - Sour 禁用</div><div class="line">mysql80-community/x86_64          MySQL 8.0 Community Server        禁用</div><div class="line">mysql80-community-source          MySQL 8.0 Community Server - Sour 禁用</div></pre></td></tr></table></figure><p>安装最新发行版时，不需要任何的配置。如果要安装其他版本，必须禁用最新版本，启用相应的版本</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">&gt; sudo yum-config-manager --disable mysql57-community</div><div class="line">&gt; sudo yum-config-manager --enable mysql56-community</div></pre></td></tr></table></figure><p>或者手动编辑<code>/etc/yum.repos.d/mysql-community.repo</code> 文件</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">[mysql57-community]</div><div class="line">name=MySQL 5.7 Community Server</div><div class="line">baseurl=http://repo.mysql.com/yum/mysql-5.7-community/el/6/$basearch/</div><div class="line">enabled=1</div><div class="line">gpgcheck=1</div><div class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql</div></pre></td></tr></table></figure><p>如果想安装5.6</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line"># Enable to use MySQL 5.6</div><div class="line">[mysql56-community]</div><div class="line">name=MySQL 5.6 Community Server</div><div class="line">baseurl=http://repo.mysql.com/yum/mysql-5.6-community/el/6/$basearch/</div><div class="line">enabled=1 # 启用 。 设置5.7 的enabled=0 表示不启用5.7</div><div class="line">gpgcheck=1</div><div class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql</div></pre></td></tr></table></figure><p>查看启用的版本</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">yum repolist enabled | grep mysql</div></pre></td></tr></table></figure><h4 id="安装mysql-server"><a href="#安装mysql-server" class="headerlink" title="安装mysql-server"></a>安装mysql-server</h4><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">sudo yum install mysql-server</div></pre></td></tr></table></figure><p>然后会进行下载安装相应的软件</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">mysql-community-server         x86_64         5.7.16-1.el7          mysql57-community    </div><div class="line"># 为依赖而安装:</div><div class="line">mysql-community-client         x86_64         5.7.16-1.el7          mysql57-community</div><div class="line">mysql-community-common         x86_64         5.7.16-1.el7          mysql57-community</div><div class="line">mysql-community-libs</div></pre></td></tr></table></figure><h2 id="RPM二进制包安装"><a href="#RPM二进制包安装" class="headerlink" title="RPM二进制包安装"></a>RPM二进制包安装</h2><blockquote><p>安装参考：</p><p>官方：<a href="http://dev.mysql.com/doc/refman/5.7/en/binary-installation.html" target="_blank" rel="external">http://dev.mysql.com/doc/refman/5.7/en/binary-installation.html</a></p><p>博客（主要参考）：</p><p><a href="http://blog.csdn.net/okh258/article/details/53171653" target="_blank" rel="external">linux 下安装mysql-5.7.16-1.el6.x86_64.rpm-bundle</a></p><p><a href="http://blog.csdn.net/babyfish13/article/details/51221673" target="_blank" rel="external">CentOS6.6-64下rpm方式mysql-5.7.12安装实录</a></p></blockquote><p>下载</p><p><code>wget http://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.16-1.el7.x86_64.rpm-bundle.tar</code></p><p>解压</p><p><code>tar -xf mysql-5.7.16-1.el7.x86_64.rpm-bundle.tar</code></p><p>得到一系列安装包</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">mysql-community-client-5.7.16-1.el7.x86_64.rpm</div><div class="line">mysql-community-common-5.7.16-1.el7.x86_64.rpm</div><div class="line">mysql-community-devel-5.7.16-1.el7.x86_64.rpm</div><div class="line">mysql-community-embedded-5.7.16-1.el7.x86_64.rpm</div><div class="line">mysql-community-embedded-compat-5.7.16-1.el7.x86_64.rpm</div><div class="line">mysql-community-embedded-devel-5.7.16-1.el7.x86_64.rpm</div><div class="line">mysql-community-libs-5.7.16-1.el7.x86_64.rpm</div><div class="line">mysql-community-libs-compat-5.7.16-1.el7.x86_64.rpm</div><div class="line">mysql-community-minimal-debuginfo-5.7.16-1.el7.x86_64.rpm</div><div class="line">mysql-community-server-5.7.16-1.el7.x86_64.rpm</div><div class="line">mysql-community-server-minimal-5.7.16-1.el7.x86_64.rpm</div><div class="line">mysql-community-test-5.7.16-1.el7.x86_64.rpm</div></pre></td></tr></table></figure><p>依次安装(官方说要安装依赖，不过一般都已经有了 <code>yum install libaio</code>)</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">sudo rpm -ivh mysql-community-common-5.7.16-1.el7.x86_64.rpm</div><div class="line">sudo rpm -ivh mysql-community-libs-5.7.16-1.el7.x86_64.rpm</div><div class="line">sudo rpm -ivh mysql-community-client-5.7.16-1.el7.x86_64.rpm</div><div class="line">sudo rpm -ivh mysql-community-server-5.7.16-1.el7.x86_64.rpm</div></pre></td></tr></table></figure><p>安装后可以查看</p><p><code>rpm -qa | grep mysql</code></p><h2 id="MySQL使用"><a href="#MySQL使用" class="headerlink" title="MySQL使用"></a>MySQL使用</h2><h4 id="启动mysql"><a href="#启动mysql" class="headerlink" title="启动mysql"></a>启动mysql</h4><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">$ sudo service mysqld start</div><div class="line">Redirecting to /bin/systemctl start  mysqld.service</div></pre></td></tr></table></figure><p>启动后查看日志获取随机密码</p><p><code>sudo cat /var/log/mysqld.log | more</code>或<code>grep &quot;password&quot; /var/log/mysqld.log</code>直接在文件中查找</p><p><code>[Note] A temporary password is generated for root@localhost: h4aci)6GVpxw</code></p><p>停止：<code>sudo service mysqld stop</code><br>重启：<code>sudo service mysqld restart</code></p><h4 id="登录mysql，修改初始密码"><a href="#登录mysql，修改初始密码" class="headerlink" title="登录mysql，修改初始密码"></a>登录mysql，修改初始密码</h4><p><code>mysql -uroot -p</code></p><p>然后修改密码(注意：新密码<strong>必须包含有数字，大写字母，小写字母，特殊符号</strong>，否则报错，不能修改)</p><figure class="highlight"><table><tr><td class="code"><pre><div class="line">mysql&gt; alter user 'root'@'localhost' identified by 'newpassword';</div><div class="line">mysql&gt; flush privileges;</div></pre></td></tr></table></figure><p>或者<code>mysql&gt; set password= PASSWORD(&quot;newpassword&quot;);</code>修改当前用户密码，加密保存</p><h4 id="打开3306端口"><a href="#打开3306端口" class="headerlink" title="打开3306端口"></a>打开3306端口</h4><p><code>/sbin/iptables -I INPUT -p tcp --dport 3306 -j ACCEPT</code></p><p>或使用<code>firewall-cmd</code>命令</p><p><code>若 FirewallD is not running</code>可以执行 <code>systemctl start firewalld</code> 开启防火墙。</p><p>开启端口</p><p><code>firewall-cmd --zone=public --add-port=3306/tcp --permanent</code></p><h4 id="MySQL管理"><a href="#MySQL管理" class="headerlink" title="MySQL管理"></a>MySQL管理</h4><ul><li>查看用户</li></ul><p><code>mysql&gt; select distinct concat(&#39;User: &#39;&#39;&#39;,user,&#39;&#39;&#39;@&#39;&#39;&#39;,host,&#39;&#39;&#39;;&#39;) as usr from mysql.user;</code></p><ul><li>查看数据库中具体某个用户的权限</li></ul><p><code>mysql&gt; show grants for [&#39;cactiuser&#39;@&#39;%&#39;](mailto:&#39;cactiuser&#39;@&#39;%&#39;);</code></p><ul><li>查看user表结构　需要具体的项可结合表结构来查询</li></ul><p><code>mysql&gt; desc mysql.user;</code></p><ul><li>修改密码（不用登录mysql）</li></ul><p><code>mysqladmin -u用户名 -p旧密码 password 新密码</code></p><ul><li>修改密码（登录mysql之后）</li></ul><p><code>mysql&gt; update user set password=password(“newpwd”) where user=’root’;// 修改密码</code><br><code>mysql&gt; flush privileges; //刷新数据库</code></p><ul><li>创建用户，用%可以代表任意主机，也可以用all privileges代表所有权限。</li></ul><p><code>mysql&gt; grant all privileges on 数据库.* to &#39;用户名&#39;@&#39;登录主机&#39; identified by &#39;密码&#39;;</code></p><p>语法：<code>GRANT privileges ON databasename.tablename TO &#39;username&#39;@&#39;host&#39;;</code></p><p>其中，<code>host</code>可以是<code>localhost</code>或<code>%</code>（任意ip）或具体的<code>ip</code>地址</p><ul><li>或者</li></ul><figure class="highlight"><table><tr><td class="code"><pre><div class="line">mysql&gt; CREATE USER 'user'@'localhost' IDENTIFIED BY '123456'; </div><div class="line">mysql&gt; SET PASSWORD FOR 'username'@'host' = PASSWORD('newpassword'); --修改密码，加密保存</div><div class="line">       --如果是当前登陆用户用 SET PASSWORD = PASSWORD("newpassword");</div></pre></td></tr></table></figure><ul><li>修改root可以在其他地址登录</li></ul><p><code>mysql&gt; grant all privileges on *.* to &#39;root&#39;@&#39;%&#39; identified by &#39;&lt;pw&gt;&#39;;</code></p><p>或使用</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">mysql&gt; update user set host = &apos;%&apos; where user = &apos;root&apos;;</div><div class="line">mysql&gt; flush privileges;</div></pre></td></tr></table></figure><ul><li>忘记密码时，可用如下方法重置（未测试）</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">service mysqld stop</div><div class="line">mysqld_safe --user=root --skip-grant-tables --skip-networking &amp;</div><div class="line">mysql -u root </div><div class="line">mysql&gt; use mysql;</div><div class="line">mysql&gt; update user set password=password(&quot;new_password&quot;) where user=&quot;root&quot;; </div><div class="line">mysql&gt; flush privileges;</div></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[开源地理信息软件或算法库]]></title>
      <url>houzw.github.io.git/2018/03/13/%E5%BC%80%E6%BA%90%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E8%BD%AF%E4%BB%B6%E6%88%96%E7%AE%97%E6%B3%95%E5%BA%93/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><p>[doc]</p><h2 id="开源地理信息基金会-OSGEO"><a href="#开源地理信息基金会-OSGEO" class="headerlink" title="开源地理信息基金会 OSGEO"></a>开源地理信息基金会 <a href="http://www.osgeo.org/" target="_blank" rel="external">OSGEO</a></h2><p><img src="https://www.osgeo.org/wp-content/themes/roots/assets/img/logo-osgeo.svg" alt="osgeo"></p><p>包括著名的 GDAL、GRASS GIS、QGIS、GeoServer、OpenLayers、PostGIS、GeoTools、MapServer、GEOS、Geonetwork等</p><h2 id="GSLIB"><a href="#GSLIB" class="headerlink" title="GSLIB"></a><a href="http://www.gslib.com/" target="_blank" rel="external">GSLIB</a></h2><p>GSLIB: Geostatistical Software Library and related software. 地统计及相关软件库</p><ul><li>Point researchers and practitioners to the public-domain GSLIB programs for geostatistical problem solving.</li><li>Provide the latest GSLIB source code and PC executables to download. Bug fixes and frequently asked questions are updated from time to time.</li><li>Inform users of a commercial supplement to GSLIB, <strong>WinGslib</strong>, a Windows interface to GSLIB and related programs.</li><li>Announce training, support, and consultation opportunities. Although GSLIB comes with no support, arrangements will be made on a case-by-case basis.</li></ul><p><img src="http://www.gslib.com/images/logo23.gif" alt="img"> 由 Clayton Deutsch 和 Emmanuel Schnetzler 维护.</p><h2 id="The-Remote-Sensing-and-GIS-Software-Library-RSGISLib"><a href="#The-Remote-Sensing-and-GIS-Software-Library-RSGISLib" class="headerlink" title="The Remote Sensing and GIS Software Library (RSGISLib)"></a>The Remote Sensing and GIS Software Library (<a href="https://www.rsgislib.org/" target="_blank" rel="external">RSGISLib</a>)</h2><p>The Remote Sensing and GIS software library (RSGISLib) is a collection of tools for processing remote sensing and GIS datasets. The tools are accessed using Python bindings or an XML interface.</p><p>The project is hosted on Bitbucket and is available to download from <a href="https://bitbucket.org/petebunting/rsgislib" target="_blank" rel="external">https://bitbucket.org/petebunting/rsgislib</a></p><p>The project is jointly led by Pete Bunting (<a href="http://www.aber.ac.uk/en/iges/research-groups/earth-observation-laboratory/" target="_blank" rel="external">Earth Observation and Ecosystem Dynamics Group</a> , <a href="http://www.aber.ac.uk/" target="_blank" rel="external">Aberystwyth University</a>) and Dan Clewley (<a href="http://pml.ac.uk/" target="_blank" rel="external">Plymouth Marine Laboratory</a>).</p><h2 id="whitebox"><a href="#whitebox" class="headerlink" title="whitebox"></a>whitebox</h2><p>由 吴秋生 和加拿大 University of Guelph 的 John Lindsay 教授合作开发的 Python 软件包。该软件包目前包含<strong>323个</strong>工具；可用于各种 GIS 分析和遥感图像处理；可跨平台使用 (包括 Windows, macOS, Linux)；支持 Python 3.x；所有工具的算法和代码都是开源的 (编程语言：Rust)；可独立运行，不依赖任何第三方软件；新的工具在还在持续增加中。</p><p>如何安装：</p><ul><li><em>pip install</em> <em>whitebox</em></li></ul><p>工具分组列表：</p><ul><li>Data Tools</li><li>Geomorphometric Analysis</li><li>GIS Analysis</li><li>Hydrological Analysis</li><li>Image Analysis</li><li>LiDAR Analysis</li><li>Mathematical and Statistical Analysis</li><li>Stream Network Analysis</li><li>Terrain Analysis</li></ul><p>PyPI: <a href="https://pypi.org/project/whitebox/" target="_blank" rel="external">https://pypi.org/project/whitebox/</a></p><p>GitHub: <a href="https://github.com/giswqs/whitebox" target="_blank" rel="external">https://github.com/giswqs/whitebox</a></p><p>Docs: <a href="https://whitebox.readthedocs.io" target="_blank" rel="external">https://whitebox.readthedocs.io</a></p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Data Portal Collection]]></title>
      <url>houzw.github.io.git/2018/03/13/Data%20Portal%20Collection/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:01 GMT+0800 (中国标准时间) --><h1 id="Data-Portal-Collection"><a href="#Data-Portal-Collection" class="headerlink" title="Data Portal Collection"></a>Data Portal Collection</h1><blockquote><p>按主要提供的数据类型分</p></blockquote><h1 id="1-综合类"><a href="#1-综合类" class="headerlink" title="1. 综合类"></a>1. 综合类</h1><h2 id="国家地球系统科学数据共享平台"><a href="#国家地球系统科学数据共享平台" class="headerlink" title="国家地球系统科学数据共享平台"></a>国家地球系统科学数据共享平台</h2><p><a href="http://www.geodata.cn/" target="_blank" rel="external">http://www.geodata.cn/</a></p><blockquote><p>申请或直接下载</p></blockquote><p>大气圈、陆地表层、陆地水圈、冰冻圈、自然资源、海洋、极地、固体地球、古环境、日地空间环境与天文、遥感数据</p><h2 id="寒区旱区科学数据中心"><a href="#寒区旱区科学数据中心" class="headerlink" title="寒区旱区科学数据中心"></a>寒区旱区科学数据中心</h2><p><a href="http://westdc.westgis.ac.cn/" target="_blank" rel="external">http://westdc.westgis.ac.cn/</a></p><h2 id="全球变化科学研究数据出版系统"><a href="#全球变化科学研究数据出版系统" class="headerlink" title="全球变化科学研究数据出版系统"></a>全球变化科学研究数据出版系统</h2><p><a href="http://www.geodoi.ac.cn/WebCn/Default.aspx" target="_blank" rel="external">http://www.geodoi.ac.cn/WebCn/Default.aspx</a></p><p>直接下载，发表成果时引用</p><h2 id="中科院资源环境科学数据中心"><a href="#中科院资源环境科学数据中心" class="headerlink" title="中科院资源环境科学数据中心"></a>中科院资源环境科学数据中心</h2><p><a href="http://www.resdc.cn/" target="_blank" rel="external">http://www.resdc.cn/</a></p><blockquote><p>网站VIP会员可以免费下载数据，网站将对会员施行VIP身份认证，通过认证的 VIP会员就可以下载网站的所有数据。</p><p>部分有偿</p></blockquote><p>中国行政区划数据、自然地理分区数据、中国气象要素空间插值数据、中国土地利用数据、中国陆地生态系统宏观结构数据、植被类型数据、土壤数据、社会经济数据、城市空气质量监测数据、中国净第一性生产力NPP数据、高分辨率卫星遥感影像数据、中分辨率卫星遥感影像数据、全球100万基础地理数据、地形地貌数据、中国长时间序列1公里植被指数（NDVI）数据集、中国水系流域空间分布数据集、中国农田生产潜力数据、全球夜间灯光数据</p><h2 id="国家遥感中心-GEO共享数据列表"><a href="#国家遥感中心-GEO共享数据列表" class="headerlink" title="国家遥感中心  GEO共享数据列表"></a>国家遥感中心 GEO共享数据列表</h2><p><a href="http://www.nrscc.gov.cn/nrscc/gjhz/gjdqgczz/gzqkjs/sjgx/geogxsjlb/" target="_blank" rel="external">http://www.nrscc.gov.cn/nrscc/gjhz/gjdqgczz/gzqkjs/sjgx/geogxsjlb/</a></p><blockquote><p>里面列举了<em>近21年表面太阳辐射数据</em>、<em>CEOS陆地表面中分辨率光学影像</em>、<em>全球陆地覆盖地球科学数据</em>（包括SRTM、GTOPO30）、<em>EROS数据服务</em>、<em>全球ASTER G-DEM数据</em>、<em>地球系统图集</em> 等的数据服务地址</p></blockquote><p>###EarthServer</p><p><a href="http://www.earthserver.eu/" target="_blank" rel="external">http://www.earthserver.eu/</a></p><p>Big Earth Data at your fingertips - this is the vision of EarthServer, an intercontinental initiative for unleashing the potential of Big Data through a disruptive paradigm shift in technology:</p><ul><li>from isolated silos of data with disparate functionality towards a single, uniform information space;</li><li>from a difficult, artificial differentiation between data and metadata access to unified retrieval;</li><li>from zillions of files towards few whatever-size datacubes;</li><li>from limited functionality to the freedom of asking anything, anytime, any server in a peer network of data centers worldwide.</li></ul><h2 id="Data-Ordering-Tools-amp-Resources"><a href="#Data-Ordering-Tools-amp-Resources" class="headerlink" title="Data Ordering Tools &amp; Resources"></a>Data Ordering Tools &amp; Resources</h2><p><a href="https://modis.gsfc.nasa.gov/tools/" target="_blank" rel="external">https://modis.gsfc.nasa.gov/tools/</a></p><ul><li><a href="https://lpdaacsvc.cr.usgs.gov/appeears/" target="_blank" rel="external">AppEEARS</a></li><li><a href="http://earthdata.nasa.gov/" target="_blank" rel="external">Earth Data</a></li><li><a href="https://search.earthdata.nasa.gov/" target="_blank" rel="external">Earthdata Search</a></li><li><a href="https://earthexplorer.usgs.gov/" target="_blank" rel="external">USGS EarthExplorer</a></li><li><a href="EOS Clearing House (ECHO">EOS Clearing House (ECHO) / Reverb</a> / Reverb)</li><li><a href="http://giovanni.gsfc.nasa.gov/giovanni/" target="_blank" rel="external">Giovanni</a> 或 <a href="http://disc.sci.gsfc.nasa.gov/giovanni/overview" target="_blank" rel="external">http://disc.sci.gsfc.nasa.gov/giovanni/overview</a></li><li><a href="http://gcmd.gsfc.nasa.gov/" target="_blank" rel="external">Global Change Master Directory (GCMD)</a></li><li><a href="http://hdfeos.org/software/heg.php" target="_blank" rel="external">HDF-EOS to GeoTIFF converter (HEG)</a></li><li><a href="http://www.space-research.org/" target="_blank" rel="external">HDFExplorer</a> &amp; <a href="http://www-loa.univ-lille1.fr/informatique/index.php?lang=us&amp;p=about&amp;app=HDFLook" target="_blank" rel="external">HDFLook</a></li><li><a href="http://www.hdfgroup.org/products/" target="_blank" rel="external">HDF Technologies</a></li><li><a href="https://lpdaac.usgs.gov/data_access/data_pool" target="_blank" rel="external">LP DAAC2Disk Download Manager</a></li><li><a href="http://www.ssec.wisc.edu/mcidas/software/mclite/" target="_blank" rel="external">McIDAS</a></li><li><a href="http://modis-atmos.gsfc.nasa.gov/IMAGES/" target="_blank" rel="external">MODIS Atmosphere Global Browse Images</a></li><li><a href="http://nsidc.org/data/mist/index.html" target="_blank" rel="external">MODIS Interactive Subsetting Tool (MIST)</a></li><li><a href="http://landweb.nascom.nasa.gov/cgi-bin/browse/browse.cgi" target="_blank" rel="external">MODIS Land Global Browse Images</a></li><li><a href="https://lpdaac.usgs.gov/products/modis_products_table" target="_blank" rel="external">MODIS Land QA tutorials</a></li><li><a href="https://ladsweb.nascom.nasa.gov/" target="_blank" rel="external">MODIS Level 1 Atmosphere Archive and Distribution System (LAADS Web)</a></li><li><a href="https://lpdaac.usgs.gov/tools/ldope_tools" target="_blank" rel="external">MODIS LDOPE QA Tools</a></li><li><a href="https://nsidc.org/data/modis/ms2gt/index.html" target="_blank" rel="external">MODIS Swath-to-Grid Toolbox (MS2GT)</a></li><li><a href="https://lpdaac.usgs.gov/tools/modis_reprojection_tool_swath" target="_blank" rel="external">MODIS Swath Reprojection Tool (MRT Swath) and MODIS Reprojection Tool (MRT)</a><br><a href="https://lpdaac.usgs.gov/tools/modis_reprojection_tool" target="_blank" rel="external">https://lpdaac.usgs.gov/tools/modis_reprojection_tool</a></li><li><a href="https://daac.ornl.gov/MODIS/MODIS-menu/modis_webservice.html" target="_blank" rel="external">MODIS Web Service</a></li><li><a href="http://daac.ornl.gov/modisglobal" target="_blank" rel="external">ORNL DAAC MODIS Land Products Subsetting and Visualization Tools</a></li><li><a href="https://earthdata.nasa.gov/labs/worldview/" target="_blank" rel="external">WorldView</a></li></ul><h2 id="Geospatial-Platform"><a href="#Geospatial-Platform" class="headerlink" title="Geospatial Platform"></a>Geospatial Platform</h2><p><a href="https://www.geoplatform.gov/" target="_blank" rel="external">https://www.geoplatform.gov/</a></p><p>The GeoPlatform provides shared and trusted geospatial data, services, and applications for use by the public and by government agencies and partners to meet their mission needs.</p><h2 id="NEO"><a href="#NEO" class="headerlink" title="NEO"></a>NEO</h2><p>NASA Earth Observation</p><p><a href="https://neo.sci.gsfc.nasa.gov/" target="_blank" rel="external">https://neo.sci.gsfc.nasa.gov/</a></p><p>Atmosphere/Energy/Land/Life/Ocean</p><h2 id="NASA-Earth-Observation-Data"><a href="#NASA-Earth-Observation-Data" class="headerlink" title="NASA Earth Observation Data"></a>NASA Earth Observation Data</h2><p><a href="https://earthdata.nasa.gov/earth-observation-data" target="_blank" rel="external">https://earthdata.nasa.gov/earth-observation-data</a></p><p>##NOAA Geospatial Data and Services</p><p><a href="https://maps.ngdc.noaa.gov/" target="_blank" rel="external">https://maps.ngdc.noaa.gov/</a></p><blockquote><p>提供REST、WMS服务</p></blockquote><p>###NOAA CLASS</p><p><a href="https://www.class.ngdc.noaa.gov/saa/products/welcome" target="_blank" rel="external">https://www.class.ngdc.noaa.gov/saa/products/welcome</a></p><p>The Comprehensive Large Array-data Stewardship System (CLASS) is an electronic library of NOAA environmental data. This web site provides capabilities for finding and obtaining those data.</p><p>CLASS is NOAA’s premiere on-line facility for the distribution of NOAA and US Department of Defense (DoD) Polar-orbiting Operational Environmental Satellite (POES) data, NOAA’s Geostationary Operational Environmental Satellite (GOES) data, and derived data.</p><p>###NEODAAS</p><p><a href="https://www.neodaas.ac.uk/" target="_blank" rel="external">https://www.neodaas.ac.uk/</a></p><p>NEODAAS is a unique service providing Earth observation data to support and inform a wide range of scientific sectors, including water quality, meteorology, habitat monitoring, volcano research and monitoring, aquaculture, transport, and recreation.</p><p>###IPUMS Terra</p><p><a href="https://www.terrapop.org/" target="_blank" rel="external">https://www.terrapop.org/</a></p><p>IPUMS Terra integrates population and environmental data across disciplinary scientific domains, enabling research into dramatic transformations of human populations, the environment, and their interactions.</p><p>IPUMS stands for data integrated across time, space and scientific domains. IPUMS makes it easy to study change and conduct comparative research–by imposing consistent codes, supplying detailed documentation, and creating customized datasets. Data and services are available free of charge</p><p>###DataONE</p><p><a href="https://www.dataone.org/" target="_blank" rel="external">https://www.dataone.org/</a></p><p>Data Observation Network for Earth (DataONE) is the foundation of new innovative environmental science through a distributed framework and sustainable cyberinfrastructure that meets the needs of science and society for open, persistent, robust, and secure access to well-described and easily discovered Earth observational data.</p><p>Supported by the U.S. National Science Foundation (Phase 1 Grant <a href="http://nsf.gov/awardsearch/showAward.do?AwardNumber=0830944" target="_blank" rel="external">#ACI-0830944</a>, Phase 2 Grant <a href="http://www.nsf.gov/awardsearch/showAward?AWD_ID=1430508" target="_blank" rel="external">#ACI-1430508</a>) as one of the initial DataNets, DataONE will ensure the preservation, access, use and reuse of multi-scale, multi-discipline, and multi-national science data via three primary cyberinfrastucture elements and a broad education and outreach program.</p><h2 id="GeoNetwork-nodes"><a href="#GeoNetwork-nodes" class="headerlink" title="GeoNetwork nodes"></a>GeoNetwork nodes</h2><p>List of known GeoNetwork opensource based catalogues.</p><p><a href="https://geonetwork-opensource.org/gallery/gallery.html" target="_blank" rel="external">https://geonetwork-opensource.org/gallery/gallery.html</a></p><h1 id="2-GIS-RS-空间数据类"><a href="#2-GIS-RS-空间数据类" class="headerlink" title="2. GIS/RS 空间数据类"></a>2. GIS/RS 空间数据类</h1><h2 id="全国地理信息资源目录服务系统"><a href="#全国地理信息资源目录服务系统" class="headerlink" title="全国地理信息资源目录服务系统"></a>全国地理信息资源目录服务系统</h2><p><a href="http://www.webmap.cn/main.do?method=index" target="_blank" rel="external">http://www.webmap.cn/main.do?method=index</a></p><h3 id="国家测绘地理信息局标准地图服务"><a href="#国家测绘地理信息局标准地图服务" class="headerlink" title="国家测绘地理信息局标准地图服务"></a>国家测绘地理信息局标准地图服务</h3><p><a href="http://bzdt.nasg.gov.cn/index.jsp" target="_blank" rel="external">http://bzdt.nasg.gov.cn/index.jsp</a></p><p>标准地图依据中国和世界各国国界线画法标准编制而成，可用于新闻宣传用图、书刊报纸插图、广告展示背景图、工艺品设计底图等，也可作为编制公开版地图的参考底图。社会公众可以免费浏览、下载标准地图，直接使用标准地图时需要标注审图号。</p><p>标准地图有JPG、EPS两种数据格式，地图幅面分为64开、32开、16开、8开等。需要编辑EPS格式地图时，建议使用Adobe Illustra软件。对地图内容编辑(包括放大、缩小和裁切)改动的，公开使用前需要送测绘地理信息行政主管部门审核。</p><p>目前发布的标准地图包括中国地图83幅，世界地图51幅，专题13幅，中国地图和世界地图自助数据各1幅。</p><h3 id="Global-Data-Explorer"><a href="#Global-Data-Explorer" class="headerlink" title="Global Data Explorer"></a>Global Data Explorer</h3><p><a href="https://gdex.cr.usgs.gov/gdex/" target="_blank" rel="external">https://gdex.cr.usgs.gov/gdex/</a></p><h3 id="GEOSS"><a href="#GEOSS" class="headerlink" title="GEOSS"></a>GEOSS</h3><p><a href="http://www.geoportal.org/" target="_blank" rel="external">http://www.geoportal.org/</a></p><h3 id="National-Geoscience-Data-Centre"><a href="#National-Geoscience-Data-Centre" class="headerlink" title="National Geoscience Data Centre"></a>National Geoscience Data Centre</h3><p><a href="http://www.bgs.ac.uk/services/ngdc/home.html" target="_blank" rel="external">http://www.bgs.ac.uk/services/ngdc/home.html</a></p><h2 id="USGS-Geo-Data-Portal"><a href="#USGS-Geo-Data-Portal" class="headerlink" title="USGS Geo Data Portal"></a>USGS Geo Data Portal</h2><p><a href="https://cida.usgs.gov/gdp/" target="_blank" rel="external">https://cida.usgs.gov/gdp/</a></p><p>The Geo Data Portal (GDP) provides access to numerous datasets, including <strong>gridded data for climate and land use</strong>. Datasets can be subsetted or sumarized before download using several algorithms, and these algorithms can also be applied to other datasets hosted elsewhere.</p><p>Users can interact with the GDP through the tools listed below.</p><p>pyGDP/GDP web/geonife</p><blockquote><p><a href="https://github.com/USGS-CIDA/pyGDP" target="_blank" rel="external">pyGDP</a> provides a fast and efficient way of making calls to the USGS GeoData Portal.</p><p>pyGDP has the following algorithms: - FeatureCategoricalGridCoverage - FeatureWeightedGridStatistics - FeatureCoverageOPenDap - FeatureCoverageWCSIntersection</p><p>Blodgett, David L., Nathaniel L. Booth, Thomas C. Kunicki, Jordan I. Walker, and Roland J. Viger. Description and testing of the Geo Data Portal: Data integration framework and Web processing services for environmental science collaboration. No. 2011-1157. US Geological Survey, 2011.</p></blockquote><h3 id="INSPIRE-GEOPORTAL"><a href="#INSPIRE-GEOPORTAL" class="headerlink" title="INSPIRE GEOPORTAL"></a>INSPIRE GEOPORTAL</h3><p><a href="http://inspire-geoportal.ec.europa.eu/" target="_blank" rel="external">http://inspire-geoportal.ec.europa.eu/</a></p><h2 id="地理空间数据云"><a href="#地理空间数据云" class="headerlink" title="地理空间数据云"></a>地理空间数据云</h2><p><a href="http://www.gscloud.cn/" target="_blank" rel="external">http://www.gscloud.cn/</a></p><p>免费数据包括：</p><ul><li>Landsat系列</li><li>modis陆地标准产品、modis中国合成产品、modis 1b 标准产品</li><li><a href="http://www.gscloud.cn/sources/?cdataid=302&amp;pdataid=10" target="_blank" rel="external">DEM数字高程数据</a></li><li>NOAAA VHRR数据产品</li><li>大气污染插值数据</li><li>Sentinel 数据</li><li>TRMM系列数据</li></ul><h3 id="ASTER-GDEM"><a href="#ASTER-GDEM" class="headerlink" title="ASTER GDEM"></a>ASTER GDEM</h3><p><a href="https://gdex.cr.usgs.gov/gdex/" target="_blank" rel="external">https://gdex.cr.usgs.gov/gdex/</a></p><blockquote><p>也包括SRTM</p></blockquote><h3 id="SRTM"><a href="#SRTM" class="headerlink" title="SRTM"></a>SRTM</h3><p><a href="http://srtm.csi.cgiar.org/" target="_blank" rel="external">http://srtm.csi.cgiar.org/</a></p><p><a href="https://lta.cr.usgs.gov/SRTM" target="_blank" rel="external">https://lta.cr.usgs.gov/SRTM</a></p><h3 id="OpenTopography"><a href="#OpenTopography" class="headerlink" title="OpenTopography"></a>OpenTopography</h3><p><a href="http://www.opentopography.org/developers" target="_blank" rel="external">http://www.opentopography.org/developers</a></p><p><strong>RESTful Web service</strong> for global raster data（SRTM） access</p><h3 id="cgiar-csi-Consortium-for-Spatial-Information"><a href="#cgiar-csi-Consortium-for-Spatial-Information" class="headerlink" title="cgiar-csi |Consortium for Spatial Information"></a>cgiar-csi |<strong>Consortium for Spatial Information</strong></h3><p><a href="http://www.cgiar-csi.org/" target="_blank" rel="external">http://www.cgiar-csi.org/</a></p><p>包含 SRTM 90m</p><p>###Virtual Terrain Project</p><p><a href="http://vterrain.org/" target="_blank" rel="external">http://vterrain.org/</a></p><p>###WFS Geodata Catalog</p><p><a href="https://geoclub.de/wfs/index.php" target="_blank" rel="external">https://geoclub.de/wfs/index.php</a></p><p>Crowdsourced WFS Geodata Catalog</p><h3 id="Google-Maps-API-Elevation-API"><a href="#Google-Maps-API-Elevation-API" class="headerlink" title="Google Maps API - Elevation API"></a>Google Maps API - Elevation API</h3><p><a href="https://developers.google.com/maps/documentation/elevation/intro" target="_blank" rel="external">https://developers.google.com/maps/documentation/elevation/intro</a></p><p>通过一个简单的接口查询地球上各个位置的海拔高度数据。此外，还可以请求路径沿途的抽样海拔高度数据，以便计算路线沿途的海拔高度变化。</p><blockquote><h3 id="Bing-Map-Elevations-API"><a href="#Bing-Map-Elevations-API" class="headerlink" title="Bing Map Elevations API"></a>Bing Map Elevations API</h3><p><a href="https://msdn.microsoft.com/en-us/library/jj158959.aspx" target="_blank" rel="external">https://msdn.microsoft.com/en-us/library/jj158959.aspx</a></p><h3 id="Natural-Resources-Canada-Elevation-API"><a href="#Natural-Resources-Canada-Elevation-API" class="headerlink" title="Natural Resources Canada Elevation API"></a>Natural Resources Canada Elevation API</h3><p><a href="http://geogratis.gc.ca/site/eng/elevation" target="_blank" rel="external">http://geogratis.gc.ca/site/eng/elevation</a></p><p>###MapQuest Open Elevation API</p><p><a href="https://developer.mapquest.com/documentation/open/elevation-api" target="_blank" rel="external">https://developer.mapquest.com/documentation/open/elevation-api</a></p></blockquote><h2 id="MSDIS"><a href="#MSDIS" class="headerlink" title="MSDIS"></a>MSDIS</h2><p><a href="http://msdis.missouri.edu/" target="_blank" rel="external">http://msdis.missouri.edu/</a></p><p><a href="https://modis.ornl.gov/" target="_blank" rel="external">https://modis.ornl.gov/</a></p><p><strong>MSDIS</strong> is responsible for data storage and access, standardization of both digital and tabular data, creation of the data dictionary, compilation of metadata, and statewide GIS user information networks.</p><h4 id="MODIS-WebService"><a href="#MODIS-WebService" class="headerlink" title="MODIS WebService"></a>MODIS WebService</h4><p><a href="https://modis.ornl.gov/data/modis_webservice.html" target="_blank" rel="external">https://modis.ornl.gov/data/modis_webservice.html</a></p><h3 id="WorldDEM"><a href="#WorldDEM" class="headerlink" title="WorldDEM"></a>WorldDEM</h3><p><a href="http://www.intelligence-airbusds.com/worlddem/" target="_blank" rel="external">http://www.intelligence-airbusds.com/worlddem/</a></p><blockquote><p>高精度商业数据</p></blockquote><h2 id="遥感数据"><a href="#遥感数据" class="headerlink" title="遥感数据"></a>遥感数据</h2><p>###Copernicus Open Access Hub</p><p><a href="https://scihub.copernicus.eu/dhus/#/home" target="_blank" rel="external">https://scihub.copernicus.eu/dhus/#/home</a></p><hr><h3 id="OGC-WebService"><a href="#OGC-WebService" class="headerlink" title="OGC WebService"></a>OGC WebService</h3><p><a href="http://www.skylab-mobilesystems.com/en/wms_serverlist.html" target="_blank" rel="external">http://www.skylab-mobilesystems.com/en/wms_serverlist.html</a></p><p><a href="https://www.gebco.net/" target="_blank" rel="external">https://www.gebco.net/</a></p><p><a href="http://inspire-geoportal.ec.europa.eu/discovery/" target="_blank" rel="external">http://inspire-geoportal.ec.europa.eu/discovery/</a></p><p><a href="https://nowcoast.noaa.gov/help/#!section=mapservices" target="_blank" rel="external">https://nowcoast.noaa.gov/help/#!section=mapservices</a></p><p><a href="https://statuschecker.fgdc.gov/" target="_blank" rel="external">https://statuschecker.fgdc.gov/</a></p><p><a href="http://mesonet.agron.iastate.edu/ogc/" target="_blank" rel="external">http://mesonet.agron.iastate.edu/ogc/</a></p><p><a href="http://directory.spatineo.com/" target="_blank" rel="external">http://directory.spatineo.com/</a></p><p>天地图</p><hr><h1 id="3-水文数据"><a href="#3-水文数据" class="headerlink" title="3. 水文数据"></a>3. 水文数据</h1><p>###水利部信息中心（监测数据）</p><p><a href="http://xxzx.mwr.gov.cn/" target="_blank" rel="external">http://xxzx.mwr.gov.cn/</a></p><h3 id="CUAHSI"><a href="#CUAHSI" class="headerlink" title="CUAHSI"></a>CUAHSI</h3><p><a href="http://data.cuahsi.org/" target="_blank" rel="external">http://data.cuahsi.org/</a></p><blockquote><p>提供地图检索、数据WebService</p><p>All Registered Data Services <a href="http://hiscentral.cuahsi.org/pub_services.aspx" target="_blank" rel="external">http://hiscentral.cuahsi.org/pub_services.aspx</a></p></blockquote><h3 id="National-Snow-and-Ice-Data-Center-NSIDC"><a href="#National-Snow-and-Ice-Data-Center-NSIDC" class="headerlink" title="National Snow and Ice Data Center (NSIDC)"></a>National Snow and Ice Data Center (NSIDC)</h3><p><a href="http://nsidc.org" target="_blank" rel="external">http://nsidc.org</a></p><p>The National Snow and Ice Data Center (NSIDC) supports research into our world’s frozen realms: the snow, ice, glaciers, frozen ground, and climate interactions that make up Earth’s cryosphere. NSIDC manages and distributes scientific data, creates tools for data access, supports data users, performs scientific research, and educates the public about the cryosphere.</p><h2 id="great-lakes-observing-system"><a href="#great-lakes-observing-system" class="headerlink" title="great lakes observing system"></a>great lakes observing system</h2><p><a href="https://www.glos.us/" target="_blank" rel="external">https://www.glos.us/</a></p><p>GLOS works to make real-time and historical data publicly available to the larger Great Lakes community, benefiting data users and decision makers</p><h2 id="water-data-portal"><a href="#water-data-portal" class="headerlink" title="water data portal"></a>water data portal</h2><p><a href="http://waterdata.iwmi.org/" target="_blank" rel="external">http://waterdata.iwmi.org/</a></p><p>The International Water Management Institute (IWMI) has been doing research on water for the last 30 years. Being a non-profit research organization all the research outputs and data used for the research are shared with researchers across the globe as a global public goods (GPGs).</p><p>The Water Data Portal (WDP), following “one-stop shop” approach, provides access to a large amount of data related to <strong>water and agriculture</strong>. WDP contains <strong>meteorological, hydrological, socio-economic, spatial data layer, satellite images as well as hydrological model setups.</strong> The data in the WDP, both spatial &amp; non-spatial, are supported by the standardized metadata and are available for download by user including academia, scientists, researchers and decision makers. However, access is provided in compliance with copyrights, intellectual property rights and data agreements with our partners.</p><p>The portal is maintained by GIS, RS and Data Management (GRandD) Unit to facilitate sharing and reuse of data.</p><h3 id="USGS-Water-Services"><a href="#USGS-Water-Services" class="headerlink" title="USGS Water Services"></a>USGS Water Services</h3><p><a href="https://waterservices.usgs.gov/" target="_blank" rel="external">https://waterservices.usgs.gov/</a></p><p>This site serves <a href="http://waterdata.usgs.gov/" target="_blank" rel="external">USGS water data</a> <img src="https://waterservices.usgs.gov/images/extlink.jpeg" alt="External Link"> via automated means using web services and extensible markup language (XML) , as well as other popular media types. Services are invoked with the <strong>REST</strong> protocol. These services designed for high fault tolerance and very high availability.</p><h1 id="4-气象-天气数据"><a href="#4-气象-天气数据" class="headerlink" title="4. 气象/天气数据"></a>4. 气象/天气数据</h1><h3 id="中国气象数据网"><a href="#中国气象数据网" class="headerlink" title="中国气象数据网"></a>中国气象数据网</h3><p><a href="http://data.cma.cn/" target="_blank" rel="external">http://data.cma.cn/</a></p><h3 id="National-Weather-Service"><a href="#National-Weather-Service" class="headerlink" title="National Weather Service"></a>National Weather Service</h3><p><a href="https://www.weather.gov/gis/" target="_blank" rel="external">https://www.weather.gov/gis/</a></p><p>###Climate Data Online</p><p><a href="https://www.ncdc.noaa.gov/cdo-web/" target="_blank" rel="external">https://www.ncdc.noaa.gov/cdo-web/</a></p><h1 id="5-土壤数据"><a href="#5-土壤数据" class="headerlink" title="5. 土壤数据"></a>5. 土壤数据</h1><p>###中国土壤科学数据库</p><p><a href="http://vdb3.soil.csdb.cn/" target="_blank" rel="external">http://vdb3.soil.csdb.cn/</a></p><blockquote><p>开放在线查询或离线申请</p></blockquote><p>土壤资源数据库、肥力数据库、环境数据库、生物数据库、典型地域土壤数据库、重大项目专题数据库</p><p><a href="http://vdb3.soil.csdb.cn/extend/jsp/integrated_database_search" target="_blank" rel="external">中国土种数据库检索</a></p><h3 id="Harmonized-World-Soil-Database"><a href="#Harmonized-World-Soil-Database" class="headerlink" title="Harmonized World Soil Database"></a>Harmonized World Soil Database</h3><p><a href="http://www.fao.org/soils-portal/soil-survey/soil-maps-and-databases/harmonized-world-soil-database-v12/en/" target="_blank" rel="external">http://www.fao.org/soils-portal/soil-survey/soil-maps-and-databases/harmonized-world-soil-database-v12/en/</a></p><p>世界土壤数据库，可直接下载</p><p>###Web Soil Survey</p><p><a href="https://websoilsurvey.sc.egov.usda.gov/App/HomePage.htm" target="_blank" rel="external">https://websoilsurvey.sc.egov.usda.gov/App/HomePage.htm</a></p><p>###UK Soil Observatory (UKSO)</p><p>英国土壤数据检索入口。可以免费下载或通过数据Web服务获取数据</p><p><a href="http://www.ukso.org/home.html" target="_blank" rel="external">http://www.ukso.org/home.html</a></p><h1 id="6-土地覆被"><a href="#6-土地覆被" class="headerlink" title="6. 土地覆被"></a>6. 土地覆被</h1><h3 id="全球30米地表覆盖数据（GlobeLand30）"><a href="#全球30米地表覆盖数据（GlobeLand30）" class="headerlink" title="全球30米地表覆盖数据（GlobeLand30）"></a>全球30米地表覆盖数据（GlobeLand30）</h3><p><a href="http://www.globallandcover.com/GLC30Download/index.aspx" target="_blank" rel="external">http://www.globallandcover.com/GLC30Download/index.aspx</a></p><h3 id="马里兰大学土地覆被数据"><a href="#马里兰大学土地覆被数据" class="headerlink" title="马里兰大学土地覆被数据"></a>马里兰大学土地覆被数据</h3><p><a href="http://glcfapp.glcf.umd.edu:8080/esdi/index.jsp" target="_blank" rel="external">http://glcfapp.glcf.umd.edu:8080/esdi/index.jsp</a></p><h3 id="欧空局-GlobCover"><a href="#欧空局-GlobCover" class="headerlink" title="欧空局 GlobCover"></a>欧空局 <strong>GlobCover</strong></h3><p><a href="http://due.esrin.esa.int/page_globcover.php" target="_blank" rel="external">http://due.esrin.esa.int/page_globcover.php</a></p><h2 id="7-数据处理服务"><a href="#7-数据处理服务" class="headerlink" title="7. 数据处理服务"></a>7. 数据处理服务</h2><h3 id="TerraClip"><a href="#TerraClip" class="headerlink" title="TerraClip"></a>TerraClip</h3><p><a href="https://data.terrapop.org/terraclip" target="_blank" rel="external">https://data.terrapop.org/terraclip</a></p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[GIS / RS   主要学术期刊]]></title>
      <url>houzw.github.io.git/2017/12/10/GIS%20RS%20%20%E5%AD%A6%E6%9C%AF%E6%9C%9F%E5%88%8A/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="GIS-RS-主要学术期刊"><a href="#GIS-RS-主要学术期刊" class="headerlink" title="GIS / RS   主要学术期刊"></a>GIS / RS 主要学术期刊</h1><blockquote><p>除特殊说明，影响因子与（中科院）分区都为2016年数据</p><p>（15）表示2015年IF。OA 表示 Open Access，Top 表示 Top 期刊。</p><p>分区指中科院JCR期刊分区，以地学为主，部分属于生态学或环境科学等分区</p></blockquote><table><thead><tr><th>领域</th><th>期刊名称</th><th>SCI/SSCI</th><th>影响因子</th><th>分区</th></tr></thead><tbody><tr><td>地理</td><td>Nature Geosciences</td><td>是 Top</td><td>13.941</td><td>1</td></tr><tr><td>地学</td><td>Earth-Science Reviews</td><td>是 Top</td><td>7.051</td><td>1</td></tr><tr><td>GIS</td><td>ISPRS Journal of Photogrammetry and Remote Sensing</td><td>是 Top</td><td>6.387</td><td>1</td></tr><tr><td>RS</td><td>Remote Sensing of Environment</td><td>是 Top</td><td>6.265</td><td>1</td></tr><tr><td>环境</td><td>Environmental Science &amp; Technology</td><td>是 Top</td><td>6.198</td><td>1</td></tr><tr><td>GIS</td><td>Environmental Modelling &amp; Software <a href="计算机1区，环境科学2区">^1</a></td><td>是 Top</td><td>4.404/4.177</td><td>1</td></tr><tr><td>地学</td><td>Geoscience Frontiers [^2]</td><td>是 Top</td><td>4.256</td><td>1</td></tr><tr><td>地学</td><td>Geophysical Research Letters</td><td>是 Top</td><td>4.253</td><td>1</td></tr><tr><td>土壤</td><td>Geoderma<a href="农林科学1区，土壤科学2区">^3</a></td><td>是 Top</td><td>4.036</td><td>1</td></tr><tr><td>GIS</td><td>International Journal of Applied Earth Observation and GeoInformation</td><td>是</td><td>3.930</td><td>2</td></tr><tr><td>GIS</td><td>IEEE Transactions on Geoscience and Remote Sensing</td><td>是</td><td>4.942</td><td>2</td></tr><tr><td>地学</td><td>Geoscientific Model Development</td><td>是</td><td>3.458</td><td>2</td></tr><tr><td>地学</td><td>Journal of Geophysical Research</td><td>是</td><td>3.318（15）</td><td></td></tr><tr><td>RS</td><td>Remote Sensing</td><td>是 / OA</td><td>3.244</td><td>2</td></tr><tr><td>GIS/RS</td><td>GIScience &amp; Remote Sensing</td><td>是</td><td>3.049</td><td>3</td></tr><tr><td>水文</td><td>Hydrological Processes</td><td>是</td><td>3.014</td><td>2</td></tr><tr><td>地理</td><td>Journal of Geographical Sciences<a href="《地理学报》英文版">^4</a></td><td>是</td><td>2.364</td><td>3</td></tr><tr><td>GIS</td><td>International Journal of Digital Earth</td><td>是</td><td>2.292</td><td>2</td></tr><tr><td>地理</td><td>Annals of the Association of American Geographers</td><td>是</td><td>2.756（15）</td><td></td></tr><tr><td>地学</td><td>Progress in Physical Geography</td><td>是</td><td>3.375</td><td>2</td></tr><tr><td>地学</td><td>IEEE Geoscience and Remote Sensing Letters</td><td>是</td><td>2.761</td><td>3</td></tr><tr><td>地理</td><td>Applied Geography</td><td>是</td><td>2.687</td><td></td></tr><tr><td>GIS</td><td>Computers &amp; Geosciences</td><td>是</td><td>2.533</td><td>3</td></tr><tr><td>GIS</td><td>Geoinformatica</td><td>是</td><td>2.392</td><td>4</td></tr><tr><td>生态</td><td>Ecological Modelling</td><td>是</td><td>2.363</td><td>3</td></tr><tr><td>GIS</td><td>Cartography and Geographic Information Science</td><td>是</td><td>2.224（15）</td><td></td></tr><tr><td>GIS</td><td>Computers, Environment and Urban Systems</td><td>是</td><td>2.092（15）</td><td></td></tr><tr><td>GIS</td><td>International Journal of Geographical Information Science</td><td>是</td><td>2.502/2.37</td><td>3</td></tr><tr><td>地学</td><td>Science China-Earth Sciences</td><td>是</td><td>1.989/2.058</td><td>3</td></tr><tr><td>RS</td><td>International Journal of Remote Sensing</td><td>是</td><td>1.724</td><td>4</td></tr><tr><td>地理</td><td>Geographical Analysis</td><td>是</td><td>1.571（15）</td><td></td></tr><tr><td>GIS</td><td>Transactions in GIS</td><td>是</td><td>2.252/1.91</td><td></td></tr><tr><td>GIS</td><td>ISPRS International Journal of Geo-Information</td><td>是 / OA</td><td>1.502</td><td>4</td></tr><tr><td>GIS</td><td>Earth Science Informatics</td><td>是</td><td>1.495</td><td>4</td></tr><tr><td>环境</td><td>Environment and Planning A</td><td>是</td><td>1.460（15）</td><td></td></tr><tr><td>GIS</td><td>Photogrammetric Engineering &amp; Remote Sensing</td><td>是</td><td>1.288（15）</td><td></td></tr><tr><td>GIS</td><td>IEEE Computer Graphics and Applications</td><td>是</td><td>1.367</td><td>3</td></tr><tr><td>环境</td><td>Environment and Planning B</td><td>是</td><td>1.195（15）</td><td></td></tr><tr><td>地学</td><td>Spatial Statistics</td><td>是</td><td>1.176</td><td>4</td></tr><tr><td>地理</td><td>Chinese Geographical Science</td><td>是</td><td>1.154</td><td>4</td></tr><tr><td>RS</td><td>Journal of Applied Remote Sensing</td><td>是</td><td>1.107</td><td>4</td></tr><tr><td>地学</td><td>Journal of Earth System Sciencee</td><td>是</td><td>0.955</td><td>4</td></tr><tr><td>地理</td><td>地理学报</td><td>否</td><td></td><td>—</td></tr><tr><td>地理</td><td>地理科学进展</td><td>否</td><td>3.213</td><td>—</td></tr><tr><td>地理</td><td>地理科学</td><td>否</td><td>2.768</td><td>—</td></tr><tr><td>地理</td><td>地理研究</td><td>否</td><td>2.781</td><td>—</td></tr><tr><td>地学</td><td>测绘学报</td><td>否</td><td>1.581</td><td>—</td></tr><tr><td>地理</td><td>地理与地理信息科学</td><td>否</td><td>0.912</td><td>—</td></tr><tr><td>GIS</td><td>地球信息科学学报</td><td>否</td><td>0.911</td><td>—</td></tr><tr><td>GIS</td><td>武汉大学学报（信息科学版）</td><td>否-EI</td><td>0.811</td><td>—</td></tr></tbody></table><blockquote><p>参考：秦承志, 陈旻. 地理信息科学领域国际学术期刊等级的调查分析[J]. 地理学报, 2014, 69(4):566-572.</p></blockquote><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Spring MVC 接受的请求参数]]></title>
      <url>houzw.github.io.git/2017/11/24/Spring%20MVC%20%E6%8E%A5%E5%8F%97%E7%9A%84%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="Spring-MVC-接受的请求参数"><a href="#Spring-MVC-接受的请求参数" class="headerlink" title="Spring MVC 接受的请求参数"></a>Spring MVC 接受的请求参数</h1><p>[TOC]</p><h2 id="1-概述"><a href="#1-概述" class="headerlink" title="1. 概述"></a>1. 概述</h2><p>Spring MVC 允许以多种方式将客户端的数据传送到控制器的处理方法中：</p><ul><li>查询参数（Query Parameter）</li><li>表单参数（Form Parameter）</li><li>路径变量（Path Variable）<h2 id="2-详解"><a href="#2-详解" class="headerlink" title="2. 详解"></a>2. 详解</h2><h3 id="2-1-处理查询参数"><a href="#2-1-处理查询参数" class="headerlink" title="2.1 处理查询参数"></a>2.1 处理查询参数</h3><blockquote><p>查询参数都是String类型的，但当绑定到方法参数时会转换为相应的类型</p></blockquote></li></ul><p>在方法中使用 <code>@RequestParam</code>注解，同时可通过<code>defaultValue</code>属性设置当参数不存在时的默认值，如<br></p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">public List&lt;Spittle&gt; spittles( @RequestParam(value=&quot;max&quot;,defaultValue=MAX_LONG_AS_STRING) long max,@RequestParam(value=&quot;count&quot;,defaultValue=&quot;20&quot;) int count )</div><div class="line">// 不设置默认值时</div><div class="line">public List&lt;Spittle&gt; spittles( @RequestParam(&quot;max&quot;) long max,@RequestParam(&quot;count&quot;) int count )</div></pre></td></tr></table></figure><p></p><h3 id="2-2-处理路径参数接受输入"><a href="#2-2-处理路径参数接受输入" class="headerlink" title="2.2 处理路径参数接受输入"></a>2.2 处理路径参数接受输入</h3><ol><li>在<code>@RequestMapping</code>中添加占位符（用{}括起来）表示变量部分，如 <code>@RequestMapping(value=&quot;/{spittleId}&quot;)</code>,这样就能够处理针对“/spittles/123454”的请求。</li><li>在方法参数上添加<code>@PathVariable(&quot;spittleId&quot;)</code> 注解，如<code>public String spittle(@PathVariable(&quot;spittleId&quot;) long spittleId, Model model)</code></li><li>若方法参数名与占位符名称<strong>相同</strong>（都是spittleId），则可去掉<code>@PathVariable</code>的 value 属性：<code>public String spittle(@PathVariable long spittleId, Model model)</code><blockquote><p>此时若修改参数名，需要同步修改占位符名称</p></blockquote></li></ol><h3 id="2-3-处理表单"><a href="#2-3-处理表单" class="headerlink" title="2.3 处理表单"></a>2.3 处理表单</h3><p>使用HTML的<code>&lt;form&gt;</code>标签。</p><blockquote><p>如果form所在视图是通过return 视图名的形式渲染的，那么，form中可以没有action属性。此时，其将提交到与展现是相同的URL路径上。如，访问“/register”得到带form的<code>“/registerForm”</code>视图，则提交form时会提交到“/register”</p></blockquote><p>处理表单提交时，相应的方法参数可以使用<strong>包含与请求参数同名属性的对象</strong>（即对象属性与form中的input的<strong>name</strong>同名。若Spitter对象有属性username，则某个表单域中的name需要为username）<br>若需要对参数进行校验时，可使用Spring对Java Validation API的支持。即对参数使用<code>@Valid</code>注解，并紧跟Errors参数，以便对错误进行处理。<br>具体的校验规则在参数对象中设置，如<br></p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Spitter</span></span>&#123;</div><div class="line">    <span class="meta">@NotNull</span>   <span class="comment">//所有的注解位于 javax.validation.constraints 包中</span></div><div class="line">    <span class="meta">@Size</span>(min=<span class="number">5</span>,max=<span class="number">16</span>)</div><div class="line">    <span class="keyword">private</span> String username;<span class="comment">//非空，5-16个字符</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>则：<br></p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">processRegistration</span><span class="params">(@Valid Spitter spitter, Errors errs)</span></span></div><div class="line">&#123;</div><div class="line">   <span class="keyword">if</span>(errs.hasErrors)&#123;</div><div class="line">       <span class="keyword">return</span> <span class="string">"registerForm"</span>;<span class="comment">//如果校验失败，重新返回表单，避免重复提交</span></div><div class="line">   &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><hr><h2 id="3-补充内容"><a href="#3-补充内容" class="headerlink" title="3. 补充内容"></a>3. 补充内容</h2><blockquote><p>此部分非《Spring 实战》内容</p><h3 id="3-1-Ajax-JSON-输入"><a href="#3-1-Ajax-JSON-输入" class="headerlink" title="3.1 Ajax/JSON 输入"></a>3.1 Ajax/JSON 输入</h3><p><a href="http://blog.csdn.net/oTengYue/article/details/51598277" target="_blank" rel="external">http://blog.csdn.net/oTengYue/article/details/51598277</a><br>请求的<code>Content-Type</code>为<code>application/json</code>，请求数据在request的body中</p><ul><li>不能使用<code>String xxx</code>形式</li><li>不能使用<code>@RequestParam</code></li></ul></blockquote><p><code>@RequestBody</code>注释进行参数传递</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"buAuth/save1"</span>)</div><div class="line"><span class="meta">@ResponseBody</span></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">save1</span><span class="params">(@RequestBody BuAuth buAuth)</span></span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="string">"SUCCESS"</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>采用<code>@RequestBody</code>标注的参数，SpringMVC 框架底层能够自动完成JSON字符串转对应的Bean并注入到方法参数中，主要是通过使用<code>HandlerAdapter</code> 配置的<code>HttpMessageConverters</code>来解析post data body，然后绑定到相应的bean上的。此时Ajax发送的data值必须为Json字符串，如果Controller中需要映射到自定义Bean对象上上，则必须设置Ajax的contentType为<code>application/json</code>（或<code>application/xml</code>）。这种方式完整举例如下：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">$.ajax(&#123;</div><div class="line">    <span class="attr">type</span>: <span class="string">"POST"</span>,</div><div class="line">    <span class="attr">url</span>: <span class="string">"$!&#123;_index&#125;/buAuth/save1"</span>,</div><div class="line">    <span class="attr">data</span>:<span class="built_in">JSON</span>.stringify(dataObj) ,<span class="comment">//传递参数必须是Json字符串</span></div><div class="line">    contentType: <span class="string">"application/json; charset=utf-8"</span>,<span class="comment">//必须声明contentType为application/json,否则后台使用@RequestBody标注的话无法解析参数</span></div><div class="line">    dataType: <span class="string">"json"</span>,</div><div class="line">    <span class="attr">success</span>: <span class="function"><span class="keyword">function</span> (<span class="params">response, info</span>) </span>&#123;&#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"buAuth/save1"</span>)</div><div class="line"><span class="meta">@ResponseBody</span></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">save1</span><span class="params">(@RequestBody BuAuth buAuth)</span></span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="string">"SUCCESS"</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>注：（1）此时前端直接用<code>$.post()直接请求会有问题，ContentType默认是application/x-www-form-urlencoded</code>。需要使用<code>$.ajaxSetup()</code>标示下ContentType为<code>application/json</code>（或<code>application/xml</code>）。<br></p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">$.ajaxSetup(&#123;ContentType:&quot; application/json&quot;&#125;);</div><div class="line"></div><div class="line">$.post(&quot;$!&#123;_index&#125;/buAuth/save&quot;,&#123;buAuth:JSON.stringify(dataObj),menuIds:menu_ids&#125;,function(result)&#123;&#125;);</div></pre></td></tr></table></figure><p></p><p>（2）可以使用<code>@ResponseBody</code>传递数组，如下举例（做为整理直接引用其他博客例子）</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">var</span> saveDataAry=[];</div><div class="line"><span class="keyword">var</span> data1=&#123;<span class="string">"userName"</span>:<span class="string">"test"</span>,<span class="string">"address"</span>:<span class="string">"gz"</span>&#125;;</div><div class="line"><span class="keyword">var</span> data2=&#123;<span class="string">"userName"</span>:<span class="string">"ququ"</span>,<span class="string">"address"</span>:<span class="string">"gr"</span>&#125;;</div><div class="line">saveDataAry.push(data1);</div><div class="line">saveDataAry.push(data2);</div><div class="line">$.ajax(&#123;</div><div class="line">    <span class="attr">type</span>:<span class="string">"POST"</span>,</div><div class="line">    <span class="attr">url</span>:<span class="string">"user/saveUser"</span>,</div><div class="line">    <span class="attr">dataType</span>:<span class="string">"json"</span>,</div><div class="line">    <span class="attr">contentType</span>:<span class="string">"application/json"</span>,</div><div class="line">    <span class="attr">data</span>:<span class="built_in">JSON</span>.stringify(saveData),</div><div class="line">    <span class="attr">success</span>:<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123; &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"saveUser"</span>, method = &#123;RequestMethod.POST &#125;&#125;) </div><div class="line"><span class="meta">@ResponseBody</span>  </div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveUser</span><span class="params">(@RequestBody List&lt;User&gt; users)</span> </span>&#123; </div><div class="line">    userService.batchSave(users); </div><div class="line">&#125;</div></pre></td></tr></table></figure><p>（3）Controller中的同一个方法只能使用<code>@ResponseBody</code>标记一个参数。也即是说无法直接通过该方法同时传递多个对象，不过可以间接通过设置一个中间pojo对象（设置不同的属性）来达到传递多个对象的效果。举例如下：<br></p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> buAuthPage = &#123;</div><div class="line">    <span class="attr">buAuth</span> :   data,</div><div class="line">    <span class="attr">menuInfo</span> : &#123;<span class="attr">code</span>:<span class="string">"100"</span>&#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">$.ajax(&#123;</div><div class="line">    <span class="attr">type</span>: <span class="string">"POST"</span>,</div><div class="line">    <span class="attr">url</span>: <span class="string">"$!&#123;_index&#125;/buAuth/save5"</span>,</div><div class="line">    <span class="attr">data</span>: <span class="built_in">JSON</span>.stringify(buAuthPage),</div><div class="line">    <span class="attr">contentType</span>: <span class="string">"application/json; charset=utf-8"</span>,</div><div class="line">    <span class="attr">dataType</span>: <span class="string">"json"</span>,</div><div class="line">    <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure><p></p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BuAuthPage</span> </span>&#123;</div><div class="line">    BuAuth buAuth;</div><div class="line">    <span class="function"><span class="keyword">public</span> BuAuth <span class="title">getBuAuth</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> buAuth;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBuAuth</span><span class="params">(BuAuth buAuth)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.buAuth = buAuth;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> MenuInfo <span class="title">getMenuInfo</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> menuInfo;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMenuInfo</span><span class="params">(MenuInfo menuInfo)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.menuInfo = menuInfo;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"buAuth/save5"</span>)</div><div class="line"><span class="meta">@ResponseBody</span></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">save5</span><span class="params">(@RequestBody BuAuthPage buAuthPage)</span></span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="string">"SUCCESS"</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>（4）Axios默认的请求数据类型就是<code>application/json</code></p><h3 id="3-2-multipart参数"><a href="#3-2-multipart参数" class="headerlink" title="3.2 multipart参数"></a>3.2 multipart参数</h3><h3 id="3-3-接收-header-数据"><a href="#3-3-接收-header-数据" class="headerlink" title="3.3 接收 header 数据"></a>3.3 接收 header 数据</h3><blockquote><p><a href="http://www.logicbig.com/tutorials/spring-framework/spring-web-mvc/spring-mvc-request-header/" target="_blank" rel="external">http://www.logicbig.com/tutorials/spring-framework/spring-web-mvc/spring-mvc-request-header/</a><br>有时候，需要接收并处理请求头中的数据，此时使用<code>@RequestHeader</code>注解（Controller方法参数）</p></blockquote><p>几种形式：</p><ul><li><code>@RequestHeader(&quot;User-Agent&quot;) String userAgent</code>、 <code>@RequestHeader(&quot;If-Modified-Since&quot;) Date date</code></li><li><code>@RequestHeader(value=&quot;User-Agent&quot;, defaultValue=&quot;foo&quot;) String userAgent</code></li><li><code>@RequestHeader HttpHeaders headers</code></li><li><code>@RequestHeader Map&lt;String, String&gt; header</code></li></ul><blockquote><p>也可以使用<code>HttpServletRequest</code>， <code>request.getHeader(&quot;code&quot;)</code></p></blockquote><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Mybatis分页插件PageHelper使用]]></title>
      <url>houzw.github.io.git/2017/11/24/Mybatis%E5%88%86%E9%A1%B5%E6%8F%92%E4%BB%B6PageHelper%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h2 id="Mybatis分页插件PageHelper使用"><a href="#Mybatis分页插件PageHelper使用" class="headerlink" title="Mybatis分页插件PageHelper使用"></a>Mybatis分页插件PageHelper使用</h2><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sqlSessionFactory"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.SqlSessionFactoryBean"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"druidDataSource"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"configLocation"</span> <span class="attr">value</span>=<span class="string">"classpath:config/mybatis.xml"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"mapperLocations"</span> <span class="attr">value</span>=<span class="string">"classpath*:org/egc/cybersolim/xml/*.xml"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"typeAliasesPackage"</span> <span class="attr">value</span>=<span class="string">"org.egc.cybersolim.domain"</span>/&gt;</span></div><div class="line">    <span class="comment">&lt;!-- Mybatis_PageHelper 分页插件配置 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"plugins"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">array</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.github.pagehelper.PageHelper"</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"properties"</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">value</span>&gt;</span></div><div class="line">                        dialect=postgresql</div><div class="line">                        offsetAsPageNum=true</div><div class="line">                        rowBoundsWithCount=true</div><div class="line">                        reasonable=true</div><div class="line">                    <span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">array</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div></pre></td></tr></table></figure><h2 id="使用实例"><a href="#使用实例" class="headerlink" title="使用实例"></a>使用实例</h2><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"queryByType"</span>)</div><div class="line"><span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">queryByType</span><span class="params">(@RequestParam(<span class="string">"types[]"</span>)</span> String[] types, Integer limit, Integer offset, String order)</span></div><div class="line">    &#123;</div><div class="line">        String querytype = <span class="string">""</span>;</div><div class="line">        <span class="keyword">for</span> (String type : types) &#123;</div><div class="line">            <span class="keyword">if</span> (Strings.isNullOrEmpty(type))</div><div class="line">                <span class="keyword">continue</span>;</div><div class="line">            <span class="keyword">else</span></div><div class="line">                querytype = type;</div><div class="line">        &#125;</div><div class="line">        PageHelper.startPage(offset / limit + <span class="number">1</span>, limit);</div><div class="line">        List&lt;Res&gt; list = resService.queryByParentCode(querytype);</div><div class="line">        PageInfo pageInfo = <span class="keyword">new</span> PageInfo(list);<span class="comment">//分页信息</span></div><div class="line">        DataTable dt = <span class="keyword">new</span> DataTable(list, pageInfo.getTotal());</div><div class="line">        dt.setPageNumber(pageInfo.getPageNum());</div><div class="line">        dt.setPageSize(pageInfo.getPageSize());</div><div class="line">        dt.setSortOrder(order);</div><div class="line">        Map&lt;String, Object&gt; result = dt.getDataMap();</div><div class="line">        <span class="keyword">return</span> result;</div><div class="line">    &#125;</div></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[52°North-WPS-学习-发布处理服务-01]]></title>
      <url>houzw.github.io.git/2017/08/21/52%C2%B0North-WPS-%E5%AD%A6%E4%B9%A0-%E5%8F%91%E5%B8%83%E5%A4%84%E7%90%86%E6%9C%8D%E5%8A%A1-01/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:01 GMT+0800 (中国标准时间) --><h1 id="52°North-WPS-学习-发布处理服务-01"><a href="#52°North-WPS-学习-发布处理服务-01" class="headerlink" title="52°North-WPS-学习-发布处理服务-01"></a>52°North-WPS-学习-发布处理服务-01</h1><blockquote><p><a href="https://wiki.52north.org/Geoprocessing/TutorialProcessDevelopmentKit" target="_blank" rel="external">使用 52°North WPS-Extension-Skeleton开发自定义处理过程</a></p><p>WPS-Extension-Skeleton 项目的 <a href="https://github.com/52North/WPS-Extension-Skeleton" target="_blank" rel="external">GitHub</a></p></blockquote><h3 id="使用Maven"><a href="#使用Maven" class="headerlink" title="使用Maven"></a>使用Maven</h3><p>项目POM文件</p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">n52-wps.version</span>&gt;</span>3.6.1<span class="tag">&lt;/<span class="name">n52-wps.version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">slf4j.version</span>&gt;</span>1.7.25<span class="tag">&lt;/<span class="name">slf4j.version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;slf4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-over-slf4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;slf4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jul-to-slf4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;slf4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jcl-over-slf4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;slf4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.n52.wps<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>52n-wps-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;n52-wps.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">      	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.n52.wps<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>52n-wps-io-geotools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;n52-wps.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.n52.wps<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>52n-wps-algorithm<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;n52-wps.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 拷贝依赖jar包 --&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-dependency-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">executions</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">execution</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>copy-dependencies<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></div><div class="line">              <span class="tag">&lt;<span class="name">goal</span>&gt;</span>copy-dependencies<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">              	<span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span>$&#123;project.build.directory&#125;/lib<span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div><div class="line">          <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">repositories</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">repository</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">id</span>&gt;</span>n52-releases<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">name</span>&gt;</span>n52-releases<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://52north.org/maven/repo/releases/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="编译源码"><a href="#编译源码" class="headerlink" title="编译源码"></a>编译源码</h3><blockquote><p>可选， 可以选择下载已经打包好的 war 包： <a href="https://github.com/52North/WPS/releases" target="_blank" rel="external">https://github.com/52North/WPS/releases</a></p></blockquote><p>开始之前，需要配置好 WPS source. 按此 <a href="https://wiki.52north.org/Geoprocessing/TutorialWpsEclipseIndigoGit" target="_blank" rel="external">说明</a> 进行操作，并参考 <a href="https://github.com/52North/WPS。" target="_blank" rel="external">https://github.com/52North/WPS。</a></p><p>即，安装配置好 git 和 maven之后，获取 WPS源码：<code>git clone https://github.com/52North/WPS.git</code></p><p>然后导入 Eclipse 或 IDEA，等待maven 下载相关依赖。</p><p>然后 <code>mvn clean install -P with-geotools -DSkipTests</code> 其中，<code>-DSkipTests</code>为跳过测试，可以去掉。</p><p>并且，WPS的pom中，若部分插件如果报错，可以注释掉</p><p>确保项目pom文件中WPS模块的版本与需要使用的WPS版本相匹配</p><h2 id="扩展WPS-扩展抽象自描述算法"><a href="#扩展WPS-扩展抽象自描述算法" class="headerlink" title="扩展WPS-扩展抽象自描述算法"></a>扩展WPS-扩展抽象自描述算法</h2><blockquote><p><a href="https://wiki.52north.org/Geoprocessing/ExtendAbstractSelfDescribingAlgorithm" target="_blank" rel="external">Extend AbstractSelfDescribingAlgorithm</a></p></blockquote><p>此部分内容说明如何在52°North WPS中使用一个java文件开发和部署一个自定义处理过程。此过程将会生成一个 <strong>ProcessDescription</strong> 文件。</p><p><strong>注意</strong>，支持所选定的DataBinding 的所有Parsers/Generators的格式将会被添加到 ProcessDescription 文件中。如果你需要控制你的算法所支持的格式类型，你可能需要选择使用 <a href="https://wiki.52north.org/Geoprocessing/ExtendAbstractAlgorithm" target="_blank" rel="external">AbstractAlgorithm</a>，并参照此<a href="https://wiki.52north.org/Geoprocessing/ExtendAbstractAlgorithm" target="_blank" rel="external">教程</a>. AbstractSelfDescribingAlgorithm 对ProcessDescription的某些特定元素有所限制。例如，你<em>不能指定处理（process）的标题和摘要</em>。如果需要更多的控制，可以 <a href="https://wiki.52north.org/Geoprocessing/ExtendAbstractAnnotatedAlgorithm" target="_blank" rel="external">继承 AbstractAnnotatedAlgorithm</a>.</p><h2 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h2><blockquote><p>完整代码 <a href="https://wiki.52north.org/pub/Geoprocessing/ExtendAbstractSelfDescribingAlgorithm/ConvexHullDemo.java" target="_blank" rel="external">https://wiki.52north.org/pub/Geoprocessing/ExtendAbstractSelfDescribingAlgorithm/ConvexHullDemo.java</a></p></blockquote><h3 id="创建自定义处理文件"><a href="#创建自定义处理文件" class="headerlink" title="创建自定义处理文件"></a>创建自定义处理文件</h3><ol><li>新建 package: 如 <code>org.n52.wps.demo</code></li><li>新建Class <code>ConvexHullDemo</code></li><li>使新类继承 <code>AbstractSelfDescribingAlgorithm</code></li></ol><h3 id="实现处理"><a href="#实现处理" class="headerlink" title="实现处理"></a>实现处理</h3><p>继承 <code>AbstractSelfDescribingAlgorithm</code>之后，需要实现5个方法</p><ol><li><code>public List getInputIdentifiers()</code></li></ol><p>此方法给出所有<strong>输入数据</strong>的<strong>标识符列表</strong>。因为我们实现的是ConvexHull 算法，因此只需要 几何要素类型的数据。定义标识符为“<em>FEATURES</em>”</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">List&lt;String&gt; list = <span class="keyword">new</span> ArrayList();</div><div class="line">list.add(<span class="string">"FEATURES"</span>);</div><div class="line"><span class="keyword">return</span> list;</div></pre></td></tr></table></figure><ol><li><code>public List getOutputIdentifiers()</code></li></ol><p>此方法给出所有产生的<strong>输出数据</strong>的标识符列表。ConvexHull 算法生成多边形，因此命名数据标识符为“polygons”</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">List&lt;String&gt; list = <span class="keyword">new</span> ArrayList();</div><div class="line">list.add(<span class="string">"polygons"</span>);</div><div class="line"><span class="keyword">return</span> list;</div></pre></td></tr></table></figure><ol><li><code>public Class getInputDataType(String identifier)</code></li></ol><p>此方法列出指定输入数据标识符的<strong>所有输入数据类型</strong>。此例中，输入数据为<em>FEATURES</em>，输出类必须是<strong>特定的绑定 </strong><em>binding</em>。</p><p>由于我们想使用 JTS 中支持Geotools 特性的算法, 因而使用 <strong>GTVectorDataBinding</strong> 并返回:</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">if</span> (identifier.equalsIgnoreCase(<span class="string">"FEATURES"</span>)) &#123;</div><div class="line">        <span class="keyword">return</span> GTVectorDataBinding.class;</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</div></pre></td></tr></table></figure><ol><li><code>public Class getOutputDataType(String identifier)</code></li></ol><p>此方法列出给定输出数据标识符的所有输出数据类型。在本例中，输出数据为<em>polygons</em>，此外亦知 JTS输出GeoTools要素，因此</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">if</span> (identifier.equalsIgnoreCase(<span class="string">"polygons"</span>)) &#123;</div><div class="line">        <span class="keyword">return</span> GTVectorDataBinding.class;</div><div class="line">&#125; </div><div class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</div></pre></td></tr></table></figure><ol><li><p><code>public Map&lt;String, IData&gt; run(Map&lt;String, List&lt;IData&gt;&gt; inputData)</code></p><p>此方法处理<strong>业务逻辑</strong>。</p><p>首先<strong>检查所有输入数据是否已准备</strong>：</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">if</span> (inputData == <span class="keyword">null</span> || !inputData.containsKey(<span class="string">"FEATURES"</span>)) &#123;</div><div class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Error while allocating input parameters"</span>);</div><div class="line">&#125;</div><div class="line">List&lt;IData&gt; dataList = inputData.get(<span class="string">"FEATURES"</span>);</div><div class="line"><span class="keyword">if</span> (dataList == <span class="keyword">null</span> || dataList.size() != <span class="number">1</span>) &#123;</div><div class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Error while allocating input parameters"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>然后获取Geotools 要素集合：</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">IData firstInputData = dataList.get(<span class="number">0</span>);</div><div class="line">FeatureCollection featureCollection = ((GTVectorDataBinding) firstInputData).getPayload();</div></pre></td></tr></table></figure><p>迭代所有要素以获取所有的坐标信息，存储在coordinateList列表中</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">FeatureIterator iter = featureCollection.features();</div><div class="line">List&lt;Coordinate&gt; coordinateList = <span class="keyword">new</span> ArrayList&lt;Coordinate&gt;();</div><div class="line"><span class="keyword">int</span> counter = <span class="number">0</span>;</div><div class="line"><span class="keyword">while</span> (iter.hasNext()) &#123;</div><div class="line">      SimpleFeature feature = (SimpleFeature) iter.next();</div><div class="line">      <span class="keyword">if</span> (feature.getDefaultGeometry() == <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NullPointerException(<span class="string">"defaultGeometry is null in feature id: "</span>+ feature.getID());</div><div class="line">          &#125;</div><div class="line">        Geometry geom = (Geometry) feature.getDefaultGeometry();</div><div class="line">        Coordinate[] coordinateArray = geom.getCoordinates();</div><div class="line">        <span class="keyword">for</span>(Coordinate coordinate : coordinateArray)&#123;</div><div class="line">              coordinateList.add(coordinate);</div><div class="line">         &#125;</div><div class="line">&#125;</div><div class="line">iter.close();</div></pre></td></tr></table></figure><p>下一步，将coordinateList转为数组，以作为JTS中函数的输入</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">Coordinate[] coordinateArray = <span class="keyword">new</span> Coordinate[coordinateList.size()];</div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;coordinateList.size(); i++)&#123;</div><div class="line">        coordinateArray[i] = coordinateList.get(i);</div><div class="line">&#125;</div><div class="line">com.vividsolutions.jts.algorithm.ConvexHull convexHull = <span class="keyword">new</span> com.vividsolutions.jts.algorithm.ConvexHull(coordinateArray, <span class="keyword">new</span> GeometryFactory());</div><div class="line">Geometry geometry = convexHull.getConvexHull();</div></pre></td></tr></table></figure><p>同时使用生成的geometry新建Geotools要素</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">String uuid = UUID.randomUUID().toString();</div><div class="line">SimpleFeatureType featureType = GTHelper.createFeatureType(geometry, uuid, featureCollection.getSchema().getCoordinateReferenceSystem());</div><div class="line">GTHelper.createGML3SchemaForFeatureType(featureType);</div><div class="line">Feature feature = GTHelper.createFeature(<span class="string">"0"</span>, geometry, featureType);</div></pre></td></tr></table></figure><p>然后新建要素集合，并将上面的结果添加到里面</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">SimpleFeatureCollection fOut = DefaultFeatureCollections.newCollection();</div><div class="line">fOut.add((SimpleFeature) feature);</div></pre></td></tr></table></figure><p>最后的步骤是创建一个标准的输出hashmap，以输出标识符为key，以一个IData对象（此例中为GTVectordataBinding）为value。</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">HashMap&lt;String, IData&gt; result = <span class="keyword">new</span> HashMap&lt;String, IData&gt;();</div><div class="line">result.put(<span class="string">"polygons"</span>, <span class="keyword">new</span> GTVectorDataBinding(fOut));</div><div class="line"><span class="keyword">return</span> result;</div></pre></td></tr></table></figure></li></ol><h2 id="发布处理服务"><a href="#发布处理服务" class="headerlink" title="发布处理服务"></a>发布处理服务</h2><h2 id="1-使用管理控制台发布处理服务"><a href="#1-使用管理控制台发布处理服务" class="headerlink" title="1. 使用管理控制台发布处理服务"></a>1. 使用管理控制台发布处理服务</h2><blockquote><p>原文中包含图片说明</p><p><a href="https://wiki.52north.org/Geoprocessing/DeployProcessViaAdminConsole" target="_blank" rel="external">https://wiki.52north.org/Geoprocessing/DeployProcessViaAdminConsole</a></p></blockquote><h4 id="打开管理控制台"><a href="#打开管理控制台" class="headerlink" title="打开管理控制台"></a>打开管理控制台</h4><ul><li>确认servlet容器（如tomcat）已经运行</li><li>浏览器中打开<a href="http://localhost:8080/wps/" target="_blank" rel="external">http://localhost:8080/wps/</a></li><li>点击52°North <strong>WPS Web Admin Console</strong> 或 直接 <a href="http://localhost:8080/wps/webAdmin/index.jsp" target="_blank" rel="external">http://localhost:8080/wps/webAdmin/index.jsp</a></li><li>以用户名 <em>wps</em> 和密码 <em>wps</em> 登录</li></ul><h4 id="上传处理文件"><a href="#上传处理文件" class="headerlink" title="上传处理文件"></a>上传处理文件</h4><ul><li><p>单击<strong>Upload Process</strong></p></li><li><p>在弹出的对话框中，在第一个文本框中输入开发的java处理程序的完整限定名, e.g.: <code>org.n52.wps.demo.AbstractAlgorithmExample</code></p></li><li><p>根据说明选择实现类 java 文件</p></li><li><p>若实现类继承自 AbstractAlgorithm，那么还需要指定ProcessDescription 文件的路径</p></li><li><p>点击 <strong>Send files</strong>.</p></li><li><p>源码文件将会在服务后台编译，并成为一个新的WPS服务.</p><blockquote><p><strong>特别注意</strong>：由于此示例中包含了Geotools的内容，因此 <strong>一定要额外下载官方提供的 geotools-package！</strong>例如 <a href="https://52north.org/delivery/releases/wps/3.6.2/wps-3.6.2-geotools-package.zip" target="_blank" rel="external">WPS 3.6.2 GeoTools package</a> ，并将解压后得到的 <code>WEB-INF</code> 下的<strong><code>lib</code> 和 <code>web.xml</code> </strong>覆盖掉 war 包中的 相应内容！不然的话，不管是上传源码进行发布，或是采用jar包形式发布，都会导致<strong>编译失败、部署失败</strong>！</p><p><code>Could not load algorithm com.vtech.wps.ConvexHullDemo. ProcessDescription Not Valid.</code></p><p>同理，如果使用了其他的 jar，也应该加入到<code>WEB-INF</code> 下的 <code>lib</code> 中！</p></blockquote></li></ul><h4 id="激活处理服务"><a href="#激活处理服务" class="headerlink" title="激活处理服务"></a>激活处理服务</h4><ul><li><p>切换到 <strong>Algorithm Repositories</strong> 选项卡</p></li><li><p>滚动到 <strong>LocalAlgorithmReporitory</strong></p></li><li><p>点击算法仓库中最后一个算法下面的 <strong>加号</strong></p></li><li><p>添加 key 为<strong>Algorithm</strong> ，值为处理类的全限定名，如<code>org.n52.wps.demo.AbstractAlgorithmExample</code></p></li><li><p>点击<strong>save</strong></p></li><li><p>点击<strong>Save and Activate Configuration</strong></p></li><li><p>新建的处理服务将会出现在<a href="http://localhost:8080/wps/WebProcessingService?Request=GetCapabilities&amp;Service=WPS" target="_blank" rel="external">http://localhost:8080/wps/WebProcessingService?Request=GetCapabilities&amp;Service=WPS</a> 列表中，例如</p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">wps:Process</span> <span class="attr">wps:processVersion</span>=<span class="string">"1.0.0"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">ows:Identifier</span>&gt;</span>com.vtech.wps.ConvexHullDemo<span class="tag">&lt;/<span class="name">ows:Identifier</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">ows:Title</span>&gt;</span>com.vtech.wps.ConvexHullDemo<span class="tag">&lt;/<span class="name">ows:Title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">wps:Process</span>&gt;</span></div></pre></td></tr></table></figure></li></ul><h3 id="2-使用打包的jar文件发布一个或多个服务"><a href="#2-使用打包的jar文件发布一个或多个服务" class="headerlink" title="2. 使用打包的jar文件发布一个或多个服务"></a>2. 使用打包的jar文件发布一个或多个服务</h3><blockquote><p><a href="https://wiki.52north.org/Geoprocessing/DeployProcessesViaJarFile" target="_blank" rel="external">https://wiki.52north.org/Geoprocessing/DeployProcessesViaJarFile</a></p><p><a href="https://github.com/52North/WPS-Extension-Skeleton" target="_blank" rel="external">https://github.com/52North/WPS-Extension-Skeleton</a></p></blockquote><h4 id="将jar文件添加到WPS库"><a href="#将jar文件添加到WPS库" class="headerlink" title="将jar文件添加到WPS库"></a>将jar文件添加到WPS库</h4><p>定位到 <code>%PATH_TO_WPS_WEBAPP%/WEB-INF/lib</code>，然后将jar文件拷贝进去</p><h4 id="在WPS中激活处理服务"><a href="#在WPS中激活处理服务" class="headerlink" title="在WPS中激活处理服务"></a>在WPS中激活处理服务</h4><p>若你将处理服务的实现类的全限定名添加到了<code>org.n52.wps.server.IAlgorithm</code>文件中（<code>/META-INF/services/org.n52.wps.server.IAlgorithm</code>，没有则新建一个）， 那么不需要额外的操作，处理服务会自动添加到WPS中。</p><p>若需要使处理服务失效，需要disable <code>ServiceLoaderAlgorithmRepository</code> 或者直接从<code>lib</code>中移除对应的jar文件。</p><p>若没有使用ServiceLoaderAlgorithmRepository，那么你需要手动添加处理服务到WPS配置：</p><ul><li>登录到管理控制台<a href="http://localhost:8080/wps/webAdmin/index.jsp" target="_blank" rel="external">http://localhost:8080/wps/webAdmin/index.jsp</a></li><li>按照上面的<strong>激活处理服务</strong>操作</li></ul><h2 id="执行发布的服务"><a href="#执行发布的服务" class="headerlink" title="执行发布的服务"></a>执行发布的服务</h2><ul><li>使用内置的 XML 客户端</li><li>使用<a href="https://wiki.52north.org/Geoprocessing/TutorialClientAPI" target="_blank" rel="external">客户端 API</a></li><li>使用 ArcMap 客户端</li></ul><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[52°North-WPS-学习-客户端API教程]]></title>
      <url>houzw.github.io.git/2017/08/20/52%C2%B0North-WPS-%E5%AD%A6%E4%B9%A0-%E5%AE%A2%E6%88%B7%E7%AB%AFAPI%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:01 GMT+0800 (中国标准时间) --><h1 id="52°North-WPS-学习-客户端API教程"><a href="#52°North-WPS-学习-客户端API教程" class="headerlink" title="52°North-WPS-学习-客户端API教程"></a>52°North-WPS-学习-客户端API教程</h1><blockquote><p><a href="https://wiki.52north.org/Geoprocessing/ClientAPI" target="_blank" rel="external">https://wiki.52north.org/Geoprocessing/ClientAPI</a></p><p><a href="https://wiki.52north.org/Geoprocessing/TutorialClientAPI" target="_blank" rel="external">https://wiki.52north.org/Geoprocessing/TutorialClientAPI</a></p></blockquote><h2 id="1-获取SDK-maven"><a href="#1-获取SDK-maven" class="headerlink" title="1. 获取SDK (maven)"></a>1. 获取SDK (maven)</h2><p>在maven的配置文件的相关profile中，或者项目的pom文件中添加组件仓库</p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">repository</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">id</span>&gt;</span>n52-releases<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">name</span>&gt;</span>52n Releases<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://52north.org/maven/repo/releases<span class="tag">&lt;/<span class="name">url</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">releases</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">repository</span>&gt;</span></div></pre></td></tr></table></figure><p>添加项目依赖<br></p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.n52.wps<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>52n-wps-client-lib<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.6.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>从github获取<a href="https://github.com/52North/WPS/blob/master/52n-wps-webapp/src/main/webapp/config/wps_config.xml" target="_blank" rel="external">wps_config.xml</a>文件（如果直接使用的war包，一般在<code>config</code>目录下已经存在），将其放置到 classpath 目录（maven项目的 resources下面），或者在第一次调用代码时使用它：</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">WPSConfig.getInstance(<span class="string">"path to your wps_config.xml"</span>);</div></pre></td></tr></table></figure><h2 id="2-GetCapabilities"><a href="#2-GetCapabilities" class="headerlink" title="2. GetCapabilities"></a>2. GetCapabilities</h2><p>此部分说明如何请求 WPS Capabilities文档并处理响应。示例：</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> CapabilitiesDocument <span class="title">requestGetCapabilities</span><span class="params">(String url)</span> <span class="keyword">throws</span> WPSClientException </span>&#123;</div><div class="line">        WPSClientSession wpsClient = WPSClientSession.getInstance(); <span class="comment">// 初始化WPSClient session</span></div><div class="line">        <span class="keyword">boolean</span> connected = wpsClient.connect(url);<span class="comment">//注册WPS URL</span></div><div class="line"></div><div class="line">        CapabilitiesDocument capabilities = wpsClient.getWPSCaps(url);<span class="comment">// 发生capabilities 请求</span></div><div class="line"></div><div class="line">        ProcessBriefType[] processList = capabilities.getCapabilities()             .getProcessOfferings().getProcessArray();</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (ProcessBriefType process : processList) &#123;</div><div class="line">            System.out.println(process.getIdentifier().getStringValue());</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> capabilities;</div><div class="line">    &#125;</div></pre></td></tr></table></figure><p>请求获得的Capabilities Document 结构与WPS规范中的一样。要获取详细信息，例如处理列表（ list of processes），需要通过ProcessOfferings ：</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">capabilities.getCapabilities().getProcessOfferings().getProcessArray();</div></pre></td></tr></table></figure><p>每个处理都是遵循WPS规范的ProcessBriefType 类型。获取处理过程实例标识符的方法：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">process.getIdentifier().getStringValue());</div></pre></td></tr></table></figure><h2 id="3-DescribeProcess"><a href="#3-DescribeProcess" class="headerlink" title="3. DescribeProcess"></a>3. DescribeProcess</h2><p>此部分说明如何请求 WPS DescribeProcess 文档并处理响应。示例：</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> ProcessDescriptionType <span class="title">requestDescribeProcess</span><span class="params">(String url, String processID)</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line"></div><div class="line">        WPSClientSession wpsClient = WPSClientSession.getInstance();</div><div class="line">       <span class="comment">// 获取处理方法描述，processID 是上面获得的实例标识符，即 ows:Identifier 的值</span></div><div class="line">        ProcessDescriptionType processDescription = wpsClient.getProcessDescription(url, processID); </div><div class="line">44System.out.println(<span class="string">"Process description:\n"</span> + processDescription.xmlText() + <span class="string">"\n"</span>);</div><div class="line">        <span class="comment">// 获取处理过程的所有的输入数据描述</span></div><div class="line">  		InputDescriptionType[] inputList = processDescription.getDataInputs().getInputArray(); </div><div class="line"></div><div class="line">        <span class="keyword">for</span> (InputDescriptionType input : inputList) &#123;</div><div class="line">            System.out.println(input.getIdentifier().getStringValue());</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> processDescription;</div><div class="line">    &#125;</div></pre></td></tr></table></figure><h2 id="4-Execute"><a href="#4-Execute" class="headerlink" title="4. Execute"></a>4. Execute</h2><p>此部分说明如何执行 WPS 处理并处理响应。示例：</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">// create the request, add literal input</span></div><div class="line"><span class="function"><span class="keyword">public</span> IData <span class="title">executeProcess</span><span class="params">(String url, String processID, ProcessDescriptionType processDescription, HashMap&lt;String, Object&gt; inputs)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        ExecuteRequestBuilder executeBuilder = <span class="keyword">new</span> ExecuteRequestBuilder(processDescription);</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (InputDescriptionType input : processDescription.getDataInputs().getInputArray()) &#123;</div><div class="line">            String inputName = input.getIdentifier().getStringValue();</div><div class="line">            Object inputValue = inputs.get(inputName);</div><div class="line">            <span class="keyword">if</span> (input.getLiteralData() != <span class="keyword">null</span>) &#123;</div><div class="line">                <span class="keyword">if</span> (inputValue <span class="keyword">instanceof</span> String) &#123;</div><div class="line">                    executeBuilder.addLiteralData(inputName,(String) inputValue);</div><div class="line">                &#125;</div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (input.getComplexData() != <span class="keyword">null</span>) &#123;</div><div class="line">                <span class="comment">// Complexdata by value</span></div><div class="line">                <span class="keyword">if</span> (inputValue <span class="keyword">instanceof</span> FeatureCollection) &#123;</div><div class="line">                    IData data = <span class="keyword">new</span> GTVectorDataBinding((FeatureCollection) inputValue);</div><div class="line">                    executeBuilder.addComplexData(inputName,data,</div><div class="line">                                    <span class="string">"http://schemas.opengis.net/gml/3.1.1/base/feature.xsd"</span>,</div><div class="line">                                    <span class="keyword">null</span>, <span class="string">"text/xml"</span>);</div><div class="line">                &#125;</div><div class="line">                <span class="comment">// Complexdata Reference</span></div><div class="line">                <span class="keyword">if</span> (inputValue <span class="keyword">instanceof</span> String) &#123;</div><div class="line">                    executeBuilder.addComplexDataReference(inputName, (String) inputValue,</div><div class="line">                                    <span class="string">"http://schemas.opengis.net/gml/3.1.1/base/feature.xsd"</span>,</div><div class="line">                                    <span class="keyword">null</span>, <span class="string">"text/xml"</span>);</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                <span class="keyword">if</span> (inputValue == <span class="keyword">null</span> &amp;&amp; input.getMinOccurs().intValue() &gt; <span class="number">0</span>) &#123;</div><div class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> IOException(<span class="string">"Property not set, but mandatory: "</span>+ inputName);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        executeBuilder.setMimeTypeForOutput(<span class="string">"text/xml"</span>, <span class="string">"result"</span>);</div><div class="line">        executeBuilder.setSchemaForOutput(</div><div class="line">                <span class="string">"http://schemas.opengis.net/gml/3.1.1/base/feature.xsd"</span>,<span class="string">"result"</span>);</div><div class="line">        <span class="comment">// build and send the request document</span></div><div class="line">  		ExecuteDocument execute = executeBuilder.getExecute();</div><div class="line">        execute.getExecute().setService(<span class="string">"WPS"</span>);</div><div class="line">        WPSClientSession wpsClient = WPSClientSession.getInstance();</div><div class="line">        Object response = wpsClient.execute(url, execute);</div><div class="line"> 		</div><div class="line">        <span class="keyword">if</span> (response <span class="keyword">instanceof</span> ExecuteResponseDocument) &#123;</div><div class="line">            ExecuteResponseDocument responseDoc = (ExecuteResponseDocument) responseObject;</div><div class="line">            ExecuteResponseAnalyser analyser = <span class="keyword">new</span> ExecuteResponseAnalyser(</div><div class="line">                    execute, responseDoc, processDescription);</div><div class="line">            IData data = (IData) analyser.getComplexDataByIndex(<span class="number">0</span>,GTVectorDataBinding.class);</div><div class="line">            <span class="keyword">return</span> data;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"Exception: "</span> + response.toString());</div><div class="line">    &#125;</div></pre></td></tr></table></figure><p>首先需要初始化一个 ExecuteRequestBuilder 对象，用于构建一个真正的WPS Execute请求。其需要的 ProcessDescriptionType 对象可通过第3部分的DescribeProcess 获取。</p><p>然后，需要设置输入数据，有3种方式：</p><h4 id="Literaldata-input"><a href="#Literaldata-input" class="headerlink" title="Literaldata input"></a>Literaldata input</h4><p>字符型数据，如数字、字符串等。</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">executeBuilder.addLiteralData(inputName, (String)inputValue);</div></pre></td></tr></table></figure><p>输入数据的标识符（inputName）可通过ProcessDescription获取。</p><h4 id="Complexdata-input-by-value"><a href="#Complexdata-input-by-value" class="headerlink" title="Complexdata input by value"></a>Complexdata input by value</h4><p>复合型数据，如GML Features，使用</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">IData data = <span class="keyword">new</span> GTVectorDataBinding((FeatureCollection) inputValue);</div><div class="line">executeBuilder.addComplexData(inputName, data, <span class="string">"http://schemas.opengis.net/gml/3.1.1/base/feature.xsd"</span>, <span class="keyword">null</span>,<span class="string">"text/xml"</span>);</div></pre></td></tr></table></figure><p>需要一个输入数据标识符和一个IData类型的实际数据。<code>IData</code> 是一个接口，常用的实现类有：</p><ul><li>Geotools 中用于矢量数据的 <strong>GTVectorDataBinding</strong></li><li>用于任意文件数据的 <strong>GenericFileDataBinding</strong> . 同样需要数据模式（ schema）, 编码（encoding） 和输入数据类型的 mimetype. 支持的数据格式可通过 ProcessDescription查看。</li></ul><h4 id="Complexdata-input-by-reference"><a href="#Complexdata-input-by-reference" class="headerlink" title="Complexdata input by reference"></a>Complexdata input by reference</h4><p>复合型数据，如只通过<strong>URL</strong>获取的 GML Features，使用</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">executeBuilder.addComplexDataReference(inputName, (String) inputValue, <span class="string">"http://schemas.opengis.net/gml/3.1.1/base/feature.xsd"</span>, <span class="keyword">null</span>,<span class="string">"text/xml"</span>);</div></pre></td></tr></table></figure><p>需要输入数据标识符以及一个指向地理数据资源的<strong>URL</strong>的<strong>字符串</strong>，如 WFS Getlayers 请求（URL）. 此外还需要In schema, encoding 和mimetype.</p><p>当设置完所有输入数据之后，必须设置输出数据的格式，包括<strong>mimetype</strong>和 可选的schema（用于矢量数据），例如</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">executeBuilder.setMimeTypeForOutput(<span class="string">"text/xml"</span>, <span class="string">"result"</span>);</div><div class="line">executeBuilder.setSchemaForOutput(<span class="string">"http://schemas.opengis.net/gml/3.1.1/base/feature.xsd"</span>, <span class="string">"result"</span>);</div></pre></td></tr></table></figure><p>此方法为标识符为“result”的输出数据设置了schema。支持的schema列表可在ProcessDescription 中查询得到。</p><p><strong>Note</strong>: 编码（encoding）只有在与默认的编码不一致时才需要设置。如果需要参数二进制数据值，可以设置编码为 “<strong>base64</strong>“ 。</p><h3 id="完整示例代码"><a href="#完整示例代码" class="headerlink" title="完整示例代码"></a><a href="https://github.com/52North/WPS/blob/master/52n-wps-client-lib/src/main/java/org/n52/wps/client/example/WPSClientExample.java" target="_blank" rel="external">完整示例代码</a></h3><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">import</span> net.opengis.wps.x100.CapabilitiesDocument;</div><div class="line"><span class="keyword">import</span> net.opengis.wps.x100.ExecuteDocument;</div><div class="line"><span class="keyword">import</span> net.opengis.wps.x100.ExecuteResponseDocument;</div><div class="line"><span class="keyword">import</span> net.opengis.wps.x100.InputDescriptionType;</div><div class="line"><span class="keyword">import</span> net.opengis.wps.x100.ProcessBriefType;</div><div class="line"><span class="keyword">import</span> net.opengis.wps.x100.ProcessDescriptionType;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.geotools.feature.FeatureCollection;</div><div class="line"><span class="keyword">import</span> org.n52.wps.client.ExecuteResponseAnalyser;</div><div class="line"><span class="keyword">import</span> org.n52.wps.client.WPSClientException;</div><div class="line"><span class="keyword">import</span> org.n52.wps.client.WPSClientSession;</div><div class="line"><span class="keyword">import</span> org.n52.wps.io.data.IData;</div><div class="line"><span class="keyword">import</span> org.n52.wps.io.data.binding.complex.GTVectorDataBinding;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WPSClientExample</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testExecute</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">        String wpsURL = <span class="string">"http://localhost:8080/wps/WebProcessingService"</span>;</div><div class="line"></div><div class="line">        String processID = <span class="string">"org.n52.wps.server.algorithm.SimpleBufferAlgorithm"</span>;</div><div class="line"></div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            ProcessDescriptionType describeProcessDocument = requestDescribeProcess(</div><div class="line">                    wpsURL, processID);</div><div class="line">            System.out.println(describeProcessDocument);</div><div class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">            <span class="comment">// TODO Auto-generated catch block</span></div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            CapabilitiesDocument capabilitiesDocument = requestGetCapabilities(wpsURL);</div><div class="line">            ProcessDescriptionType describeProcessDocument = requestDescribeProcess(</div><div class="line">                    wpsURL, processID);</div><div class="line">            <span class="comment">// define inputs</span></div><div class="line">            HashMap&lt;String, Object&gt; inputs = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</div><div class="line">            <span class="comment">// complex data by reference</span></div><div class="line">            inputs.put(</div><div class="line">                    <span class="string">"data"</span>,</div><div class="line">                    <span class="string">"http://geoprocessing.demo.52north.org:8080/geoserver/ows?service=WFS&amp;version=1.0.0&amp;request=GetFeature&amp;typeName=topp:tasmania_roads&amp;outputFormat=GML3"</span>);</div><div class="line">            <span class="comment">// literal data</span></div><div class="line">            inputs.put(<span class="string">"width"</span>, <span class="string">"0.05"</span>);</div><div class="line">            IData data = executeProcess(wpsURL, processID,</div><div class="line">                    describeProcessDocument, inputs);</div><div class="line"></div><div class="line">            <span class="keyword">if</span> (data <span class="keyword">instanceof</span> GTVectorDataBinding) &#123;</div><div class="line">                FeatureCollection featureCollection = ((GTVectorDataBinding) data)</div><div class="line">                        .getPayload();</div><div class="line">                System.out.println(featureCollection.size());</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (WPSClientException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> CapabilitiesDocument <span class="title">requestGetCapabilities</span><span class="params">(String url)</span></span></div><div class="line">            <span class="keyword">throws</span> WPSClientException &#123;</div><div class="line"></div><div class="line">        WPSClientSession wpsClient = WPSClientSession.getInstance();</div><div class="line"></div><div class="line">        wpsClient.connect(url);</div><div class="line"></div><div class="line">        CapabilitiesDocument capabilities = wpsClient.getWPSCaps(url);</div><div class="line"></div><div class="line">        ProcessBriefType[] processList = capabilities.getCapabilities()</div><div class="line">                .getProcessOfferings().getProcessArray();</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (ProcessBriefType process : processList) &#123;</div><div class="line">            System.out.println(process.getIdentifier().getStringValue());</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> capabilities;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> ProcessDescriptionType <span class="title">requestDescribeProcess</span><span class="params">(String url,</span></span></div><div class="line">            String processID) <span class="keyword">throws</span> IOException &#123;</div><div class="line"></div><div class="line">        WPSClientSession wpsClient = WPSClientSession.getInstance();</div><div class="line"></div><div class="line">        ProcessDescriptionType processDescription = wpsClient.getProcessDescription(url, processID);</div><div class="line"></div><div class="line">        InputDescriptionType[] inputList = processDescription.getDataInputs()</div><div class="line">                .getInputArray();</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (InputDescriptionType input : inputList) &#123;</div><div class="line">            System.out.println(input.getIdentifier().getStringValue());</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> processDescription;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> IData <span class="title">executeProcess</span><span class="params">(String url, String processID,</span></span></div><div class="line">            ProcessDescriptionType processDescription,</div><div class="line">            HashMap&lt;String, Object&gt; inputs) <span class="keyword">throws</span> Exception &#123;</div><div class="line">        org.n52.wps.client.ExecuteRequestBuilder executeBuilder = <span class="keyword">new</span> org.n52.wps.client.ExecuteRequestBuilder(processDescription);</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (InputDescriptionType input : processDescription.getDataInputs()</div><div class="line">                .getInputArray()) &#123;</div><div class="line">            String inputName = input.getIdentifier().getStringValue();</div><div class="line">            Object inputValue = inputs.get(inputName);</div><div class="line">            <span class="keyword">if</span> (input.getLiteralData() != <span class="keyword">null</span>) &#123;</div><div class="line">                <span class="keyword">if</span> (inputValue <span class="keyword">instanceof</span> String) &#123;</div><div class="line">                    executeBuilder.addLiteralData(inputName,</div><div class="line">                            (String) inputValue);</div><div class="line">                &#125;</div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (input.getComplexData() != <span class="keyword">null</span>) &#123;</div><div class="line">                <span class="comment">// Complexdata by value</span></div><div class="line">                <span class="keyword">if</span> (inputValue <span class="keyword">instanceof</span> FeatureCollection) &#123;</div><div class="line">                    IData data = <span class="keyword">new</span> GTVectorDataBinding(</div><div class="line">                            (FeatureCollection) inputValue);</div><div class="line">                    executeBuilder</div><div class="line">                            .addComplexData(</div><div class="line">                                    inputName,</div><div class="line">                                    data,</div><div class="line">                                    <span class="string">"http://schemas.opengis.net/gml/3.1.1/base/feature.xsd"</span>,</div><div class="line">                                    <span class="keyword">null</span>, <span class="string">"text/xml"</span>);</div><div class="line">                &#125;</div><div class="line">                <span class="comment">// Complexdata Reference</span></div><div class="line">                <span class="keyword">if</span> (inputValue <span class="keyword">instanceof</span> String) &#123;</div><div class="line">                    executeBuilder</div><div class="line">                            .addComplexDataReference(</div><div class="line">                                    inputName,</div><div class="line">                                    (String) inputValue,</div><div class="line">                                    <span class="string">"http://schemas.opengis.net/gml/3.1.1/base/feature.xsd"</span>,</div><div class="line">                                    <span class="keyword">null</span>, <span class="string">"text/xml"</span>);</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                <span class="keyword">if</span> (inputValue == <span class="keyword">null</span> &amp;&amp; input.getMinOccurs().intValue() &gt; <span class="number">0</span>) &#123;</div><div class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> IOException(<span class="string">"Property not set, but mandatory: "</span></div><div class="line">                            + inputName);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        executeBuilder.setMimeTypeForOutput(<span class="string">"text/xml"</span>, <span class="string">"result"</span>);</div><div class="line">        executeBuilder.setSchemaForOutput(</div><div class="line">                <span class="string">"http://schemas.opengis.net/gml/3.1.1/base/feature.xsd"</span>,</div><div class="line">                <span class="string">"result"</span>);</div><div class="line">        ExecuteDocument execute = executeBuilder.getExecute();</div><div class="line">        execute.getExecute().setService(<span class="string">"WPS"</span>);</div><div class="line">        WPSClientSession wpsClient = WPSClientSession.getInstance();</div><div class="line">        Object responseObject = wpsClient.execute(url, execute);</div><div class="line">        <span class="keyword">if</span> (responseObject <span class="keyword">instanceof</span> ExecuteResponseDocument) &#123;</div><div class="line">            ExecuteResponseDocument response = (ExecuteResponseDocument) responseObject;</div><div class="line">            ExecuteResponseAnalyser analyser = <span class="keyword">new</span> ExecuteResponseAnalyser(</div><div class="line">                    execute, response, processDescription);</div><div class="line">            IData data = (IData) analyser.getComplexDataByIndex(<span class="number">0</span>,</div><div class="line">                    GTVectorDataBinding.class);</div><div class="line">            <span class="keyword">return</span> data;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"Exception: "</span> + responseObject.toString());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        WPSClientExample client = <span class="keyword">new</span> WPSClientExample();</div><div class="line">        client.testExecute();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="测试中出现的问题"><a href="#测试中出现的问题" class="headerlink" title="测试中出现的问题"></a>测试中出现的问题</h3><p>出现<code>org.n52.wps.commons.WPSConfig - Can not get java:comp/env context</code></p><p>并报错</p><p><code>ERROR org.n52.wps.client.ExecuteResponseAnalyser - Could not find suitable parser</code></p><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><ol><li><p>使用<code>wps_config_geotools.xml</code>文件，不要用<code>wps_config.xml</code></p></li><li><p>默认会查找<code>src/main/resources</code>下的<code>wps_config.xml</code>，所有可以将<code>wps_config_geotools.xml</code>文件放到resources下并改名为<code>wps_config.xml</code></p></li><li><p>或者</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">// testExecute 方法中</span></div><div class="line">String path = <span class="keyword">this</span>.getClass().getResource(<span class="string">"/"</span>).getPath();</div><div class="line"><span class="comment">// 此处放在 src/main/resources/config 下</span></div><div class="line">WPSConfig.getInstance(path + <span class="string">"config/wps_config_geotools.xml"</span>);</div></pre></td></tr></table></figure><p>​</p></li></ol><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[GeoTools 读取 Geotiff 文件]]></title>
      <url>houzw.github.io.git/2017/07/27/GeoTools-%E8%AF%BB%E5%8F%96-Geotiff-%E6%96%87%E4%BB%B6/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="GeoTools-读取-Geotiff-文件"><a href="#GeoTools-读取-Geotiff-文件" class="headerlink" title="GeoTools 读取 Geotiff 文件"></a>GeoTools 读取 Geotiff 文件</h1><h2 id="maven-相关配置"><a href="#maven-相关配置" class="headerlink" title="maven 相关配置"></a>maven 相关配置</h2><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">4<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">   		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.geotools<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">   		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gt-geotiff<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">4<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.geotools<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gt-epsg-hsql<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- ... --&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">repositories</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">repository</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>osgeo<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">name</span>&gt;</span>Open Source Geospatial Foundation Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://download.osgeo.org/webdav/geotools/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></div></pre></td></tr></table></figure><h2 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h2><blockquote><p><a href="https://gis.stackexchange.com/questions/106882/reading-each-pixel-of-each-band-of-multiband-geotiff-with-geotools-java" target="_blank" rel="external">Reading each pixel of each band of multiband GeoTiff with GeoTools</a></p></blockquote><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">(java.io.File file)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line"></div><div class="line">        ParameterValue&lt;OverviewPolicy&gt; policy = AbstractGridFormat.OVERVIEW_POLICY.createValue();</div><div class="line">        policy.setValue(OverviewPolicy.IGNORE);</div><div class="line"></div><div class="line">        <span class="comment">//this will basically read 4 tiles worth of data at once from the disk...</span></div><div class="line">        ParameterValue&lt;String&gt; gridsize = AbstractGridFormat.SUGGESTED_TILE_SIZE.createValue();</div><div class="line"></div><div class="line">        <span class="comment">//Setting read type: use JAI ImageRead (true) or ImageReaders read methods (false)</span></div><div class="line">        ParameterValue&lt;Boolean&gt; useJaiRead = AbstractGridFormat.USE_JAI_IMAGEREAD.createValue();</div><div class="line">        useJaiRead.setValue(<span class="keyword">true</span>);</div><div class="line"></div><div class="line">        GridCoverage2DReader reader = <span class="keyword">new</span> GeoTiffReader(file);</div><div class="line">        GridEnvelope dimensions = reader.getOriginalGridRange();</div><div class="line">        GridCoordinates maxDimensions = dimensions.getHigh();</div><div class="line">        <span class="keyword">int</span> w = maxDimensions.getCoordinateValue(<span class="number">0</span>)+<span class="number">1</span>;</div><div class="line">        <span class="keyword">int</span> h = maxDimensions.getCoordinateValue(<span class="number">1</span>)+<span class="number">1</span>;</div><div class="line">        <span class="keyword">int</span> numBands = reader.getGridCoverageCount();</div><div class="line"></div><div class="line">        GridCoverage2D coverage = reader.read(</div><div class="line">            <span class="keyword">new</span> GeneralParameterValue[]&#123;policy, gridsize, useJaiRead&#125;</div><div class="line">        );</div><div class="line">        GridGeometry2D geometry = coverage.getGridGeometry();</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;w; i++) &#123;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;h; j++) &#123;</div><div class="line">                org.geotools.geometry.Envelope2D pixelEnvelop =</div><div class="line">                geometry.gridToWorld(<span class="keyword">new</span> GridEnvelope2D(i, j, <span class="number">1</span>, <span class="number">1</span>));</div><div class="line"></div><div class="line">                <span class="keyword">double</span> lat = pixelEnvelop.getCenterY();</div><div class="line">                <span class="keyword">double</span> lon = pixelEnvelop.getCenterX();</div><div class="line">              </div><div class="line">                <span class="keyword">double</span>[] vals = <span class="keyword">new</span> <span class="keyword">double</span>[numBands];</div><div class="line">                coverage.evaluate(<span class="keyword">new</span> GridCoordinates2D(i, j), vals);</div><div class="line">                <span class="comment">//Do something!</span></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><blockquote><p><a href="https://dzone.com/articles/access-information-geotiff" target="_blank" rel="external">Access Information from GeoTIFF using Java</a></p></blockquote><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GeoTIFFTest</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String url = <span class="string">"jdbc:postgresql://localhost/bag"</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> GridCoverage2D grid;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Raster gridData; <span class="comment">// java.awt.image.Raster;</span></div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        initTif();</div><div class="line">        loadData();</div><div class="line">    &#125;</div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">initTif</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        File tiffFile = <span class="keyword">new</span> File(<span class="string">"/Volumes/Iomega_HDD/mac/data/r44hn1.tif"</span>);</div><div class="line">        GeoTiffReader reader = <span class="keyword">new</span> GeoTiffReader(tiffFile);</div><div class="line">        grid =reader.read(<span class="keyword">null</span>);</div><div class="line">        gridData = grid.getRenderedImage().getData();</div><div class="line">    &#125;</div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">getValue</span><span class="params">(<span class="keyword">double</span> x, <span class="keyword">double</span> y)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        GridGeometry2D gg = grid.getGridGeometry();</div><div class="line">        DirectPosition2D posWorld = <span class="keyword">new</span> DirectPosition2D(x,y);</div><div class="line">        GridCoordinates2D posGrid = gg.worldToGrid(posWorld);</div><div class="line"> </div><div class="line">        <span class="comment">// envelope is the size in the target projection</span></div><div class="line">        <span class="keyword">double</span>[] pixel=<span class="keyword">new</span> <span class="keyword">double</span>[<span class="number">1</span>];</div><div class="line">        <span class="keyword">double</span>[] data = gridData.getPixel(posGrid.x, posGrid.y, pixel);</div><div class="line">        <span class="keyword">return</span> data[<span class="number">0</span>];</div><div class="line">    &#125;</div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">loadData</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        Connection conn = DriverManager.getConnection(url);</div><div class="line">        QueryRunner runner = <span class="keyword">new</span> QueryRunner(); <span class="comment">// org.apache.commons.dbutils.QueryRunner;</span></div><div class="line">        <span class="keyword">final</span> Map&lt;Long, Double&gt; map = <span class="keyword">new</span> HashMap&lt;Long, Double&gt;();</div><div class="line">        ResultSetHandler handler = <span class="keyword">new</span> ResultSetHandler() &#123;</div><div class="line"> </div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> Object <span class="title">handle</span><span class="params">(ResultSet resultSet)</span> <span class="keyword">throws</span> SQLException </span>&#123;</div><div class="line">                <span class="keyword">while</span> (resultSet.next()) &#123;</div><div class="line">                    String point = resultSet.getString(<span class="string">"point"</span>);</div><div class="line">                    <span class="keyword">double</span> x = Double.parseDouble(point.substring(</div><div class="line">                            point.indexOf(<span class="string">'('</span>) + <span class="number">1</span>,</div><div class="line">                            point.indexOf(<span class="string">' '</span>)</div><div class="line">                    ));</div><div class="line"> </div><div class="line">                    <span class="keyword">double</span> y = Double.parseDouble(point.substring(</div><div class="line">                            point.indexOf(<span class="string">' '</span>) + <span class="number">1</span>,</div><div class="line">                            point.indexOf(<span class="string">')'</span>)</div><div class="line">                    ));</div><div class="line"> </div><div class="line">                    <span class="keyword">try</span> &#123;</div><div class="line">                        <span class="keyword">double</span> hoogte = getValue(x, y);</div><div class="line">                        map.put(resultSet.getLong(<span class="string">"gid"</span>),hoogte);</div><div class="line">                    &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">                        e.printStackTrace();  </div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;  </div><div class="line">            &#125;</div><div class="line">        &#125;;</div><div class="line">        runner.query(conn, <span class="string">"SELECT gid, ST_AsText(ST_Centroid(geovlak)) as point \n"</span> +</div><div class="line">                <span class="string">"FROM bag8mrt2014.pand\n"</span> +</div><div class="line">                <span class="string">"WHERE geovlak &amp;&amp; ST_MakeEnvelope(130153, 408769,132896, 410774, 28992) ORDER by gid ;"</span>, handler);</div><div class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span> (Long key : map.keySet()) &#123;</div><div class="line">            System.out.println(<span class="string">"Inserting for key = "</span> + key + <span class="string">" value: "</span> + map.get(key));</div><div class="line">            <span class="keyword">int</span> col = runner.update(conn, <span class="string">"UPDATE bag8mrt2014.pand SET hoogte= ? where gid = ?"</span>,</div><div class="line">            map.get(key), key);</div><div class="line">            count++;</div><div class="line">            <span class="keyword">if</span> (count%<span class="number">100</span> == <span class="number">0</span>) &#123;</div><div class="line">                System.out.println(<span class="string">"count = "</span> + count);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><blockquote><p><a href="http://docs.geotools.org/latest/userguide/tutorial/raster/image.html" target="_blank" rel="external">http://docs.geotools.org/latest/userguide/tutorial/raster/image.html</a></p></blockquote><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[BAT 批处理程序学习]]></title>
      <url>houzw.github.io.git/2017/05/30/BAT-%E6%89%B9%E5%A4%84%E7%90%86%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:01 GMT+0800 (中国标准时间) --><h1 id="批处理文件编写与使用"><a href="#批处理文件编写与使用" class="headerlink" title="批处理文件编写与使用"></a>批处理文件编写与使用</h1><blockquote><p><a href="http://www.cnblogs.com/mq0036/p/3412171.html" target="_blank" rel="external">BAT 批处理脚本教程</a></p><p><a href="http://xstarcd.github.io/wiki/windows/windows_cmd_summary_commands.html" target="_blank" rel="external">批处理常用命令总结 - 批处理命令简介</a></p></blockquote><p><strong>批处理</strong>（Batch）是一种简化的脚本语言，它应用于DOS和Windows系统中，它是由DOS或者Windows系统内嵌的命令解释器（通常是COMMAND.COM或者CMD.EXE）解释运行。</p><p>批处理文件具有<code>.bat</code>或者<code>.cmd</code>的扩展名 ，这个文件的每一行都是一条DOS命令。</p><p>批处理文件也是一种简单的程序，可以通过条件语句(if)和流程控制语句(goto)来控制命令运行的流程，在批处理中也可以使用循环语句(for)来循环执行一条命令。</p><h3 id="入门示例"><a href="#入门示例" class="headerlink" title="入门示例"></a>入门示例</h3><p>新建<code>bat</code>文件之后，输入内容</p><ul><li><p>打开文本编辑器</p><p><code>notepad.exe</code></p></li><li><p>把屏幕上的内容拷贝进文本文件中</p><p><code>copy con 1.txt</code> 回车后输入内容，ctrl+z 结束输入</p></li></ul><h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><blockquote><p>查看使用说明： <code>命令 /?</code>, 如 <code>start /?</code></p></blockquote><ol><li><p><strong><code>echo [{on|off}][message]</code>：用于在屏幕显示文字信息。</strong></p><p>on：允许批处理文件在执行的过程中显示命令。</p><p>off：禁止…。即只执行命令但是不显示在屏幕上面</p><p><code>echo. echo, echo] echo[ echo; echo: echo/ echo\ echo+ echo=</code> 等都可以实现换行，但<code>echo.</code>最常用</p></li><li><p><strong><code>rem</code> 表示此命令后的字符为解释行（注释），不执行</strong>，只是给自己今后参考用的（相当于程序中的注释）。</p></li><li><p><strong><code>@[command]</code>：用于屏蔽执行的命令显示在屏幕上。</strong></p><p>屏蔽单条命令</p></li><li><p><strong><code>goto label</code> 跳转到指定标号处</strong></p><p>以<code>:label</code>来构建一个标号，然后<code>GOTO label</code> 跳转到标号<code>:label</code> 处，执行标号后的命令。</p></li><li><p><strong><code>pause</code>：用于暂停。</strong></p></li><li><p><strong><code>call [绝对路径] Filename 或者 [:label]</code> 在一个批处理文件中调用另外一个批处理文件</strong></p><p><code>[绝对路径]Filename</code>：另一个批处理文件。</p><p><code>[:label]</code> ：像goto一样，call也可以跳到某个标签之后执行</p></li><li><p><strong>start：用于启动一个单独的命令行窗口。</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">START [&quot;title&quot;] [/D path] [/I] [/MIN] [/MAX] [/SEPARATE | /SHARED]</div><div class="line">      [/LOW | /NORMAL | /HIGH | /REALTIME | /ABOVENORMAL | /BELOWNORMAL]</div><div class="line">      [/NODE &lt;NUMA node&gt;] [/AFFINITY &lt;hex affinity mask&gt;] [/WAIT] [/B]</div><div class="line">      [command/program] [parameters]</div><div class="line">      </div><div class="line">    &quot;title&quot;     在窗口标题栏中显示的标题。</div><div class="line">    path        启动目录。</div><div class="line">    B           启动应用程序，但不创建新窗口。</div><div class="line">                应用程序已忽略 ^C 处理。除非应用程序</div><div class="line">                启用 ^C 处理，否则 ^Break 是唯一可以中断</div><div class="line">                该应用程序的方式。</div><div class="line">    I           新的环境将是传递</div><div class="line">                给 cmd.exe 的原始环境，而不是当前环境。</div><div class="line">    MIN         以最小化方式启动窗口。</div><div class="line">    MAX         以最大化方式启动窗口。</div><div class="line">    SEPARATE    在单独的内存空间中启动 16 位 Windows 程序。</div><div class="line">    SHARED      在共享内存空间中启动 16 位 Windows 程序。</div><div class="line">    LOW         在 IDLE 优先级类中启动应用程序。</div><div class="line">    NORMAL      在 NORMAL 优先级类中启动应用程序。</div><div class="line">    HIGH        在 HIGH 优先级类中启动应用程序。</div><div class="line">    REALTIME    在 REALTIME 优先级类中启动应用程序。</div><div class="line">    ABOVENORMAL 在 ABOVENORMAL 优先级类中启动应用程序。</div><div class="line">    BELOWNORMAL 在 BELOWNORMAL 优先级类中启动应用程序。</div><div class="line">    NODE        将首选非一致性内存结构(NUMA)节点指定为</div><div class="line">                十进制整数。</div><div class="line">    AFFINITY    将处理器关联掩码指定为十六进制数字。</div><div class="line">                进程被限制在这些处理器上运行。</div><div class="line"></div><div class="line">                将 /AFFINITY 和 /NODE 结合使用时，会对关联掩码</div><div class="line">                进行不同的解释。指定关联掩码，以便将零位作为起始位置(就如将 NUMA</div><div class="line">                节点的处理器掩码向右移位一样)。</div><div class="line">                进程被限制在指定关联掩码和 NUMA 节点之间的</div><div class="line">                那些通用处理器上运行。</div><div class="line">                如果没有通用处理器，则进程被限制在</div><div class="line">                指定的 NUMA 节点上运行。</div><div class="line">    WAIT        启动应用程序并等待它终止。</div><div class="line">    command/program</div><div class="line">                如果它是内部 cmd 命令或批文件，则</div><div class="line">                该命令处理器是使用 cmd.exe 的 /K 开关运行的。</div><div class="line">                这表示运行该命令之后，该窗口</div><div class="line">                将仍然存在。</div><div class="line"></div><div class="line">                如果它不是内部 cmd 命令或批文件，则</div><div class="line">                它就是一个程序，并将作为一个窗口化应用程序或</div><div class="line">                控制台应用程序运行。</div><div class="line"></div><div class="line">    parameters  这些是传递给 command/program 的参数。</div><div class="line"></div><div class="line">注意: 在 64 位平台上不支持 SEPARATE 和 SHARED 选项。</div></pre></td></tr></table></figure></li><li><p><strong>set [variable=[string]]：定义变量和设置环境。</strong></p><p>variable 指定环境变量名。string 指定要指派给变量的一系列字符串。</p><p>SET 命令不允许变量名含有等号。</p><p>SET 命令中添加了两个新命令行开关:</p><ul><li><code>SET /A expression</code> 指定等号右边的字符串为被评估的<strong>数字表达式</strong>（用 , 分割）。</li><li><code>SET /P variable=[promptString]</code> 允许<strong>将变量数值设成用户输入的一行输入</strong>。读取输入行之前，显示指定的 promptString（提示字符串）。promptString 可以是空的。</li></ul></li><li><p><strong>条件语句 if…else…</strong></p></li><li><p><strong>循环语句</strong></p></li><li><p><strong>子程序</strong></p></li></ol><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>批处理中存在两种类型变量，一类可称为<strong>系统变量</strong>，即系统已经给这些变量定义了值，我们只需要调用；另一类可称为<strong>用户变量</strong>或<strong>自定义变量</strong>，即由用户来赋予变量值。</p><h4 id="系统变量"><a href="#系统变量" class="headerlink" title="系统变量"></a>系统变量</h4><blockquote><p>举例</p></blockquote><ul><li><p><code>%APPDATA%</code> 本地 返回默认情况下<strong>应用程序存储数据的位置</strong>。</p></li><li><p><code>%CMDCMDLINE%</code> 本地 返回用来启动当前的 Cmd.exe 的准确命令行。</p></li><li><p><code>%COMPUTERNAME%</code> 系统 返回<strong>计算机的名称</strong>。</p></li><li><p><code>%DATE%</code> 系统 返回<strong>当前日期</strong>。 <code>%TIME%</code></p></li><li><p><code>%HOMEPATH%</code> 系统 返回<strong>用户主目录</strong>的完整路径。基于主目录值而设置。用户主目录是在“本地用户和组”中指定的。</p></li><li><p><code>%PATH%</code> 系统 指定<strong>可执行文件的搜索路径</strong></p></li><li><p><code>%PATHEXT%</code> 系统 返回操作系统认为可执行的文件扩展名的列表。</p></li><li><p><code>%NUMBER_OF_PROCESSORS%</code> 系统 指定安装在计算机上的<strong>处理器的数目</strong>。类似的还有<code>%PROCESSOR_ARCHITECTURE%</code>、<code>%PROCESSOR_IDENTFIER%</code>、<code>%PROCESSOR_LEVEL%</code> 、<code>%PROCESSOR_REVISION%</code></p></li><li><p><code>%SYSTEMROOT%</code> 系统 返回 Windows server operating system 根目录的位置。 <code>%SYSTEMDRIVE%</code> <code>%WINDIR%</code></p></li><li><p><code>%ERRORLEVEL%</code> 系统 返回<strong>上一条命令的错误代码</strong>。通常用非零值表示错误。</p></li><li><p><code>%RANDOM%</code> 系统 返回 0 到 32767 之间的<strong>任意十进制数字</strong>。由 Cmd.exe 生成。</p></li><li><p><code>%USERNAME%</code> 本地 返回当前登录的用户的名称。</p><h5 id="参数变量"><a href="#参数变量" class="headerlink" title="参数变量"></a>参数变量</h5><p><code>%0 %1 %2 %3 %4 %5 %6 %7 %8 %9 %*</code></p><p><code>%1 %2 %3 %4 %5 %6 %7 %8 %9</code> 表示执行bat时输入的第1个、第2个。。。第9个参数，可以在后面的命令中使用</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">:: 若本文件名为test.bat。执行时输入参数：test.bat paramA paramB</div><div class="line">echo %1 %2</div><div class="line">:: 输出第1个变量值：paramA</div><div class="line">echo %1</div></pre></td></tr></table></figure><p><code>%*</code>是一次返回所有参数</p><p><code>%0</code> 这个不是返回参数的值，其作用有两种：</p><ul><li>返回批处理所在绝对路径（<code>echo %0</code> ）</li><li>无限循环执行BAT</li></ul></li></ul><h4 id="用户变量"><a href="#用户变量" class="headerlink" title="用户变量"></a>用户变量</h4><blockquote><p>使用set命令赋值</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">:: 注意set中的 “=” 两侧不能有空格！</div><div class="line">set var=值 </div><div class="line">echo %var%</div></pre></td></tr></table></figure><p>如果想让<strong>用户手工输入变量的值</strong>,而不是在代码里指定,可以用用set命令的<code>/p</code> 参数：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">@echo off</div><div class="line">set /p var=请输入变量的值</div><div class="line">echo %var%</div><div class="line">pause</div></pre></td></tr></table></figure><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>1、<strong><code>:: 注释内容</code></strong>（第一个冒号后也可以跟任何一个非字母数字的字符）<br>2、<strong><code>rem 注释内容</code> </strong>（不能出现重定向符号和管道符号）<br>3、<code>echo 注释内容</code> （不能出现重定向符号和管道符号）〉nul<br>4、if not exist nul 注释内容（不能出现重定向符号和管道符号）<br>5、<code>:注释内容</code> （注释文本不能与已有标签重名）<br>6、<strong><code>%注释内容%</code></strong> （可以用作行间注释，不能出现重定向符号和管道符号）<br>7、goto 标签 注释内容（可以用作说明goto的条件和执行内容）<br>8、:标签 注释内容（可以用作标签下方段的执行内容）</p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用Jena执行SPARQL的Select和Ask查询]]></title>
      <url>houzw.github.io.git/2017/05/10/%E4%BD%BF%E7%94%A8Jena%E6%89%A7%E8%A1%8CSPARQL%E7%9A%84Select%E5%92%8CAsk%E6%9F%A5%E8%AF%A2/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="使用Jena执行SPARQL的Select和ask查询"><a href="#使用Jena执行SPARQL的Select和ask查询" class="headerlink" title="使用Jena执行SPARQL的Select和ask查询"></a>使用Jena执行SPARQL的Select和ask查询</h1><p>提供基本的接口和实现类，可在其他代码中直接调用</p><h2 id="Select查询"><a href="#Select查询" class="headerlink" title="Select查询"></a>Select查询</h2><h3 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h3><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * The interface Select dao.</div><div class="line"> * 本体模型数据操作 ：Sparql的Select查询</div><div class="line"> *</div><div class="line"> * <span class="doctag">@author</span> houzhiwei</div><div class="line"> * <span class="doctag">@date</span> 2016年4月18日 下午5:16:26</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">SelectDao</span> </span>&#123;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 执行select查询 同一个resultset只能被使用一次</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> sparqlStr the sparql string</div><div class="line">     * <span class="doctag">@param</span> model     the model</div><div class="line">     * <span class="doctag">@return</span> Json格式结果 string</div><div class="line">     */</div><div class="line">    <span class="function">String <span class="title">execSelectJSON</span><span class="params">(String sparqlStr, Model model)</span></span>;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 执行select查询</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> sparqlStr the sparql string</div><div class="line">     * <span class="doctag">@param</span> model     the model</div><div class="line">     * <span class="doctag">@return</span> result set</div><div class="line">     * <span class="doctag">@author</span> houzhiwei at 2016年4月28日下午9:42:48</div><div class="line">     */</div><div class="line">    <span class="function">ResultSet <span class="title">execSelect</span><span class="params">(String sparqlStr, Model model)</span></span>;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 执行select查询</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> sparqlStr the sparql string</div><div class="line">     * <span class="doctag">@param</span> ds        the ds</div><div class="line">     * <span class="doctag">@return</span> result set</div><div class="line">     * <span class="doctag">@author</span> houzhiwei at 2016年4月28日下午9:42:48</div><div class="line">     */</div><div class="line">    <span class="function">ResultSet <span class="title">execSelect</span><span class="params">(String sparqlStr, Dataset ds)</span></span>;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 获取查询语句中查询变量（subject等）</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> query the query</div><div class="line">     * <span class="doctag">@return</span> string [ ]</div><div class="line">     * <span class="doctag">@author</span> houzhiwei at 2016年1月15日上午11:43:51</div><div class="line">     */</div><div class="line">    String[] getQueryVars(Query query);</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 内部类。为本接口的实现类提供公共代码</div><div class="line">     *</div><div class="line">     * <span class="doctag">@author</span> houzhiwei</div><div class="line">     */</div><div class="line">    <span class="class"><span class="keyword">class</span> <span class="title">BaseSelect</span> </span>&#123;</div><div class="line">        <span class="comment">/**</span></div><div class="line">         * Exec select json string.</div><div class="line">         *</div><div class="line">         * <span class="doctag">@param</span> sparqlStr the sparql string</div><div class="line">         * <span class="doctag">@param</span> model     the model</div><div class="line">         * <span class="doctag">@return</span> the string</div><div class="line">         */</div><div class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">execSelectJSON</span><span class="params">(String sparqlStr, Model model)</span></span></div><div class="line">        &#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                ResultSet results = execSelect(sparqlStr, model);</div><div class="line">                ByteArrayOutputStream bout = <span class="keyword">new</span> ByteArrayOutputStream();</div><div class="line">                ResultSetFormatter.outputAsJSON(bout, results);<span class="comment">//将结果输出为Json格式</span></div><div class="line">                <span class="keyword">return</span> <span class="keyword">new</span> String(bout.toByteArray(), <span class="string">"UTF-8"</span>);<span class="comment">// 输出为Json字符串</span></div><div class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">                e.printStackTrace();</div><div class="line">                <span class="keyword">return</span> e.getLocalizedMessage() + <span class="string">"\n 查询失败! 请检查SPARQL!"</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">/**</span></div><div class="line">         * Exec select result set.</div><div class="line">         *</div><div class="line">         * <span class="doctag">@param</span> sparqlStr the sparql string</div><div class="line">         * <span class="doctag">@param</span> model     the model</div><div class="line">         * <span class="doctag">@return</span> the result set</div><div class="line">         */</div><div class="line">        <span class="function"><span class="keyword">public</span> ResultSet <span class="title">execSelect</span><span class="params">(String sparqlStr, Model model)</span></span></div><div class="line">        &#123;</div><div class="line">            Query query = QueryFactory.create(sparqlStr);</div><div class="line">            QueryExecution queryExec = QueryExecutionFactory.create(query, model);</div><div class="line">            ResultSet results = queryExec.execSelect();</div><div class="line">            <span class="keyword">return</span> results;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">/**</span></div><div class="line">         * Exec select result set.</div><div class="line">         *</div><div class="line">         * <span class="doctag">@param</span> sparqlStr the sparql string</div><div class="line">         * <span class="doctag">@param</span> ds        the Dataset</div><div class="line">         * <span class="doctag">@return</span> the result set</div><div class="line">         */</div><div class="line">        <span class="function"><span class="keyword">public</span> ResultSet <span class="title">execSelect</span><span class="params">(String sparqlStr, Dataset ds)</span></span></div><div class="line">        &#123;</div><div class="line">            Query query = QueryFactory.create(sparqlStr);</div><div class="line">            QueryExecution queryExec = QueryExecutionFactory.create(query, ds);</div><div class="line">            ResultSet results = queryExec.execSelect();</div><div class="line">            <span class="keyword">return</span> results;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">/**</span></div><div class="line">         * Get query vars.</div><div class="line">         * 获取查询变量，若sparql中使用了 ?subject, 则有变量 subject</div><div class="line">         *</div><div class="line">         * <span class="doctag">@param</span> query the query</div><div class="line">         * <span class="doctag">@return</span> the string [ ]</div><div class="line">         */</div><div class="line">        <span class="keyword">public</span> String[] getQueryVars(Query query)</div><div class="line">        &#123;</div><div class="line">            List&lt;Var&gt; vars = query.getProjectVars();</div><div class="line">            String[] varArr = <span class="keyword">new</span> String[vars.size()];</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, len = vars.size(); i &lt; len; i++) &#123;</div><div class="line">                varArr[i] = vars.get(i).getVarName();</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">return</span> varArr;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="实现类"><a href="#实现类" class="headerlink" title="实现类"></a>实现类</h2><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * <span class="doctag">@author</span> Houzw</div><div class="line"> * <span class="doctag">@Description</span>: 执行SPARQL的Select查询</div><div class="line"> */</div><div class="line"><span class="meta">@Service</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SelectDaoImpl</span> <span class="keyword">implements</span> <span class="title">SelectDao</span></span></div><div class="line">&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">execSelectJSON</span><span class="params">(String sparqlStr, Model model)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BaseSelect().execSelectJSON(sparqlStr, model);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> ResultSet <span class="title">execSelect</span><span class="params">(String sparqlStr, Model model)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BaseSelect().execSelect(sparqlStr, model);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> ResultSet <span class="title">execSelect</span><span class="params">(String sparqlStr, Dataset ds)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BaseSelect().execSelect(sparqlStr, ds);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> String[] getQueryVars(Query query)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BaseSelect().getQueryVars(query);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="Ask查询"><a href="#Ask查询" class="headerlink" title="Ask查询"></a>Ask查询</h2><h3 id="接口-1"><a href="#接口-1" class="headerlink" title="接口"></a>接口</h3><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * <span class="doctag">@author</span> Houzw</div><div class="line"> * <span class="doctag">@Description</span> 利用SPARQL的ASK操作查询数据</div><div class="line"> * <span class="doctag">@date</span> 2016年4月18日 下午4:57:16</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AskDao</span> </span>&#123;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 执行ASK查询</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> sparqlStr</div><div class="line">     * <span class="doctag">@param</span> model</div><div class="line">     * <span class="doctag">@return</span> T/F</div><div class="line">     * <span class="doctag">@Houzw</span> at 2016年4月18日下午5:03:54</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">execAsk</span><span class="params">(String sparqlStr, Model model)</span></span>;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 执行ASK查询</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> sparqlStr</div><div class="line">     * <span class="doctag">@param</span> ds</div><div class="line">     * <span class="doctag">@return</span> T/F</div><div class="line">     * <span class="doctag">@Houzw</span> at 2016年4月18日下午5:03:54</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">execAsk</span><span class="params">(String sparqlStr, Dataset ds)</span></span>;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 执行ASK查询</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> sub_uri</div><div class="line">     * <span class="doctag">@param</span> prop_uri</div><div class="line">     * <span class="doctag">@param</span> obj_uri</div><div class="line">     * <span class="doctag">@param</span> model</div><div class="line">     * <span class="doctag">@return</span> T/F</div><div class="line">     * <span class="doctag">@Houzw</span> at 2016年3月30日下午3:22:02</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">execAsk</span><span class="params">(String sub_uri, String prop_uri, String obj_uri, Model model)</span></span>;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 实例是否存在</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> uri</div><div class="line">     * <span class="doctag">@param</span> model</div><div class="line">     * <span class="doctag">@return</span> T/F</div><div class="line">     * <span class="doctag">@Houzw</span> at 2016年4月1日下午10:18:23</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">isIndividual</span><span class="params">(String uri, Model model)</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="实现类-1"><a href="#实现类-1" class="headerlink" title="实现类"></a>实现类</h3><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="meta">@Service</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AskDaoImpl</span> <span class="keyword">implements</span> <span class="title">AskDao</span> </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">execAsk</span><span class="params">(String sparqlStr, Model model)</span></span></div><div class="line">    &#123;</div><div class="line">        Query query = QueryFactory.create(sparqlStr);</div><div class="line">        QueryExecution queryExec = QueryExecutionFactory.create(query, model);</div><div class="line">        <span class="keyword">return</span> queryExec.execAsk();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">execAsk</span><span class="params">(String sparqlStr, Dataset ds)</span></span></div><div class="line">    &#123;</div><div class="line">        Query query = QueryFactory.create(sparqlStr);</div><div class="line">        QueryExecution queryExec = QueryExecutionFactory.create(query, ds);</div><div class="line">        <span class="keyword">return</span> queryExec.execAsk();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">execAsk</span><span class="params">(String sub_uri, String prop_uri, String obj_uri, Model model)</span></span></div><div class="line">    &#123;</div><div class="line">        StringBuilder s = <span class="keyword">new</span> StringBuilder(<span class="string">"ASK &#123; "</span>);</div><div class="line">        <span class="keyword">if</span> (StringUtils.isBlank(sub_uri))</div><div class="line">            s.append(<span class="string">"?s "</span>);</div><div class="line">        <span class="keyword">else</span></div><div class="line">            s.append(<span class="string">"&lt;"</span> + sub_uri + <span class="string">"&gt; "</span>);</div><div class="line">        <span class="keyword">if</span> (StringUtils.isBlank(prop_uri))</div><div class="line">            s.append(<span class="string">"?p "</span>);</div><div class="line">        <span class="keyword">else</span></div><div class="line">            s.append(<span class="string">"&lt;"</span> + prop_uri + <span class="string">"&gt; "</span>);</div><div class="line">        <span class="keyword">if</span> (StringUtils.isBlank(obj_uri))</div><div class="line">            s.append(<span class="string">"?o"</span>);</div><div class="line">        <span class="keyword">else</span></div><div class="line">            s.append(<span class="string">"&lt;"</span> + obj_uri + <span class="string">"&gt; "</span>);</div><div class="line">        s.append(<span class="string">" &#125;"</span>);</div><div class="line">        Query query = QueryFactory.create(s.toString());</div><div class="line">        QueryExecution queryExec = QueryExecutionFactory.create(query, model);</div><div class="line">        <span class="keyword">return</span> queryExec.execAsk();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isIndividual</span><span class="params">(String uri, Model model)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span> execAsk(uri, RDF.type.getURI(), OWL2.NamedIndividual.getURI(), model);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[知识图谱-资源收集]]></title>
      <url>houzw.github.io.git/2017/05/08/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1-%E8%B5%84%E6%BA%90%E6%94%B6%E9%9B%86/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="知识图谱-资源收集"><a href="#知识图谱-资源收集" class="headerlink" title="知识图谱-资源收集"></a>知识图谱-资源收集</h1><ol><li><a href="http://tie.istic.ac.cn/ch/reader/view_abstract.aspx?file_no=201701002" target="_blank" rel="external">漆桂林,高桓,吴天星.知识图谱研究进展[J].情报工程,2017,3(1):004-025</a></li><li><a href="http://www.xb.uestc.edu.cn/nature/index.php?p=pdfdownload&amp;file=public/uploadfiles/UESTC20160412.pdf&amp;item_id=1894" target="_blank" rel="external">徐增林, 盛泳潘, 贺丽荣, 等. 知识图谱技术综述[J]. 电子科技大学学报, 2016, 45(4): 590.</a></li><li><a href="https://www.google.com/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=3&amp;ved=0ahUKEwjjr7KnueDTAhUGtY8KHRPjDv4QFgguMAI&amp;url=%68%74%74%70%3a%2f%2f%62%6c%6f%67%2e%73%63%69%65%6e%63%65%6e%65%74%2e%63%6e%2f%68%6f%6d%65%2e%70%68%70%3f%6d%6f%64%3d%61%74%74%61%63%68%6d%65%6e%74%26%69%64%3d%35%32%38%31%37&amp;usg=AFQjCNFt-DSGY-fbA1P5Nv7qg-g8PZbT_g&amp;sig2=cIT8yX4p7cfGwxszQwNYKQ" target="_blank" rel="external">大规模知识图谱技术-PDF</a></li><li><a href="http://www.36dsj.com/archives/39306" target="_blank" rel="external">知识图谱技术原理介绍</a></li><li><a href="http://blog.sina.com.cn/s/blog_574a437f0102w2bk.html" target="_blank" rel="external">《大数据智能》第2章：知识图谱——刘知远THU</a></li><li><a href="http://www.infoq.com/cn/articles/Application-of-Knowledge-Graph?utm_source=articles_about_knowledge-map&amp;utm_medium=link&amp;utm_campaign=knowledge-map" target="_blank" rel="external">知识图谱在互联网金融中的应用</a></li><li><a href="http://www.infoq.com/cn/articles/constructing-linkedin-knowledge-map?utm_source=articles_about_knowledge-map&amp;utm_medium=link&amp;utm_campaign=knowledge-map" target="_blank" rel="external">构建LinkedIn知识图谱</a></li><li><a href="http://www.jiqizhixin.com/article/2510" target="_blank" rel="external">知识图谱研究进展</a></li><li><a href="http://jiqizhixin.com/article/1508" target="_blank" rel="external">东南大学漆桂林教授：知识图谱不仅是一项技术，更是一项工程</a></li><li><a href="https://wenku.baidu.com/view/c360027800f69e3143323968011ca300a6c3f620.html" target="_blank" rel="external">数据驱动的大规模知识图谱构建方法——百度文库</a></li><li><a href="http://tie.istic.ac.cn/ch/reader/create_pdf.aspx?file_no=201701003&amp;year_id=2017&amp;quarter_id=1&amp;falg=1" target="_blank" rel="external">规则增强的知识图谱表示学习方法-PDF</a></li><li><a href="http://blog.csdn.net/zjxiaolu/article/details/47434187" target="_blank" rel="external">王昊奋：大规模知识图谱技术</a></li><li><a href="http://blog.openkg.cn/hiknowledge-%E5%A4%A7%E8%A7%84%E6%A8%A1%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E5%AE%9E%E6%88%98%E8%A7%A3%E6%9E%90/" target="_blank" rel="external">HiKnowledge | 大规模知识图谱数据存储实战解析</a></li></ol><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[GRASS GIS 下 TOPMODEL 运行]]></title>
      <url>houzw.github.io.git/2017/04/19/GRASS-GIS%20%E4%B8%8B%20TOPMODEL%20%E8%BF%90%E8%A1%8C/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="GRASS-GIS-下-TOPMODEL-运行"><a href="#GRASS-GIS-下-TOPMODEL-运行" class="headerlink" title="GRASS GIS 下 TOPMODEL 运行"></a>GRASS GIS 下 TOPMODEL 运行</h1><blockquote><p><a href="https://grass.osgeo.org/grass72/manuals/r.topmodel.html" target="_blank" rel="external">https://grass.osgeo.org/grass72/manuals/r.topmodel.html</a></p></blockquote><h2 id="名称"><a href="#名称" class="headerlink" title="名称"></a>名称</h2><p><strong>r.topmodel</strong></p><p>模拟有物理基础的（分布式）水文模型 TOPMODEL</p><h2 id="命令概要"><a href="#命令概要" class="headerlink" title="命令概要"></a>命令概要</h2><p><strong><code>r.topmodel</code></strong></p><p><code>r.topmodel --help</code></p><p><strong>r.topmodel</strong> [-<strong>p</strong>] <strong>parameters</strong>=<em>name</em> <strong>topidxstats</strong>=<em>name</em> <strong>input</strong>=<em>name</em> <strong>output</strong>=<em>name</em> [<strong>timestep</strong>=<em>integer</em>][<strong>topidxclass</strong>=<em>integer</em>] [<strong>topidx</strong>=<em>name</em>][<strong>ntopidxclasses</strong>=<em>integer</em>] [<strong>outtopidxstats</strong>=<em>name</em>][–<strong>overwrite</strong>] [–<strong>help</strong>][–<strong>verbose</strong>] [–<strong>quiet</strong>][–<strong>ui</strong>]</p><h3 id="标记"><a href="#标记" class="headerlink" title="标记:"></a>标记:</h3><ul><li><strong>-p</strong> 只进行预处理，并在生成outtopidxstats之后停止</li><li><strong>–overwrite</strong> 允许输出文件覆盖已存在文件</li><li><strong>–help</strong> 输出使用帮助内容</li><li><strong>–verbose</strong> 打印详细的模块输出</li><li><strong>–quiet</strong> 安静模式得到模块输出</li><li><strong>–ui</strong> 强制启动GUI对话框</li></ul><h3 id="参数"><a href="#参数" class="headerlink" title="参数:"></a>参数:</h3><ul><li><p><strong>parameters</strong>=<em>name</em> <strong>[必须]</strong></p><p>输入的TOPMODEL参数文件名称</p></li><li><p><strong>topidxstats</strong>=<em>name</em> <strong>[必须]</strong></p><p>输入地形索引统计文件（topographic index statistics file）的名称</p></li><li><p><strong>input</strong>=<em>name</em> <strong>[必须]</strong><br>输入的降雨量和潜在蒸散发（potential evapotranspiration ）数据文件名称</p></li><li><strong>output</strong>=<em>name</em> <strong>[必须]</strong><br>输出文件名称</li><li><strong>timestep</strong>=<em>integer</em><br>时间步长。为此时间段生成输出</li><li><strong>topidxclass</strong>=<em>integer</em><br>地形索引类 Topographic index class<br>为此地形索引类生成输出</li><li><strong>topidx</strong>=<em>name</em><br>输入的地形索引栅格图的名称。必须剪切到集水边界。用于产生outtopidxstats</li><li><strong>ntopidxclasses</strong>=<em>integer</em><br>地形索引类的数量。用于产生outtopidxstats<br>默认: <em>30</em></li><li><strong>outtopidxstats</strong>=<em>name</em><br>输出的地形索引统计文件的名称。 需要topidx和ntopidxclasses<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2></li></ul><h3 id="参数描述"><a href="#参数描述" class="headerlink" title="参数描述"></a>参数描述</h3><ul><li><p><strong>parameters</strong></p><p>此文件包含描述研究区的 TOPMODEL 参数. 任何以<code>#</code>的行开始或空行被忽略。</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">#  Subcatchment name 子流域名称 </div><div class="line">Subcatchment 1</div><div class="line"></div><div class="line">################################################################################</div><div class="line"># A [m^2]:  Total subcatchment area 总的子流域面积（平方米）</div><div class="line">3.31697E+07</div><div class="line"></div><div class="line">################################################################################</div><div class="line"># qs0 [m/h]: Initial subsurface flow per unit area 单位面积初始地下流量</div><div class="line">#		&quot;The first streamflow input is assumed to represent</div><div class="line">#		 only the subsurface flow contribution in the watershed.&quot;</div><div class="line">#								- Liaw (1988)</div><div class="line">#        </div><div class="line">0.000075</div><div class="line"></div><div class="line"># lnTe [ln(m^2/h)]: Areal average of the soil surface transmissivity</div><div class="line"># 土壤表面透射率的面积平均</div><div class="line">4.</div><div class="line"></div><div class="line"># m [m]: Scaling parameter 缩放参数</div><div class="line">0.0125</div><div class="line"></div><div class="line"># Sr0 [m]: Initial root zone storage deficit </div><div class="line">0.0025</div><div class="line"></div><div class="line"># Srmax [m]: Maximum root zone storage deficit</div><div class="line">0.041</div><div class="line"></div><div class="line"># td [h]: Unsaturated zone time delay per unit storage deficit if greater than 0</div><div class="line">#  OR</div><div class="line"># -alpha: Effective vertical hydraulic gradient if not greater than 0.</div><div class="line">#</div><div class="line"># For example, -10 means alpha=10.</div><div class="line">60.</div><div class="line"></div><div class="line"># vch [m/h]: Main channel routing velocity</div><div class="line">20000.</div><div class="line"></div><div class="line"># vr [m/h]: Internal subcatchment routing velocity</div><div class="line">10000.</div><div class="line"></div><div class="line">################################################################################</div><div class="line"># infex: Calculate infiltration excess if not zero (integer)</div><div class="line">0</div><div class="line"></div><div class="line"># K0 [m/h]: Surface hydraulic conductivity 表面水力传导率</div><div class="line">2.</div><div class="line"></div><div class="line"># psi [m]: Wetting front suction</div><div class="line">0.1</div><div class="line"></div><div class="line"># dtheta: Water content change across the wetting front</div><div class="line">0.1</div><div class="line"></div><div class="line">################################################################################</div><div class="line"># d [m]: Distance from the catchment outlet 距离集水口的距离</div><div class="line">#		The first value should be the mainstream distance from</div><div class="line">#		the subcatchment outlet to the catchment outlet.</div><div class="line"># 第一个值应该是主流到集水处出口的距离</div><div class="line"># Ad_r:  子流域的累积面积比 Cumulative area ratio of subcatchment (0.0 - 1.0)</div><div class="line">#		The first and last values should be 0 and 1, respectively. 第一个和最后一个值分别为0和1。</div><div class="line"></div><div class="line">#   d  Ad_r</div><div class="line">    0   0.0</div><div class="line"> 1000   0.2</div><div class="line"> 2000   0.4</div><div class="line"> 3000   0.6</div><div class="line"> 4000   0.8</div><div class="line"> 5000   1.0</div></pre></td></tr></table></figure></li><li><p><strong>input</strong></p><p>此文件包含天气观测数据.</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line"># dt [h]: 时间步长</div><div class="line">24</div><div class="line"></div><div class="line">################################################################################</div><div class="line"># R [m/dt]:  Rainfall 降雨</div><div class="line"># Ep [m/dt]: Potential evapotranspiration 潜在蒸散发量</div><div class="line"></div><div class="line"># R             Ep</div><div class="line">0.000033        0.000000</div><div class="line">0.000053        0.011938</div><div class="line">0.004821        0.000000</div><div class="line">.</div><div class="line">.</div><div class="line">.</div></pre></td></tr></table></figure></li><li><p><strong>timestep</strong></p><p>如果指定了时间步长，则除了出口处的总结和总流量之外，还将为特定时间步长生成输出。该参数可以与<strong>topidxclass</strong>组合，以同时指定时间步长和地形索引类。如果没有<strong>topidxclass</strong>给出，输出会为所有的地形指数类生成。</p><p>If a time step is specified, output will be generated for the specific time step in addition to the summary and total flows at the outlet. This parameter can be combined with <strong>topidxclass</strong> to specify a time step and topographic index class at the same time. If no <strong>topidxclass</strong> is given, output will be generated for all the topographic index classes.</p></li><li><p><strong>toptopidxclass</strong></p><p>如果指定了地形索引类，将为给定的地形索引类生成输出。该参数可以与<strong>时间步长</strong>组合。如果没有给出<strong>时间步长</strong>，则将为所有<strong>时间步长生成</strong>输出。</p><p>If a topographic index class is specified, output will be generated for the given topographic index class. This parameter can be combined with <strong>timestep</strong>. If no <strong>timestep</strong> is given, output will be generated for all the time steps.</p></li><li><p><strong>topidx</strong>, <strong>ntoptopidxclasses</strong>, <strong>outtoptopidxstats</strong></p><p>该<strong>topidx</strong>地图可以选择用于创建一个新的地形指数统计文件。该地图必须已经剪切到流域边界。地形索引值的整个范围将分为<strong>ntoptopidx</strong>类，并且每个类的面积比将在<strong>outtoptopidxstats</strong>文件中报告 。除非需要创建新的<strong>topidxstats</strong>文件，否则可以省略这三个参数 。</p><p>The <strong>topidx</strong> map can optionally be used for creating a new topographic index statistics file. This map has to be already clipped to the catchment boundary. The entire range of topographic index values will be divided into <strong>ntoptopidxclasses</strong> and the area ratio of each class will be reported in the <strong>outtoptopidxstats</strong> file. These three parameters can be omitted unless a new <strong>topidxstats</strong> file needs to be created.</p></li></ul><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul><li>Cho, H., 2000. GIS Hydrological Modeling System by Using Programming Interface of GRASS. Master’s Thesis, Department of Civil Engineering, Kyungpook National University, Korea.</li><li>Beven K., R. Lamb, P. Quinn, R. Romanowicz, and J. Freer, 1995. TOPMODEL, in V.P. Singh (Ed.). Computer Models of Watershed Hydrology. Water Resources Publications.</li><li>Liaw, S.C., 1988. Streamflow Simulation Using a Physically Based Hydrologic Model in Humid Forested Watersheds. Dissertation, Colorado State University, CO. p163.</li></ul><h2 id="其他内容"><a href="#其他内容" class="headerlink" title="其他内容"></a>其他内容</h2><p><a href="https://grass.osgeo.org/grass72/manuals/r.fill.dir.html" target="_blank" rel="external">r.fill.dir</a>, <a href="https://grass.osgeo.org/grass72/manuals/r.mapcalc.html" target="_blank" rel="external">r.mapcalc</a>, <a href="https://grass.osgeo.org/grass72/manuals/r.topidx.html" target="_blank" rel="external">r.topidx</a></p><p><a href="http://idea.isnew.info/r.topmodel.html" target="_blank" rel="external">如何运行 r.topmodel</a></p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">g.region raster=dem # set the region and resolution correctly</div><div class="line">r.watershed elevation=dem drainage=drain # Create a drainage(水系) map (drain).don’t need to fill sinks in the elevation map because r.watershed uses a least-cost algorithm. （流域分析）</div><div class="line">r.water.outlet input=drain output=basin coord=-109050.647255,1141527.27768 # a watershed boundary map (basin) to define the study area. （流域盆地生成）</div><div class="line">r.mask raster=basin # 可选。掩膜</div><div class="line">r.topidx input=dem output=topidx # Create a topographic index map (topidx) 地形指数</div><div class="line">r.topmodel -p topidx=topidx ntopidxclasses=30 outtopidxstats=topidxstats.txt # Create a topographic index statistics file （topidxstats.txt）</div><div class="line">r.topmodel param=params.txt topidxstats=topidxstats.txt input=input.txt output=output.txt # TOPMPDEL模拟。 input.txt contains observed weather data (Rainfall &amp; Potential evapotranspiration)</div></pre></td></tr></table></figure><h4 id="Calibrating-model-parameters-using-R"><a href="#Calibrating-model-parameters-using-R" class="headerlink" title="Calibrating model parameters using R"></a>Calibrating model parameters using R</h4><p>read and write the parameters file：write params.txt，read output.tx</p><h2 id="作者"><a href="#作者" class="headerlink" title="作者"></a>作者</h2><p>Huidae Cho, Hydro Laboratory, Kyungpook National University, South Korea</p><p>Based on TMOD9502.FOR by Keith Beven.</p><p><em>Last changed: $Date: 2017-03-01 03:45:44 -0800 (Wed, 01 Mar 2017) $</em></p><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><p><a href="https://trac.osgeo.org/grass/browser/grass/branches/releasebranch_7_2/raster/r.topmodel" target="_blank" rel="external">r.topmodel source code</a> (<a href="https://trac.osgeo.org/grass/log/grass/branches/releasebranch_7_2/raster/r.topmodel" target="_blank" rel="external">history</a>)</p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[52°North WPS 学习]]></title>
      <url>houzw.github.io.git/2017/04/11/52%C2%B0North-WPS-%E5%AD%A6%E4%B9%A0/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:01 GMT+0800 (中国标准时间) --><h1 id="52°North-WPS"><a href="#52°North-WPS" class="headerlink" title="52°North WPS"></a>52°North WPS</h1><blockquote><p><a href="http://52north.org/communities/geoprocessing/wps/index.html" target="_blank" rel="external">主页</a></p><p><a href="https://github.com/52North/WPS" target="_blank" rel="external">GitHub</a></p></blockquote><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>52°North Web Processing Service 以标准化的方式在网络上部署地理处理服务. 它具有用于处理和数据编码的可插拔架构. 该实现基于当前的OpenGIS 规范: 05-007r7 .</p><p>其专注于创建可扩展的框架来为网络提供泛化算法.</p><h3 id="当前功能特点"><a href="#当前功能特点" class="headerlink" title="当前功能特点"></a>当前功能特点</h3><ul><li><p>一般特性与使用规范</p><ul><li>全 Java开源实现.</li><li>支持所有的WPS 1.0.0 (05-007r7)规范功能与操作</li><li>用于算法和XML数据处理框架的可插拔框架</li><li>基于强键的库构建 (JTS, geotools, xmlBeans, servlet API, derby)</li><li>支持服务活动全纪录<ul><li>支持根据规范的异常处理</li><li>存储执行结果</li><li>全Maven支持</li></ul></li></ul></li><li><p>客户端</p><ul><li>访问WPS的基本客户端实现 （包括完整的XML编码)</li></ul></li><li>WPS 调用<ul><li>同步/异步调用</li><li>原始数据支持</li><li>支持HTTP-GET</li><li>支持HTTP-POST</li></ul></li><li><p>支持WPS 数据类型(选择)</p><ul><li>GeoTiff</li><li>ArcGrid</li><li>对ComplexData的完整GML2 支持</li><li>对ComplexData的完整GML3 支持</li><li>Shapefiles</li><li>KML</li><li>WKT</li></ul></li><li><p>扩展</p><ul><li><a href="https://wiki.52north.org/bin/view/Geostatistics/WPS4R" target="_blank" rel="external">WPS4R - R 后端</a></li><li><a href="http://52north.org/communities/geoprocessing/wps/backends/52n-wps-grass.html" target="_blank" rel="external">GRASS 开箱即用扩展</a></li><li><a href="http://52north.org/communities/geoprocessing/wps/backends/52n-wps-sextante.html" target="_blank" rel="external">220+ SEXTANTE 处理</a></li><li>Web GUI 服务维护</li><li><a href="http://52north.org/communities/geoprocessing/wps/backends/52n-wps-ags.html" target="_blank" rel="external">ArcGIS Server 连接</a></li></ul></li><li><p>结果存储</p><ul><li>全部结果可存储为简单地使用URL访问的网络资源</li><li>Raster/Vector 结果可直接存储为WMS 图层</li><li>Vector 可直接存储为 WFS 图层</li><li>Raster 可直接存储为 WCS 图层</li></ul></li></ul><h3 id="未来方向"><a href="#未来方向" class="headerlink" title="未来方向"></a>未来方向</h3><ul><li>流式 WPS</li><li>数据溯源</li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a><a href="http://52north.org/communities/geoprocessing/wps/download.html" target="_blank" rel="external">下载</a></h4><p><a href="http://52north.org/downloads/send/15-wps/504-52n-wps-webapp-3-6-1" target="_blank" rel="external">52°North WPS 3.6.1</a>, <a href="http://52north.org/downloads/send/15-wps/505-wps-3-6-1-geotools-package" target="_blank" rel="external">额外的GeoTools 包</a></p><p>源码： <code>git clone https://github.com/52North/WPS.git</code></p><h4 id="系统要求"><a href="#系统要求" class="headerlink" title="系统要求"></a>系统要求</h4><p>Java 7+，Tomcat 6 +</p><h4 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h4><ul><li>重命名下载的 downloaded .war 文件为 wps.war</li><li>将war包放到tomcat的webapp目录下</li></ul><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p><a href="https://wiki.52north.org/Geoprocessing/ConfiguringTheWPS" target="_blank" rel="external">https://wiki.52north.org/Geoprocessing/ConfiguringTheWPS</a></p><h4 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h4><p><a href="https://wiki.52north.org/Geoprocessing/GeoprocessingTutorials" target="_blank" rel="external">https://wiki.52north.org/Geoprocessing/GeoprocessingTutorials</a></p><h4 id="处理后台"><a href="#处理后台" class="headerlink" title="处理后台"></a>处理后台</h4><ul><li><a href="http://52north.org/communities/geoprocessing/wps/backends/52n-wps-grass.html" target="_blank" rel="external">GRASS Backend</a>.</li></ul><ul><li><a href="http://52north.org/communities/geoprocessing/wps/backends/52n-wps-ags.html" target="_blank" rel="external">ArcGIS Server Backend</a>.</li><li><a href="http://52north.org/communities/geoprocessing/wps/backends/52n-wps-sextante.html" target="_blank" rel="external">Sextante Backend</a>.</li><li><a href="https://wiki.52north.org/bin/view/Geostatistics/WPS4R" target="_blank" rel="external">WPS4R</a>.</li></ul><h3 id="GRASS-处理后台"><a href="#GRASS-处理后台" class="headerlink" title="GRASS 处理后台"></a>GRASS 处理后台</h3><ol><li>从<a href="http://52north.org/downloads/category/15-wps" target="_blank" rel="external">这里</a>下载最新的WPS release包.(需要源码的话查看 <a href="https://wiki.52north.org/Geoprocessing/TutorialWpsEclipseIndigoGit" target="_blank" rel="external">教程</a> )</li><li>重命名 downloaded .war（52n-wps-webapp-3.6.1.war） 文件为 wps.war ，并将其放到你的<code>tomcat/webapp</code>目录下.</li><li>从 <a href="http://grass.osgeo.org/grass70/binary/mswindows/native/" target="_blank" rel="external">这里</a>下载 GRASS 7.0 安装文件.</li><li>使用安装文件安装 GRASS 7.0</li><li>打开 <code>&lt;GRASS_INSTALL_PATH&gt;\demolocation</code> （如<code>D:\Program Files\GRASS GIS 7.2.0\demolocation</code> ）目录下的<code>.grassrc70</code> 文件. 修改 GISDBASE 参数为你的 GRASS 安装路径，e.g. <code>GISDBASE: C:/Programme/GRASS-70-SVN</code> (使用斜杠代替反斜杠).（<code>&quot;D:/Program Files/GRASS GIS 7.2.0&quot;</code> ?）</li><li>从 <a href="http://52north.org/files/geoprocessing/GRASS/wps-grass-bridge-patched.zip" target="_blank" rel="external">这里</a> 下载并解压 wps-grass-bridge，或使用 <a href="http://wps-grass-bridge.googlecode.com/svn/trunk/" target="_blank" rel="external">SVN</a>检出 . <img src="https://wiki.52north.org/pub/System/DocumentGraphics/warning.png" alt="ALERT!"> 注意，GRASS后台目前不能与bridge的trunk 版兼容 .</li><li>下载和安装 Python. 虽然 python 可执行文件与 GRASS 7.0 一起提供, 但GrassModuleStarter 需要一些额外的库. 因而，需要安装完整的 python.</li><li>启动 Apache Tomcat</li><li>访问 <a href="http://localhost:8080/wps/webAdmin/index.jsp" target="_blank" rel="external">http://localhost:8080/wps/webAdmin/index.jsp</a> 用户名: wps 密码: wps<ul><li>标签页 <code>&lt;Server Settings&gt;</code><ul><li>需要时，点击 edit 按钮并修改端口</li></ul></li><li>标签页<code>&lt;Algorithm Repositories&gt;</code><ul><li>启用 Grass Repository</li><li>点击edit 按钮并设置变量<ul><li><code>Grass_Home</code> 必须指向 GRASS 7.0 的安装目录</li><li><code>Python_Home</code> 必须指向 python 可执行文件(e.g. the extrabin directory of the GRASS 7.0 installation or the path to the python installation (see step 7.))</li><li><code>Python_Path</code> 必须指向 python 安装目录.</li><li><code>Addon_Dir</code> (可选) 必须指向包含GRASS扩展的目录 (同名的python 脚本和 .exe 文件).</li><li><code>ModuleStarter_Home</code> 变量必须指向wps-grass-bridge包含<code>GrassModuleStarter.py</code>文件的子目录.</li><li><code>GISRC_Dir</code> 必须指向 <code>.grassrc70</code> 文件. 父目录必须也包含PERMANENT 目录. 这一点在安装 GRASS 7.0时会自动创建,因而除非你知道自己在干啥，不然在此处填上 <code>&lt;GRASS_INSTALL_PATH&gt;\demolocation\.grassrc70</code> . 参考第5步.</li><li><code>TMP_Dir</code> 必须指向一个非只读目录. <strong>注意</strong>: 每次包含GRASS-backend 的WPS启动时，此临时目录内的文件会全部删除, 因此不要将其指向存有重要文件的目录!</li><li>所有的将被暴露为WPS 处理的 Grass 处理将展示在此仓库下的 algorithm-properties 列表中. 在这里，你可以根据你的需要添加、删除、激活或失效一个Grass 处理.</li></ul></li></ul></li><li>示例<img src="https://wiki.52north.org/pub/Geoprocessing/TutorialBackendGRASSWin/grass_settings_windows_cropped.png" alt=""></li><li>配置完成之后点击<code>Save and activate Configuration</code></li><li>WPS Admin Console 的用户名和密码可以在文件 <code>_TOMCAT_INSTALL_PATH_\webapps\wps\WEB-INF\classes\users.xml</code> 中修改</li></ul></li></ol><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux 目录结构]]></title>
      <url>houzw.github.io.git/2017/04/08/Linux-%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="linux-目录结构"><a href="#linux-目录结构" class="headerlink" title="linux 目录结构"></a>linux 目录结构</h1><blockquote><p>参考地址:</p><p><a href="http://www.178linux.com/9736" target="_blank" rel="external">http://www.178linux.com/9736</a></p><p><a href="http://www.iteye.com/topic/1125162" target="_blank" rel="external">http://www.iteye.com/topic/1125162</a></p><p><a href="http://yangrong.blog.51cto.com/6945369/1288072" target="_blank" rel="external">http://yangrong.blog.51cto.com/6945369/1288072</a></p><p><a href="http://itlab.idcquan.com/linux/administer/939529_1.html" target="_blank" rel="external">http://itlab.idcquan.com/linux/administer/939529_1.html</a></p><p><a href="http://itlab.idcquan.com/linux/administer/939529_2.html" target="_blank" rel="external">http://itlab.idcquan.com/linux/administer/939529_2.html</a></p></blockquote><h2 id="1、linux哲学思想："><a href="#1、linux哲学思想：" class="headerlink" title="1、linux哲学思想："></a>1、linux哲学思想：</h2><ul><li><p>一切皆文件,把几乎所有的资源，包括硬件设备都组织为文件格式；</p></li><li><p>由众多目的单一的小程序组成，一个程序只做一件事，并且要好，组合小程序完成复杂任务；</p></li><li>尽量避免跟用户交互,实现脚本编程，自动完成某些功能；</li><li>使用纯文本文件保存配置信息，管理员只需使用一款文本编辑器既能完成系统配置工作；</li><li>提供机制，而非策略，管道是机制，应用管道处理各种数据是策略，机制就是提供各种接口供使用者组合调用得到想要的数据。</li></ul><h2 id="2、FHS-Filesystem-Hierarchy-Standard-意义"><a href="#2、FHS-Filesystem-Hierarchy-Standard-意义" class="headerlink" title="2、FHS (Filesystem Hierarchy Standard)意义"></a>2、FHS (Filesystem Hierarchy Standard)意义</h2><p>linux核心思想<strong>一切皆文件</strong>，因此,了解linux的文件层次结构以及根据FHS规定的目录名的含义是相当重要的。</p><p>Linux和UNIX的文件系统是一个以“<code>/</code> “为根的阶层式的树状文件结构，<code>/</code> 因此被称为根目录。</p><p>所有的文件和目录都置于根目录<code>/</code>之下。根目录<code>/</code>下面有<code>/etc</code>, <code>/usr</code>, <code>/var</code>, <code>/root</code>, <code>/home</code>, <code>/dev</code>等子目录。</p><p>早期的 UNIX 系统中，各个厂家各自定义了自己的UNIX系统的文件系统构成，比较混乱。为了避免在Linux也产生同样的问题，在Linux面世不久，就开始了对Linux文件系统进行标准化的活动，于1994年推出了名为 FSSTND(Filesystem Standard)的Linux文件系统层次结构标准。之后，FSSTND标准吸引了UNIX社团的开发人员，他们把FSSTND扩大到UNIX系统，FSSTND就变为FHS (Filesystem Hierarchy Standard)。</p><h2 id="3、树状目录结构图"><a href="#3、树状目录结构图" class="headerlink" title="3、树状目录结构图"></a>3、树状目录结构图</h2><p><img src="http://ofcj2lgtd.bkt.clouddn.com/1450239746595149.jpg" alt="230817424.jpg"></p><blockquote><p>软件安装目录惯例：</p><p><code>/usr</code>：系统级的目录；<code>/usr/lib</code> 类似<code>C:/Windows/System32</code> .</p><p><code>/usr/local</code> ：用户级的程序目录。用户自己编译的软件默认会安装到这个目录下。</p><p><code>/opt</code>：用户级的程序目录，opt有可选的意思，可以用于放置第三方大型软件（或游戏）。当不需要时，直接<code>rm -rf</code>掉即可。在硬盘容量不够时，也可将<code>/opt</code>单独挂载到其他磁盘上使用。</p><p><code>/usr/src</code>：系统级的源码目录。</p><p><code>/usr/local/src</code>：用户级的源码目录。</p></blockquote><h2 id="4、目录详细介绍目录"><a href="#4、目录详细介绍目录" class="headerlink" title="4、目录详细介绍目录"></a>4、目录详细介绍目录</h2><h3 id="1-目录-根文件系统"><a href="#1-目录-根文件系统" class="headerlink" title="1./目录(根文件系统)"></a>1.<code>/</code>目录(根文件系统)</h3><table><thead><tr><th>目录</th><th>描述</th></tr></thead><tbody><tr><td><code>/</code></td><td>第一层次结构的根、整个文件系统层次结构的根目录。 <code>cd /</code></td></tr><tr><td><code>/bin</code></td><td>供所有用户使用的基本命令，不能关联至独立分区，OS启动即会用到的程序。主要有：<code>ls cp mkdir cat mv netstat pwd rm sync tar touch sort</code> 等等常用的指令。类似的目录还 <code>/usr/bin</code> ， <code>/usr/local/bin</code>等等。这个目录中的文件都是<strong>可执行的</strong>、<strong>普通用户都可使用的命令</strong>。作为基础系统所需要的<strong>最基础的命令</strong>就是放在这里。</td></tr><tr><td><code>/sbin</code></td><td>存放大多涉及<strong>系统管理</strong>的命令（如引导系统的 init 程序），是超级权限用户 root 的可执行命令存放地，普通用户无权限执行这个目录下的命令（但是有时普通用户也可能会用到）。这个目录和 <code>/usr/sbin</code> ,<code>/usr/X11R6/sbin</code>或<code>/usr/local/sbin</code> 等目录是相似的，要记住，凡是 sbin 中包含的都是 root 权限才能执行的。</td></tr><tr><td><code>/boot</code></td><td>引导程序，内核等存放的目录。 放置linux系统启动时用到的一些文件。<code>/boot/vmlinuz</code>为linux的内核文件，引导加载器（bootloader, gurb)。建议单独分区, 大小100M即可。如果机器中包含多个操作系统，那么可通过修改此目录中的某个配置文件（如 grub.conf ）来调整启动的默认系统，系统启动的选择菜单，以及启动延迟等参数。</td></tr><tr><td><code>/lib</code></td><td>根目录下程序的基本共享库目录，以及内核模块文件（lib/modules）. 此目录下包含系统引导和在根用户执行命令时候所必需用到的共享库。</td></tr><tr><td><code>/lib64</code></td><td>专用于x86_64系统上的铺助共享库文件存放位置</td></tr><tr><td><code>/etc</code></td><td><strong>配置文件目录</strong>（纯文本文件），系统主要的配置文件几乎都放置在这个目录内，例如人员的账号密码文件、 各种服务的启始档等等。一般来说，这个目录下的各文件属性是可以让一般使用者查阅的， 但是只有 root 有权力修改。FHS 建议不要放置可执行文件(binary)在这个目录中喔。比较重要的档案有： <code>/etc/inittab, /etc/init.d/, /etc/modprobe.conf, /etc/X11/,/etc/fstab, /etc/sysconfig/</code> 等等。另外，其下重要的目录有： <code>/etc/init.d/</code>：所有服务的预设启动 script 都是放在这里的，例如要启动或者关闭 iptables 的话：『 <code>/etc/init.d/iptables start</code>』、『<code>/etc/init.d/iptables stop</code>』</td></tr><tr><td><code>/home/USERNAME</code></td><td>这是系统默认的用户主目录( home directory，<code>$HOME</code> 目录)。在你新增一个一般使用者账号时，不给用户家目录都会归范到这里来。比较重要的是，家目录有两种代号：<code>~</code>：代表<strong>当前用户</strong>的家目录，而<code>~dmtsai</code> ：则代表 dmtsai 的家目录! 该目录中保存了绝大多数的<strong>用户文件</strong>(用户自己的配置文件，定制文件，文档，数据等)</td></tr><tr><td><code>/root</code></td><td>系统管理员(root)的主目录（<code>$HOME</code>）。之所以放在这里，是因为如果进入单人维护模式而仅挂载根目录时，该目录就能够拥有 root 的主目录，所以我们会希望root主目录不与根目录放置在同一个分割槽中。</td></tr><tr><td><code>/media</code></td><td>便捷式移动设备挂载点（cdrom, usb），media 是『媒体』的英文，顾名思义，这个/media 底下放置的就是可移除的装置啦! 包括软盘、光盘、DVD 等等装置都暂时挂载二此。常见的档名有：/media/floppy, /media/cdrom 等等。</td></tr><tr><td><code>/mnt</code></td><td>如果你想要暂时挂载某些额外的装置，一般建议你可以放置到这个目录中。 在古早时候，这个目录的用途与/media 相同啦!只是有了/media 之后，这个目录就用来暂时挂载用了。</td></tr><tr><td><code>/dev</code></td><td>设备文件及特殊文件存储位置（b:block device 离散访问 c:character device 线性访问）.任何装置不接口设备都是以档案的型态存在二这个目录当中的。 你只要透过存取这个目录底下的某个档案，就等二存取某个装置啰～ 比要重要的档案有<code>/dev/null, /dev/zero, /dev/tty, /dev/lp*, /dev/hd*, /dev/sd*</code>等等</td></tr><tr><td><code>/opt</code></td><td>这个是给第三方程序软件放置的目录。什么是第三方协力软件啊? 举例来说，KDE这个桌面管理系统是一个独立的计划，不过他可以安装到 Linux 系统中，因此 KDE的软件就建议放置到此目录下了。 另外，如果你想要自行安装额外的软件(非原本的distribution 提供的)，那也能够将你的软件安装到这里来。 不过以前的 Linux 系统中，我们还是习惯放置在/usr/local 目录下呢!</td></tr><tr><td><code>/srv</code></td><td>系统上运动的服务用到的数据，srv 可以规为『service』的缩写，是一些网络服务启动之后，这些服务所需要取用的数据目录。 常见的服务例如 WWW, FTP 等等。示例来说，WWW 服务器需要的网页资料就可以放置在/srv/www/里面。</td></tr><tr><td><code>/tmp</code></td><td>这是让一般用户或者是正在执行的程序暂时放置档案的地方。</td></tr><tr><td><code>/usr</code></td><td>universal shared <strong>read-only</strong> data. <strong>默认软件</strong>都会存于该目录下。用于存储只读用户数据的第二层次；此目录中包含了命令库文件和在通常操作中不会修改的文件</td></tr><tr><td><code>/media</code></td><td>便捷式移动设备挂载点,media 是『媒体』的英文，顾名思义，这个/media 底下放置的就是可移除的装置啦! 包括软盘、光盘、DVD 等等装置都暂时挂载二此。常见的档名有：/media/floppy, /media/cdrom 等等</td></tr><tr><td><code>/var</code></td><td>变量文件——在正常运行的系统中其内容不断变化的文件，如日志，脱机文件和临时电子邮件文件。有时是一个单独的分区。如果不单独分区，有可能会把整个分区充满。如果单独分区，给大给小都不合适。</td></tr><tr><td><code>/proc</code></td><td>目录本身是一个『虚拟文件系统(virtual filesystem)』! 放置的数据都是在内存当中， 如系统核心、进程信息(process)、周边装置的状态及网络状态等等。因为这个目录下的数据都是在内存当中，故本身不占任何硬盘空间! 比较重要的档案如：<code>/proc/cpuinfo, /proc/dma, /proc/interrupts,/proc/ioports, /proc/net/*</code>等等。</td></tr><tr><td><code>/sys</code></td><td>这个目录跟<code>/proc</code> 非常类似，也是一个虚拟的文件系统，主要也是记录不核心相关的信息。 包括目前已加载的核心模块不核心侦测到的硬件装置信息等等。这个目录同样不占硬盘容量!</td></tr><tr><td><code>/selinux</code></td><td>security enhanced Linux，selinux相关的安全策略等信息的存储位置。</td></tr><tr><td><code>/lost+found</code></td><td>在ext3文件系统中，当系统意外崩溃或机器意外关机，会产生一些文件碎片在这里。当系统在开机启动的过程中fsck工具会检查这里，并修复已经损坏的文件系统。当系统发生问题。可能会有文件被移动到这个目录中，可能需要用手工的方式来修复，或移到文件到原来的位置上。</td></tr></tbody></table><h3 id="2-etc-目录（配置文件目录-纯文本文件）"><a href="#2-etc-目录（配置文件目录-纯文本文件）" class="headerlink" title="2./etc/目录（配置文件目录,纯文本文件）"></a>2.<code>/etc/</code>目录（配置文件目录,纯文本文件）</h3><table><thead><tr><th>目录</th><th>描述</th></tr></thead><tbody><tr><td><code>/etc/rc</code> <code>/etc/rc.d</code> <code>/etc/rc*.d</code></td><td>启动、或改变运行级时运行的scripts或scripts的目录.</td></tr><tr><td><code>/etc/hosts</code></td><td>本地域名解析文件/etc/sysconfig/networkIP、掩码、网关、主机名配置</td></tr><tr><td><code>/etc/resolv.conf</code></td><td>DNS服务器配置/etc/fstab开机自动挂载系统，所有分区开机都会自动挂载</td></tr><tr><td><code>/etc/inittab</code></td><td>设定系统启动时Init进程将把系统设置成什么样的 runlevel及加载相关的启动文件配置</td></tr><tr><td><code>/etc/exports</code></td><td>设置NFS系统用的配置文件路径</td></tr><tr><td><code>/etc/init.d</code></td><td>这个目录来存放系统启动脚本</td></tr><tr><td><code>/etc/profile, /etc/csh.login, /etc/csh.cshrc</code></td><td>全局系统环境配置变量</td></tr><tr><td><code>/etc/issue</code></td><td>认证前的输出信息，默认输出版本内核信息</td></tr><tr><td><code>/etc/motd</code></td><td>设置认证后的输出信息</td></tr><tr><td><code>/etc/mtab</code></td><td>当前安装的文件系统列表.由scripts初始化，并由mount 命令自动更新.需要一个当前安装的文件系统的列表时使用，例如df 命令<code>/etc/group</code>类似<code>/etc/passwd</code> ，但说明的不是用户而是组.</td></tr><tr><td><code>/etc/passwd</code></td><td>用户数据库，其中的域给出了用户名、真实姓名、家目录、加密的口令和用户的其他信息.</td></tr><tr><td><code>/etc/shadow</code></td><td>在安装了影子口令软件的系统上的影子口令文件.影子口令文件将<code>/etc/passwd</code> 文件中的加密口令移动到<code>/etc/shadow</code> 中，而后者只对root可读.这使破译口令更困难.</td></tr><tr><td><code>/etc/sudoers</code></td><td>可以sudo命令的配置文件</td></tr><tr><td><code>/etc/syslog.conf</code></td><td>系统日志参数配置</td></tr><tr><td><code>/etc/login.defs</code></td><td>设置用户帐号限制的文件</td></tr><tr><td><code>/etc/securetty</code></td><td>确认安全终端，即哪个终端允许root登录.一般只列出虚拟控制台，这样就不可能(至少很困难)通过modem或网络闯入系统并得到超级用户特权.</td></tr><tr><td><code>/etc/printcap</code></td><td>类似<code>/etc/termcap</code> ，但针对打印机.语法不同.</td></tr><tr><td><code>/etc/shells</code></td><td>列出可信任的shell.chsh 命令允许用户在本文件指定范围内改变登录shell.提供一台机器FTP服务的服务进程ftpd 检查用户shell是否列在 <code>/etc/shells</code> 文件中，如果不是将不允许该用户登录.</td></tr><tr><td><code>/etc/xinetd.d</code></td><td>如果服务器是通过xinetd模式运行的，它的脚本要放在这个目录下。有些系统没有这个目录，比如Slackware，有些老的版本也没有。在Redhat Fedora中比较新的版本中存在。</td></tr><tr><td><code>/etc/opt/</code></td><td><code>/opt/</code>的配置文件</td></tr><tr><td><code>/etc/X11/</code></td><td>X_Window系统(版本11)的配置文件</td></tr><tr><td><code>/etc/sgml/</code></td><td>SGML的配置文件</td></tr><tr><td><code>/etc/xml/</code></td><td>XML的配置文件</td></tr><tr><td><code>/etc/skel/</code></td><td>默认创建用户时，把该目录拷贝到家目录下</td></tr></tbody></table><h3 id="3、-usr-目录"><a href="#3、-usr-目录" class="headerlink" title="3、/usr/目录"></a>3、<code>/usr/</code>目录</h3><p>默认软件都会存于该目录下。用于存储只读用户数据的第二层次；包含绝大多数的用户工具和应用程序。</p><table><thead><tr><th>目录</th><th>描述</th></tr></thead><tbody><tr><td><code>/usr/X11R6</code></td><td>存放X-Windows的目录；</td></tr><tr><td><code>/usr/doc</code></td><td>Linux技术文档；/usr/include用来存放Linux下开发和编译应用程序所需要的头文件；</td></tr><tr><td><code>/usr/lib</code></td><td>32位系统使用的函数库目录。存放一些常用的动态链接共享库和静态档案库；</td></tr><tr><td><code>/usr/man</code></td><td>帮助文档所在的目录；</td></tr><tr><td><code>/usr/src</code></td><td><strong>源代码</strong>,例如:内核源代码及其头文件。Linux开放的源代码，就存在这个目录，爱好者们别放过哦；</td></tr><tr><td><code>/usr/bin/</code></td><td>非必要可执行文件 (在单用户模式中不需要)；面向所有用户。一般使用者使用并且不是系统自检等所必需可执行文件的目录。此目录相当于根文件系统下的对应目录（<code>/bin</code> ），非启动系统，非修复系统以及非本地安装的程序一般都放在此目录下</td></tr><tr><td><code>/usr/sbin/</code></td><td>管理员使用的非系统必须的可执行文件存放目录，例如：大量网络服务的守护进程。</td></tr><tr><td><code>/usr/share/</code></td><td>体系结构无关（共享）数据。<code>/usr/share/doc</code>: 系统说明文件存放目录。<code>/usr/share/man</code>: 程序说明文件存放目录</td></tr><tr><td><code>/usr/include/</code></td><td>C语言的头文件</td></tr><tr><td><code>/usr/X11R6/</code></td><td>X Window系统版本 11, Release 6.</td></tr><tr><td><code>/usr/local/</code></td><td>安装<strong>本地程序</strong>的一般默认路径。本地数据的第三层次，具体到本台主机。通常而言有进一步的子目录，例如：<code>bin/、lib/、share/</code>.这是提供给一般用户的<code>/usr</code>目录，在这里安装一般的应用软件；</td></tr></tbody></table><h3 id="4、-var-目录"><a href="#4、-var-目录" class="headerlink" title="4、/var/目录"></a>4、<code>/var/</code>目录</h3><p><code>/var</code> 包括系统一般运行时要改变的数据.每个系统是特定的，即不通过网络与其他计算机共享.</p><table><thead><tr><th>目录</th><th>描述</th></tr></thead><tbody><tr><td><code>/var/log/message</code></td><td>日志信息，按周自动轮询</td></tr><tr><td><code>/var/spool/cron/root</code></td><td>定时器配置文件目录，默认按用户命名</td></tr><tr><td><code>/var/log/secure</code></td><td>记录登陆系统存取信息的文件，不管认证成功还是认证失败都会记录</td></tr><tr><td><code>/var/log/wtmp</code></td><td>记录登陆者信息的文件，last,who,w命令信息来源于此</td></tr><tr><td><code>/var/spool/clientmqueue/</code></td><td>当邮件服务未开启时，所有应发给系统管理员的邮件都将堆放在此</td></tr><tr><td><code>/var/spool/mail/</code></td><td>邮件目录</td></tr><tr><td><code>/var/tmp</code></td><td>比/tmp 允许的大或需要存在较长时间的临时文件. (虽然系统管理员可能不允许/var/tmp 有很旧的文件.)</td></tr><tr><td><code>/var/lib</code></td><td>系统正常运行时要改变的文件.</td></tr><tr><td><code>/var/local</code></td><td><code>/usr/local</code> 中安装的程序的可变数据(即系统管理员安装的程序).注意，如果必要，即使本地安装的程序也会使用其他/var 目录，例如<code>/var/lock</code> .</td></tr><tr><td><code>/var/lock</code></td><td>锁定文件.许多程序遵循在/var/lock 中产生一个锁定文件的约定，以支持他们正在使用某个特定的设备或文件.其他程序注意到这个锁定文件，将不试图使用这个设备或文件.</td></tr><tr><td><code>/var/log/</code></td><td>各种程序的Log文件，特别是login (<code>/var/log/wtmp</code> log所有到系统的登录和注销) 和syslog (<code>/var/log/messages</code> 里存储所有核心和系统程序信息.<code>/var/log</code> 里的文件经常不确定地增长，应该定期清除.</td></tr><tr><td><code>/var/run</code></td><td>保存到下次引导前有效的关于系统的信息文件.例如，<code>/var/run/utmp</code> 包含当前登录的用户的信息.</td></tr><tr><td><code>/var/cache/</code></td><td>应用程序缓存数据。这些数据是在本地生成的一个耗时的I/O或计算结果。应用程序必须能够再生或恢复数据。缓存的文件可以被删除而不导致数据丢失。</td></tr></tbody></table><h3 id="5、-proc-目录"><a href="#5、-proc-目录" class="headerlink" title="5、/proc/目录"></a>5、<code>/proc/</code>目录</h3><p>虚拟文件系统，将内核与进程状态归档为文本文件（系统信息都存放这目录下）。<br>例如：uptime、 network。在Linux中，对应Procfs格式挂载。该目录下文件只能看不能改（包括root）</p><table><thead><tr><th>目录</th><th>描述</th></tr></thead><tbody><tr><td><code>/proc/meminfo</code></td><td>查看内存信息</td></tr><tr><td><code>/proc/loadavg</code></td><td>还记得 top 以及 uptime 吧？没错！上头的三个平均数值就是记录在此！</td></tr><tr><td><code>/proc/uptime</code></td><td>就是用 uptime 的时候，会出现的资讯啦！</td></tr><tr><td><code>/proc/cpuinfo</code></td><td>关于处理器的信息，如类型、厂家、型号和性能等。</td></tr><tr><td><code>/proc/cmdline</code></td><td>加载 kernel 时所下达的相关参数！查阅此文件，可了解系统是如何启动的！</td></tr><tr><td><code>/proc/filesystems</code></td><td>目前系统已经加载的文件系统罗！</td></tr><tr><td><code>/proc/interrupts</code></td><td>目前系统上面的 IRQ 分配状态。</td></tr><tr><td><code>/proc/ioports</code></td><td>目前系统上面各个装置所配置的 I/O 位址。</td></tr><tr><td><code>/proc/kcore</code></td><td>这个就是内存的大小啦！好大对吧！但是不要读他啦！</td></tr><tr><td><code>/proc/modules</code></td><td>目前我们的 Linux 已经加载的模块列表，也可以想成是驱动程序啦！</td></tr><tr><td><code>/proc/mounts</code></td><td>系统已经挂载的数据，就是用 mount 这个命令呼叫出来的数据啦！</td></tr><tr><td><code>/proc/swaps</code></td><td>到底系统挂加载的内存在哪里？呵呵！使用掉的 partition 就记录在此啦！</td></tr><tr><td><code>/proc/partitions</code></td><td>使用 fdisk -l 会出现目前所有的 partition 吧？在这个文件当中也有纪录喔！</td></tr><tr><td><code>/proc/pci</code></td><td>在 PCI 汇流排上面，每个装置的详细情况！可用 lspci 来查阅！</td></tr><tr><td><code>/proc/version</code></td><td>核心的版本，就是用 uname -a 显示的内容啦！</td></tr><tr><td><code>/proc/bus/*</code></td><td>一些汇流排的装置，还有 U盘的装置也记录在此喔！</td></tr></tbody></table><h3 id="6、-dev-目录"><a href="#6、-dev-目录" class="headerlink" title="6、/dev/目录"></a>6、<code>/dev/</code>目录</h3><p>设备文件, 分为两种：块设备文件(b)和字符设备文件(c)<br>设备文件一般存放在/dev目录下，对常见设备文件作如下说明：</p><table><thead><tr><th>目录</th><th>描述</th></tr></thead><tbody><tr><td><code>/dev/hd[a-t]</code></td><td>IDE设备</td></tr><tr><td><code>/dev/sd[a-z]</code></td><td>SCSI设备</td></tr><tr><td><code>/dev/fd[0-7]</code></td><td>标准软驱</td></tr><tr><td><code>/dev/md[0-31]</code></td><td>软raid设备</td></tr><tr><td><code>/dev/loop[0-7]</code></td><td>本地回环设备</td></tr><tr><td><code>/dev/ram[0-15]</code></td><td>内存</td></tr><tr><td><code>/dev/null</code></td><td>无限数据接收设备,相当于黑洞</td></tr><tr><td><code>/dev/zero</code></td><td>无限零资源</td></tr><tr><td><code>/dev/tty[0-63]</code></td><td>虚拟终端</td></tr><tr><td><code>/dev/ttyS[0-3]</code></td><td>串口</td></tr><tr><td><code>/dev/lp[0-3]</code></td><td>并口</td></tr><tr><td><code>/dev/console</code></td><td>控制台</td></tr><tr><td><code>/dev/fb[0-31]</code></td><td>framebuffer</td></tr><tr><td><code>/dev/cdrom</code></td><td>=&gt; <code>/dev/hdc</code></td></tr><tr><td><code>/dev/modem</code></td><td>=&gt; <code>/dev/ttyS[0-9]</code></td></tr><tr><td><code>/dev/pilot</code></td><td>=&gt;<code>/dev/ttyS[0-9]</code></td></tr><tr><td><code>/dev/random</code></td><td>随机数设备</td></tr><tr><td><code>/dev/urandom</code></td><td>随机数设备</td></tr></tbody></table><h3 id="7、Linux下的文件类型："><a href="#7、Linux下的文件类型：" class="headerlink" title="7、Linux下的文件类型："></a>7、Linux下的文件类型：</h3><p>– (f)：普通文件；<br>d: 目录文件；<br>b: 块设备；<br>c: 字符设备；<br>l: 符号链接文件；<br>p: 管道文件；<br>s: 套接字文件；socket;</p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Apache CXF Web Service Development笔记 01]]></title>
      <url>houzw.github.io.git/2017/04/07/Apache-CXF-Web-Service-Development%E7%AC%94%E8%AE%B0-01/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:01 GMT+0800 (中国标准时间) --><h1 id="熟悉-CXF"><a href="#熟悉-CXF" class="headerlink" title="熟悉 CXF"></a>熟悉 CXF</h1><blockquote><p><strong><em>Apache CXF Web Service Development——Develop and deploy SOAP and RESTful Web Services</em></strong></p><p><em>Naveen Balani &amp; Rajeev Hathi</em></p><p>2009 Packt Publishing</p><p><a href="https://www.packtpub.com/sites/default/files/downloads/5401_Code.zip" target="_blank" rel="external">示例代码下载</a></p></blockquote><p>Apache CXF 是一个业界领先的构建在标准web services之上的开发框架 ，其目标是简化 web services 的开发.</p><h2 id="Web-service相关标准"><a href="#Web-service相关标准" class="headerlink" title="Web service相关标准"></a>Web service相关标准</h2><ul><li><p>XML</p></li><li><p>SOAP (Simple Object Access Protocol)</p><p>SOAP is a protocol for exchanging XML-based messages over a network, typically using HTTP protocol.</p></li><li><p>WSDL (Web Services Description language)<br>WSDL 是一种基于XML语言的用于描述 web services 的标准</p></li><li><p>REST (Representational State Transfer)<br>REST is neither a technology nor a standard; it’s an architectural style—a set of guidelines for exposing resources over the Web（by a Uniform Resource Indicator (URI)）.</p></li><li><p>Service Registry</p><p>Service Registry 提供了一种查找 web services 的机制.</p></li></ul><h2 id="web-services-简介"><a href="#web-services-简介" class="headerlink" title="web services 简介"></a>web services 简介</h2><p>World Wide Web Consortium (W3C) 定义：</p><blockquote><p><em>A Web service is a software system identified by a URI whose public interfaces and bindings are defined and described using XML (specifically WSDL). Its definition can be discovered by other software systems. These systems may then interact with the web service in a manner prescribed by its definition, using XML-based messages conveyed by Internet protocols.</em></p></blockquote><p>Web services are next generation web applications, modules, or components that can be thought of as a<br>service provided over the web.</p><p>A web service can be thought of as a self contained, self describing, modular application that can be published, located, and invoked across the web.</p><p>web services 提供的最大好处是交互性： <strong>interoperability</strong>.</p><h2 id="web-service开发方法"><a href="#web-service开发方法" class="headerlink" title="web service开发方法"></a>web service开发方法</h2><p>一个web service包含三种类型的角色—服务消费者 service consumer, 服务提供者 service provider, 和一个可选的服务注册 service registry.</p><p>服务提供者通过网络发布（基于SOAP的服务） WSDL文件，使用者可直接或通过查找服务注册来使用此服务。使用者通常利用web service框架提供的工具根据WSDL文件生成客户端代码来与服务进行交互。</p><p>在RESTful Web Services中没有正式的服务契约（contract ，即WSDL）。服务请求者需要知道消息的格式，如XML或JSON，以及支持的操作。使用者使用URI通过HTTP协议来启用服务。</p><blockquote><p><a href="http://blog.csdn.net/defonds/article/details/49000993" target="_blank" rel="external">REST Vs SOAP，Soap 和 Rest 的区别</a></p><p><em>REST 的最佳场景是当你通过互联网公开一个公共 API 来对数据的 CRUD 操作进行处理的时候。REST 专注于通过一个一致性接口访问命名<strong>资源</strong>。</em><br><em>SOAP提供了自己的协议并专注于公开某些应用逻辑(不是数据)为服务。SOAP 公开的是<strong>操作</strong>。SOAP 专注于访问通过不同的接口实现了某些业务逻辑的命名操作。</em></p></blockquote><h2 id="Web-service-SOAP-通信风格"><a href="#Web-service-SOAP-通信风格" class="headerlink" title="Web service SOAP 通信风格"></a>Web service SOAP 通信风格</h2><p>两种SOAP通信方式：Document和RPC。</p><p>SOAP 通信方式（message styles）在 WSDL 文档中被定义为 SOAP binding. SOAP binding 可以是编码或文本（ encoded use or a literal use）.</p><p>Document style,将XML文档作为载荷（ payloads），这些XML文档遵循定义良好的约定 （well defined contracts）, 通常使用 XML schema 定义来创建. 文本文档（Document literal style）是首选的通讯方式。</p><p>RPC (Remote Procedure Call) style, 表明 SOAP 内容体中包含一个方法的XML表达。传统上RPC与SOAP编码规则结合使用，该组合被称为RPC /编码（RPC/encoded）。</p><h2 id="CXF"><a href="#CXF" class="headerlink" title="CXF"></a>CXF</h2><p>选择CXF的原因：</p><ul><li>支持所有的主流Web Service 标准</li><li>提供简化的SOAP和RESTful服务编程模型</li><li>提供多种其他应用协议选项</li><li>使用简便</li><li>部署灵活</li></ul><h2 id="使用CXF开发WebService"><a href="#使用CXF开发WebService" class="headerlink" title="使用CXF开发WebService"></a>使用CXF开发WebService</h2><p>一般过程：</p><ul><li>新建 Service Endpoint Interface (SEI) 并定义业务方法供服务使用</li><li>创建实现类，标注其为web service.</li><li>创建 beans.xml 并使用 JAX-WS frontend定义此服务类为 Spring bean.</li></ul><h3 id="SEI"><a href="#SEI" class="headerlink" title="SEI"></a>SEI</h3><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">package</span> demo.order;</div><div class="line"><span class="keyword">import</span> javax.jws.WebService;</div><div class="line"><span class="meta">@WebService</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderProcess</span> </span>&#123;</div><div class="line">    <span class="meta">@WebMethod</span></div><div class="line">    <span class="function">String <span class="title">processOrder</span><span class="params">(Order order)</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><code>@WebService</code> 注解表示此接口为 Service Endpoint Interface，是 JAX-WS 提供的注解之一。</p><p><code>@WebMethod</code> 注解是可选的，用于自定义web服务操作。<code>@WebMethod</code> 提供了operationName, action, exclude三个属性设置（最终反映在WSDL文档中）。</p><p>实体类Order可在类上添加<code>@XmlRootElement(name = &quot;Order&quot;)</code>。 其属于Java Architecture for XML Binding (JAXB) 注解。JAXB 注解用于映射XML schema与Java代码。<code>@XmlRootElement</code> 将类Order映射为XML中的根元素，类中的属性默认映射为<code>@XmlElement</code>.</p><h3 id="实现类"><a href="#实现类" class="headerlink" title="实现类"></a>实现类</h3><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">package</span> demo.order;</div><div class="line"><span class="meta">@WebService</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderProcessImpl</span> <span class="keyword">implements</span> <span class="title">OrderProcess</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">processOrder</span><span class="params">(Order order)</span> </span>&#123;</div><div class="line">        String orderID = validate(order);</div><div class="line">        <span class="keyword">return</span> orderID;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">validate</span><span class="params">(Order order)</span> </span>&#123;</div><div class="line">      ...</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="基于Spring-Bean的服务端"><a href="#基于Spring-Bean的服务端" class="headerlink" title="基于Spring Bean的服务端"></a>基于Spring Bean的服务端</h2><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="comment">&lt;!-- beans.xml --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:jaxws</span>=<span class="string">"http://cxf.apache.org/jaxws"</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></div><div class="line">http://www.springframework.org/schema/beans</div><div class="line">http://www.springframework.org/schema/beans/spring-beans.xsd</div><div class="line">http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd"&gt;</div><div class="line">    <span class="comment">&lt;!-- core components of CXF --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">"classpath:META-INF/cxf/cxf.xml"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">"classpath:META-INF/cxf/cxf-extension-soap.xml"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">"classpath:META-INF/cxf/cxf-servlet.xml"</span> /&gt;</span></div><div class="line">    <span class="comment">&lt;!-- publish the web service --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">jaxws:endpoint</span> <span class="attr">id</span>=<span class="string">"orderProcess"</span> <span class="attr">implementor</span>=<span class="string">"demo.order.OrderProcessImpl"</span> <span class="attr">address</span>=<span class="string">"/OrderProcess"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="开发客户端"><a href="#开发客户端" class="headerlink" title="开发客户端"></a>开发客户端</h3><p>一般过程：</p><ul><li>开发 <code>client-beans.xml</code> 来定义客户端的工厂类为使用JAX-WS frontend的Spring bean</li><li>开发客户端Java应用来启用web服务</li></ul><h4 id="client-beans-xml"><a href="#client-beans-xml" class="headerlink" title="client-beans.xml"></a>client-beans.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:jaxws</span>=<span class="string">"http://cxf.apache.org/jaxws"</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></div><div class="line">http://www.springframework.org/schema/beans</div><div class="line">http://www.springframework.org/schema/beans/spring-beans.xsd</div><div class="line">http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd"&gt;</div><div class="line">    </div><div class="line">    <span class="tag">&lt;<span class="name">jaxws:client</span> <span class="attr">id</span>=<span class="string">"orderClient"</span> <span class="attr">serviceClass</span>=<span class="string">"demo.order.OrderProcess"</span> <span class="attr">address</span>=<span class="string">"http://localhost:8080/orderapp/OrderProcess"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></div></pre></td></tr></table></figure><ul><li>serviceClass：指定 web service SEI</li><li>address：指定SEI发布的URL地址（客户端访问地址）</li></ul><h4 id="客户端Java代码"><a href="#客户端Java代码" class="headerlink" title="客户端Java代码"></a>客户端Java代码</h4><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">package</span> demo.order.client;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Client</span><span class="params">()</span> </span>&#123;&#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">            <span class="comment">// START SNIPPET: client</span></div><div class="line">            ClassPathXmlApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="keyword">new</span> String[] &#123; <span class="string">"demo/order/client/client-beans.xml"</span> &#125;);</div><div class="line">      		<span class="comment">//获得 SEI</span></div><div class="line">            OrderProcess client = (OrderProcess) context.getBean(<span class="string">"orderClient"</span>);</div><div class="line">            <span class="comment">// Populate the Order bean</span></div><div class="line">            Order order = <span class="keyword">new</span> Order();</div><div class="line">            <span class="comment">//...  //set order属性</span></div><div class="line">      		<span class="comment">//使用SEI调用web服务</span></div><div class="line">            String orderID = client.processOrder(order);</div><div class="line">            String message = (orderID == <span class="keyword">null</span>) ?<span class="string">"Order not approved"</span> : <span class="string">"Order approved; order ID is "</span> + orderID;</div><div class="line">            System.out.println(message);</div><div class="line">            System.exit(<span class="number">0</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="Web-xml配置"><a href="#Web-xml配置" class="headerlink" title="Web.xml配置"></a>Web.xml配置</h3><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></div><div class="line">  ...</div><div class="line">    <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></div><div class="line">44<span class="tag">&lt;<span class="name">param-value</span>&gt;</span>WEB-INF/beans.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></div><div class="line">4<span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>CXFServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>CXF Servlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span></div><div class="line">            org.apache.cxf.transport.servlet.CXFServlet</div><div class="line">        <span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>CXFServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></div></pre></td></tr></table></figure><h4 id="项目结构说明"><a href="#项目结构说明" class="headerlink" title="项目结构说明"></a>项目结构说明</h4><ul><li><code>beans.xml</code> 和<code>web.xml</code> 位于<code>webapp\WEB-INF</code> 文件夹</li><li><code>client-beans.xml</code>位于<code>demo\order\client</code> 文件夹（client类所在目录）</li></ul><h4 id="项目运行说明"><a href="#项目运行说明" class="headerlink" title="项目运行说明"></a>项目运行说明</h4><p>依赖tomcat。原文依赖ant</p><h2 id="CXF架构"><a href="#CXF架构" class="headerlink" title="CXF架构"></a>CXF架构</h2><p>• Bus<br>• Frontend<br>• Messaging and Interceptors<br>• Service Model<br>• Data bindings<br>• Protocol bindings<br>• Transport</p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Vuex 学习]]></title>
      <url>houzw.github.io.git/2017/03/31/Vuex-%E5%AD%A6%E4%B9%A0/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="Vuex-Vue的状态管理模式"><a href="#Vuex-Vue的状态管理模式" class="headerlink" title="Vuex : Vue的状态管理模式"></a>Vuex : Vue的状态管理模式</h1><blockquote><p>摘自 <a href="https://vuex.vuejs.org/zh-cn/" target="_blank" rel="external">https://vuex.vuejs.org/zh-cn/</a></p></blockquote><h2 id="State"><a href="#State" class="headerlink" title="State"></a>State</h2><p>Vuex 使用 <strong>单一状态树</strong> :用一个对象包含全部的<strong>应用层级</strong>状态。它作为一个『唯一数据源(<a href="https://en.wikipedia.org/wiki/Single_source_of_truth" target="_blank" rel="external">SSOT</a>)』而存在。这意味着，每个应用将<strong>仅仅包含一个 store 实例</strong>。</p><h3 id="在-Vue-组件中获得-Vuex-状态"><a href="#在-Vue-组件中获得-Vuex-状态" class="headerlink" title="在 Vue 组件中获得 Vuex 状态"></a>在 Vue 组件中获得 Vuex 状态</h3><p>在<a href="http://cn.vuejs.org/guide/computed.html" target="_blank" rel="external">计算属性</a>中返回某个状态:</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">//Counter 组件</span></div><div class="line">computed: &#123;</div><div class="line">    count () &#123;</div><div class="line">      <span class="keyword">return</span> store.state.count  <span class="comment">//依赖全局状态单例 store</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>Vuex 通过 <code>store</code> 选项将状态从<strong>根组件</strong>『注入』到每一个子组件中</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">Vue.use(Vuex); <span class="comment">//必需调用</span></div><div class="line"><span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</div><div class="line">  <span class="attr">el</span>: <span class="string">'#app'</span>,</div><div class="line">  <span class="comment">// 把 store 对象提供给 “store” 选项，这可以把 store 的实例注入所有的子组件</span></div><div class="line">  store,</div><div class="line">  <span class="attr">components</span>: &#123; Counter &#125;,</div><div class="line"> <span class="comment">// ...</span></div></pre></td></tr></table></figure><p>在子组件 Counter 中</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">const</span> Counter = &#123;</div><div class="line">  <span class="comment">//...</span></div><div class="line">  computed: &#123;</div><div class="line">    count () &#123;</div><div class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.$store.state.count <span class="comment">// 子组件能通过 this.$store 访问到</span></div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="mapState-辅助函数"><a href="#mapState-辅助函数" class="headerlink" title="mapState 辅助函数"></a><code>mapState</code> 辅助函数</h3><p>当一个组件需要获取多个状态时候，将这些状态都声明为计算属性会有些重复和冗余。可使用 <code>mapState</code> 辅助函数帮助生成计算属性：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">// 在单独构建的版本中辅助函数为 Vuex.mapState</span></div><div class="line"><span class="keyword">import</span> &#123; mapState &#125; <span class="keyword">from</span> <span class="string">'vuex'</span></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</div><div class="line">  <span class="comment">// ...</span></div><div class="line">computed: mapState(&#123;</div><div class="line">    <span class="attr">count</span>: <span class="function"><span class="params">state</span> =&gt;</span> state.count,</div><div class="line">    <span class="comment">// 传字符串参数 'count' 等同于 `state =&gt; state.count`</span></div><div class="line">    countAlias: <span class="string">'count'</span>,</div><div class="line">    <span class="comment">// 为了能够使用 `this` 获取局部状态，必须使用常规函数</span></div><div class="line">    countPlusLocalState (state) &#123;</div><div class="line">      <span class="keyword">return</span> state.count + <span class="keyword">this</span>.localCount</div><div class="line">    &#125;</div><div class="line">  &#125;)</div><div class="line">  <span class="comment">//...</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><p>当映射的计算属性的名称与 state 的子节点<strong>名称相同</strong>时，我们也可以给 <code>mapState</code> 传一个<strong>字符串数组</strong>。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">computed: mapState([</div><div class="line">  <span class="string">'count'</span> <span class="comment">// 映射 this.count 为 store.state.count</span></div><div class="line">])</div></pre></td></tr></table></figure><h3 id="对象展开运算符"><a href="#对象展开运算符" class="headerlink" title="对象展开运算符"></a>对象展开运算符</h3><p><code>mapState</code> 函数返回的是一个<strong>对象</strong>。我们如何将它与局部计算属性混合使用呢？使用<a href="https://github.com/sebmarkbage/ecmascript-rest-spread" target="_blank" rel="external">对象展开运算符</a>，可以极大地简化写法：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">computed: &#123;</div><div class="line">  localComputed () &#123; <span class="comment">/* ... */</span> &#125;,</div><div class="line">  <span class="comment">// 使用对象展开运算符将此对象混入到外部对象中</span></div><div class="line">  ...mapState(&#123;</div><div class="line">    <span class="comment">// ...</span></div><div class="line">  &#125;)</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="Getters"><a href="#Getters" class="headerlink" title="Getters"></a>Getters</h2><p>Vuex 允许在 store 中定义『getters』（可认为是 <strong>store 的计算属性</strong>），从而可以派生出新的状态（通过filter等等）。</p><p>Getters 接受 state 作为其第一个参数：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> Vuex.Store(&#123;</div><div class="line">  <span class="attr">state</span>: &#123;</div><div class="line">    <span class="attr">todos</span>: [</div><div class="line">      &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">text</span>: <span class="string">'...'</span>, <span class="attr">done</span>: <span class="literal">true</span> &#125;,</div><div class="line">      &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">text</span>: <span class="string">'...'</span>, <span class="attr">done</span>: <span class="literal">false</span> &#125;</div><div class="line">    ]</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">getters</span>: &#123;</div><div class="line">    <span class="attr">doneTodos</span>: <span class="function"><span class="params">state</span> =&gt;</span> &#123;</div><div class="line">      <span class="keyword">return</span> state.todos.filter(<span class="function"><span class="params">todo</span> =&gt;</span> todo.done)</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure><p>Getters 会暴露为 <code>store.getters</code> 对象：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">store.getters.doneTodos <span class="comment">// -&gt; [&#123; id: 1, text: '...', done: true &#125;]</span></div></pre></td></tr></table></figure><p>Getters 也可以接受其他 getters 作为第二个参数.</p><p>可在任何组件中使用它：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">computed: &#123;</div><div class="line">  doneTodos () &#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.$store.getters.doneTodos</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="mapGetters-辅助函数"><a href="#mapGetters-辅助函数" class="headerlink" title="mapGetters 辅助函数"></a><code>mapGetters</code> 辅助函数</h3><p><code>mapGetters</code> 辅助函数仅仅是将 store 中的 getters 映射到局部计算属性：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; mapGetters &#125; <span class="keyword">from</span> <span class="string">'vuex'</span></div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</div><div class="line">  <span class="comment">// ...</span></div><div class="line">  computed: &#123;</div><div class="line">  <span class="comment">// 使用对象展开运算符将 getters 混入 computed 对象中</span></div><div class="line">    ...mapGetters([</div><div class="line">      <span class="string">'doneTodosCount'</span>,</div><div class="line">      <span class="string">'anotherGetter'</span>,</div><div class="line">      <span class="comment">// ...</span></div><div class="line">    ])</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>如果想将一个 getter 属性<strong>另取一个名字</strong>，使用对象形式：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">mapGetters(&#123;</div><div class="line">  <span class="comment">// 映射 this.doneCount 为 store.getters.doneTodosCount</span></div><div class="line">  doneCount: <span class="string">'doneTodosCount'</span></div><div class="line">&#125;)</div></pre></td></tr></table></figure><h1 id="Mutations"><a href="#Mutations" class="headerlink" title="Mutations"></a>Mutations</h1><p>更改 Vuex 的 store 中的状态的<strong>唯一方法</strong>是<strong>提交 mutation</strong>。</p><p>mutations 非常类似于<strong>事件</strong>：每个 mutation 都有一个字符串的 <strong>事件类型 (type)</strong> 和 一个 <strong>回调函数 (handler)</strong>。这个回调函数就是我们<strong>实际进行状态更改的地方</strong>，并且它会接受 <strong>state 作为第一个参数</strong>：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> Vuex.Store(&#123;</div><div class="line">  <span class="attr">state</span>: &#123;</div><div class="line">    <span class="attr">count</span>: <span class="number">1</span></div><div class="line">  &#125;,</div><div class="line">  <span class="attr">mutations</span>: &#123;</div><div class="line">    increment (state) &#123;</div><div class="line">      <span class="comment">// 变更状态</span></div><div class="line">      state.count++</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure><p><strong>不能直接调用一个 mutation handler</strong>。要唤醒一个 mutation handler，需<strong>以 store.commit 方法调用相应的 type </strong>：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">store.commit(<span class="string">'increment'</span>)</div></pre></td></tr></table></figure><h3 id="提交载荷（Payload，额外参数）"><a href="#提交载荷（Payload，额外参数）" class="headerlink" title="提交载荷（Payload，额外参数）"></a>提交载荷（Payload，额外参数）</h3><p>可以向 <code>store.commit</code> 传入额外的参数，即 mutation 的 <strong>载荷（payload）</strong>：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">// ...</span></div><div class="line">mutations: &#123;</div><div class="line">  increment (state, n) &#123;</div><div class="line">    state.count += n</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">store.commit(<span class="string">'increment'</span>, <span class="number">10</span>)</div></pre></td></tr></table></figure><p>在大多数情况下，载荷应该是一个<strong>对象</strong>.</p><h3 id="对象风格的提交方式"><a href="#对象风格的提交方式" class="headerlink" title="对象风格的提交方式"></a>对象风格的提交方式</h3><p>直接使用包含 <code>type</code> 属性的对象：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">store.commit(&#123;</div><div class="line">  <span class="attr">type</span>: <span class="string">'increment'</span>,</div><div class="line">  <span class="attr">amount</span>: <span class="number">10</span></div><div class="line">&#125;)</div></pre></td></tr></table></figure><p>此时，整个对象都作为载荷传给 mutation 函数，因此 handler 保持不变：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">mutations: &#123;</div><div class="line">  increment (state, payload) &#123;</div><div class="line">    state.count += payload.amount</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="Mutations-需遵守-Vue-的响应规则"><a href="#Mutations-需遵守-Vue-的响应规则" class="headerlink" title="Mutations 需遵守 Vue 的响应规则"></a>Mutations 需遵守 Vue 的响应规则</h3><p>Vuex 中的 mutation 也需要与使用 Vue 一样遵守一些注意事项：</p><ol><li><p>最好提前在 store 中初始化好所有所需属性。</p></li><li><p>当需要在对象上添加<strong>新属性</strong>时，你应该</p><ul><li><p>使用 <code>Vue.set(obj, &#39;newProp&#39;, 123)</code>, 或者 -</p></li><li><p>以<strong>新对象替换老对象</strong>。例如，利用 stage-3 的<a href="https://github.com/sebmarkbage/ecmascript-rest-spread" target="_blank" rel="external">对象展开运算符</a>我们可以这样写：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">state.obj = &#123; ...state.obj, <span class="attr">newProp</span>: <span class="number">123</span> &#125;</div></pre></td></tr></table></figure></li></ul></li></ol><h3 id="使用常量替代-Mutation-事件类型"><a href="#使用常量替代-Mutation-事件类型" class="headerlink" title="使用常量替代 Mutation 事件类型"></a>使用常量替代 Mutation 事件类型</h3><p>使用常量替代 mutation 事件类型可以使 linter 之类的工具发挥作用，同时把这些常量放在单独的文件中可让代码合作者对整个 app 包含的 mutation 一目了然：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">// mutation-types.js</span></div><div class="line"><span class="keyword">export</span> <span class="keyword">const</span> SOME_MUTATION = <span class="string">'SOME_MUTATION'</span></div><div class="line"></div><div class="line"><span class="comment">// store.js</span></div><div class="line"><span class="keyword">import</span> Vuex <span class="keyword">from</span> <span class="string">'vuex'</span></div><div class="line"><span class="keyword">import</span> &#123; SOME_MUTATION &#125; <span class="keyword">from</span> <span class="string">'./mutation-types'</span></div><div class="line"></div><div class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> Vuex.Store(&#123;</div><div class="line">  <span class="attr">state</span>: &#123; ... &#125;,</div><div class="line">  <span class="attr">mutations</span>: &#123;</div><div class="line">    <span class="comment">// 使用 ES6 风格的计算属性命名功能来使用一个常量作为函数名</span></div><div class="line">    [SOME_MUTATION] (state) &#123;</div><div class="line">      <span class="comment">// mutate state</span></div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure><h3 id="mutation-必须是同步函数"><a href="#mutation-必须是同步函数" class="headerlink" title="mutation 必须是同步函数"></a>mutation 必须是同步函数</h3><h3 id="在组件中提交-Mutations"><a href="#在组件中提交-Mutations" class="headerlink" title="在组件中提交 Mutations"></a>在组件中提交 Mutations</h3><p>可以在组件中使用 <code>this.$store.commit(&#39;xxx&#39;)</code> 提交 mutation，或者使用 <strong><code>mapMutations</code></strong> 辅助函数将组件中的 methods 映射为 <code>store.commit</code> 调用（需要在根节点注入 <code>store</code>）。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; mapMutations &#125; <span class="keyword">from</span> <span class="string">'vuex'</span></div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</div><div class="line">  <span class="comment">// ...</span></div><div class="line">  methods: &#123;</div><div class="line">    <span class="comment">//字符串数组形式</span></div><div class="line">    ...mapMutations([</div><div class="line">      <span class="string">'increment'</span> <span class="comment">// 映射 this.increment() 为 this.$store.commit('increment')</span></div><div class="line">    ]),</div><div class="line">    <span class="comment">//对象形式</span></div><div class="line">    ...mapMutations(&#123;</div><div class="line">      <span class="attr">add</span>: <span class="string">'increment'</span> <span class="comment">// 映射 this.add() 为 this.$store.commit('increment')</span></div><div class="line">    &#125;)</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h1 id="Actions"><a href="#Actions" class="headerlink" title="Actions"></a>Actions</h1><p>Action 类似于 mutation，不同在于：</p><ul><li>Action <strong>提交的是 mutation</strong>，而不是直接变更状态。</li><li>Action <strong>可包含任意异步操作</strong>。</li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> Vuex.Store(&#123;</div><div class="line">  <span class="attr">state</span>: &#123;</div><div class="line">    <span class="attr">count</span>: <span class="number">0</span></div><div class="line">  &#125;,</div><div class="line">  <span class="attr">mutations</span>: &#123;</div><div class="line">    increment (state) &#123;</div><div class="line">      state.count++</div><div class="line">    &#125;</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">actions</span>: &#123;</div><div class="line">    increment (context) &#123;</div><div class="line">      context.commit(<span class="string">'increment'</span>) <span class="comment">//提交 mutation increment</span></div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure><p>Action 函数接受一个<strong>与 store 实例具有相同方法和属性</strong>的 context 对象（ 不是 store 实例本身）。</p><p>可以调用 <code>context.commit</code> 提交一个 mutation，或者通过 <code>context.state</code> 和 <code>context.getters</code> 来获取 state 和 getters。</p><p>用 ES2015 的 <a href="https://github.com/lukehoban/es6features#destructuring" target="_blank" rel="external">参数解构</a> 来简化代码：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">actions: &#123;</div><div class="line">  increment (&#123; commit &#125;) &#123;</div><div class="line">    commit(<span class="string">'increment'</span>)</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="分发-Action"><a href="#分发-Action" class="headerlink" title="分发 Action"></a>分发 Action</h3><p>Action 通过 <code>store.dispatch</code> 方法触发：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">store.dispatch(<span class="string">'increment'</span>)</div></pre></td></tr></table></figure><p><strong>mutation 必须同步执行</strong>, 而在 action 内部可以执行<strong>异步</strong>操作。</p><p>Actions 支持同样的<strong>载荷</strong>方式和<strong>对象</strong>方式进行分发。</p><h3 id="在组件中分发Action"><a href="#在组件中分发Action" class="headerlink" title="在组件中分发Action"></a>在组件中分发Action</h3><p>可以在 组件中使用 <code>this.$store.dispatch(&#39;xxx&#39;)</code> 分发 action，或者使用 <code>mapActions</code> 辅助函数<strong>将组件的 methods 映射为 <code>store.dispatch</code> 调用</strong>（需要先在根节点注入 <code>store</code>）：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; mapActions &#125; <span class="keyword">from</span> <span class="string">'vuex'</span></div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</div><div class="line">  <span class="comment">// ...</span></div><div class="line">  methods: &#123;</div><div class="line">    ...mapActions([</div><div class="line">      <span class="string">'increment'</span> <span class="comment">// 映射 this.increment() 为 this.$store.dispatch('increment')</span></div><div class="line">    ]),</div><div class="line">    ...mapActions(&#123;</div><div class="line">      <span class="attr">add</span>: <span class="string">'increment'</span> <span class="comment">// 映射 this.add() 为 this.$store.dispatch('increment')</span></div><div class="line">    &#125;)</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h1 id="Modules"><a href="#Modules" class="headerlink" title="Modules"></a>Modules</h1><p>当应用变得很大时，store 对象会变得臃肿不堪。为此，Vuex 允许将 store 分割到<strong>模块（module）</strong>。每个模块拥有自己的 <strong>state、mutation、action、getters</strong>、甚至是<strong>嵌套子模块</strong>——从上至下进行类似的分割：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">const</span> moduleA = &#123;</div><div class="line">  <span class="attr">state</span>: &#123; ... &#125;,  <span class="comment">//组件级别的状态</span></div><div class="line">  mutations: &#123; ... &#125;,</div><div class="line">  <span class="attr">actions</span>: &#123; ... &#125;,</div><div class="line">  <span class="attr">getters</span>: &#123; ... &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">const</span> moduleB = &#123;</div><div class="line">  <span class="attr">state</span>: &#123; ... &#125;,</div><div class="line">  <span class="attr">mutations</span>: &#123; ... &#125;,</div><div class="line">  <span class="attr">actions</span>: &#123; ... &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> Vuex.Store(&#123;</div><div class="line">  <span class="attr">modules</span>: &#123;</div><div class="line">    <span class="attr">a</span>: moduleA,</div><div class="line">    <span class="attr">b</span>: moduleB</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">state</span>: &#123; <span class="comment">/*根级别的状态*/</span> &#125;</div><div class="line">&#125;)</div><div class="line"></div><div class="line">store.state.a <span class="comment">// -&gt; moduleA 的状态</span></div><div class="line">store.state.b <span class="comment">// -&gt; moduleB 的状态</span></div></pre></td></tr></table></figure><h3 id="模块的局部状态"><a href="#模块的局部状态" class="headerlink" title="模块的局部状态"></a>模块的局部状态</h3><p>对于模块内部的 mutation 和 getter，接收的第一个参数是<strong>模块的局部状态</strong>。对于getter，根节点状态会作为<strong>第三个参数</strong>。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">const</span> moduleA = &#123;</div><div class="line">  <span class="comment">// ...</span></div><div class="line">  getters: &#123;</div><div class="line">    sumWithRootCount (state, getters, rootState) &#123;</div><div class="line">      <span class="keyword">return</span> state.count + rootState.count</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>对于模块内部的 action，<code>context.state</code> 是局部状态，根节点的状态是 <code>context.rootState</code>.</p><h3 id="命名空间"><a href="#命名空间" class="headerlink" title="命名空间"></a>命名空间</h3><p>模块内部的 action、mutation和 getter 现在仍然注册在<strong>全局命名空间</strong>——这样保证了多个模块能够响应同一 mutation 或 action。即，在 Vuex 模块化中，state 是唯一会根据组合时模块的别名来添加层级的，后面的 getters、mutations 以及 actions 都是直接合并在 store 下。</p><p>可以通过添加前缀或后缀的方式隔离各模块，以避免名称冲突。</p><p><code>export const DONE_COUNT = &#39;todos/DONE_COUNT&#39;</code></p><h3 id="模块动态注册"><a href="#模块动态注册" class="headerlink" title="模块动态注册"></a>模块动态注册</h3><p>在 store 创建<strong>之后</strong>，你可以使用 <code>store.registerModule</code> 方法注册模块：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">store.registerModule(<span class="string">'myModule'</span>, &#123;</div><div class="line">  <span class="comment">// ...</span></div><div class="line">&#125;)</div></pre></td></tr></table></figure><p>模块的状态将是 <code>store.state.myModule</code>。</p><p>也可以使用 <code>store.unregisterModule(moduleName)</code> 动态地卸载模块。</p><blockquote><p>不能使用此方法卸载静态模块（在创建 store 时声明的模块）。</p></blockquote><h2 id="表单处理"><a href="#表单处理" class="headerlink" title="表单处理"></a>表单处理</h2><p>当在严格模式中使用 Vuex 时，在属于 Vuex 的 state 上使用 <code>v-model</code> 会比较棘手：<code>&lt;input v-model=&quot;obj.message&quot;&gt;</code></p><p>假设这里的 <code>obj</code> 是在计算属性中返回的一个属于 Vuex store 的对象，在用户输入时，<code>v-model</code> 会试图直接修改<code>obj.message</code>。在严格模式中，由于这个修改不是在 mutation 函数中执行的, 会抛出一个错误。</p><p>用『Vuex 的思维』去解决这个问题的方法是：给 <code>&lt;input&gt;</code> 中绑定 value，然后侦听 <code>input</code> 或者 <code>change</code> 事件，在事件回调中调用 action:</p><p><code>&lt;input :value=&quot;message&quot; @input=&quot;updateMessage&quot;&gt;</code></p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">// ...</span></div><div class="line">computed: &#123;</div><div class="line">  ...mapState(&#123;</div><div class="line">    <span class="attr">message</span>: <span class="function"><span class="params">state</span> =&gt;</span> state.obj.message</div><div class="line">  &#125;)</div><div class="line">&#125;,</div><div class="line"><span class="attr">methods</span>: &#123;</div><div class="line">  updateMessage (e) &#123;</div><div class="line">    <span class="keyword">this</span>.$store.commit(<span class="string">'updateMessage'</span>, e.target.value)</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// ...</span></div><div class="line">mutations: &#123;</div><div class="line">  updateMessage (state, message) &#123;</div><div class="line">    state.obj.message = message</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="双向绑定的计算属性"><a href="#双向绑定的计算属性" class="headerlink" title="双向绑定的计算属性"></a>双向绑定的计算属性</h3><p>另一个方法是使用带有 setter 的双向绑定计算属性：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">&lt;input v-model=<span class="string">"message"</span>&gt;</div><div class="line"><span class="comment">// ...</span></div><div class="line">computed: &#123;</div><div class="line">  <span class="attr">message</span>: &#123;</div><div class="line">    get () &#123;</div><div class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.$store.state.obj.message</div><div class="line">    &#125;,</div><div class="line">    set (value) &#123;</div><div class="line">      <span class="keyword">this</span>.$store.commit(<span class="string">'updateMessage'</span>, value)</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><hr><p>定义状态state，为了获得派生状态，定义getters；定义改变状态的方法mutations，然后定义actions来调用mutation，通过dispatch触发actions。</p><p><code>mapGetters</code> 将 store 中的 getters 映射到局部计算属性，<code>mapMutations</code> 将组件中的 methods 映射为 <code>store.commit</code> 调用，<code>mapActions</code> 将组件的 methods 映射为 <code>store.dispatch</code> 调用</p><hr><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">|——— store</div><div class="line">4├── index.js          # 组装模块并导出 store 的地方</div><div class="line">4├── actions.js        # 根级别的 action</div><div class="line">4├── mutations.js      # 根级别的 mutation</div><div class="line">4├── mutation-types.js # 使用常量替代 mutation 事件类型</div><div class="line">4└── modules</div><div class="line">        ├── m1.js         # 模块,内部包含模块的state、action、getter、mutation</div><div class="line">        └── m2.js</div></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[TauDEM 计算 TWI]]></title>
      <url>houzw.github.io.git/2017/03/30/TauDEM-%E8%AE%A1%E7%AE%97TWI/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h2 id="TauDEM-计算-Topographic-Wetness-Index"><a href="#TauDEM-计算-Topographic-Wetness-Index" class="headerlink" title="TauDEM 计算 Topographic Wetness Index"></a>TauDEM 计算 Topographic Wetness Index</h2><p>根据 TauDEM 的 <a href="http://hydrology.usu.edu/taudem/taudem5/help53/TopographicWetnessIndex.html" target="_blank" rel="external">TWI方法</a>，需要两个数据：slp 坡度，sca 单位汇水面积/Specific Catchment Area. 而坡度计算又需要先填洼；</p><h3 id="填洼-PitRemove"><a href="#填洼-PitRemove" class="headerlink" title="填洼 PitRemove"></a>填洼 PitRemove</h3><p><code>mpiexec -n &lt;number of processes&gt; PitRemove -z &lt;demfile&gt; -fel &lt;felfile&gt; [ -4way ][ -depmask depmaskfile]</code></p><ul><li>demfile: <strong>Input</strong> elevation grid 输入高程格网</li><li>depmaskfile: depression mask file(Optional input) 可选的洼地掩膜</li><li>felfile: <strong>Output</strong> elevation grid with pits filled 填洼之后的高程格网文件</li><li>-4way: 4 directions, ie. N, S, E or W neighbors</li></ul><h3 id="计算坡度（-流向，D8FlowDir-）"><a href="#计算坡度（-流向，D8FlowDir-）" class="headerlink" title="计算坡度（+流向，D8FlowDir ）"></a>计算坡度（+流向，D8FlowDir ）</h3><p><code>mpiexec -n &lt;number of processes&gt; D8FlowDir -fel &lt;felfile&gt; -p &lt;pfile&gt; -sd8 &lt;sd8file&gt;</code></p><ul><li>felfile: <strong>Pit filled</strong> elevation input data 已经填洼的高程输入文件</li></ul><ul><li>pfile: D8 flow directions output 输出的D8流向数据</li><li>sd8file: D8 <strong>slopes</strong> output 生成的D8 坡度数据</li></ul><h3 id="或DinfFlowDir-流向，taudem中TWI基于此流向算法"><a href="#或DinfFlowDir-流向，taudem中TWI基于此流向算法" class="headerlink" title="或DinfFlowDir (+流向，taudem中TWI基于此流向算法)"></a>或DinfFlowDir (+流向，taudem中TWI基于此流向算法)</h3><p><code>mpiexec -n &lt;number of processes&gt; DinfFlowDir -fel &lt;felfile&gt; -ang &lt;angfile&gt; -slp &lt;slpfile&gt;</code></p><ul><li>felfile: <em>Pit filled</em> elevation <strong>input</strong> data 已经填洼的高程输入文件</li><li>angfile: Dinf flow <strong><em>directions</em></strong> <strong>output</strong> 输出的Dinf算法流向数据</li><li>slpfile: Dinf <strong><em>slopes</em></strong> <strong>output</strong> 基于Dinf算法的坡度数据</li></ul><h3 id="AreaDinf-计算SCA（Dinf算法）"><a href="#AreaDinf-计算SCA（Dinf算法）" class="headerlink" title="AreaDinf 计算SCA（Dinf算法）"></a>AreaDinf 计算SCA（Dinf算法）</h3><p><code>mpiexec -n &lt;number of processes&gt; AreaDinf -ang &lt;angfile&gt; -sca &lt;scafile&gt; [ -o &lt;outletfile&gt;][ -wg ] [ -nc][ -lyrname ] [ -lyrno &lt;layer number&gt;]</code></p><ul><li><p>angfile: <strong>Input</strong> Dinfflow <strong>directions</strong> grid 输入的流向格网</p></li><li><p>scafile: <strong>Output</strong> Dinf contributing area grid 输出的集水面积格网</p></li><li><p>outletfile: <strong>input</strong> outlets file (OGR readable dataset)(optional) 可选|流域出口输入文件</p></li><li><p>wgfile: <strong>Input</strong> weight grid (optional) 可选|权重格网</p></li><li><p>nc: Flag for edge contamination(optional)可选|</p></li><li><p>layer name: OGR layer name if outlets are not the first layer in outletfile (optional) 可选|</p></li><li><p>layer number: OGR layer number if outlets are not the first layer in outletfile (optional) 可选|</p><p>Layer name and layer number should not both be specified.</p></li></ul><h3 id="计算TWI"><a href="#计算TWI" class="headerlink" title="计算TWI"></a>计算TWI</h3><p><code>mpiexec -n &lt;number of processes&gt; TWI -slp &lt; slpfile&gt; -sca &lt;scafile &gt; -twi &lt;twifile &gt;</code></p><ul><li>slpfile: <strong>input</strong> <strong>slope</strong> file 输入的坡度数据文件</li><li><p>scafile: <strong>input</strong> specific catchment area file 输入的单位汇水面积文件</p><blockquote><p>A grid of <strong>specific catchment area</strong> which is the <strong>contributing area per unit contour length</strong>. This should have units of length (area per contour width). It may be the output of the multiple flow direction D-Infinity contributing area function in which case the function by default (without an input weight grid) scales the contributing area in number of cells by the cell size to produce specific catchment area.</p><p>If D8 or some other contributing area evaluated using the number of cells is used here it should first be scaled by cell size to give specific catchment area in length units.</p></blockquote></li><li><p>twifile: <strong>output</strong> topographic wetness index file</p></li></ul><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Ibatis/Mybatis模糊查询]]></title>
      <url>houzw.github.io.git/2017/03/30/Mybatis%E6%A8%A1%E7%B3%8A%E6%9F%A5%E8%AF%A2/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h2 id="Ibatis-Mybatis模糊查询"><a href="#Ibatis-Mybatis模糊查询" class="headerlink" title="Ibatis/Mybatis模糊查询"></a>Ibatis/Mybatis模糊查询</h2><h3 id="Ibatis中"><a href="#Ibatis中" class="headerlink" title="Ibatis中"></a>Ibatis中</h3><ol><li>使用<code>$</code>代替<code>#</code>。此种方法就是去掉了类型检查，使用字符串连接，不过可能会<strong>有sql注入风险</strong>。</li></ol><p>Sql代码 <code>select * from table1 where name like &#39;%$name$%&#39;</code></p><ol><li><p>使用连接符。不过不同的数据库中方式不同。</p><figure class="highlight sql"><table><tr><td class="code"><pre><div class="line">mysql：  <span class="keyword">select</span>  *  <span class="keyword">from</span> table1 <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="keyword">concat</span>(<span class="string">'%'</span>, #<span class="keyword">name</span>#, <span class="string">'%'</span>) </div><div class="line"><span class="keyword">oracle</span>:  <span class="keyword">select</span>  *  <span class="keyword">from</span> table1 <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="string">'%'</span> || #<span class="keyword">name</span># || <span class="string">'%'</span>  </div><div class="line"><span class="keyword">sql</span> <span class="keyword">server</span>:  <span class="keyword">select</span>  *  <span class="keyword">from</span> table1 <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="string">'%'</span> + #<span class="keyword">name</span># + <span class="string">'%'</span></div></pre></td></tr></table></figure></li></ol><p>注意：在实际开发中，往往我们需要将模糊查询的空格去掉。为了防止将去除空格放到业务层去，因此建议如下写（oracle 中，其他数据库雷同）：</p><p>Sql代码 <code>select * from table1 where name like &#39;%&#39; || Trim(#name#) || &#39;%&#39;</code></p><hr><h3 id="MyBatis中"><a href="#MyBatis中" class="headerlink" title="MyBatis中"></a><strong>MyBatis中</strong></h3><figure class="highlight"><table><tr><td class="code"><pre><div class="line">like "%"#&#123;name&#125;"%"   &lt;!--推荐使用--&gt; （psql中有问题）</div><div class="line">like '%'||#&#123;name&#125;||'%'</div><div class="line">like '%$&#123;name&#125;%'</div><div class="line">like CONCAT('%',#&#123;name&#125;,'%')  </div><div class="line">sqlserver: like '%'+#&#123;name&#125;+'%'</div></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title></title>
      <url>houzw.github.io.git/2017/03/22/vue-cli%20webpack/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="vue-cli-webpack"><a href="#vue-cli-webpack" class="headerlink" title="vue-cli webpack"></a>vue-cli webpack</h1><p>Vue webpack项目开始构建模板使用，关键内容摘要</p><blockquote><p>中文文档 <a href="https://loulanyijian.github.io/vue-cli-doc-Chinese/" target="_blank" rel="external">https://loulanyijian.github.io/vue-cli-doc-Chinese/</a></p><p>官方英文 <a href="http://vuejs-templates.github.io/webpack/" target="_blank" rel="external">http://vuejs-templates.github.io/webpack/</a></p><p>所有模板 <a href="https://github.com/vuejs-templates" target="_blank" rel="external">https://github.com/vuejs-templates</a></p></blockquote><h2 id="0-安装和使用-vue-cli"><a href="#0-安装和使用-vue-cli" class="headerlink" title="0 安装和使用 vue-cli"></a>0 安装和使用 vue-cli</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">$ npm install -g vue-cli # 全局安装vue-cli</div><div class="line">$ vue init webpack my-project # 使用vue-cli初始化一个完整的webpack项目。</div><div class="line">$ cd my-project # 进入目录</div><div class="line">$ npm install # 安装依赖 (package.json)</div><div class="line">$ npm run dev # 启动开发环境版本</div></pre></td></tr></table></figure><p>使用Vue-cli命令行工具初始化基于模板的项目的命令语法：</p><p><code>$ vue init &lt;template-name&gt; &lt;project-name&gt;</code></p><p>可用 <code>vue list</code>命令查看所有模板类型</p><p>如果<code>npm install</code>失败</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">npm ERR! phantomjs-prebuilt@2.1.14 install: `node install.js`</div><div class="line">npm ERR! Exit status 1</div></pre></td></tr></table></figure><p>试试：<br><code>npm install phantomjs-prebuilt@2.1.14 --ignore-scripts</code></p><h2 id="1-项目结构"><a href="#1-项目结构" class="headerlink" title="1  项目结构"></a>1 项目结构</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">├── build/                      # webpack 编译任务配置文件: 开发环境与生产环境</div><div class="line">│   └── ...</div><div class="line">├── config/                     </div><div class="line">│   ├── index.js                # 项目核心配置</div><div class="line">│   └── ...</div><div class="line">├── src/</div><div class="line">│   ├── main.js                 # 程序入口文件</div><div class="line">│   ├── App.vue                 # 程序入口vue组件</div><div class="line">│   ├── components/             # 组件</div><div class="line">│   │   └── ...</div><div class="line">│   └── assets/                 # 模块资源 (会被webpack处理)</div><div class="line">│       └── ...</div><div class="line">├── static/                     # 纯静态资源 (直接拷贝到dist/static/里面)</div><div class="line">├── test/</div><div class="line">│   └── unit/                   # 单元测试</div><div class="line">│   │   ├── specs/              # 测试规范</div><div class="line">│   │   ├── index.js            # 测试入口文件</div><div class="line">│   │   └── karma.conf.js       # 测试运行配置文件</div><div class="line">│   └── e2e/                    # 端到端测试</div><div class="line">│   │   ├── specs/              # 测试规范</div><div class="line">│   │   ├── custom-assertions/  # 端到端测试自定义断言</div><div class="line">│   │   ├── runner.js           # 运行测试的脚本</div><div class="line">│   │   └── nightwatch.conf.js  # 运行测试的配置文件</div><div class="line">├── .babelrc                    # babel 配置文件</div><div class="line">├── .editorconfig               # 编辑配置文件</div><div class="line">├── .eslintrc.js                # eslint 配置文件</div><div class="line">├── index.html                  # index.html 入口模板文件</div><div class="line">└── package.json                # 运行的脚本与相关依赖</div></pre></td></tr></table></figure><h3 id="build"><a href="#build" class="headerlink" title="build/"></a><code>build/</code></h3><p>包含实际为开发环境与生产环境的webpack配置文件。通常不需要关注这些文件，除非想自定义webpack的loader，这样的话，你应当先看看 <code>build/webpack.base.conf.js</code>这个文件。</p><h3 id="config-index-js"><a href="#config-index-js" class="headerlink" title="config/index.js"></a><code>config/index.js</code></h3><p>主要的配置文件，包含构建中最常用的一些配置。</p><h3 id="src"><a href="#src" class="headerlink" title="src/"></a><code>src/</code></h3><p>应用程序源码文件。如何组织目录结构取决于开发者。如果使用Vuex/VueRouter，可以自行添加store/router目录。一般结构如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">├── src/</div><div class="line">|   ├── ...</div><div class="line">└── store</div><div class="line">|   ├── index.js          # where we assemble modules and export the store</div><div class="line">|   ├── actions.js        # root actions</div><div class="line">|   ├── mutations.js      # root mutations</div><div class="line">|   └── modules</div><div class="line">|   │   ├── cart.js       # cart module</div><div class="line">|   │   └── products.js   # products module</div><div class="line">└── router/           # 路由</div><div class="line">│   └── routes.js</div></pre></td></tr></table></figure><h3 id="static"><a href="#static" class="headerlink" title="static/"></a><code>static/</code></h3><p>不想通过webpack处理的静态资源目录。这些目录中的资源会在webpack构建的时候，被直接复制到相同的目录中。</p><p>开发中使用的资源文件，在<code>src/assets</code>目录 。二者的区别：</p><ul><li><p><code>assets</code>中的文件会被webpack处理成模块依赖，这些资源可能会在构建过程中被内联/复制/重命名；而<code>static/</code>并非由Webpack来处理：它们被直接复制到最终目标目录。这些文件使用绝对路径，这个可通过<code>config/index.js</code>文件中的 <code>build.assetsPublicPath</code> 和 <code>build.assetsSubDirectory</code>来控制。</p></li><li><p>任何放置在<code>static/</code>的文件都使用绝对的URL <code>/static/[filename]</code>来引用。</p><blockquote><p>如果你修改<code>assetSubDirectory</code> 参数成 <code>assets</code>，然后这些URL需要变成<code>/assets/[filename]</code>。</p></blockquote></li></ul><blockquote><p><a href="http://vuejs-templates.github.io/webpack/static.html" target="_blank" rel="external">http://vuejs-templates.github.io/webpack/static.html</a></p><p><a href="https://loulanyijian.github.io/vue-cli-doc-Chinese/static.html" target="_blank" rel="external">https://loulanyijian.github.io/vue-cli-doc-Chinese/static.html</a></p></blockquote><h3 id="test-unit"><a href="#test-unit" class="headerlink" title="test/unit"></a><code>test/unit</code></h3><p>包含单元测试相关文件。</p><h3 id="test-e2e"><a href="#test-e2e" class="headerlink" title="test/e2e"></a><code>test/e2e</code></h3><p>包含端到端测试相关文件。</p><h3 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a><code>index.html</code></h3><p>应用中的 <strong>模板</strong> <code>index.html</code>。在开发环境中，webpack会生成相关资源，这些资源的url会自动插入到模板来渲染最终的HTML。</p><h3 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a><code>package.json</code></h3><p>NPM包元数据文件，包括所有的构建依赖与<a href="https://loulanyijian.github.io/vue-cli-doc-Chinese/commands.html" target="_blank" rel="external">构建命令</a>。</p><h2 id="2-构建命令"><a href="#2-构建命令" class="headerlink" title="2 构建命令"></a>2 构建命令</h2><h3 id="npm-run-dev"><a href="#npm-run-dev" class="headerlink" title="npm run dev"></a><code>npm run dev</code></h3><p>对应 package.json 中的NPM脚本命令</p><figure class="highlight"><table><tr><td class="code"><pre><div class="line">"scripts": &#123;</div><div class="line">    "dev": "node build/dev-server.js",</div><div class="line">    //...</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="npm-run-build"><a href="#npm-run-build" class="headerlink" title="npm run build"></a><code>npm run build</code></h3><p>对应 package.json 中的</p><figure class="highlight"><table><tr><td class="code"><pre><div class="line">"scripts": &#123;</div><div class="line">    //...</div><div class="line">    "build": "node build/build.js",</div><div class="line">    //...</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="3-预处理器"><a href="#3-预处理器" class="headerlink" title="3 预处理器"></a>3 预处理器</h2><p>这个模板已经预设大部分流行的 css 预处理器，包括 LESS, SASS, Stylus, 和 PostCSS。要使用一个预处理器的话 ，所有你需要做的就是安装相应的webpack loader。例如，使用SASS:</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">npm install sass-loader node-sass --save-dev</div></pre></td></tr></table></figure><p>你需要安装<code>node-sass</code>，因为<code>saas-loader</code>需要这个依赖项</p><h3 id="在组件中使用"><a href="#在组件中使用" class="headerlink" title="在组件中使用"></a>在组件中使用</h3><p>安装成功后, 你可以通过修改<code>&lt;style&gt;</code>标签上的<code>lang</code>属性，在你的<code>*.vue</code>组件中使用预处理器。</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">&lt;style lang=&quot;scss&quot;&gt;</div><div class="line">/* 写 SASS 代码! */</div><div class="line">&lt;/style&gt;</div></pre></td></tr></table></figure><ul><li><code>lang=&quot;scss&quot;</code> 对应CSS超集语法（用大括号和semicolones）。</li><li><code>lang=&quot;sass&quot;</code> 对应缩进语法。</li></ul><h3 id="PostCSS"><a href="#PostCSS" class="headerlink" title="PostCSS"></a>PostCSS</h3><p>默认的情况下，在<code>*.vue</code>文件中的样式会被PostCSS处理，所以你不需要用一个特殊的loader来操作它。如果你想用它的话，你可以简单的在<code>build/webpack.base.conf.js</code>文件中添加PostCSS插件。</p><h4 id="使用配置文件"><a href="#使用配置文件" class="headerlink" title="使用配置文件"></a>使用配置文件</h4><p>从11.0开始<code>vue-loader</code>支持自动加载<a href="https://github.com/postcss/postcss-loader#usage" target="_blank" rel="external"><code>postcss-loader</code></a>支持的PostCss配置文件：</p><ul><li><code>postcss.config.js</code></li><li><code>.postcssrc</code></li><li><code>package.json</code>中的<code>postcss</code> 设置</li></ul><p>使用配置文件允许您在由<code>postcss-loader</code>处理的常规CSS文件和<code>*.vue</code>文件内部CSS之间共享相同的配置，建议使用配置文件。</p><h4 id="内联选项"><a href="#内联选项" class="headerlink" title="内联选项"></a>内联选项</h4><p>或者，可以使用<code>vue-loader</code>的<code>postcss</code>选项专门为<code>*.vue</code>文件指定postcss配置。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">// webpack.config.js //for webpack 2.x</span></div><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">  <span class="comment">// other options...</span></div><div class="line">  <span class="built_in">module</span>: &#123;</div><div class="line">    <span class="comment">// module.rules is the same as module.loaders in 1.x</span></div><div class="line">    rules: [</div><div class="line">      &#123;</div><div class="line">        <span class="attr">test</span>: <span class="regexp">/\.vue$/</span>,</div><div class="line">        <span class="attr">loader</span>: <span class="string">'vue-loader'</span>,</div><div class="line">        <span class="attr">options</span>: &#123;</div><div class="line">          <span class="comment">// ... // vue-loader options goes here</span></div><div class="line">          postcss: [<span class="built_in">require</span>(<span class="string">'postcss-cssnext'</span>)()]</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    ]</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>除了提供一个插件数组外，该<code>postcss</code>选项还接受：</p><ul><li><p>返回一个插件数组的函数;</p></li><li><p>包含要传递到PostCSS处理器选项的对象。这在使用依赖于自定义解析器/字符串的PostCSS项目时非常有用：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">postcss: &#123;</div><div class="line">  <span class="attr">plugins</span>: [...], <span class="comment">// list of plugins</span></div><div class="line">  options: &#123;</div><div class="line">    <span class="attr">parser</span>: sugarss <span class="comment">// use sugarss parser</span></div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><blockquote><p><a href="http://vue-loader.vuejs.org/en/features/postcss.html" target="_blank" rel="external">http://vue-loader.vuejs.org/en/features/postcss.html</a></p></blockquote><h3 id="独立的-CSS-文件"><a href="#独立的-CSS-文件" class="headerlink" title="独立的 CSS 文件"></a>独立的 CSS 文件</h3><p>为了确保一致的提取和处理，建议在根组件<code>App.vue</code>中引入全局的、独立的样式文件，例如：</p><figure class="highlight html"><table><tr><td class="code"><pre><div class="line"><span class="comment">&lt;!-- App.vue --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">src</span>=<span class="string">"./styles/global.less"</span> <span class="attr">lang</span>=<span class="string">"less"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure><p>注意，你可能只需要为你自己编写的应用程序编写样式。在那些存在的样式库，如Bootstrap 或 Semantic UI，你可以在 <code>/static</code>文件夹中放置他们并且直接在<code>index.html</code>文件中引入。这样做会避免额外的构建时间，也更好的利用浏览器的缓存。(请参考<a href="https://loulanyijian.github.io/vue-cli-doc-Chinese/static.html" target="_blank" rel="external">处理静态资源</a>)</p><h2 id="4-环境变量"><a href="#4-环境变量" class="headerlink" title="4 环境变量"></a>4 环境变量</h2><p>有时需要根据程序运行环境的不同而有不同的配置值。如</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">// config/prod.env.js 生产环境</span></div><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">  <span class="attr">NODE_ENV</span>: <span class="string">'"production"'</span>,  <span class="comment">//字符串变量需要包成单引号和双引号 '"..."'</span></div><div class="line">  DEBUG_MODE: <span class="literal">false</span>,</div><div class="line">  <span class="attr">API_KEY</span>: <span class="string">'"..."'</span> <span class="comment">// 这是所有环境之间共享的</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// config/dev.env.js  开发环境</span></div><div class="line"><span class="built_in">module</span>.exports = merge(prodEnv, &#123;  <span class="comment">// 继承自 prod.env .(通过merge)</span></div><div class="line">  NODE_ENV: <span class="string">'"development"'</span>,</div><div class="line">  <span class="attr">DEBUG_MODE</span>: <span class="literal">true</span> <span class="comment">// 会覆盖prod.env中的debug_mode值</span></div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="comment">// config/test.env.js  测试环境</span></div><div class="line"><span class="built_in">module</span>.exports = merge(devEnv, &#123;</div><div class="line">  <span class="attr">NODE_ENV</span>: <span class="string">'"testing"'</span></div><div class="line">&#125;)</div></pre></td></tr></table></figure><h3 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h3><p>在代码中使用环境变量很简单。例如:</p><figure class="highlight"><table><tr><td class="code"><pre><div class="line">Vue.config.debug = process.env.DEBUG_MODE</div></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ES6 新特性学习]]></title>
      <url>houzw.github.io.git/2017/03/22/ES6-%E6%96%B0%E7%89%B9%E6%80%A7%E5%AD%A6%E4%B9%A0/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="ES6-常用新特性学习"><a href="#ES6-常用新特性学习" class="headerlink" title="ES6 常用新特性学习"></a>ES6 常用新特性学习</h1><blockquote><p>暂时略去某些不常用特性</p><p>《深入浅出 ES6》InfoQ 中文站 <a href="http://www.infoq.com/cn/es6-in-depth/" target="_blank" rel="external">http://www.infoq.com/cn/es6-in-depth/</a></p></blockquote><h2 id="0-ES6简介"><a href="#0-ES6简介" class="headerlink" title="0 ES6简介"></a>0 ES6简介</h2><p><strong><em>ES6 == ECMAScript 6 == ECMAScript 2015</em></strong> ，Javascript 语言最新规范</p><p><strong>并非所有浏览器都支持ES6！</strong> <a href="http://kangax.github.io/compat-table/es5/" target="_blank" rel="external">http://kangax.github.io/compat-table/es5/</a></p><p>若要使用ES6，请使用IE10+ 及最新版的火狐、谷歌Chrome浏览器。</p><p>Babel 是一个广泛使用的ES6转码器，可以将ES6代码转为ES5代码，从而在现有环境执行。这意味着，你可以用ES6的方式编写程序，又不用担心现有环境是否支持。</p><blockquote><p>Babel 相关使用可参考阮一峰的《ES6标准入门》</p></blockquote><h2 id="1-let和const"><a href="#1-let和const" class="headerlink" title="1 let和const"></a>1 let和const</h2><p>与变量有关的问题：</p><ul><li>JS没有块级作用域：在JS函数中的<code>var</code>声明，其作用域是<strong>函数体的全部</strong>。<ul><li>在代码块内声明的变量，其作用域是整个函数作用域而不是块级作用域。</li></ul></li><li>循环内变量过度共享</li></ul><h3 id="let是更完美的var"><a href="#let是更完美的var" class="headerlink" title="let是更完美的var"></a>let是更完美的var</h3><p><code>let</code> 与<code>var</code>一样，也可以用来声明变量，但它有着更好的作用域规则。</p><ul><li><strong>let 声明的变量拥有块级作用域。</strong>也就是说用<code>let</code> 声明的变量的作用域只是外层块，而不是整个外层函数。</li><li><strong>let 声明的全局变量不是全局对象的属性。</strong>这就意味着，你不可以通过 <code>window.变量名</code>的方式访问这些变量。它们只存在于一个不可见的块的作用域中，这个块理论上是 Web 页面中运行的所有JS代码的外层块。</li><li>形如 for (let x…) 的循环在每次迭代时<strong>都为x创建新的绑定</strong>。</li><li>let 声明的变量直到控制流到达该变量被定义的代码行时才会被装载，所以<strong>在到达之前使用该变量会触发错误。</strong></li><li><strong>用 let 重定义变量会抛出一个语法错误（SyntaxError）。</strong></li></ul><h3 id="const"><a href="#const" class="headerlink" title="const"></a>const</h3><p><code>const</code>声明的变量只可以在声明时赋值，不可随意修改，否则会导致<code>SyntaxError</code>（语法错误）。</p><p>用<code>const</code>声明变量后必须要赋值，否则也抛出语法错误。</p><h2 id="2-迭代器和-for-of-循环"><a href="#2-迭代器和-for-of-循环" class="headerlink" title="2 迭代器和 for-of 循环"></a>2 迭代器和 for-of 循环</h2><h3 id="for-of循环"><a href="#for-of循环" class="headerlink" title="for-of循环"></a>for-of循环</h3><p>ES6之前的数组遍历方式：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">// for loop</span></div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> index = <span class="number">0</span>; index &lt; myArray.length; index++) &#123;</div><div class="line">  <span class="built_in">console</span>.log(myArray[index]); </div><div class="line">&#125;</div><div class="line"><span class="comment">//or ES5 forEach</span></div><div class="line"> myArray.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">value</span>) </span>&#123;</div><div class="line">   <span class="built_in">console</span>.log(value); </div><div class="line"> &#125;);</div><div class="line"><span class="comment">//注意，不要使用 for(var index in myArray) &#123;&#125; 形式。for-in 循环用来遍历对象属性。</span></div></pre></td></tr></table></figure><p>而在ES6中：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> value <span class="keyword">of</span> myArray) &#123; </div><div class="line">  <span class="built_in">console</span>.log(value); </div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>它可以正确响应 break 、continue 和 return 语句（forEach 不能）</li><li>不仅支持数组，还支持大多数<strong>类数组对象</strong>。如 DOM NodeList 对象</li><li>也支持<strong>字符串</strong>遍历，它将字符串视为一系列的Unicode字符来进行遍历</li><li>同样支持 <strong>Map 和 Set 对象</strong>（ES6新增类型）遍历</li><li><strong>不</strong>支持普通对象（用for-in）。</li></ul><p>for-of 循环语句通过方法调用来遍历各种<strong>集合</strong>。这些集合对象都有一个 <strong>迭代器</strong> 方法。</p><h3 id="迭代器-略"><a href="#迭代器-略" class="headerlink" title="迭代器 略"></a>迭代器 略</h3><h2 id="3-箭头函数-Arrow-Functions"><a href="#3-箭头函数-Arrow-Functions" class="headerlink" title="3 箭头函数 Arrow Functions"></a>3 箭头函数 Arrow Functions</h2><p>箭头符号在JavaScript诞生时就已经存在。箭头序列<code>--&gt;</code>同样是单行注释的一部分（同<code>&lt;!--</code>）。古怪的是，在HTML中<code>--&gt;</code>之前的字符是注释的一部分，而在JS中<code>--&gt;</code>之后的部分才是注释。但，只有当箭头在<strong>行首</strong>时才会注释当前行。这是因为在其它上下文中，<code>--&gt;</code>是一个JS运算符：“<strong>趋向于</strong>”运算符！</p><p><code>（while (n --&gt; 0) // &quot;n goes to zero&quot;）</code></p><h3 id="gt-表达式"><a href="#gt-表达式" class="headerlink" title="=&gt;表达式"></a><code>=&gt;</code>表达式</h3><p>一个只有一个参数的简单函数，可以使用新标准中的箭头函数，它的语法：<code>标识符=&gt;表达式</code></p><h4 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">(param1, param2, …, paramN) =&gt; &#123; statements &#125;</div><div class="line">(param1, param2, …, paramN) =&gt; expression</div><div class="line">         <span class="comment">// 等价于:  =&gt; &#123; return expression; &#125;</span></div><div class="line"></div><div class="line"><span class="comment">// 如果只有一个参数，圆括号是可选的:</span></div><div class="line">(singleParam) =&gt; &#123; statements &#125;</div><div class="line">singleParam =&gt; &#123; statements &#125;</div><div class="line"></div><div class="line"><span class="comment">// 无参数的函数需要使用圆括号:</span></div><div class="line">() =&gt; &#123; statements &#125;</div></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">//ES5</span></div><div class="line"><span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;  <span class="keyword">return</span> <span class="built_in">console</span>.log(_this.string);  &#125;</div><div class="line"><span class="comment">//ES6</span></div><div class="line">() =&gt; <span class="built_in">console</span>.log(<span class="keyword">this</span>.string)</div></pre></td></tr></table></figure><h4 id="高级语法"><a href="#高级语法" class="headerlink" title="高级语法"></a>高级语法</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">// 返回对象字面量时应当用圆括号将其包起来:</span></div><div class="line">params =&gt; (&#123;<span class="attr">foo</span>: bar&#125;)</div><div class="line"></div><div class="line"><span class="comment">// 支持 多重参数（Rest parameters） 和 默认参数:</span></div><div class="line">(param1, param2, ...rest) =&gt; &#123; statements &#125;</div><div class="line">(param1 = defaultValue1, param2, …, paramN = defaultValueN) =&gt; &#123; statements &#125;</div><div class="line"></div><div class="line"><span class="comment">// 参数列表中的解构赋值也是被支持的</span></div><div class="line"><span class="keyword">var</span> f = <span class="function">(<span class="params">[a, b] = [<span class="number">1</span>, <span class="number">2</span>], &#123;x: c&#125; = &#123;x: a + b&#125;</span>) =&gt;</span> a + b + c;</div><div class="line">f();  <span class="comment">// 6</span></div></pre></td></tr></table></figure><p>无需输入<code>function</code>和<code>return</code>，一些小括号、大括号以及分号也可以省略。例：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">// ES5</span></div><div class="line"><span class="keyword">var</span> selected = allJobs.filter(<span class="function"><span class="keyword">function</span> (<span class="params">job</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> job.isSelected();</div><div class="line">&#125;);</div><div class="line"><span class="comment">// ES6</span></div><div class="line"><span class="keyword">var</span> selected = allJobs.filter(<span class="function"><span class="params">job</span> =&gt;</span> job.isSelected());</div></pre></td></tr></table></figure><h4 id="多重参数"><a href="#多重参数" class="headerlink" title="多重参数"></a>多重参数</h4><p>如果要写一个接受多重参数（也可能没有参数，或者是<a href="http://www.infoq.com/cn/articles/es6-in-depth-rest-parameters-and-defaults" target="_blank" rel="external">不定参数、默认参数</a>、<a href="http://www.infoq.com/cn/articles/es6-in-depth-destructuring" target="_blank" rel="external">参数解构</a>）的函数，需要用小括号包裹参数：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">// ES5</span></div><div class="line"><span class="keyword">var</span> total = values.reduce(<span class="function"><span class="keyword">function</span> (<span class="params">a, b</span>) </span>&#123;</div><div class="line">     <span class="keyword">return</span> a + b;</div><div class="line">&#125;, <span class="number">0</span>);</div><div class="line"><span class="comment">// ES6</span></div><div class="line"><span class="keyword">var</span> total = values.reduce(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a + b, <span class="number">0</span>);</div></pre></td></tr></table></figure><h4 id="块语句"><a href="#块语句" class="headerlink" title="块语句"></a>块语句</h4><p>除表达式外，箭头函数还可以包含一个<strong>块语句</strong>。例：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">// ES5</span></div><div class="line">$(<span class="string">"#confetti-btn"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</div><div class="line">    playTrumpet();</div><div class="line">    fireConfettiCannon();</div><div class="line">&#125;);</div><div class="line"><span class="comment">// ES6</span></div><div class="line">$(<span class="string">"#confetti-btn"</span>).click(<span class="function"><span class="params">event</span> =&gt;</span> &#123;</div><div class="line">    playTrumpet();</div><div class="line">    fireConfettiCannon();</div><div class="line">&#125;);</div></pre></td></tr></table></figure><p>注意，使用了<strong>块语句</strong>的箭头函数<strong>不会自动返回值</strong>，你需要使用<code>return</code>语句将所需值返回。</p><h4 id="创建普通对象"><a href="#创建普通对象" class="headerlink" title="创建普通对象"></a>创建普通对象</h4><p>当使用箭头函数创建<strong>普通对象</strong>时，你总是需要将对象包裹在小括号里。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">// 为每一个puppy创建一个新的空对象</span></div><div class="line"><span class="keyword">var</span> chewToys = puppies.map(<span class="function"><span class="params">puppy</span> =&gt;</span> &#123;&#125;);   <span class="comment">// 这样写会报Bug！</span></div><div class="line"><span class="keyword">var</span> chewToys = puppies.map(<span class="function"><span class="params">puppy</span> =&gt;</span> (&#123;&#125;)); <span class="comment">// puppy =&gt; (&#123;&#125;) 用小括号包裹空对象就可以了。</span></div></pre></td></tr></table></figure><p>一个空对象<code>{}</code>和一个空的块<code>{}</code>看起来完全一样。ES6中的规则是，紧随箭头的 <code>{</code> 被解析为块的开始，而不是对象的开始。因此，<code>puppy =&gt; {}</code>这段代码就被解析为没有任何行为并返回<code>undefined</code>的箭头函数。</p><h4 id="this"><a href="#this" class="headerlink" title="this"></a>this</h4><p>普通<code>function</code>函数和箭头函数的行为有一个微妙的区别，<strong>箭头函数没有它自己的this值</strong>，箭头函数内的<code>this</code>值<strong>继承自外围作用域。</strong></p><p>在ES6中，<code>this</code>需要遵循以下规则：</p><ul><li>通过<code>object.method()</code>语法调用的方法使用<strong>非箭头函数定义</strong>，这些函数需要从调用者的作用域中获取一个有意义的<code>this</code>值。</li><li>其它情况全都使用箭头函数。</li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">// ES6</span></div><div class="line">&#123;</div><div class="line">   ...</div><div class="line">   addAll: <span class="function"><span class="keyword">function</span> <span class="title">addAll</span>(<span class="params">pieces</span>) </span>&#123;</div><div class="line">        _.each(pieces, piece =&gt; <span class="keyword">this</span>.add(piece));</div><div class="line">   &#125;,</div><div class="line">   ...</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><code>addAll</code>方法从它的调用者处获取了<code>this</code>值，内部函数是一个箭头函数，所以它继承了<strong>外围作用域</strong>的<code>this</code>值。</p><p>在ES6中你可以用更简洁的方式编写对象字面量中的方法，所以上面这段代码可以简化成：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">// ES6的方法语法</span></div><div class="line">&#123;</div><div class="line">    ...</div><div class="line">    addAll(pieces) &#123;</div><div class="line">        _.each(pieces, piece =&gt; <span class="keyword">this</span>.add(piece));</div><div class="line">    &#125;,</div><div class="line">    ...</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>箭头函数与非箭头函数间还有一个细微的区别，箭头函数不会获取它们自己的<code>arguments</code>对象。</p><h2 id="4-类Class"><a href="#4-类Class" class="headerlink" title="4 类Class"></a>4 类Class</h2><h3 id="方法定义语法"><a href="#方法定义语法" class="headerlink" title="方法定义语法"></a>方法定义语法</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> obj = &#123;</div><div class="line">     <span class="comment">// 现在不再使用function关键字给对象添加方法</span></div><div class="line">     <span class="comment">// 而是直接使用属性名作为函数名称。</span></div><div class="line">     method(args) &#123; ... &#125;,</div><div class="line">     <span class="comment">// 只需在标准函数的基础上添加一个“*”，就可以声明一个生成器函数。</span></div><div class="line">     *genMethod(args) &#123; ... &#125;,</div><div class="line">     <span class="comment">// 借助|get|和|set|可以在行内定义访问器。</span></div><div class="line">     <span class="comment">// 只是定义内联函数，即使没有生成器。</span></div><div class="line">     <span class="comment">// 注意通过这种方式装载的getter不能接受参数</span></div><div class="line">     get propName() &#123; ... &#125;,</div><div class="line">     <span class="comment">// 注意通过这种方式装载的setter至少接受一个参数</span></div><div class="line">     set propName(arg) &#123; ... &#125;,</div><div class="line">     <span class="comment">// []语法可以用于任意支持预计算属性名的地方，来满足上面的第4中情况。</span></div><div class="line">     <span class="comment">// 这意味着你可以使用symbol，调用函数，联结字符串</span></div><div class="line">     <span class="comment">// 或其它可以给property.id求值的表达式。</span></div><div class="line">     <span class="comment">// 这个语法对访问器或生成器同样有效，我在这里只是举个例子。</span></div><div class="line">     [functionThatReturnsPropertyName()] (args) &#123; ... &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure><h3 id="类定义语法"><a href="#类定义语法" class="headerlink" title="类定义语法"></a>类定义语法</h3><blockquote><p>完整内容参考 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Classes" target="_blank" rel="external">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Classes</a></p></blockquote><h4 id="类声明"><a href="#类声明" class="headerlink" title="类声明"></a>类声明</h4><p>你首先需要声明你的类，然后访问它，否则会抛出一个<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError" target="_blank" rel="external"><code>ReferenceError</code></a>：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Polygon</span> </span>&#123;</div><div class="line">  <span class="comment">// 构造函数，可选，一个类只能拥有一个名为 constructor 的方法，否则会抛出 SyntaxError 异常。</span></div><div class="line">  <span class="comment">// 不可以用生成器作为构造函数。</span></div><div class="line">  <span class="keyword">constructor</span>(height, width) &#123;</div><div class="line">    <span class="keyword">this</span>.height = height;</div><div class="line">    <span class="keyword">this</span>.width = width;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="类表达式"><a href="#类表达式" class="headerlink" title="类表达式"></a>类表达式</h4><p>一个<strong>类表达式</strong>是定义类的另一种方式。类表达式可以被命名或未被命名。赋予命名类表达式的名称是类的主体的本地名称。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">/* 匿名类 */</span> </div><div class="line"><span class="keyword">let</span> Polygon = <span class="class"><span class="keyword">class</span> </span>&#123;</div><div class="line">  <span class="keyword">constructor</span>(height, width) &#123;</div><div class="line">    <span class="keyword">this</span>.height = height;</div><div class="line">    <span class="keyword">this</span>.width = width;</div><div class="line">  &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">/* 命名的类 */</span> </div><div class="line"><span class="keyword">let</span> Polygon = <span class="class"><span class="keyword">class</span> <span class="title">Polygon</span> </span>&#123;</div><div class="line">  <span class="keyword">constructor</span>(height, width) &#123;</div><div class="line">    <span class="keyword">this</span>.height = height;</div><div class="line">    <span class="keyword">this</span>.width = width;</div><div class="line">  &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure><h4 id="类体和方法定义"><a href="#类体和方法定义" class="headerlink" title="类体和方法定义"></a>类体和方法定义</h4><p>类的成员需要定义在一对花括号 <code>{}</code> 里，花括号里的代码和花括号本身组成了类体。类成员包括类构造器和类方法（包括静态方法和实例方法）。</p><h5 id="原型方法"><a href="#原型方法" class="headerlink" title="原型方法"></a>原型方法</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Polygon</span> </span>&#123;</div><div class="line">  <span class="keyword">constructor</span>(height, width) &#123;</div><div class="line">    <span class="keyword">this</span>.height = height;</div><div class="line">    <span class="keyword">this</span>.width = width;</div><div class="line">  &#125;</div><div class="line">  get area() &#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.calcArea()</div><div class="line">  &#125;</div><div class="line">  calcArea() &#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.height * <span class="keyword">this</span>.width;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">const</span> square = <span class="keyword">new</span> Polygon(<span class="number">10</span>, <span class="number">10</span>);</div><div class="line"><span class="comment">//调用area方法 100</span></div><div class="line"><span class="built_in">console</span>.log(square.area);</div></pre></td></tr></table></figure><h5 id="静态方法"><a href="#静态方法" class="headerlink" title="静态方法"></a>静态方法</h5><p><code>static</code> 关键字用来定义类的静态方法。静态方法是指那些不需要对类进行<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Introduction_to_Object-Oriented_JavaScript#The_object_(class_instance" target="_blank" rel="external">实例化</a>)，使用类名就可以直接访问的方法，需要注意的是静态方法不能被实例化的对象调用。静态方法经常用来作为<strong>工具函数</strong>。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span> </span>&#123;</div><div class="line">    <span class="keyword">constructor</span>(x, y) &#123;</div><div class="line">        <span class="keyword">this</span>.x = x;</div><div class="line">        <span class="keyword">this</span>.y = y;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">static</span> distance(a, b) &#123;</div><div class="line">        <span class="keyword">const</span> dx = a.x - b.x;</div><div class="line">        <span class="keyword">const</span> dy = a.y - b.y;</div><div class="line">        <span class="keyword">return</span> <span class="built_in">Math</span>.sqrt(dx*dx + dy*dy);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">const</span> p1 = <span class="keyword">new</span> Point(<span class="number">5</span>, <span class="number">5</span>);</div><div class="line"><span class="keyword">const</span> p2 = <span class="keyword">new</span> Point(<span class="number">10</span>, <span class="number">10</span>);</div><div class="line"><span class="built_in">console</span>.log(Point.distance(p1, p2));</div></pre></td></tr></table></figure><h4 id="使用-extends-创建子类"><a href="#使用-extends-创建子类" class="headerlink" title="使用 extends 创建子类"></a>使用 <code>extends</code> 创建子类</h4><p><code>extends</code> 关键字在类声明或类表达式中用于创建一个类作为另一个类的一个子类。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span> <span class="keyword">extends</span> <span class="title">Animal</span> </span>&#123;</div><div class="line">  speak() &#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name + <span class="string">' barks.'</span>);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>请注意，类不能扩展常规（不可构造/非构造的）对象。如果要继承常规对象，可以改用<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf" target="_blank" rel="external"><code>Object.setPrototypeOf()</code></a>:</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> Animal = &#123;</div><div class="line">  speak() &#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name + <span class="string">' makes a noise.'</span>);</div><div class="line">  &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span> </span>&#123;</div><div class="line">  <span class="keyword">constructor</span>(name) &#123;</div><div class="line">    <span class="keyword">this</span>.name = name;</div><div class="line">  &#125;</div><div class="line">  speak() &#123;</div><div class="line">    <span class="keyword">super</span>.speak();<span class="comment">//调用对象的父对象上的函数。</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name + <span class="string">' barks.'</span>);</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"><span class="comment">//继承常规对象</span></div><div class="line"><span class="built_in">Object</span>.setPrototypeOf(Dog.prototype, Animal);</div><div class="line"></div><div class="line"><span class="keyword">var</span> d = <span class="keyword">new</span> Dog(<span class="string">'Mitzie'</span>);</div><div class="line">d.speak();</div></pre></td></tr></table></figure><h2 id="5-模板字符串-template-strings"><a href="#5-模板字符串-template-strings" class="headerlink" title="5 模板字符串 template strings"></a>5 模板字符串 template strings</h2><p>模板字符串除了使用<strong>反撇号字符</strong> ` 代替普通字符串的引号 ‘ 或 “ 外，它们看起来与普通字符串并无二致。在最简单的情况下，它们与普通字符串的表现一致：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">context.fillText(<span class="string">`Ceci n'est pas une chaîne.`</span>, x, y);</div></pre></td></tr></table></figure><p>模板字符串为JavaScript提供了简单的<strong>字符串插值</strong>功能:</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">authorize</span>(<span class="params">user, action</span>) </span>&#123;</div><div class="line">  <span class="keyword">if</span> (!user.hasPrivilege(action)) &#123;</div><div class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(</div><div class="line">      <span class="string">`用户 <span class="subst">$&#123;user.name&#125;</span> 未被授权执行 <span class="subst">$&#123;action&#125;</span> 操作。`</span>);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><code>${user.name}</code>和<code>${action}</code>被称为模板占位符，JavaScript将把<code>user.name</code>和<code>action</code>的值插入到最终生成的字符串中.</p><ul><li><p>模板占位符中的代码可以是任意JavaScript表达式，所以函数调用、算数运算等这些都可以作为占位符使用，你甚至可以在一个模板字符串中嵌套另一个，称之为模板套构（template inception）。</p></li><li><p>如果这两个值都不是字符串，可以按照常规将其转换为字符串。如：如果action是一个对象，将会调用它的.toString()方法将其转换为字符串值。</p></li><li><p>如果你需要在模板字符串中书写反撇号，你必须使用反斜杠将其转义 `\ ``等价于”`”。</p></li><li><p>同样，如果你需要在模板字符串中引入字符$和{。无论你要实现什么样的目标，你都需要用反斜杠转义每一个字符：</p><p>`\$`和`\{`.</p></li><li><p>与普通字符串不同的是，模板字符串可以多行书写。模板字符串中所有的空格、新行、缩进，都会原样输出在生成的字符串中。</p><h3 id="标签模板（tagged-templates）略"><a href="#标签模板（tagged-templates）略" class="headerlink" title="标签模板（tagged templates）略"></a>标签模板（tagged templates）略</h3></li></ul><h2 id="6-不定参数和默认参数"><a href="#6-不定参数和默认参数" class="headerlink" title="6 不定参数和默认参数"></a>6 不定参数和默认参数</h2><h3 id="不定参数"><a href="#不定参数" class="headerlink" title="不定参数"></a>不定参数</h3><p>不定参数可以解决可读性与参数索引的问题。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">containsAll</span>(<span class="params">haystack, ...needles</span>) </span>&#123;</div><div class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> needle <span class="keyword">of</span> needles) &#123;</div><div class="line">    <span class="keyword">if</span> (haystack.indexOf(needle) === <span class="number">-1</span>) &#123;</div><div class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>在所有函数参数中，只有<strong>最后一个</strong>才可以被标记为不定参数。</p><p>如果没有额外的参数，不定参数就是一个空数组，它永远不会是undefined。</p><h3 id="默认参数"><a href="#默认参数" class="headerlink" title="默认参数"></a>默认参数</h3><p>JavaScript有严格的默认参数格式，未被传值的参数默认为undefined。ES6引入了一种新方式，可以指定任意参数的默认值。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">animalSentence</span>(<span class="params">ani2=<span class="string">"tigers"</span>, ani3=<span class="string">"bears"</span></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="string">`Lions and <span class="subst">$&#123;ani2&#125;</span> and <span class="subst">$&#123;ani3&#125;</span>! Oh my!`</span>;<span class="comment">// 模板字符串 template strings</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><p>默认参数的定义形式为<code>[param1[ = defaultValue1 ][, ..., paramN[ = defaultValueN ]]]</code>，对于每个参数而言，定义默认值时<code>=</code>后的部分是一个<strong>表达式</strong>，如果调用者没有传递相应参数，将使用该表达式的值作为参数默认值。</p><p>默认参数有几个微妙的细节需要注意：</p><ul><li><p>默认值表达式在函数调用时<strong>自左向右求值</strong>，这一点与Python不同。这也意味着，<strong>默认表达式可以使用该参数之前已经填充好的其它参数值。</strong>举个例子，我们优化一下刚刚那个动物语句函数：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">animalSentenceFancy</span>(<span class="params">ani2=<span class="string">"tigers"</span>,ani3=(ani2 == <span class="string">"bears"</span></span>) ? "<span class="title">sealions</span>" : "<span class="title">bears</span>")</span></div><div class="line">&#123;</div><div class="line">  <span class="keyword">return</span> <span class="string">`Lions and <span class="subst">$&#123;ani2&#125;</span> and <span class="subst">$&#123;ani3&#125;</span>! Oh my!`</span>;</div><div class="line">&#125;</div><div class="line"><span class="comment">//animalSentenceFancy("bears")将返回“Lions and bears and sealions. Oh my!”。</span></div></pre></td></tr></table></figure></li><li><p>传递undefined值等效于不传值。</p></li><li><p>没有默认值的参数隐式默认为undefined</p></li></ul><h2 id="7-模块-Modules"><a href="#7-模块-Modules" class="headerlink" title="7 模块 Modules"></a>7 模块 Modules</h2><blockquote><p>同时参考 <a href="http://es6.ruanyifeng.com/#docs/module" target="_blank" rel="external">http://es6.ruanyifeng.com/#docs/module</a></p></blockquote><h3 id="模块基础知识"><a href="#模块基础知识" class="headerlink" title="模块基础知识"></a>模块基础知识</h3><p>每一个ES6模块都是一个包含JS代码的文件，模块本质上就是一段脚本，而不是用<code>module</code>关键字定义一个模块，但是模块与脚本还是有两点区别：</p><ul><li>在ES6模块中，无论你是否加入“<code>use strict;</code>”语句，默认情况下模块都是在严格模式下运行。</li><li>在模块中你可以使用<code>import</code>和<code>export</code>关键字。</li></ul><h4 id="export"><a href="#export" class="headerlink" title="export"></a>export</h4><p>默认情况下，模块中的所有声明相对于模块而言都是寄存在<strong>本地</strong>的。如果你希望公开在模块中声明的内容，并让其它模块加以使用，你一定要<strong><em>导出</em></strong> 这些功能。想要导出模块的功能有很多方法，其中最简单的方式是添加<code>export</code>关键字。</p><p>可以<code>export</code>所有的最外层函数、类以及<code>var</code>、<code>let</code>或<code>const</code>声明的变量。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">export</span> <span class="keyword">var</span> year = <span class="number">1958</span>;</div><div class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">multiply</span>(<span class="params">x, y</span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> x * y;</div><div class="line">&#125;;</div></pre></td></tr></table></figure><p>需要特别注意的是，<code>export</code>命令规定的是对外的接口(而非值)，必须与模块内部的变量建立一一对应关系。<code>function</code>和<code>class</code>的输出，也必须遵守这样的写法。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">// 报错</span></div><div class="line"><span class="keyword">export</span> <span class="number">1</span>;</div><div class="line"><span class="comment">// 报错</span></div><div class="line"><span class="keyword">var</span> m = <span class="number">1</span>; <span class="keyword">export</span> m;</div><div class="line"><span class="comment">// 报错</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>) </span>&#123;&#125;</div><div class="line"><span class="keyword">export</span> f;</div><div class="line"><span class="comment">//正确写法：在接口名与模块内部变量之间，建立一一对应的关系</span></div><div class="line"><span class="keyword">export</span> <span class="keyword">var</span> m = <span class="number">1</span>;</div><div class="line"><span class="keyword">var</span> m = <span class="number">1</span>;  <span class="keyword">export</span> &#123;m&#125;;</div><div class="line"><span class="keyword">var</span> n = <span class="number">1</span>;  <span class="keyword">export</span> &#123;n <span class="keyword">as</span> m&#125;;</div><div class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>) </span>&#123;&#125;;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>) </span>&#123;&#125;   </div><div class="line"><span class="keyword">export</span> &#123;f&#125;;</div></pre></td></tr></table></figure><h5 id="Export列表"><a href="#Export列表" class="headerlink" title="Export列表"></a>Export列表</h5><p>不需要标记每一个被导出的特性，你只需要在花括号中按照列表的格式写下你想导出的所有名称：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">export</span> &#123;detectCats, Kittydar&#125;;<span class="comment">//不一定非要把它放在模块文件的首行，可以在模块文件最外层作用域的任一处</span></div><div class="line"><span class="comment">// 此处不需要 `export`关键字</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">detectCats</span>(<span class="params">canvas, options</span>) </span>&#123; ... &#125;</div><div class="line"> <span class="class"><span class="keyword">class</span> <span class="title">Kittydar</span> </span>&#123; ... &#125;</div></pre></td></tr></table></figure><h5 id="重命名import和export"><a href="#重命名import和export" class="headerlink" title="重命名import和export"></a>重命名import和export</h5><p>有时候，导出的名称会与需要使用的其它名称产生冲突，ES6为你提供了重命名的方法解决这个问题，当你在导入名称时可以这样做：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">//导入的时候重命名</span></div><div class="line"><span class="keyword">import</span> &#123;flip <span class="keyword">as</span> flipOmelet&#125; <span class="keyword">from</span> <span class="string">"eggs.js"</span>;</div><div class="line"><span class="comment">//导出的时候也可以重命名</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">v1</span>(<span class="params"></span>) </span>&#123; ... &#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">v2</span>(<span class="params"></span>) </span>&#123; ... &#125;</div><div class="line"></div><div class="line"><span class="keyword">export</span> &#123;</div><div class="line">   v1 <span class="keyword">as</span> streamV1,</div><div class="line">   v2 <span class="keyword">as</span> streamV2,</div><div class="line">   v2 <span class="keyword">as</span> streamLatestVersion</div><div class="line">&#125;;</div></pre></td></tr></table></figure><h5 id="export-default"><a href="#export-default" class="headerlink" title="export default"></a>export default</h5><p>使用<code>import</code>命令的时候，用户需要知道所要加载的变量名或函数名，否则无法加载。但是，用户肯定希望快速上手，未必愿意阅读文档，去了解模块有哪些属性和方法。</p><p>为了给用户提供方便，让他们不用阅读文档就能加载模块，就要用到<code>export default</code>命令，为模块指定默认输出。其他模块加载该模块时，<code>import</code>命令可以为该匿名函数指定任意名字。</p><p><code>export default</code>命令只能使用一次。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">// export-default.js</span></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="built_in">console</span>.log(<span class="string">'foo'</span>);</div><div class="line">&#125;</div><div class="line"><span class="comment">//-------------------------------</span></div><div class="line"><span class="comment">// 或者 非匿名函数</span></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="built_in">console</span>.log(<span class="string">'foo'</span>);</div><div class="line">&#125;</div><div class="line"><span class="comment">// 或者</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="built_in">console</span>.log(<span class="string">'foo'</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> foo;</div><div class="line"><span class="comment">//------------------------------------------------------</span></div><div class="line"><span class="comment">// import-default.js</span></div><div class="line"><span class="keyword">import</span> customName <span class="keyword">from</span> <span class="string">'./export-default'</span>;</div><div class="line">customName(); <span class="comment">// 'foo'</span></div></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">let</span> myObject = &#123;</div><div class="line">      <span class="attr">field1</span>: value1,</div><div class="line">      <span class="attr">field2</span>: value2</div><div class="line">    &#125;;</div><div class="line"><span class="keyword">export</span> &#123;myObject <span class="keyword">as</span> <span class="keyword">default</span>&#125;;</div><div class="line"><span class="comment">//or</span></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</div><div class="line">      <span class="attr">field1</span>: value1,</div><div class="line">      <span class="attr">field2</span>: value2</div><div class="line">    &#125;;</div></pre></td></tr></table></figure><p>本质上，<code>export default</code>就是输出一个叫做<code>default</code>的变量或方法，然后系统允许你为它取任意名字。正是因为<code>export default</code>命令其实只是输出一个叫做<code>default</code>的变量，所以它后面不能跟变量声明语句。</p><p>因为<code>export default</code>本质是将该命令后面的值，赋给<code>default</code>变量以后再默认，所以可以直接将一个值写在<code>export default</code>之后。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">// 正确:指定外对接口为default</span></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="number">42</span>;</div><div class="line"><span class="comment">// 报错:没有指定对外的接口</span></div><div class="line"><span class="keyword">export</span> <span class="number">42</span>;</div></pre></td></tr></table></figure><h3 id="import"><a href="#import" class="headerlink" title="import"></a>import</h3><p>使用<code>export</code>命令定义了模块的对外接口以后，其他 JS 文件就可以通过<code>import</code>命令加载这个模块。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">// main.js</span></div><div class="line"><span class="keyword">import</span> &#123;firstName, lastName, year&#125; <span class="keyword">from</span> <span class="string">'./profile'</span>;</div></pre></td></tr></table></figure><p><code>import</code>命令接受一对大括号，里面指定要从其他模块导入的变量名。大括号里面的变量名，<strong>必须</strong>与被导入模块（<code>profile.js</code>）对外接口的名称相同。</p><p>如果想为输入的变量重新取一个名字，<code>import</code>命令要使用<code>as</code>关键字，将输入的变量重命名。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; lastName <span class="keyword">as</span> surname &#125; <span class="keyword">from</span> <span class="string">'./profile'</span>;</div></pre></td></tr></table></figure><p>如果想在一条<code>import</code>语句中，同时输入默认方法和其他变量，可以写成下面这样。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">import</span> _, &#123; each &#125; <span class="keyword">from</span> <span class="string">'lodash'</span>;</div></pre></td></tr></table></figure><p><code>import</code>命令具有提升效果，会提升到整个模块的头部，首先执行。</p><p>由于<code>import</code>是静态执行，所以不能使用表达式和变量，这些只有在运行时才能得到结果的语法结构。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">// 报错</span></div><div class="line"><span class="keyword">import</span> &#123; <span class="string">'f'</span> + <span class="string">'oo'</span> &#125; <span class="keyword">from</span> <span class="string">'my_module'</span>;</div></pre></td></tr></table></figure><h4 id="模块对象-整体加载"><a href="#模块对象-整体加载" class="headerlink" title="模块对象 / 整体加载"></a>模块对象 / 整体加载</h4><p>用星号（<code>*</code>）指定一个对象，所有输出值都加载在这个对象上面。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">// circle.js 输出两个方法area和circumference。</span></div><div class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">area</span>(<span class="params">radius</span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> <span class="built_in">Math</span>.PI * radius * radius;</div><div class="line">&#125;</div><div class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">circumference</span>(<span class="params">radius</span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> <span class="number">2</span> * <span class="built_in">Math</span>.PI * radius;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// main.js</span></div><div class="line"><span class="keyword">import</span> &#123; area, circumference &#125; <span class="keyword">from</span> <span class="string">'./circle'</span>;</div><div class="line"><span class="built_in">console</span>.log(<span class="string">'圆面积：'</span> + area(<span class="number">4</span>));</div><div class="line"><span class="comment">//或 整体加载</span></div><div class="line"><span class="keyword">import</span> * <span class="keyword">as</span> circle <span class="keyword">from</span> <span class="string">'./circle'</span>;</div><div class="line"><span class="built_in">console</span>.log(<span class="string">'圆面积：'</span> + circle.area(<span class="number">4</span>));</div></pre></td></tr></table></figure><p>当你<code>import *</code>时，导入的其实是一个模块命名空间对象，模块将它的所有属性都导出了。所以如果“circle”模块导出一个名为<code>area()</code>的函数，然后用上面这种方法“circle”将其全部导入后，你就可以这样调用函数了：<code>circle.area()</code>。</p><h3 id="聚合模块"><a href="#聚合模块" class="headerlink" title="聚合模块"></a>聚合模块</h3><p>有时一个程序包中主模块的代码比较多，为了简化这样的代码，可以用一种统一的方式将其它模块中的内容聚合在一起导出，可以通过这种简单的方式将所有所需内容导入再导出：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">//world-foods.js</span></div><div class="line"><span class="comment">// 导入"sri-lanka"并将它导出的内容的一部分重新导出</span></div><div class="line"><span class="keyword">export</span> &#123;Tea, Cinnamon&#125; <span class="keyword">from</span> <span class="string">"sri-lanka"</span>;</div><div class="line"><span class="comment">// 导入"singapore"并将它导出的内容全部导出</span></div><div class="line"><span class="keyword">export</span> * <span class="keyword">from</span> <span class="string">"singapore"</span>;</div></pre></td></tr></table></figure><p>与真正的导入内容的方法不同的是，这些导入内容再重新导出的方法不会在作用域中绑定你导入的内容。</p><blockquote><p>如果你打算用<code>world-foods.js</code>中的<code>Tea</code>来写一些代码，你会发现当前模块作用域中根本找不到<code>Tea</code>。</p></blockquote><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[公共CDN整理]]></title>
      <url>houzw.github.io.git/2017/03/15/%E5%85%AC%E5%85%B1CDN%E6%95%B4%E7%90%86/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="公共CDN整理"><a href="#公共CDN整理" class="headerlink" title="公共CDN整理"></a>公共CDN整理</h1><h2 id="国内"><a href="#国内" class="headerlink" title="国内"></a>国内</h2><ol><li><a href="http://www.bootcdn.cn/" target="_blank" rel="external">BootCDN</a> 共收录了 <strong>2872</strong> 个前端开源项目</li><li><a href="http://cdn.code.baidu.com/" target="_blank" rel="external">百度静态资源公共库</a></li><li><a href="http://jscdn.upai.com/" target="_blank" rel="external">又拍云JS库加速服务</a> 包括：jQuery 、MooTools 、Modernizr 、Dojo 、emberjs</li><li><a href="https://www.staticfile.org/" target="_blank" rel="external">Staticfile CDN：七牛云</a></li><li><a href="http://lib.sinaapp.com/" target="_blank" rel="external">新浪 SAE 公共资源</a></li></ol><h2 id="国际"><a href="#国际" class="headerlink" title="国际"></a>国际</h2><ol><li><p><a href="https://docs.microsoft.com/en-us/aspnet/ajax/cdn/overview" target="_blank" rel="external">Microsoft Ajax Content Delivery Network</a></p><p>包括：<a href="https://docs.microsoft.com/en-us/aspnet/ajax/cdn/overview#jQuery_Releases_on_the_CDN_0" target="_blank" rel="external">jQuery </a>、<a href="https://docs.microsoft.com/en-us/aspnet/ajax/cdn/overview#jQuery_Migrate_Releases_on_the_CDN_1" target="_blank" rel="external">jQuery Migrate </a>、<a href="https://docs.microsoft.com/en-us/aspnet/ajax/cdn/overview#jQuery_UI_Releases_on_the_CDN_2" target="_blank" rel="external">jQuery UI </a>、<a href="https://docs.microsoft.com/en-us/aspnet/ajax/cdn/overview#jQuery_Validation_Releases_on_the_CDN_3" target="_blank" rel="external">jQuery Validation </a>、<a href="https://docs.microsoft.com/en-us/aspnet/ajax/cdn/overview#jQuery_Mobile_Releases_on_the_CDN_4" target="_blank" rel="external">jQuery Mobile</a></p><p><a href="https://docs.microsoft.com/en-us/aspnet/ajax/cdn/overview#jQuery_Templates_Releases_on_the_CDN_5" target="_blank" rel="external">jQuery Templates </a>、<a href="https://docs.microsoft.com/en-us/aspnet/ajax/cdn/overview#jQuery_Cycle_Releases_on_the_CDN_6" target="_blank" rel="external">jQuery Cycle </a>、<a href="https://docs.microsoft.com/en-us/aspnet/ajax/cdn/overview#jQuery_DataTables_Releases_on_the_CDN_7" target="_blank" rel="external">jQuery DataTables </a>、<a href="https://docs.microsoft.com/en-us/aspnet/ajax/cdn/overview#Modernizr_Releases_on_the_CDN_8" target="_blank" rel="external">Modernizr </a>、<a href="https://docs.microsoft.com/en-us/aspnet/ajax/cdn/overview#JSHint_Releases_on_the_CDN_10" target="_blank" rel="external">JSHint</a></p><p><a href="https://docs.microsoft.com/en-us/aspnet/ajax/cdn/overview#Knockout_Releases_on_the_CDN_11" target="_blank" rel="external">Knockout</a>、<a href="https://docs.microsoft.com/en-us/aspnet/ajax/cdn/overview#Globalize_Releases_on_the_CDN_12" target="_blank" rel="external">Globalize</a>、<a href="https://docs.microsoft.com/en-us/aspnet/ajax/cdn/overview#Respond_Releases_on_the_CDN_13" target="_blank" rel="external">Respond </a>、<a href="https://docs.microsoft.com/en-us/aspnet/ajax/cdn/overview#Bootstrap_Releases_on_the_CDN_14" target="_blank" rel="external">Bootstrap </a>、<a href="https://docs.microsoft.com/en-us/aspnet/ajax/cdn/overview#BootstrapTouchCarousel_Releases_on_the_CDN_18" target="_blank" rel="external">Bootstrap TouchCarousel </a>、<a href="https://docs.microsoft.com/en-us/aspnet/ajax/cdn/overview#Hammerjs_Releases_on_the_CDN_19" target="_blank" rel="external">Hammer.js</a></p><p><a href="https://docs.microsoft.com/en-us/aspnet/ajax/cdn/overview#ASPNET_Web_Forms_and_Ajax_Releases_on_the_CDN_15" target="_blank" rel="external">ASP.NET Web Forms and Ajax </a>、<a href="https://docs.microsoft.com/en-us/aspnet/ajax/cdn/overview#ASPNET_MVC_Releases_on_the_CDN_16" target="_blank" rel="external">ASP.NET MVC </a>、<a href="https://docs.microsoft.com/en-us/aspnet/ajax/cdn/overview#ASPNET_SignalR_Releases_on_the_CDN_17" target="_blank" rel="external">ASP.NET SignalR</a></p></li><li><p><a href="https://developers.google.com/speed/libraries/devguide" target="_blank" rel="external">Google Hosted Libraries</a></p></li><li><p><a href="http://cdnjs.com/" target="_blank" rel="external">cdnjs</a> (by CloudFlare) 资源很丰富</p></li><li><p><a href="https://code.jquery.com/" target="_blank" rel="external">jQuery CDN</a> JQuery官方CDN</p></li><li><p><a href="http://www.jsdelivr.com/" target="_blank" rel="external">jsDelivr</a> (by MaxCDN)</p></li></ol><hr><h3 id="jQuery-CDN-双重保障"><a href="#jQuery-CDN-双重保障" class="headerlink" title="jQuery CDN 双重保障"></a>jQuery CDN 双重保障</h3><ul><li>CDN： <code>&lt;script src=&quot;http://ajax.aspnetcdn.com/ajax/jquery/jquery-1.9.0.min.js&quot;&gt;&lt;/script&gt;</code></li><li>本地：</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line">    <span class="comment">// Fallback to loading jQuery from a local path if the CDN is unavailable</span></div><div class="line">    (<span class="built_in">window</span>.jQuery || <span class="built_in">document</span>.write(<span class="string">'&lt;script src="/scripts/jquery-1.9.0.min.js"&gt;&lt;\/script&gt;'</span>));</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure><p>参考：</p><blockquote><p><a href="http://c7sky.com/javascript-libraries-cdn.html" target="_blank" rel="external">常用 JavaScript 库 CDN 加速服务（内附综合对比）</a></p></blockquote><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title></title>
      <url>houzw.github.io.git/2017/03/15/Openlayers3-01/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:01 GMT+0800 (中国标准时间) --><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[OpenLayers 3 扩展插件]]></title>
      <url>houzw.github.io.git/2017/03/15/OpenLayers-3-%E6%89%A9%E5%B1%95%E6%8F%92%E4%BB%B6/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="OpenLayers-3-扩展插件"><a href="#OpenLayers-3-扩展插件" class="headerlink" title="OpenLayers 3 扩展插件"></a>OpenLayers 3 扩展插件</h1><h2 id="Awesome-OpenLayers"><a href="#Awesome-OpenLayers" class="headerlink" title="Awesome-OpenLayers"></a><a href="https://github.com/webgeodatavore/awesome-openlayers" target="_blank" rel="external">Awesome-OpenLayers</a></h2><h2 id="OL3扩展"><a href="#OL3扩展" class="headerlink" title="OL3扩展"></a>OL3扩展</h2><ol><li><p><a href="https://github.com/Viglino/ol3-ext" target="_blank" rel="external">ol3-ext</a><br>很酷的一组 OpenLayers 3 (ol3) 扩展： 编辑-选择控件、CSS popup（弹出信息框）, Font Awesome 符号渲染, 地图统计图 (pie/bar),图层切换, wikipedia layer, 动画, canvas 过滤器等等.</p><p><a href="http://viglino.github.io/ol3-ext/" target="_blank" rel="external">在线实例</a>.</p></li><li><p><a href="https://github.com/Viglino/Map-georeferencer" target="_blank" rel="external">Map-georeferencer</a> A proof of concept to georeference maps with OL3. 地理配准。左边显示图片，右边显示地图，点击地图查找同名点</p><p>依赖 OL3, jQuery 和 ol3-ext.</p></li><li><p><a href="https://github.com/jonataswalker/ol3-geocoder" target="_blank" rel="external">ol3-geocoder</a></p><p>Geocoder Nominatim for OpenLayers 3 输入地名自动定位</p></li><li><p><a href="https://github.com/bjornharrtell/jsts" target="_blank" rel="external">JavaScript Topology Suite</a> <a href="http://bjornharrtell.github.io/jsts/" target="_blank" rel="external">http://bjornharrtell.github.io/jsts/</a></p><p>空间操作：缓冲区、相交等</p></li><li><p><a href="https://github.com/ThomasG77/turf-ol3" target="_blank" rel="external">turf-ol3</a></p><p>使用 <a href="http://turfjs.org" target="_blank" rel="external">Turf</a> (一个 JavaScript 库，用于基于GeoJSON 数据的地理空间处理任务 geospatial processing tasks) 结合 OpenLayers 3</p></li><li><p><a href="https://github.com/eblondel/ol3-loadingpanel" target="_blank" rel="external">ol3-loadingpanel</a> 显示加载进度</p></li><li><p><a href="http://mapgears.github.io/ol3-google-maps/" target="_blank" rel="external">ol3-google-maps</a> 允许在ol3地图上加载google地图图层</p><p>OL3-Google-Maps is an open-source library that allows users to add Google Maps layers to a OpenLayers 3 map. It works by replicating and synchronising the objects on the OL3 map to the Google Maps map, using their own mapping API. All calls made on the user side are written as OL3 calls, so there is no new syntax to learn.</p><p>​</p></li></ol><h2 id="菜单、工具条"><a href="#菜单、工具条" class="headerlink" title="菜单、工具条"></a>菜单、工具条</h2><ol><li><p><a href="https://github.com/geops" target="_blank" rel="external">geops</a>/<strong>ole</strong> OpenLayers 编辑器（OpenLayers Editor ）</p><p><a href="http://ole.geops.de/" target="_blank" rel="external">Demo</a></p><p>OpenLayers Editor (OLE) 提供了一组扩展的空间数据编辑控件. 不需使用插件就可以在浏览器中渲染带空间几何要素编辑工具的地图.</p><p>OLE can be bound to a range of back-ends using custom JavaScript or simply be attached using WFS-T.</p><p>(支持 OpenLayers 2.11)</p></li><li><p><a href="https://github.com/jonataswalker/ol3-contextmenu" target="_blank" rel="external">ol3-contextmenu</a></p></li></ol><pre><code>右键菜单扩展 

**要求** OpenLayers **v3.11.0** +.
</code></pre><p>​ <a href="http://rawgit.com/jonataswalker/ol3-contextmenu/master/examples/contextmenu.html" target="_blank" rel="external">例子</a> or <a href="https://jsfiddle.net/jonataswalker/ooxs1w5d/" target="_blank" rel="external">JSFiddle</a>.</p><ol><li><p><a href="https://github.com/Turbo87/sidebar-v2" target="_blank" rel="external">sidebar-v2</a></p><p>为 <a href="https://github.com/Turbo87/sidebar-v2#leaflet" target="_blank" rel="external">Leaflet</a> 或 <a href="https://github.com/Turbo87/sidebar-v2#openlayers-3" target="_blank" rel="external">OpenLayers</a> 提供响应式侧边栏</p><p>基本上是 <a href="https://github.com/turbo87/leaflet-sidebar/" target="_blank" rel="external">leaflet-sidebar</a> 插件的一个延续，因此是 <code>v2</code> .</p><p><a href="https://turbo87.github.io/sidebar-v2/examples/" target="_blank" rel="external">Demo</a></p><p>示例代码 <a href="https://github.com/Turbo87/sidebar-v2/blob/master/examples/ol3.html" target="_blank" rel="external"><code>examples/ol3.html</code></a> (<a href="http://turbo87.github.io/sidebar-v2/examples/ol3.html" target="_blank" rel="external">Preview</a>)</p></li><li><p><a href="https://github.com/mapgears/ol3-panzoom" target="_blank" rel="external">OL3-PanZoom</a></p><p>OpenLayers 3 的 PanZoom 和 PanZoomBar 控件。</p></li><li><p><a href="https://github.com/HamHamFonFon/ol3-drawFeatures" target="_blank" rel="external">OpenLayers Drawing Features Plugin</a></p><p>DrawFeatures是一个 OpenLayers 3 插件，用于在地图上绘制、编辑或删除要素.</p></li></ol><h2 id="控件"><a href="#控件" class="headerlink" title="控件"></a>控件</h2><ol><li><p><a href="https://github.com/walkermatt/ol3-layerswitcher" target="_blank" rel="external">ol3-layerswitcher</a> 图层切换</p></li><li><p><a href="https://github.com/walkermatt/ol3-popup" target="_blank" rel="external">ol3-popup</a> 信息弹窗</p></li><li><p><a href="https://github.com/nsidc/ol3-projection-switcher" target="_blank" rel="external">OpenLayers 3 Projection Switcher</a> 投影切换</p></li></ol><h2 id="显示"><a href="#显示" class="headerlink" title="显示"></a>显示</h2><ol><li><p><a href="https://github.com/buddebej/elasticterrain" target="_blank" rel="external">elasticterrain</a></p><p>Elastic Terrain Map 使用动画（animation）实现了一种新的地形可视化（ terrain visualization）方法. 此应用使用WebGL 来渲染数字高程模型（ digital elevation models），同时提供了一系列的可配置参数。</p><p><a href="http://elasticterrain.xyz/" target="_blank" rel="external">案例</a> （需要WebGL支持）</p></li><li><p><a href="https://github.com/acanimal/AnimatedCluster" target="_blank" rel="external">AnimatedCluster</a></p><p>OpenLayers聚类策略，当缩放地图时进行动态聚类、给聚类添加动画. <a href="http://acanimal.github.io/AnimatedCluster/" target="_blank" rel="external">案例</a>.</p><p>（只测试了 OpenLayers 2.11）</p></li></ol><h2 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h2><ol><li><a href="https://github.com/NationalLibraryOfScotland/NLSExploreGeoreferencedMapsOL3" target="_blank" rel="external">NLSExploreGeoreferencedMapsOL3</a> 在地图上显示经地理配准之后的历史地图（图片）</li><li><a href="https://github.com/nasa-gibs/gibs-web-examples" target="_blank" rel="external">gibs-web-examples</a> OL3等使用NASA Global Imagery Browse Services (GIBS) 的案例</li></ol><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[科研相关软件工具整理]]></title>
      <url>houzw.github.io.git/2017/03/12/%E7%A7%91%E7%A0%94%E7%9B%B8%E5%85%B3%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7%E6%95%B4%E7%90%86/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="科研软件整理"><a href="#科研软件整理" class="headerlink" title="科研软件整理"></a>科研软件整理</h1><blockquote><p>科研中可能会用到的软件工具</p></blockquote><h2 id="工作流"><a href="#工作流" class="headerlink" title="工作流"></a>工作流</h2><ol><li><p><a href="https://www.vistrails.org/index.php/Main_Page" target="_blank" rel="external">VisTrails</a></p><p>an open-source scientific workflow and provenance management system that supports data exploration and visualization.</p><p>VisTrails provides a general infrastructure that can be combined with existing systems and libraries. Official releases come with several packages, including VTK, matplotlib, and ImageMagick. The system is written in Python/Qt and runs on Mac, Unix and Windows.</p><p><a href="https://www.vistrails.org/usersguide/v2.2/html/VisTrails.pdf" target="_blank" rel="external">用户指南 pdf</a></p><blockquote><p>提供可视化工作流建模环境。与activiti等不一样，与BPMN、BPEL等没有关系</p></blockquote></li><li><p><a href="https://github.com/knipknap/SpiffWorkflow" target="_blank" rel="external">Spiff Workflow</a></p><p>Spiff Workflow is a workflow engine implemented in pure Python. It is based on the excellent work of the <a href="http://www.workflowpatterns.com/" target="_blank" rel="external">Workflow Patterns initiative</a>.</p></li><li><p><a href="http://pythonhosted.org/airflow/index.html" target="_blank" rel="external">Apache Airflow</a></p><p>Airflow is a platform to programmatically author, schedule and monitor workflows.</p><p>Use airflow to author workflows as directed acyclic graphs (DAGs) of tasks. The airflow scheduler executes your tasks on an array of workers while following the specified dependencies. Rich command line utilities make performing complex surgeries on DAGs a snap. The rich user interface makes it easy to visualize pipelines running in production, monitor progress, and troubleshoot issues when needed.</p></li><li><p><a href="http://toil.readthedocs.io/en/latest/index.html" target="_blank" rel="external">Toil</a></p><p>Toil is an open-source pure-Python workflow engine that lets people write better pipelines. You can:</p><ul><li>Write your workflows in <a href="http://www.commonwl.org/" target="_blank" rel="external">Common Workflow Language</a> (CWL)</li><li>Run workflows on your laptop or on huge commercial clouds such as <a href="https://aws.amazon.com/" target="_blank" rel="external">Amazon Web Services</a> (including the <a href="https://aws.amazon.com/ec2/spot/" target="_blank" rel="external">spot market</a>), <a href="https://azure.microsoft.com/" target="_blank" rel="external">Microsoft Azure</a>, <a href="https://www.openstack.org/" target="_blank" rel="external">OpenStack</a>, and <a href="https://cloud.google.com/compute/" target="_blank" rel="external">Google Compute Engine</a></li><li>Take advantage of high-performance computing environments with batch systems like<a href="http://gridscheduler.sourceforge.net/" target="_blank" rel="external">GridEngine</a>, <a href="http://mesos.apache.org/" target="_blank" rel="external">Apache Mesos</a>, and <a href="http://genecats.soe.ucsc.edu/eng/parasol.html" target="_blank" rel="external">Parasol</a></li><li>Run workflows concurrently at scale using thousands of nodes, managed by Toil’s<a href="http://toil.readthedocs.io/en/latest/running/cloud.html#autoscaling" target="_blank" rel="external">Autoscaling</a> capabilities</li><li>Execute workflows efficiently with caching and resource requirement specifications</li><li>Easily link databases and services</li></ul></li><li><p><a href="https://kepler-project.org/" target="_blank" rel="external">Kepler</a></p><p>The Kepler Project is dedicated to furthering and supporting the capabilities, use, and awareness of the free and open source, scientific workflow application, Kepler. Kepler is designed to help scien­tists, analysts, and computer programmers create, execute, and share models and analyses across a broad range of scientific and engineering disciplines. Kepler can operate on data stored in a variety of formats, locally and over the internet, and is an effective environment for integrating disparate software components, such as merging “R” scripts with compiled “C” code, or facilitating remote, distributed execution of models. Using Kepler’s graphical user interface, users simply select and then connect pertinent analytical components and data sources to create a “scientific workflow”—an executable representation of the steps required to generate results. The Kepler software helps users share and reuse data, workflows, and compo­nents developed by the scientific community to address common needs.</p></li></ol><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[GRASS GIS 手册 -命令行启动程序说明]]></title>
      <url>houzw.github.io.git/2017/03/02/GRASS-GIS-%E6%89%8B%E5%86%8C-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%90%AF%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AF%B4%E6%98%8E/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="GRASS-GIS-命令行启动说明"><a href="#GRASS-GIS-命令行启动说明" class="headerlink" title="GRASS GIS 命令行启动说明"></a>GRASS GIS 命令行启动说明</h1><blockquote><p>原文 <a href="https://grass.osgeo.org/grass72/manuals/grass7.html" target="_blank" rel="external">https://grass.osgeo.org/grass72/manuals/grass7.html</a></p></blockquote><h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><p>GRASS GIS 命令行启动的基本命令格式如下（与原文稍有出入，根据命令<code>grass72 -h</code>修正）：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">grass72 [-h | -help | --help | --h] [-v | --version] [-c | -c geofile | -c EPSG:code[:datum_trans]]</div><div class="line">          [-e] [-f] [-text | -gtext | -gui] [--config param]</div><div class="line">          [[[GISDBASE/]LOCATION_NAME/]MAPSET]</div><div class="line">grass72 [FLAG]... GISDBASE/LOCATION_NAME/MAPSET --exec EXECUTABLE [EPARAM]...</div></pre></td></tr></table></figure><h3 id="标志："><a href="#标志：" class="headerlink" title="标志："></a>标志：</h3><ul><li><p><code>-h</code> 或 <code>-help</code> 或 <code>--help</code> 或 <code>--h</code> 打印简短的使用帮助信息并退出</p></li><li><p><code>-v | --version</code> 打印GRASS的版本并退出</p></li><li><p><strong><code>-C</code></strong> 若指定的数据库、位置或图集（database/location/mapset）不存在的话，新建一个</p></li><li><p><strong><code>-c geofile</code></strong> 基于具有地理参考的文件（即 geofile）在指定的 GISDBASE 中创建新的GRASS （拥有）投影（的）位置</p></li><li><p><strong><code>-c EPSG：code</code> </strong>使用给定的EPSG代码在指定的GISDBASE中创建新的GRASS投影位置</p></li><li><p><strong><code>-c EPSG：code：datum_trans</code></strong></p><p>使用给定的EPSG代码和基准变换参数在指定的GISDBASE中创建新的GRASS投影位置</p></li><li><p><strong><code>-e</code></strong>创建位置或地图集后退出。只与<strong><code>-c</code></strong>标志一起使用</p></li><li><p><strong><code>-F</code></strong> 强制删除<code>.gislock</code> （如果存在）（小心使用！）。仅与<code>-text</code>标志 一起使用</p></li><li><p><strong><code>-text</code></strong> 表示使用基于文本的用户界面（跳过欢迎屏幕），并设为默认</p></li><li><p><strong><code>-gtext</code></strong>表示使用基于文本的用户界面（显示欢迎屏幕） ，并设为默认</p></li><li><p><strong><code>-gui</code></strong>表示使用图形用户界面（<em>wxGUI</em>） ，并设为默认</p></li><li><p><strong><code>--config</code></strong> 打印GRASS配置参数（选项：arch，build，compiler，path，revision）</p></li><li><p><strong><code>--exec EXECUTABLE</code></strong> 执行GRASS模块或脚本。所提供的可执行文件将在GRASS GIS 会话中执行。</p></li></ul><h3 id="参数："><a href="#参数：" class="headerlink" title="参数："></a>参数：</h3><ul><li><strong>GISDBASE</strong> 初始数据库目录，包含 locations，应为完全限定路径（例如，<code>/usr/local/share/grassdata</code>）</li><li><strong>LOCATION_NAME</strong> 初始位置目录，它是GISDBASE的子目录，包含系列 Mapsets 和 公用的坐标系统（投影）</li><li><strong>MAPSET</strong> 初始地图集目录，它是LOCATION_NAME的子目录</li><li><code>GISDBASE/LOCATION_NAME/MAPSET</code> 全限定的 Mapset 目录</li><li>EXECUTABLE GRASS 模块, 脚本或其他（GRASS）可执行文件</li><li>EPARAM 可执行文件的参数</li><li>FLAG 标准标志</li></ul><p>注意：地址参数必须以下列方式之一指定：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">MAPSET</div><div class="line">LOCATION_NAME/MAPSET</div><div class="line">GISDBASE/LOCATION_NAME/MAPSET</div></pre></td></tr></table></figure><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>此命令用于启动GRASS GIS。它将解析命令行参数，然后为用户初始化GRASS。由于GRASS模块需要特定的环境，因此必须在任何其他GRASS模块运行之前调用此程序。命令行参数是可选的，并为用户提供一种方法来指示所需的用户界面以及要处理的地图集（mapset）。</p><p>启动程序将记住所需的用户界面和地图集。因此，下次用户运行GRASS时，键入 <em>grass72</em>（不带任何选项）将使用先前选择的设置启动GRASS用户界面和地图集。</p><p>如果指定图形用户界面（<strong><code>-gui</code></strong>），<em>grass72</em> 程序将尝试验证您指定的系统是否存在，并且您可以成功访问它。如果任何这些检查失败，<em>grass72</em>将自动切换回文本用户界面模式。</p><h2 id="样本数据"><a href="#样本数据" class="headerlink" title="样本数据"></a>样本数据</h2><p>GRASS GIS项目提供了几个免费的样本地理空间数据集作为即用型 locations。他们可在<a href="https://grass.osgeo.org/download/sample-data/下载" target="_blank" rel="external">https://grass.osgeo.org/download/sample-data/下载</a> 。“北卡罗莱纳数据集”（”North Carolina data set”）是来自北卡罗来纳州（美国）的现代地理空间数据包，包括栅格，矢量，LiDAR和卫星数据。这是文档中使用最频繁的数据集，用户手册页中的示例都是基于它的。</p><blockquote><p>若安装时选择下载示例数据，则其位置在Windows下的<code>C:\Users\[username]\Documents\grassdata</code></p></blockquote><h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><p>GRASS启动时提供了许多环境变量，以帮助自动化和定制。大多数用户不需要考虑这些。</p><p>除了 shell 环境变量，GRASS在<code>$HOME/.grass7/rc</code> （Windows下为<code>C:\Users\username\AppData\Roaming\GRASS7\rc</code>）文件中维护了一些GIS环境变量。用户对此文件的更改将在下次启动GRASS时读取。如果此文件被损坏，用户可以手动编辑它或删除它重新开始。有关更多信息，请参阅<a href="https://grass.osgeo.org/grass72/manuals/variables.html" target="_blank" rel="external">implemented GRASS variables</a>列表 。本帮助页面的其余部分将只考虑shell环境变量。</p><p>请注意，你需要用你所使用的 UNIX shell （命令行程序）所需的适当方法来设置这些变量（例如，在Bash shell中，您必须 <code>`export</code> `要传送的变量）。</p><h3 id="用户界面环境变量"><a href="#用户界面环境变量" class="headerlink" title="用户界面环境变量"></a>用户界面环境变量</h3><p><em>grass72</em> 程序将检查一个名为GRASS_GUI 的环境变量是否存在，此变量表明使用的用户界面类型。如果在运行<em>grass72</em> 时未设置此变量，那么将创建该变量，然后将其保存在<code>$HOME/.grass7/rc</code>文件中，以便下次运行GRASS时使用。它可以被设置为<code>text</code>，<code>gtext</code> 或 <code>gui</code>。</p><p>在 grass72确定要使用的用户界面的方式中存在优先级顺序。以下是从最高优先级到最低优先级的层次结构：</p><ol><li>命令行参数</li><li>环境变量 GRASS_GUI</li><li><code>$HOME/.grass7/rc</code>（GUI）中设置的值</li><li>默认值<code>- gui</code></li></ol><h3 id="Python环境变量"><a href="#Python环境变量" class="headerlink" title="Python环境变量"></a>Python环境变量</h3><p>如果你选择使用<em>wxGUI</em> 接口，那么 GRASS_PYTHON 环境变量可以用来覆盖你系统默认的<code>python</code>命令。</p><p>假设您的系统安装了Python 2.6，并且您在<code>$HOME/bin</code>下安装了一个个人版本的Python 2.7。您可以使用上述变量让GRASS使用Python 2.7。<code>GRASS_PYTHON = python2.7</code></p><h3 id="额外的用户脚本路径"><a href="#额外的用户脚本路径" class="headerlink" title="额外的用户脚本路径"></a>额外的用户脚本路径</h3><p>此环境变量允许用户扩展GRASS程序搜索路径，以包括本地开发/安装的GRASS模块或用户脚本。</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">GRASS_ADDON_PATH = /usr/mytools</div><div class="line">GRASS_ADDON_PATH = /usr/mytools:/usr/local/othertools</div></pre></td></tr></table></figure><p>在上面的示例中，路径将被添加到标准的GRASS路径环境中。</p><h3 id="额外的本地GRASS-插件模块库"><a href="#额外的本地GRASS-插件模块库" class="headerlink" title="额外的本地GRASS 插件模块库"></a>额外的本地GRASS 插件模块库</h3><p>此环境变量允许用户将GRASS程序搜索路径扩展为包含本地安装（请参阅<a href="https://grass.osgeo.org/grass72/manuals/g.extension.html" target="_blank" rel="external">g.extension</a>了解详细信息） 的未随标准GRASS版本一起发布的GRASS 插件模块。</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">GRASS_ADDON_BASE = /usr/grass-addons</div></pre></td></tr></table></figure><p>上例中，路径将被添加到标准的GRASS路径环境中。</p><p>如果用户未定义，则此变量由GRASS启动程序设置为 GNU / Linux上的<code>$HOME/.grass7/addons</code>和MS Windows上的<code>$APPDATA\GRASS7\addons</code>。</p><h3 id="HTML浏览器变量"><a href="#HTML浏览器变量" class="headerlink" title="HTML浏览器变量"></a>HTML浏览器变量</h3><p>GRASS_HTML_BROWSER 环境变量允许用户设置HTML Web浏览器以用于显示帮助页面。</p><h3 id="Location-环境变量"><a href="#Location-环境变量" class="headerlink" title="Location 环境变量"></a>Location 环境变量</h3><p>上面的<strong>提要</strong>部分描述了可用于设置GRASS将使用的位置和地图集的选项。这些值也可以使用环境变量设置。但是，在命令行上指定（Location ）位置和地图集变量将覆盖这些环境变量。可用变量如下：</p><ul><li><strong>Location</strong> mapset 的完全限定路径（例如<code>/usr/local/share/grassdata/spearfish70/PERMANENT</code>）。此环境变量<strong>覆盖</strong>GISDBASE，LOCATION_NAME和MAPSET变量。</li><li><strong>GISDBASE</strong> 初始数据库目录，应为完全限定路径（例如<code>/usr/local/share/grassdata</code>）</li><li><strong>LOCATION_NAME</strong> 初始位置目录，它是GISDBASE的子目录</li><li><strong>MAPSET</strong> 初始地图集目录，它是LOCATION_NAME的子目录</li></ul><h3 id="运行非交互式批处理作业"><a href="#运行非交互式批处理作业" class="headerlink" title="运行非交互式批处理作业"></a>运行非交互式批处理作业</h3><p>如果 GRASS_BATCH_JOB 环境变量设置为 shell 脚本的 <em>完整</em> 路径和文件名，那么将以非交互方式启动GRASS，并运行脚本。如果用户需要，脚本本身可以是交互式的。当它完成时，GRASS将使用脚本给出的退出成功代码自动退出。脚本文件必须设置其可执行位（executable bit）。</p><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><p>以下是一些如何启动GRASS的示例</p><ul><li><strong><code>grass72</code></strong> 使用默认用户界面启动GRASS。将提示用户选择适当的位置和地图集（ location &amp; mapset）。</li><li><strong><code>grass72-gui</code></strong> 使用图形用户界面启动GRASS。将提示用户选择适当的位置和地图集。</li><li><strong><code>grass72-text</code></strong> 使用基于文本的用户界面启动GRASS。适当的位置和地图集必须由环境变量设置（参见下面的示例），否则从上一个GRASS会话中获取。</li><li><strong><code>grass72 -gtext</code></strong> 使用基于文本的用户界面启动GRASS。将提示用户选择适当的位置和地图集。</li><li><strong><code>grass72 $HOME/grassdata/spearfish70/user1</code></strong> 使用默认用户界面启动GRASS，并绕过地图集选择菜单而自动启动到给定的地图集。</li><li><strong><code>grass72 -gui -</code> </strong>使用图形用户界面启动GRASS，并尝试从环境变量获取位置和映射集。</li><li><strong><code>grass72 -c EPSG:4326 $HOME/grassdata/mylocation</code></strong> 在指定的GISDBASE中使用EPSG代码4326（经纬度，WGS84）创建新的GRASS位置</li><li><strong><code>grass72 -c EPSG:5514:3 $HOME/grassdata/mylocation</code></strong> 使用EPSG代码5514 (S-JTSK / Krovak East North - SJTSK) 创建新的GRASS位置，在指定的GISDBASE中使用捷克共和国使用的基准变换参数</li><li><strong><code>grass72 -c myvector.shp $HOME/grassdata/mylocation</code></strong> 基于 Shapefile 文件创建新的GRASS位置</li><li><strong><code>grass72 -c myraster.tif $HOME/grassdata/mylocation</code></strong> 基于GeoTIFF 文件创建新的GRASS位置</li></ul><h3 id="使用exec-接口批量作业"><a href="#使用exec-接口批量作业" class="headerlink" title="使用exec 接口批量作业"></a>使用<code>exec</code> 接口批量作业</h3><p>基于地理数据文件的投影（<code>-c</code>）和退出（<code>-e</code>）立即创建新位置：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">grass72 -c elevation.tiff -e /path/to/grassdata/test1/</div></pre></td></tr></table></figure><p>将外部栅格数据链接到PERMANENT地图集：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">grass72 /path/to/grassdata/test1/PERMANENT/ --exec r.external input=basins.tiff output = basins</div><div class="line">grass72 /path/to/grassdata/test1/PERMANENT/ --exec r.external input=elevation.tiff output = elevation</div></pre></td></tr></table></figure><p>获取一个栅格图的统计信息：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">grass72 /path/to/grassdata/test1/PERMANENT/ --exec r.univar map=elevation</div></pre></td></tr></table></figure><p>可视化栅格比较：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">grass72 /path/to/grassdata/test1/PERMANENT/ --exec g.gui.mapswipe first=elevation second=basins</div></pre></td></tr></table></figure><h4 id="执行shell和Python脚本而不是单个命令"><a href="#执行shell和Python脚本而不是单个命令" class="headerlink" title="执行shell和Python脚本而不是单个命令"></a>执行shell和Python脚本而不是单个命令</h4><p>命令序列可以集成在脚本中并使用exec接口执行。</p><p><strong>Shell脚本示例：</strong>执行shell脚本的命令可能是：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">grass72  /path/to/grassdata/test1/PERMANENT/ --exec sh test.sh</div></pre></td></tr></table></figure><p>一个非常简单的bash脚本（“test.sh”）可能如下所示：</p><figure class="highlight sh"><table><tr><td class="code"><pre><div class="line">＃!/bin/bash</div><div class="line"></div><div class="line">g.region -p</div><div class="line">g.list <span class="built_in">type</span>=raster</div><div class="line">r.info elevation</div></pre></td></tr></table></figure><p><strong>Python脚本示例：</strong>执行Python脚本的命令可能是：</p><figure class="highlight powershell"><table><tr><td class="code"><pre><div class="line">grass72 /path/to/grassdata/test1/PERMANENT --exec python test.py</div></pre></td></tr></table></figure><p>一个非常简单的Python脚本（“test.py”）可能如下所示：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">＃!/usr/bin/env python</div><div class="line"></div><div class="line"><span class="comment"># import GRASS Python bindings (see also pygrass)</span></div><div class="line"><span class="keyword">import</span> grass.script <span class="keyword">as</span> gscript</div><div class="line"><span class="keyword">import</span> grass.script.setup <span class="keyword">as</span> gsetup</div><div class="line"></div><div class="line">gscript.message(<span class="string">'Current GRASS GIS 7 environment:'</span>)</div><div class="line">print(gscript.gisenv())</div><div class="line"></div><div class="line">gscript.message(<span class="string">'Available raster maps:'</span>)</div><div class="line"><span class="keyword">for</span> raster <span class="keyword">in</span> gscript.list_strings(type=<span class="string">'raster'</span>):</div><div class="line">    print(raster)</div><div class="line"></div><div class="line">gscript.message(<span class="string">'Available vector maps:'</span>)</div><div class="line"><span class="keyword">for</span> vector <span class="keyword">in</span> gscript.list_strings(type=<span class="string">'vector'</span>):</div><div class="line">    print(vector)</div></pre></td></tr></table></figure><h4 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h4><p>重要的是，为了避免出现 <code>&quot;[Errno 8] Exec format error&quot;</code> ，脚本顶部必须有一个 <a href="https://en.wikipedia.org/wiki/Shebang_%28Unix%29" target="_blank" rel="external">shebang</a> 行（例如<code>＃!/bin/sh</code></p><p>，<code>＃!/bin/bash</code>或<code>＃!/usr/env python</code>）指示要用于脚本的解释器。脚本文件必须设置其可执行位。</p><h3 id="其他示例"><a href="#其他示例" class="headerlink" title="其他示例"></a>其他示例</h3><p>有多种方法可以使用位置环境变量（ <em>location environment variables</em>, 见上文）来指定要使用的地图集。以下是一些可能的示例。</p><h4 id="例1"><a href="#例1" class="headerlink" title="例1"></a>例1</h4><p>环境变量定义如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">LOCATION = /usr/local/share/grassdata/spearfish70/PERMANENT</div><div class="line">GISDBASE = /usr/local/share/grassdata</div><div class="line">LOCATION_NAME = spearfish70</div><div class="line">MAPSET = PERMANENT</div></pre></td></tr></table></figure><p>使用以下命令启动GRASS：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">grass72  -</div></pre></td></tr></table></figure><p>GRASS将以LOCATION定义的地图集开始，因为LOCATION变量覆盖了其他变量。</p><h4 id="例2"><a href="#例2" class="headerlink" title="例2"></a>例2</h4><p>环境变量定义如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">GISDBASE =/usr/local/share/grassdata</div><div class="line">LOCATION_NAME = spearfish70</div><div class="line">MAPSET = PERMANENT</div></pre></td></tr></table></figure><p>使用以下命令启动GRASS：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">grass72  -</div></pre></td></tr></table></figure><p>GRASS将以GISDBASE/LOCATION_NAME/MAPSET定义的地图集启动。</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">grass72  /usr/home/grass/data/thailand/forests</div></pre></td></tr></table></figure><p>GRASS将以覆盖环境变量的mapset <code>/home/grass/data/thailand/forests</code> 启动。</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">grass72 swamps</div></pre></td></tr></table></figure><p>GRASS将以GISDBASE/LOCATION_NAME/swamps定义的地图集开始，因为地图集的命令行参数覆盖环境变量MAPSET。</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">grass72 thailand/forests</div></pre></td></tr></table></figure><p>GRASS将以<code>GISDBASE/thailand/forests</code>定义的地图集启动，因为location和mapset的命令行参数覆盖了环境变量LOCATION_NAME和MAPSET。</p><h2 id="警告"><a href="#警告" class="headerlink" title="警告"></a>警告</h2><p>如果你使用<a href="https://grass.osgeo.org/grass72/manuals/wxGUI.html" target="_blank" rel="external">wxGUI</a> 接口启动GRASS ，你的$PATH变量中必须有一个python命令。也就是说，命令必须命名为</p><p>python，而不是python2.6。很少有Python安装不创建一个python命令的。在这些情况下，您可以通过GRASS_PYTHON环境变量覆盖python。</p><p>此外，如果您安装了多个版本的Python，请确保要与GRASS一起使用的版本由GRASS_PYTHON环境变量设置。</p><h2 id="也可以看看"><a href="#也可以看看" class="headerlink" title="也可以看看"></a>也可以看看</h2><p><a href="https://grass.osgeo.org/grass72/manuals/variables.html" target="_blank" rel="external">GRASS环境变量</a> 列表</p><p><a href="http://grass.osgeo.org/" target="_blank" rel="external">GRASS GIS网站</a><br><a href="http://grass.osgeo.org/wiki/" target="_blank" rel="external">GRASS GIS用户Wiki</a><br><a href="http://trac.osgeo.org/grass/" target="_blank" rel="external">GRASS GIS Bug Tracker</a><br><a href="http://grass.osgeo.org/programming7/" target="_blank" rel="external">GRASS GIS 7程序员手册</a></p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Webpack-从入门到放弃 - 插件]]></title>
      <url>houzw.github.io.git/2017/02/18/Webpack-%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%83-%E6%8F%92%E4%BB%B6/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="Webpack-插件"><a href="#Webpack-插件" class="headerlink" title="Webpack 插件"></a>Webpack 插件</h1><blockquote><p>Webpack 官方插件列表：<a href="https://github.com/webpack/docs/wiki/list-of-plugins" target="_blank" rel="external">https://github.com/webpack/docs/wiki/list-of-plugins</a></p><p>获取Webpack资源：<strong><a href="https://github.com/webpack-contrib/awesome-webpack" target="_blank" rel="external">awesome-webpack</a></strong></p><p><a href="https://segmentfault.com/a/1190000005742122" target="_blank" rel="external">webpack进阶之插件篇</a></p><p><a href="https://rhadow.github.io/2015/05/30/webpack-loaders-and-plugins/" target="_blank" rel="external">深入了解Webpack Plugins</a></p></blockquote><h2 id="Hot-Module-Replacement-Plugin"><a href="#Hot-Module-Replacement-Plugin" class="headerlink" title="Hot Module Replacement Plugin"></a>Hot Module Replacement Plugin</h2><p><strong>模块热加载插件</strong>。Hot Module Replacement Plugin通常会搭配<a href="http://webpack.github.io/docs/webpack-dev-server.html" target="_blank" rel="external">Webpack dev server</a>一起使用。它提供类似于Live Reload的功能，一旦你的代码有做更动，此插件会直接更新画面并做出相对应的变化。</p><p>通常会使用到Hot Module Replacement Plugin 的时机是当webpack dev server <strong>不是透过 inline mode 做启动时。</strong></p><blockquote><p>inline mode：<code>$ webpack-dev-server --devtool eval --progress --colors --hot --content-base build</code>中的<code>--hot</code>会自动将Hot Module Replacement Plugin的功能加入</p></blockquote><p>在配置文件中配置 devServer 属性，且其 hot属性为true时，需要加入此插件。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">new</span> webpack.HotModuleReplacementPlugin() <span class="comment">//热加载</span></div><div class="line"></div><div class="line">devServer: &#123;</div><div class="line">    <span class="attr">contentBase</span>: <span class="string">'./'</span>,</div><div class="line">    <span class="attr">host</span>: <span class="string">'localhost'</span>,</div><div class="line">    <span class="attr">port</span>: <span class="number">9090</span>, <span class="comment">//默认8080</span></div><div class="line">    inline: <span class="literal">true</span>, <span class="comment">//可以监控js变化</span></div><div class="line">    hot: <span class="literal">true</span>, <span class="comment">//热启动</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="HtmlWebpackPlugin"><a href="#HtmlWebpackPlugin" class="headerlink" title="HtmlWebpackPlugin"></a>HtmlWebpackPlugin</h2><p><strong>动态生成HTML文件</strong>，并支持Extract Text Plugin 自动將打包完后的 js 与css 加入。</p><p><code>cnpm install html-webpack-plugin --save-dev</code></p><p>要输出多个HTML页面，必须声明多次：每个页面一次</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">//webpack.config.js</span></div><div class="line">  <span class="keyword">var</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</div><div class="line">  <span class="built_in">module</span>.exports=&#123;</div><div class="line">    <span class="attr">entry</span>:<span class="string">'./index.js'</span>,</div><div class="line">    <span class="attr">output</span>:&#123;</div><div class="line">      <span class="attr">path</span>:__dirname+<span class="string">'/dist'</span>,</div><div class="line">      <span class="attr">filename</span>:<span class="string">'bundle.js'</span></div><div class="line">    &#125;</div><div class="line">    plugins:[</div><div class="line">      <span class="keyword">new</span> HtmlWebpackPlugin(), <span class="comment">//在dist目录下生成默认的index.html</span></div><div class="line">      <span class="comment">//基于模板 header.html生成admin.html</span></div><div class="line">      <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</div><div class="line">        <span class="attr">title</span>: <span class="string">'My App'</span>,</div><div class="line">        <span class="attr">filename</span>: <span class="string">'admin.html'</span>,</div><div class="line">        <span class="attr">template</span>:<span class="string">'header.html'</span>,</div><div class="line">        <span class="attr">inject</span>: <span class="string">'body'</span>,</div><div class="line">        <span class="attr">favicon</span>:<span class="string">'./images/favico.ico'</span>,</div><div class="line">        <span class="attr">minify</span>:<span class="literal">true</span>,</div><div class="line">        <span class="attr">hash</span>:<span class="literal">true</span>,</div><div class="line">        <span class="attr">cache</span>:<span class="literal">false</span>,</div><div class="line">        <span class="attr">showErrors</span>:<span class="literal">false</span>,</div><div class="line">        <span class="string">"chunks"</span>: &#123;</div><div class="line">        <span class="string">"head"</span>: &#123;</div><div class="line">          <span class="string">"entry"</span>: <span class="string">"assets/head_bundle.js"</span>,</div><div class="line">          <span class="string">"css"</span>: [ <span class="string">"main.css"</span> ]</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">xhtml</span>:<span class="literal">false</span></div><div class="line">      &#125;)</div><div class="line">    ]</div><div class="line">  &#125;</div></pre></td></tr></table></figure><h3 id="配置说明："><a href="#配置说明：" class="headerlink" title="配置说明："></a>配置说明：</h3><blockquote><p><a href="http://blog.csdn.net/keliyxyz/article/details/51513114" target="_blank" rel="external">webpack入门（六）——html-webpack-plugin</a></p><p><a href="http://www.cnblogs.com/wonyun/p/6030090.html" target="_blank" rel="external">html-webpack-plugin详解</a></p></blockquote><ul><li><code>title</code>: 用于生成的HTML文件的标题。模板中使用 <code>&lt;title&gt;&lt;%= htmlWebpackPlugin.options.title %&gt;&lt;/title&gt;</code>表示</li><li><code>filename</code>: 用于生成的HTML文件的名称，默认是index.html。你可以在这里指定子目录（例如:<code>assets/admin.html</code>）</li><li><code>template</code>: 模板的路径。支持加载器，例如<code>html!./index.html</code> 。</li><li><code>inject: true | ‘head’ | ‘body’ | false</code>。把所有产出文件注入到给定的 template 或templateContent。当传入 true或者 ‘body’时所有javascript资源将被放置在body元素的底部，“head”则会放在head元素内。</li><li><code>favicon</code>: 给html添加一个<code>favicon &#39;./images/favico.ico&#39;</code> ,</li><li><code>minify</code>:是否压缩<code>{...} | false</code> （最新api变动，原来是ture|false )</li><li><code>hash: true | false</code> 。如果是true，会给所有包含的script和css添加一个唯一的webpack编译hash值。这对于缓存清除非常有用。</li><li><code>cache: true | false</code> 。如果传入true（默认），只有在文件变化时才 发送（emit）文件。</li><li><code>showErrors: true | false</code>。如果传入true（默认），错误信息将写入html页面。</li><li><code>chunks</code> : 允许插入到模板中的一些chunk（例如：只有单元测试块 ）。不配置此项默认会将<code>entry</code>中所有的chunk注入到模板中。在配置多页面时，每个页面注入的chunk应该是不相同的，需要通过该配置为不同页面注入不同的chunk；</li><li><code>excludeChunks</code> : 允许你跳过一些chunks（例如，不要单元测试的 chunk）.</li><li><code>chunksSortMode</code> : 在chunk被插入到html之前，你可以控制它们的排序。允许的值<code>‘none’ | ‘auto’ | ‘dependency’ | {function}</code> 默认为‘auto’.</li><li><code>xhtml: true | false</code>。如果是true，把link标签渲染为自闭合标签，XHTML要这么干的。默认false。</li></ul><h3 id="多页面"><a href="#多页面" class="headerlink" title="多页面"></a>多页面</h3><p>如果有许多的页面需要生成，可以参考下列方式插入配置：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> htmlFilenames=[<span class="string">"page1"</span>,<span class="string">"page2"</span>,<span class="string">"page3"</span>,<span class="string">"page4"</span>,<span class="string">"page5"</span>,<span class="string">"page6"</span>,<span class="string">"page7"</span>,<span class="string">"page8"</span>];  </div><div class="line">   <span class="keyword">for</span>(file_name <span class="keyword">in</span> htmlFilenames)&#123;  </div><div class="line">     config.plugins.push(<span class="keyword">new</span> HtmlWebpackPlugin(&#123;  </div><div class="line">       <span class="attr">filename</span>: file_name +<span class="string">'.html'</span>,  </div><div class="line">       <span class="attr">template</span>: <span class="string">'src/assets/'</span>+file_name +<span class="string">'.html'</span>  </div><div class="line">   &#125;))  </div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="ProvidePlugin"><a href="#ProvidePlugin" class="headerlink" title="ProvidePlugin"></a>ProvidePlugin</h2><blockquote><p><a href="http://www.html-js.com/article/shiyongzhishang-webpackduoyeyingyongjiagouxiliesilaoshijQuerychajianhuanbunengdiuzenyaojianrong%203768" target="_blank" rel="external">webpack多页应用架构系列（四）：老式jQuery插件还不能丢，怎么兼容？</a></p></blockquote><p><strong>全局挂载插件。</strong> 当webpack加载到的某个js模块里，出现了未定义且名称符合（字符串完全匹配）配置中key的变量时，会自动 require 配置中 value 所指定的 js 模块。</p><p>解决JQuery插件在Webpack打包后出现<code>Uncaught ReferenceError: jQuery is not defined</code> 的问题。</p><p>同时，模块中使用JQuery使不用再 <code>require(&#39;jQuery&#39;);</code></p><h3 id="配置方式"><a href="#配置方式" class="headerlink" title="配置方式"></a>配置方式</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> providePlugin = <span class="keyword">new</span> webpack.ProvidePlugin(&#123;</div><div class="line">    <span class="attr">$</span>: <span class="string">'jquery'</span>,</div><div class="line">    <span class="attr">jQuery</span>: <span class="string">'jquery'</span>,</div><div class="line">    <span class="string">'window.jQuery'</span>: <span class="string">'jquery'</span>,</div><div class="line">    <span class="string">'window.$'</span>: <span class="string">'jquery'</span>,</div><div class="line">&#125;);</div></pre></td></tr></table></figure><h2 id="UglifyJsPlugin"><a href="#UglifyJsPlugin" class="headerlink" title="UglifyJsPlugin"></a>UglifyJsPlugin</h2><p><strong>压缩、混淆js代码</strong>。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">new</span> webpack.optimize.UglifyJsPlugin()</div><div class="line"><span class="comment">//添加额外配置</span></div><div class="line"><span class="keyword">new</span> Webpack.optimize.UglifyJsPlugin(&#123;</div><div class="line">    <span class="attr">compress</span>: &#123;</div><div class="line">        <span class="attr">warnings</span>: <span class="literal">false</span></div><div class="line">    &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure><h2 id="No-Errors-Plugin"><a href="#No-Errors-Plugin" class="headerlink" title="No Errors Plugin"></a>No Errors Plugin</h2><p>在代码出错时，不会将有错误的代码打包以确保打包完后的程序语法上的正确性。比较容易会碰到的问题是，当有使用<a href="https://github.com/MoOx/eslint-loader" target="_blank" rel="external">eslint-loader</a>来为ES6做语法检查时，不管是warning或是error都会使No Error Plugin停止打包。</p><blockquote><p>ESLint 安装配置：</p><p><a href="https://github.com/ecmadao/Coding-Guide/blob/master/Notes/JavaScript/Eslint%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95(with%20webpack" target="_blank" rel="external">Eslint 配置记录(with webpack)</a>.md)</p><p><a href="https://segmentfault.com/a/1190000007030775" target="_blank" rel="external">webpack多页应用架构系列（九）：总有刁民想害朕！ESLint为你阻击垃圾代码</a></p></blockquote><h2 id="ExtractTextPlugin"><a href="#ExtractTextPlugin" class="headerlink" title="ExtractTextPlugin"></a>ExtractTextPlugin</h2><p>从bundle中提取出特定的text到独立的文件中。可以实现把 css 从打包的 js 中抽离出来，成为独立的 css 文件。</p><h2 id="安装-不同的Webpack版本不一样"><a href="#安装-不同的Webpack版本不一样" class="headerlink" title="安装(不同的Webpack版本不一样)"></a>安装(不同的Webpack版本不一样)</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line"># https://github.com/webpack-contrib/extract-text-webpack-plugin</div><div class="line"># for webpack 1</div><div class="line">npm install --save-dev extract-text-webpack-plugin</div><div class="line"># for webpack 2</div><div class="line">npm install --save-dev extract-text-webpack-plugin@beta</div></pre></td></tr></table></figure><h3 id="配置-针对Webpack-2"><a href="#配置-针对Webpack-2" class="headerlink" title="配置(针对Webpack 2)"></a>配置(针对Webpack 2)</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> ExtractTextPlugin = <span class="built_in">require</span>(<span class="string">"extract-text-webpack-plugin"</span>);</div><div class="line"><span class="keyword">new</span> ExtractTextPlugin(options: filename | object)</div></pre></td></tr></table></figure><table><thead><tr><th>Name</th><th style="text-align:left">Type</th><th>Description</th></tr></thead><tbody><tr><td><strong>id</strong></td><td style="text-align:left"><code>{String}</code></td><td>此插件实例的唯一标识符。（仅限高级用法，默认情况下自动生成）</td></tr><tr><td><strong>filename</strong></td><td style="text-align:left"><code>{String}</code></td><td>结果文件的名称。可能包含[name]，[id]和[contenthash]</td></tr><tr><td><strong>options.allChunks</strong></td><td style="text-align:left"><code>{Boolean}</code></td><td>从所有附加块（chunk）中抽取（默认情况下，它只从初始块中提取）</td></tr><tr><td><strong>options.disable</strong></td><td style="text-align:left"><code>{Boolean}</code></td><td>是否禁用插件</td></tr><tr><td><strong>options.ignoreOrder</strong></td><td style="text-align:left"><code>{Boolean}</code></td><td>禁用次序检查 (useful for CSS Modules!), 默认<code>false</code></td></tr></tbody></table><ul><li><code>[name]</code> name of the chunk</li><li><code>[id]</code> number of the chunk</li><li><code>[contenthash]</code> 提取的文件的内容的hash</li></ul><blockquote><p>⚠️ <code>ExtractTextPlugin</code> 会为每个 <strong>entry</strong> 生成一个文件, 所以当使用多entry 时，应该使用 <code>[name]</code>, <code>[id]</code> 或 <code>[contenthash]</code> .</p></blockquote><h3 id="extract"><a href="#extract" class="headerlink" title="extract"></a><code>extract</code></h3><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">ExtractTextPlugin.extract（options : loader | object）</div></pre></td></tr></table></figure><p>从现有加载器创建提取加载程序。支持的加载器<code>{ loader: [name]-loader -&gt; {String}, options: {} -&gt; {Object} }</code>。</p><table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><strong>options.use</strong></td><td><code>{String}</code>/ <code>{Array}</code>/<code>{Object}</code></td><td>应该用于将资源转换为CSS导出模块的Loader(s)<em>（必需）</em></td></tr><tr><td><strong>options.fallback</strong></td><td><code>{String}</code>/ <code>{Array}</code>/<code>{Object}</code></td><td>当CSS未被提取时使用的loader（如<code>&#39;style-loader&#39;</code>）（即当<code>allChunks: false</code>时在附加块中）</td></tr><tr><td><strong>options.publicPath</strong></td><td><code>{String}</code></td><td>为此loader 覆盖<code>publicPath</code>的设置</td></tr></tbody></table><p>例：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">//rules</span></div><div class="line">&#123;</div><div class="line">   <span class="attr">test</span>: <span class="regexp">/\.scss$/</span>,</div><div class="line">   <span class="attr">use</span>: ExtractTextPlugin.extract(&#123;</div><div class="line">   		<span class="attr">fallback</span>: <span class="string">'style-loader'</span>,</div><div class="line">    	<span class="comment">//resolve-url-loader may be chained before sass-loader if necessary</span></div><div class="line">    	use: [<span class="string">'css-loader'</span>, <span class="string">'sass-loader'</span>]</div><div class="line">   &#125;)</div><div class="line">&#125;</div><div class="line"><span class="comment">//plugins</span></div><div class="line">plugins: [</div><div class="line">    <span class="keyword">new</span> ExtractTextPlugin(<span class="string">'style.css'</span>)</div><div class="line">    <span class="comment">//if you want to pass in options, you can do so:</span></div><div class="line">    <span class="comment">//new ExtractTextPlugin(&#123;</span></div><div class="line">    <span class="comment">//  filename: 'style.css'</span></div><div class="line">    <span class="comment">//&#125;)</span></div><div class="line">  ]</div></pre></td></tr></table></figure><h2 id="CommonsChunkPlugin"><a href="#CommonsChunkPlugin" class="headerlink" title="CommonsChunkPlugin"></a>CommonsChunkPlugin</h2><blockquote><p><a href="https://segmentfault.com/a/1190000006871991" target="_blank" rel="external">webpack多页应用架构系列（三）：怎么打包公共代码才能避免重复？</a></p><p><a href="http://blog.csdn.net/github_26672553/article/details/52280655" target="_blank" rel="external">用webpack的CommonsChunkPlugin提取公共代码的3种方式</a></p></blockquote><p><strong>智能判断并打包公共代码</strong>。</p><p>CommonsChunkPlugin的效果是：在你的多个页面（入口）所引用的代码中，找出其中满足条件（被多少个页面引用过）的代码段，判定为公共代码并打包成一个独立的js文件。至此，你只需要在每个页面都加载这个公共代码的js文件，就可以既保持代码的完整性，又不会重复下载公共代码了（多个页面间会共享此文件的缓存）。</p><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><ul><li><code>name</code>，包含公共代码的chunk的名称（唯一标识，不用加后缀）。</li><li><code>filename</code>，如何命名打包后生产的js文件，也可以用<code>[name]</code>、<code>[hash]</code>、<code>[chunkhash]</code>这些，同<code>output.filename</code></li><li><code>minChunks</code>，公共代码的判断标准：某个js模块被多少个chunk加载了才算是公共代码。</li><li><code>chunks</code>，表示需要在哪些chunk（也可以理解为webpack配置中entry的每一项）里寻找公共代码进行打包。不设置此参数则默认提取范围为所有的chunk。</li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">new</span> webpack.optimize.CommonsChunkPlugin(&#123;</div><div class="line">    <span class="attr">name</span>: <span class="string">'commons'</span>,<span class="comment">// 公共代码的chunk名为'commons'</span></div><div class="line">    filename: <span class="string">'commons/[name].bundle.js'</span>, <span class="comment">// 生成后的文件名</span></div><div class="line">    minChunks: <span class="number">4</span>, <span class="comment">// 设定要有4个chunk（即4个页面）加载的js模块才会被纳入公共代码。</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure><p>CommonsChunkPlugin 也可以使用多次，这样可以多不同的页面抽取不同的commons</p><p><strong><a href="https://github.com/webpack/webpack/tree/master/examples/multiple-commons-chunks" target="_blank" rel="external">multiple-commons-chunks</a></strong></p><h3 id="抽取公共代码，并分离第三方库（如Vue）"><a href="#抽取公共代码，并分离第三方库（如Vue）" class="headerlink" title="抽取公共代码，并分离第三方库（如Vue）"></a>抽取公共代码，并分离第三方库（如Vue）</h3><p><a href="https://fakefish.github.io/react-webpack-cookbook/Split-app-and-vendors.html" target="_blank" rel="external">https://fakefish.github.io/react-webpack-cookbook/Split-app-and-vendors.html</a></p><h2 id="DllPlugin"><a href="#DllPlugin" class="headerlink" title="DllPlugin"></a><code>DllPlugin</code></h2><blockquote><p><a href="https://github.com/webpack/docs/wiki/list-of-plugins" target="_blank" rel="external">https://github.com/webpack/docs/wiki/list-of-plugins</a></p><p><a href="https://segmentfault.com/a/1190000007104372" target="_blank" rel="external">webpack多页应用架构系列（十一）：预打包Dll，实现webpack音速编译</a></p></blockquote><p>输出 “dll” 包. Dll 不会执行你的模块中的任何代码，他们只是包含这些模块. 一个 dll 包会导出一个函数，这个函数可以通过 id 被用于 “require” 模块 (内部require函数). 除此之外，一个manifest json 文件被写入到包含从真实请求到模块id的映射的指定位置。</p><p>结合此插件与<code>output.library</code> 配置，可暴露一个 dll 函数，即进去全局范围。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">new</span> DllPlugin(&#123;</div><div class="line">  <span class="attr">path</span>: path.join(__dirname, <span class="string">"manifest.json"</span>),</div><div class="line">  <span class="attr">name</span>: <span class="string">"[name]_[hash]"</span>,</div><div class="line">  <span class="attr">context</span>: __dirname</div><div class="line">&#125;)</div></pre></td></tr></table></figure><ul><li><code>path</code>: 指向manifest json 文件的<strong>绝对路径</strong> (输出)</li><li><code>name</code>: 暴露的dll函数的名称（与<code>output.library</code>保持一致）</li><li><code>context</code> （可选）：清单文件中的请求的上下文，默认为webpack上下文</li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">output: &#123;</div><div class="line">        <span class="attr">path</span>: path.join(__dirname, <span class="string">"js"</span>),</div><div class="line">        <span class="attr">filename</span>: <span class="string">"MyDll.[name].js"</span>,</div><div class="line">        <span class="attr">library</span>: <span class="string">"[name]_[hash]"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">plugins</span>: [</div><div class="line">        <span class="keyword">new</span> webpack.DllPlugin(&#123;</div><div class="line">            <span class="attr">path</span>: path.join(__dirname, <span class="string">"js"</span>, <span class="string">"[name]-manifest.json"</span>),</div><div class="line">            <span class="attr">name</span>: <span class="string">"[name]_[hash]"</span> <span class="comment">//与`output.library`保持一致</span></div><div class="line">        &#125;)</div><div class="line">    ]</div></pre></td></tr></table></figure><h2 id="DllReferencePlugin"><a href="#DllReferencePlugin" class="headerlink" title="DllReferencePlugin"></a><code>DllReferencePlugin</code></h2><p>引用一个预期可用的dll函数。清单文件可以用于将名称映射到可通过此dll函数访问的模块标识。</p><p>可以用来使用由<code>DllPlugin</code> 创建的 dll bundle + manifest 。</p><p>可用于两种不同的模式：</p><ul><li><p><strong>Scoped mode</strong></p><p>dll的内容可以在模块前缀下访问。即有<code>scope = &quot;xyz&quot;</code>时，可以通过<code>require(&quot;xyz/abc&quot;)</code>访问dll中的一个文件<code>abc</code>。</p></li><li><p><strong>Mapped mode</strong></p><p>dll的内容被映射到当前目录。如果所需的文件与dll中的文件匹配（解析后），则使用dll中的文件。注意：因为这发生在解析后，每个在dll中的文件必须也被在同一路径的dll用户使用。即如果dll包含<code>jquery</code>和文件<code>abc</code>， <code>require(&quot;jquery&quot;)</code> 和 <code>require(&quot;./abc&quot;)</code> 将使用dll中的文件。</p></li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">new</span> DllReferencePlugin(&#123;</div><div class="line">  <span class="attr">context</span>: __dirname,</div><div class="line">  <span class="attr">scope</span>: <span class="string">"xyz"</span>,</div><div class="line">  <span class="attr">manifest</span>: <span class="built_in">require</span>(<span class="string">"./manifest.json"</span>),</div><div class="line">  <span class="attr">name</span>: <span class="string">"./my-dll.js"</span>,</div><div class="line">  <span class="attr">sourceType</span>: <span class="string">"commonsjs2"</span>,</div><div class="line">  <span class="attr">content</span>: &#123; ... &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure><ul><li><code>context</code>: (<strong>absolute path</strong>) 清单中请求的上下文（或内容属性）</li><li><code>scope</code> (optional): 用于访问dll中内容的前缀</li><li><code>manifest</code> (object): 包含 <code>content</code> 和 <code>name</code>的对象</li><li><code>name</code> (optional): dll所暴露的名称（默认为<code>manifest.name</code>）（另见<code>externals</code>）</li><li><code>sourceType</code> (optional): dll如何暴露的类型（默认为<code>&quot;var&quot;</code>）（另见<code>externals</code>）</li><li><code>content</code> (optional): 从请求到模块id的映射（默认为<code>manifest.content</code>）</li></ul><h4 id="通过-lt-script-gt-标签使用dll"><a href="#通过-lt-script-gt-标签使用dll" class="headerlink" title="通过 &lt;script&gt;标签使用dll"></a>通过 <code>&lt;script&gt;</code>标签使用dll</h4><p>Dll 包: <code>output.library = &quot;[name]_[hash]&quot;</code> <code>output.libraryTarget = &quot;var&quot;``DllPlugin.name = &quot;[name]_[hash]&quot;</code><br>Dll 使用者: <code>DllReferencePlugin.sourceType = &quot;var&quot;</code></p><h4 id="通过node-js使用dll"><a href="#通过node-js使用dll" class="headerlink" title="通过node.js使用dll"></a>通过node.js使用dll</h4><p>Dll 包: <code>output.libraryTarget = &quot;commonjs2&quot;</code></p><p>Dll 使用者: <code>DllReferencePlugin.sourceType = &quot;commonjs2&quot;</code> <code>DllReferencePlugin.name = &quot;./path/to/dll.js&quot;</code></p><h2 id="copy-webpack-plugin"><a href="#copy-webpack-plugin" class="headerlink" title="copy-webpack-plugin"></a>copy-webpack-plugin</h2><blockquote><p><a href="http://stackoverflow.com/questions/27639005/how-to-copy-static-files-to-build-directory-with-webpack" target="_blank" rel="external">http://stackoverflow.com/questions/27639005/how-to-copy-static-files-to-build-directory-with-webpack</a></p><p><a href="https://github.com/kevlened/copy-webpack-plugin" target="_blank" rel="external">https://github.com/kevlened/copy-webpack-plugin</a></p></blockquote><p>copy static files directly from <code>static</code> to <code>build</code> :</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> CopyWebpackPlugin = <span class="built_in">require</span>(<span class="string">'copy-webpack-plugin'</span>);</div><div class="line"></div><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">    <span class="attr">context</span>: path.join(__dirname, <span class="string">'your-app'</span>),</div><div class="line">    <span class="attr">plugins</span>: [</div><div class="line">        <span class="keyword">new</span> CopyWebpackPlugin([</div><div class="line">            &#123; <span class="attr">from</span>: <span class="string">'static'</span> &#125;</div><div class="line">        ])</div><div class="line">    ]</div><div class="line">&#125;;</div></pre></td></tr></table></figure><blockquote><p>或者使用<code>file-loader</code></p><p>html 文件:</p><p>webpack.config.js :</p></blockquote><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">    ...</div><div class="line">    module: &#123;</div><div class="line">        <span class="attr">loaders</span>: [</div><div class="line">            &#123; <span class="attr">test</span>: <span class="regexp">/\.(html)$/</span>,</div><div class="line">              <span class="attr">loader</span>: <span class="string">"file?name=[path][name].[ext]&amp;context=./app/static"</span></div><div class="line">            &#125;</div><div class="line">        ]</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure><p>在 js 文件中:</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">require.context(&quot;./static/&quot;, true, /^\.\/.*\.html/);</div></pre></td></tr></table></figure><p><code>./static/</code>是相对于你的js文件的路径</p><blockquote><p>context 的设置：<a href="http://www.qinshenxue.com/article/20170315092242.html" target="_blank" rel="external">http://www.qinshenxue.com/article/20170315092242.html</a></p></blockquote><h3 id="实例：开发时引入本地-static文件夹中的css文件"><a href="#实例：开发时引入本地-static文件夹中的css文件" class="headerlink" title="实例：开发时引入本地 static文件夹中的css文件"></a>实例：开发时引入本地 static文件夹中的css文件</h3><blockquote><p>vue-cli-webpack 项目</p></blockquote><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>在 <code>webpack.dev.conf.js</code>配置文件中，配置CopyWebpackPlugin（项目的<code>webpack.prod.conf.js</code>中已经配置了此插件）</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</div><div class="line"><span class="keyword">var</span> CopyWebpackPlugin = <span class="built_in">require</span>(<span class="string">'copy-webpack-plugin'</span>)</div><div class="line"></div><div class="line"><span class="built_in">module</span>.exports = merge(baseWebpackConfig, &#123;</div><div class="line">    <span class="attr">context</span>: path.resolve(<span class="string">'./'</span>), <span class="comment">// 项目根目录、这样配置context就不需要修改 entry 中的app地址了</span></div><div class="line">    <span class="comment">// ... 其他配置</span></div><div class="line">    plugins: [</div><div class="line">       <span class="comment">// ... 其他插件</span></div><div class="line">        <span class="keyword">new</span> CopyWebpackPlugin([&#123;</div><div class="line">          <span class="attr">from</span>: path.resolve(<span class="string">'./static'</span>),</div><div class="line">          <span class="attr">ignore</span>: [<span class="string">'.*'</span>]</div><div class="line">        &#125;])</div><div class="line">    ]</div><div class="line">&#125;)</div></pre></td></tr></table></figure><h2 id="使用css"><a href="#使用css" class="headerlink" title="使用css"></a>使用css</h2><p>在<code>index.html</code>文件中的head部分</p><figure class="highlight html"><table><tr><td class="code"><pre><div class="line"><span class="comment">&lt;!--</span></div><div class="line">本地测试时：需要配合copy-webpack-plugin插件</div><div class="line">生产环境可以使用CDN</div><div class="line">--&gt;</div><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./static/css/font-awesome.min.css"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./static/css/iview.css"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./static/css/ol.css"</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="externals"><a href="#externals" class="headerlink" title="externals"></a>externals</h3><blockquote><p><a href="http://www.tangshuang.net/3343.html" target="_blank" rel="external">http://www.tangshuang.net/3343.html</a></p></blockquote><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">exports.externals = &#123;</div><div class="line">  <span class="attr">jquery</span>: <span class="string">'jQuery'</span>, <span class="comment">// require('jquery')</span></div><div class="line">  openlayers: <span class="string">'ol'</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><p><code>externals: {jquery: &#39;jQuery&#39;}</code>这个里面的jquery是指<code>require(&#39;jquery&#39;)</code>中的jquery，而jQuery就是上面代码中的红色字。简单翻译一下，就是说“当require的参数是jquery的时候，使用jQuery这个全局变量引用它”，你可以在<a href="https://webpack.js.org/configuration/externals/#string" target="_blank" rel="external">这里</a>详细阅读这句话：<em>jQuery in the externals indicates that your bundle will need jQuery variable in the global form</em>.。</p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[GRASS GIS 手册：快速入门]]></title>
      <url>houzw.github.io.git/2017/02/17/GRASS-GIS-%E6%89%8B%E5%86%8C%EF%BC%9A%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="GRASS-GIS快速入门"><a href="#GRASS-GIS快速入门" class="headerlink" title="GRASS GIS快速入门"></a>GRASS GIS快速入门</h1><blockquote><p>原文地址 <a href="https://grass.osgeo.org/grass72/manuals/helptext.html" target="_blank" rel="external">https://grass.osgeo.org/grass72/manuals/helptext.html</a></p></blockquote><h2 id="地理资源分析支持系统"><a href="#地理资源分析支持系统" class="headerlink" title="地理资源分析支持系统"></a>地理资源分析支持系统</h2><p>GRASS GIS，通常被称为GRASS（地理资源分析支持系统），是一个免费的地理信息系统（GIS）软件，用于地理空间数据管理和分析，图像处理，图形/地图制作，空间建模和可视化。GRASS GIS目前用于世界各地的学术和商业环境，以及许多政府机构和环境咨询公司。GRASS GIS是开源地理空间基金会（OSGeo）的官方项目。</p><h2 id="1-GRASS-GIS的图形启动"><a href="#1-GRASS-GIS的图形启动" class="headerlink" title="1. GRASS GIS的图形启动"></a>1. GRASS GIS的图形启动</h2><p><em>对于基于文本的启动，请参阅下文。</em></p><p><a href="https://grass.osgeo.org/grass72/manuals/grass7.html" target="_blank" rel="external">启动</a> GRASS GIS之后，将打开开始屏幕：</p><p><img src="https://grass.osgeo.org/grass72/manuals/grass_start.png" alt="[GRASS GIS开始屏幕]"></p><p><img src="https://grass.osgeo.org/grass72/manuals/circle_1.png" alt="[（1）]"> 选择GIS数据库目录</p><p>GRASS 数据存储在称为<strong>数据库</strong> DATABASE（也称为“GISDBASE”）的目录中。在开始使用GRASS之前，必须使用文件管理器或<code>mkdir</code> 命令创建此目录。在此数据库中，所有项目由存储在名为<strong>LOCATION</strong>的子目录中的项目区组织。</p><blockquote><p>若安装时选择下载示例数据，则其位置在Windows下的<code>C:\Users\[username]\Documents\grassdata</code></p></blockquote><p><img src="https://grass.osgeo.org/grass72/manuals/circle_2.png" alt="[（2）]"> 选择LOCATION（位置、地点，即一个项目）</p><p>一个LOCATION由其坐标系，地图投影和地理边界定义。当GRASS首次使用新的LOCATION启动时，将自动创建定义LOCATION的子目录和文件。重要的是要了解每个投影都保存在自己的LOCATION中。</p><p>请参阅“位置向导” <img src="https://grass.osgeo.org/grass72/manuals/circle_4.png" alt="[（4）]">，通过定义参数或选择相应的EPSG投影代码，从地理编码文件中轻松创建新的LOCATION。</p><p><img src="https://grass.osgeo.org/grass72/manuals/circle_3.png" alt="[（3）]"> 选择MAPSET（地图集，一个子项目）</p><p>每个LOCATION可以有多个MAPSET。每个MAPSET是LOCATION的子目录。可以在GRASS启动时添加新的MAPSET（见相关按钮）。</p><p><img src="https://grass.osgeo.org/grass72/manuals/circle_4.png" alt="[（4）]"> 位置向导 Location Wizard</p><p>“位置向导”让您轻松创建新的LOCATION。通过一系列对话框，您将被引导去浏览和选择预定义的投影（也是通过EPSG代码）或定义单个投影。您还可以从具有地理参考的数据文件（例如，SHAPE文件或GeoTIFF，请参见下文）轻松创建新的LOCATION。下面还找到一些规则来定义新的LOCATION的默认栅格分辨率。</p><p><img src="https://grass.osgeo.org/grass72/manuals/circle_5.png" alt="[（5）]"> 启动GRASS</p><p>一旦你选择了一个现有的LOCATION / MAPSET或定义了一个新的LOCATION / MAPSET后，你就可以进入GRASS了。系统将打开图形用户界面 <a href="https://grass.osgeo.org/grass72/manuals/wxGUI.html" target="_blank" rel="external">wxGUI</a>并为您提供菜单系统，地图可视化工具，数字化仪等功能。</p><h2 id="2-背景：GRASS-GIS的位置（Location-）结构"><a href="#2-背景：GRASS-GIS的位置（Location-）结构" class="headerlink" title="2.背景：GRASS GIS的位置（Location ）结构"></a>2.背景：GRASS GIS的位置（Location ）结构</h2><p><strong>LOCATION</strong>只是包含项目的GRASS数据的一组目录。在每个LOCATION内，存在一个<strong>包含投影信息</strong>和一些更多定义的<strong>强制性</strong>的名为“<strong>PERMANENT</strong>”的 <strong>MAPSET</strong>。它可以用来存储基础制图，因为<strong>“PERMANENT”对所有访问LOCATION的用户都可见</strong>。<img src="https://grass.osgeo.org/grass72/manuals/help_loc_struct.png" alt="[GRASS GIS位置结构]"></p><p><em>图1：GRASS GIS 7位置结构</em></p><h3 id="创建和维护MAPSET"><a href="#创建和维护MAPSET" class="headerlink" title="创建和维护MAPSET"></a>创建和维护MAPSET</h3><p>保持不同MAPSET的一个动机是存储与项目主题或子区域相关的地图。另一个动机是支持多个用户同时访问存储在相同LOCATION中的地图图层，即在同一项目上工作的团队。对于团队，将在共享网络文件系统（例如NFS）中定义集中式的GRASS DATABASE。除了访问他/她自己的MAPSET之外，每个用户还可以读取其他用户的MAPSET中的地图层，但是他/她只能修改或移除他/她自己的MAPSET中的地图层。</p><p>您可以在 <a href="https://grass.osgeo.org/grass72/manuals/g.mapsets.html" target="_blank" rel="external">g.mapsets</a>文档中了解更多有关地图集，以及如何无缝地访问存储在同一LOCATION其他MAPSET中地图的信息。</p><h3 id="“PERMANENT”-MAPSET的角色"><a href="#“PERMANENT”-MAPSET的角色" class="headerlink" title="“PERMANENT” MAPSET的角色"></a>“PERMANENT” MAPSET的角色</h3><p>当创建新的LOCATION时，GRASS GIS会自动创建一个名为 <strong><em>PERMANENT</em></strong> 的特殊MAPSET，其中可以存储项目的核心数据。“<strong><em>PERMANENT</em></strong>” MAPSET中的数据只能由<strong><em>PERMANENT</em></strong> MAPSET的所有者添加，修改或删除; 然而，他们可以被其他用户访问，分析和复制到他们自己的MAPSET中。“<strong><em>PERMANENT</em></strong>” MAPSET可用于提供通用的空间数据（例如高程模型），与数据库所有者在同一LOCATION中工作的所有用户都可访问但不能写入（write-protected）。要操作或向<strong><em>PERMANENT</em></strong>添加数据，所有者需要启动GRASS并选择相关的 LOCATION 和“<strong><em>PERMANENT</em></strong>” MAPSET。此地图集还包含DEFAULT_WIND文件，该文件包含LOCATION的默认区域边界坐标值（所有用户在开始使用此数据库时都将继承）。此外，在所有地图集中都保存了一个WIND文件，用于存储当前边界坐标值和当前选择的栅格分辨率。用户可以随时切换回默认区域。</p><h2 id="3-使用示例数据创建GRASS数据库"><a href="#3-使用示例数据创建GRASS数据库" class="headerlink" title="3.使用示例数据创建GRASS数据库"></a>3.使用示例数据创建GRASS数据库</h2><h3 id="创建GRASS数据库："><a href="#创建GRASS数据库：" class="headerlink" title="创建GRASS数据库："></a>创建GRASS数据库：</h3><ul><li><p>在磁盘上找到你拥有写入访问权限且有足够磁盘空间来容纳空间数据的位置。</p></li><li><p>创建一个将保存通用GRASS数据库的子目录（例如使用文件管理器或使用<code>mkdir /data/grassdata</code>或 <code>mkdir /home/yourlogin/grassdata</code>命令）。诸如“北卡罗来纳”或“Spearfish”样本数据集的样本数据可以从 <a href="http://grass.osgeo.org/download/sample-data/" target="_blank" rel="external">http://grass.osgeo.org/download/sample-data/</a> 下载，并且将压缩数据包提取到该新数据库目录。</p><p>现在，您可以在GRASS GIS启动屏幕（请参阅上文）中选择一个示例数据集并启动会话。</p></li></ul><h2 id="4-使用位置向导创建新位置（LOCATION）"><a href="#4-使用位置向导创建新位置（LOCATION）" class="headerlink" title="4.使用位置向导创建新位置（LOCATION）"></a>4.使用位置向导创建新位置（LOCATION）</h2><p><a href="https://grass.osgeo.org/grass72/manuals/wxGUI.html" target="_blank" rel="external">wxGUI</a> 图形用户界面提供了一个图形化的“位置向导”，它可以让你轻松地为自己的数据创建新位置。您将被引导通过一系列对话框浏览和选择预定义的投影（也通过EPSG代码）或定义单个投影。如上所述的定义分辨率的规则也适用于此。</p><p><em>提示：您可以从有地理参考的数据文件（例如，正确包含相关元数据的SHAPE文件或GeoTIFF文件）轻松创建新的LOCATION。在这种情况下，系统会询问是否应将数据本身导入到新的LOCATION。然后，一个默认的区域将被设置以匹配导入的地图，一个GRASS GIS会话将被打开。</em></p><p>定义新的LOCATION后，wxGUI将自动启动。如果数据已导入，您可以立即将它们添加到图层管理器并显示它们。如果您的LOCATION是空的，你可以从菜单中导入数据：进入“文件” - &gt;“导入栅格/矢量数据”（另见相关Wiki页面<a href="http://grasswiki.osgeo.org/wiki/Importing_data" target="_blank" rel="external">导入数据</a>）。</p><h2 id="5-基于文本的启动和LOCATION创建"><a href="#5-基于文本的启动和LOCATION创建" class="headerlink" title="5.基于文本的启动和LOCATION创建"></a>5.基于文本的启动和LOCATION创建</h2><p>GRASS GIS 完全可以在不使用图形用户界面的情况下运行。首次启动时，必须遵循以下步骤：</p><blockquote><p>使用命令之前，需将 grass 安装目录加入系统环境变量，并注意GRASS版本。如果是7.0.x，则命令是 <code>grass70</code><br></p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">&gt;   # 命令基本语法</div><div class="line">&gt;   grass70 [-h | -help | --help] [-v | --version] [-c | -c geofile | -c EPSG:code[:datum_trans]]</div><div class="line">&gt;           [-e] [-text | -gtext | -gui] [--config param] [[[&lt;GISDBASE&gt;/]&lt;LOCATION_NAME&gt;/]&lt;MAPSET&gt;]</div><div class="line">&gt;</div></pre></td></tr></table></figure><p></p></blockquote><ol><li><p>像上面说的一样创建GRASS GIS数据库。</p></li><li><p>创建新位置 <strong><code>mylocation</code></strong> ，包括其默认的 PERMANENT 地图集，无需输入新位置：</p><ul><li><p>使用EPSG代码：</p><p><code>grass72 -e -c EPSG:32630 /home/user/grassdata/mylocation</code></p></li><li><p>使用有地理参考的栅格或矢量文件：</p><p><code>grass72 -e -c MyGeoReferenceFile.tif /home/user/grassdata/mylocation</code></p><blockquote><p><strong><code>-e</code></strong> 表示创建Location或 mapset 之后立即退出。只能和<code>-c</code> 一起使用</p><p><strong><code>-c EPSG:code</code></strong> 表示在指定的数据库目录下面，利用给定的EPSG代码创建GRASS项目</p><p><strong><code>-c geofile</code></strong> 表示在指定的数据库目录下面，基于指定的地理参考文件创建GRASS项目</p></blockquote></li></ul></li><li><p>在新位置创建新的地图集，并在该地图集内启动GRASS GIS：</p><p><code>grass72 -c /home/user/grassdata/mylocation/mymapset</code></p></li></ol><h2 id="进一步阅读"><a href="#进一步阅读" class="headerlink" title="进一步阅读"></a>进一步阅读</h2><p>请查看GRASS GIS网站的教程和书籍：<a href="http://grass.osgeo.org/documentation/" target="_blank" rel="external">http//grass.osgeo.org/documentation/</a>。</p><p><em><a href="https://grass.osgeo.org/grass72/manuals/index.html" target="_blank" rel="external">GRASS GIS 7 Reference Manual</a></em></p><p><em><a href="https://grass.osgeo.org/grass72/manuals/grass7.html" target="_blank" rel="external">GRASS GIS 7 startup program manual page – 命令行启动说明</a></em></p><p><a href="http://epsg.io/" target="_blank" rel="external">EPSG代码列表</a>（全球坐标系数据库）</p><p>原文日期：2016-10-02 06:11:41 -0700（星期日，2016十二月2016）</p><p><a href="https://grass.osgeo.org/grass72/manuals/index.html" target="_blank" rel="external">索引</a> | <a href="https://grass.osgeo.org/grass72/manuals/topics.html" target="_blank" rel="external">主题</a> | <a href="https://grass.osgeo.org/grass72/manuals/keywords.html" target="_blank" rel="external">关键词</a> | <a href="https://grass.osgeo.org/grass72/manuals/graphical_index.html" target="_blank" rel="external">图形索引</a> | <a href="https://grass.osgeo.org/grass72/manuals/full_index.html" target="_blank" rel="external">全部索引</a></p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Webpack - 从入门到放弃 - 多页面]]></title>
      <url>houzw.github.io.git/2017/02/16/Webpack-%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%83-%E5%A4%9A%E9%A1%B5%E9%9D%A2/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="Webpack-多页面"><a href="#Webpack-多页面" class="headerlink" title="Webpack 多页面"></a>Webpack 多页面</h1><p>要点：</p><ul><li>entry 配置</li><li>HtmlWebpackPlugin 配置</li><li>​</li></ul><p><code>var HtmlWebpackPlugin = require(&#39;html-webpack-plugin&#39;);</code></p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Webpack：从入门到放弃]]></title>
      <url>houzw.github.io.git/2017/02/15/Webpack-%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%83/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="Webpack：从入门到放弃"><a href="#Webpack：从入门到放弃" class="headerlink" title="Webpack：从入门到放弃"></a>Webpack：从入门到放弃</h1><blockquote><p>参照：<a href="http://www.pro-react.com/materials/appendixA/" target="_blank" rel="external">Appendix A: Webpack for React</a></p><p>资源：<strong><a href="https://github.com/webpack-contrib/awesome-webpack" target="_blank" rel="external">awesome-webpack</a></strong></p><p><a href="https://techblog.toutiao.com/2017/02/28/webpack/" target="_blank" rel="external">webpack前端构建性能优化策略小结</a></p></blockquote><h2 id="使用NPM安装"><a href="#使用NPM安装" class="headerlink" title="使用NPM安装"></a>使用NPM安装</h2><p>全局安装</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">npm install -g webpack</div></pre></td></tr></table></figure><p>或，安装为项目开发依赖</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">npm install --save-dev webpack</div></pre></td></tr></table></figure><h2 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h2><ul><li><p>创建项目文件夹</p></li><li><p>运行<code>npm init</code> ，生成<code>package.json</code> 配置文件</p></li><li><p>为了便于分享项目，最好安装 webpack 为项目依赖：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">npm install --save-dev webpack</div></pre></td></tr></table></figure></li><li><p>项目结构：</p><p>+– webpack-demo</p><p>| +– app</p><p>| `– main.js (或 index.js )</p><p>| `– Greeter.js (模块文件)</p><p>| +– public (或 dist )</p><p>| `– index.html</p><p>`– package.json (项目配置文件)</p><p>`– webpack.config.js (webpack配置文件)</p></li></ul><h2 id="无配置文件webpack-config-js-时"><a href="#无配置文件webpack-config-js-时" class="headerlink" title="无配置文件webpack.config.js 时"></a>无配置文件webpack.config.js 时</h2><ul><li><p>编写 Greeter.js 和 main.js 和 index.html 文件，内容参考 <a href="http://www.pro-react.com/materials/appendixA/" target="_blank" rel="external">Appendix A: Webpack for React</a> （下同）</p></li><li><p>运行命令行 ：基本格式 ： <strong><code>webpack {entry file} {destination for bundled file}</code></strong></p><ul><li>未全局安装 webpack 时：<code>node_modules/.bin/webpack app/main.js public/bundle.js</code></li><li><p>全局安装 webpack 时：<code>webpack app/main.js public/bundle.js</code></p><p>自动处理模块依赖并生成 bundle.js文件，打开index.html可浏览</p></li></ul></li></ul><h2 id="配置文件webpack-config-js"><a href="#配置文件webpack-config-js" class="headerlink" title="配置文件webpack.config.js"></a>配置文件webpack.config.js</h2><blockquote><p><a href="https://github.com/webpack/docs/wiki/configuration" target="_blank" rel="external">https://github.com/webpack/docs/wiki/configuration</a></p></blockquote><h3 id="最简配置"><a href="#最简配置" class="headerlink" title="最简配置"></a>最简配置</h3><ul><li><p>最简单的配置文件如下：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">4<span class="attr">entry</span>: __dirname + <span class="string">"/app/main.js"</span>, <span class="comment">//or /app/index.js</span></div><div class="line">4output: &#123;</div><div class="line">44<span class="attr">path</span>: __dirname + <span class="string">"/public"</span>, <span class="comment">//or /dist</span></div><div class="line">44filename: <span class="string">"bundle.js"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><blockquote><p><code>__dirname</code>是一个 node.js 的全局变量，表示当前所执行的脚本（此处是 webpack.config.js）所在的目录</p><p>entry：可以是字符串、数组、对象。数组时，输出最后一个；对象时(配置输出多个文件)，output的filename需要使用<code>[name].js</code>或<code>[id].js</code>形式以生成对应的文件</p><p>path：生成文件的本地目录，绝对路径</p><p>publicPath：html 文件中 href 和 src 的引用路径，可以和path一样，也可以不一样，例如 CDN 地址</p></blockquote></li><li><p>运行命令：<code>webpack</code> 或 <code>node_modules/.bin/webpack</code> ，实现与命令<code>webpack app/main.js public/bundle.js</code> 相同的效果</p><blockquote><p>此时不能再使用<code>webpack app/main.js public/bundle.js</code> 命令，否则会重复生成）</p></blockquote></li></ul><h3 id="添加任务快捷方式"><a href="#添加任务快捷方式" class="headerlink" title="添加任务快捷方式"></a>添加任务快捷方式</h3><p>执行类似<code>node_modules/.bin/webpack</code> 的命令繁琐且容易出错。幸运的是，NPM可以作为任务执行器使用。通过在<code>package.json</code>中的<code>scripts</code> 属性中配置命令，可以简化任务的运行：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">&#123;</div><div class="line">4<span class="string">"name"</span>: <span class="string">"webpack-demo"</span>,</div><div class="line">4<span class="string">"scripts"</span>: &#123;</div><div class="line">44<span class="string">"start"</span>: <span class="string">"node_modules/.bin/webpack"</span></div><div class="line">4&#125;,</div><div class="line">4<span class="string">"devDependencies"</span>: &#123;</div><div class="line">44<span class="string">"webpack"</span>: <span class="string">"^2.2.1"</span></div><div class="line">4&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>然后可以通过<code>npm start</code>命令实现执行<code>node_modules/.bin/webpack</code> 的效果</p><p>脚本可以写多个，基本运行语法是： <strong><code>npm run {script name}</code></strong> 上例中是 <code>npm run start</code> (<code>npm start</code>是<code>npm run start</code>在NPM中的简写形式。但最好不用简写形式。不是所有 script 都可以简写？)</p><p>详细使用说明参看：<a href="http://www.ruanyifeng.com/blog/2016/10/npm_scripts.html" target="_blank" rel="external">npm scripts 使用指南</a></p><h3 id="生成source-maps"><a href="#生成source-maps" class="headerlink" title="生成source maps"></a>生成source maps</h3><p>Webpack 配置中有很多选项，其中最重要和最常用的配置之一就是 source map 配置。</p><p>将项目的 js 模块打包到一个单独的 bundle.js 文件给代码在浏览器运行带来许多的优势。但是一个典型的缺陷是，<strong>当你在浏览器中debug时，你无法对应到原始的 js 代码文件。你无法确定 bug 存在于哪一个源文件，也就无法确定是谁的代码出现了bug，从而难以修改。</strong> 一个 source map 文件提供了一种将打包后的代码映射到源代码文件的途径，<strong>使得代码具备可读性且易于调试。</strong></p><p>source map 配置使用webpack的<code>devtool</code>属性，其值可以是<code>source-map</code>、<code>cheap-module-source-map</code>、<code>eval-source-map</code>、<code>cheap-module-eval-source-map</code> ，各选项对项目 build 的速度是由慢到快（source-map选项build最慢），但浏览器执行 Javascript 时是由快到慢（source-map选项生成的Javascript代码执行最快）。</p><p>对于中小型项目，选择<code>eval-source-map</code>最优</p><blockquote><p><a href="http://webpack.github.io/docs/configuration.html#devtool" target="_blank" rel="external">http://webpack.github.io/docs/configuration.html#devtool</a>)</p></blockquote><h3 id="Webpack-开发服务器"><a href="#Webpack-开发服务器" class="headerlink" title="Webpack 开发服务器"></a>Webpack 开发服务器</h3><p>Webpack 拥有一个可选的用于本地开发的服务器。其是一个小的node express 应用，提供静态文件服务并根据 Webpack 配置 build 你的资源文件（样式、脚本、html等），将它们驻存到内存中，且当你修改源文件时可以自动刷新浏览器。</p><p>此服务器是一个独立的NPM模块，应该安装为项目依赖。</p><p>安装命令： <strong><code>npm install --save-dev webpack-dev-server</code></strong></p><p>开发服务器也可以单独的<code>devserver</code>入口配置到项目的<code>webpack.config.js</code> 中</p><table><thead><tr><th style="text-align:left">devserver setting</th><th>Description</th></tr></thead><tbody><tr><td style="text-align:left">contentBase</td><td><code>webpack-dev-server</code> 默认为项目根目录下的文件提供服务。如果想要修改服务目录（例如只将public文件夹内的内容加载到服务器。这样其他目录就不能使用dev-server的服务了），需要明确配置此属性</td></tr><tr><td style="text-align:left">port</td><td>访问端口，默认“8080”.</td></tr><tr><td style="text-align:left">inline</td><td>Set to “true” to insert a small client entry to the bundle to refresh thepage on change.</td></tr><tr><td style="text-align:left">colors</td><td>为服务器运行时的控制台输出着色</td></tr><tr><td style="text-align:left">historyApiFallback</td><td>Useful during the development of single page applications that make use of the HTML5 history API. When set to “true”, all requests tothe webpack-dev-server that do not map to an existing asset will insteadby routed straight to /, that is, the index.html file.</td></tr></tbody></table><p>此时的Webpack配置如下：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">    <span class="attr">devtool</span>: <span class="string">'eval-source-map'</span>,</div><div class="line">    <span class="attr">entry</span>: __dirname + <span class="string">"/app/main.js"</span>,</div><div class="line">    <span class="attr">output</span>: &#123;</div><div class="line">        <span class="attr">path</span>: __dirname + <span class="string">"/public"</span>,</div><div class="line">        <span class="attr">filename</span>: <span class="string">"bundle.js"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">devServer</span>: &#123;</div><div class="line">        <span class="attr">contentBase</span>: <span class="string">"./public"</span>,</div><div class="line">        <span class="attr">colors</span>: <span class="literal">true</span>,</div><div class="line">        <span class="attr">historyApiFallback</span>: <span class="literal">true</span>,</div><div class="line">        <span class="attr">inline</span>: <span class="literal">true</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>运行命令：<code>webpack-dev-server</code> 或 <code>node_modules/.bin/webpack-dev-server</code></p><blockquote><p>或者为<code>webpack-dev-server</code>在<code>package.json</code>中配置<code>script</code></p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">&gt;   <span class="string">"scripts"</span>: &#123;</div><div class="line">&gt;   	<span class="string">"dev"</span>: <span class="string">"node_modules/.bin/webpack-dev-server --progress"</span></div><div class="line">&gt;   &#125;</div><div class="line">&gt;</div></pre></td></tr></table></figure><p>“<code>--progress</code>“ 参数只在命令行中起作用. 它在控制台中显示项目构建步骤</p></blockquote><h3 id="加载器-Loader"><a href="#加载器-Loader" class="headerlink" title="加载器 Loader"></a>加载器 Loader</h3><p>loader 是 Webpack 的核心概念之一。Webpack 本身只能处理 JavaScript 模块，如果要处理其他类型的文件，或者将当前浏览器不支持的Javascript 版本（如ES6）代码转换为支持版本的代码，就需要使用 loader 进行转换。Loader 可以理解为是模块和资源的转换器，它本身是一个函数，接受源文件作为参数，返回转换的结果。这样，我们就可以通过 <code>require</code> 来加载任何类型的模块或文件，比如 CoffeeScript、 JSX、 LESS 或图片。</p><blockquote><p>官方文档：<a href="https://webpack.js.org/concepts/loaders/" target="_blank" rel="external">https://webpack.js.org/concepts/loaders/</a></p><p>中文：<a href="http://webpackdoc.com/loader.html" target="_blank" rel="external">http://webpackdoc.com/loader.html</a></p></blockquote><p>Loaders 需要独立安装且配置在<code>webpack.config.js</code>的 <code>module</code>属性之下。loader的配置包括：</p><ul><li><strong>test</strong>: 正则表达式，匹配需用此loader处理的文件的扩展名 (Required).</li></ul><ul><li><strong>loader</strong>: loader 的名称。旧版本可以省略<code>-loader</code>，如<code>coffee-loader</code>可以简写为<code>coffee</code>。但最新版本要求<strong>全称</strong>，不能省略 (Required).</li><li><strong>include / exclude</strong>: 指定包含或排除的文件夹/文件，Optional</li></ul><ul><li><strong>query</strong>: 给loader传递额外的设置选项</li></ul><p>安装loader：<code>npm install --save-dev css-loader</code>，</p><h4 id="配置loader实例："><a href="#配置loader实例：" class="headerlink" title="配置loader实例："></a>配置loader实例：</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="built_in">module</span>: &#123;</div><div class="line">    <span class="comment">// loaders是一个数组，每个元素都用来指定loader</span></div><div class="line">    loaders: [&#123;</div><div class="line">        <span class="attr">test</span>: <span class="regexp">/\.jade$/</span>,    <span class="comment">//test值为正则表达式，当文件路径匹配时启用</span></div><div class="line">        loader: <span class="string">'jade-loader'</span>,    <span class="comment">//指定使用什么loader，可以用字符串，也可以用数组</span></div><div class="line">        exclude: <span class="regexp">/regexp/</span>, <span class="comment">//可以使用exclude来排除一部分文件</span></div><div class="line">        <span class="comment">//可以使用query来指定参数，也可以在loader中用和require一样的用法指定参数，如`jade?p1=1`</span></div><div class="line">        query: &#123;</div><div class="line">            <span class="attr">p1</span>:<span class="string">'1'</span></div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    &#123;</div><div class="line">        <span class="attr">test</span>: <span class="regexp">/\.css$/</span>,</div><div class="line">        <span class="attr">loader</span>: <span class="string">'style-loader!css-loader'</span>    <span class="comment">//loader可以和require用法一样串联</span></div><div class="line">    &#125;,</div><div class="line">    &#123;</div><div class="line">        <span class="attr">test</span>: <span class="regexp">/\.css$/</span>,</div><div class="line">        <span class="attr">loaders</span>: [<span class="string">'style-loader'</span>, <span class="string">'css-loader'</span>]    <span class="comment">//也可以用数组指定loader</span></div><div class="line">    &#125;]</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="官网最新推荐配置（rules-取代-loaders）"><a href="#官网最新推荐配置（rules-取代-loaders）" class="headerlink" title="官网最新推荐配置（rules 取代 loaders）"></a>官网最新推荐配置（rules 取代 loaders）</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">  <span class="attr">module</span>: &#123;</div><div class="line">    <span class="attr">rules</span>: [</div><div class="line">      &#123;<span class="attr">test</span>: <span class="regexp">/\.css$/</span>, <span class="attr">use</span>: <span class="string">'css-loader'</span>&#125;,</div><div class="line">      &#123;<span class="attr">test</span>: <span class="regexp">/\.ts$/</span>, <span class="attr">use</span>: <span class="string">'ts-loader'</span>&#125;</div><div class="line">    ]</div><div class="line">  &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure><p><code>use</code>等价于<code>loader</code></p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">&#123;<span class="attr">test</span>: <span class="regexp">/\.css$/</span>, <span class="attr">loader</span>: <span class="string">'css-loader'</span>&#125;</div><div class="line"><span class="comment">// or equivalently</span></div><div class="line">&#123;<span class="attr">test</span>: <span class="regexp">/\.css$/</span>, <span class="attr">use</span>: <span class="string">'css-loader'</span>&#125;</div><div class="line"><span class="comment">// or equivalently</span></div><div class="line">&#123;<span class="attr">test</span>: <span class="regexp">/\.css$/</span>, <span class="attr">use</span>: &#123;</div><div class="line">  <span class="attr">loader</span>: <span class="string">'css-loader'</span>,</div><div class="line">  <span class="attr">options</span>: &#123;&#125;</div><div class="line">&#125;&#125;</div></pre></td></tr></table></figure><h4 id="或者在require时使用"><a href="#或者在require时使用" class="headerlink" title="或者在require时使用"></a>或者在require时使用</h4><p><code>require(&#39;style-loader!css-loader?modules!./styles.css&#39;);</code> ，其中<code>?modules</code> 是<code>css-loader</code>的参数，表示激活css modules（模块化css）处理。参数也可以使用JSON格式。</p><h4 id="在命令行中指定loader"><a href="#在命令行中指定loader" class="headerlink" title="在命令行中指定loader"></a>在命令行中指定loader</h4><p><code>webpack --module-bind jade --module-bind &#39;css=style!css&#39;</code></p><p>上述命令指定 <code>jade-loader</code> 处理<code>.jade</code> 文件, <a href="https://webpack.js.org/loaders/style-loader" target="_blank" rel="external"><code>style-loader</code></a> 和<a href="https://webpack.js.org/loaders/css-loader" target="_blank" rel="external"><code>css-loader</code></a> 处理<code>.css</code> 文件.</p><h4 id="多个Loader串联使用"><a href="#多个Loader串联使用" class="headerlink" title="多个Loader串联使用"></a>多个Loader串联使用</h4><p>如上面的<code>loader: &#39;style-loader!css-loader&#39;</code> 和<code>require(&#39;style-loader!css-loader?modules!./styles.css&#39;);</code></p><p>各个loader按<strong>从右到左</strong>的顺序处理对应的文件，并以<code>!</code> 分隔</p><h3 id="插件Plugins"><a href="#插件Plugins" class="headerlink" title="插件Plugins"></a>插件Plugins</h3><p><strong>与loaders的区别</strong>：</p><p>loader 处理每个源文件, 每次一个，当他们在Webpack构建过程中被 “loaded” 时.</p><p>Plugins 不处理单个文件，而是对整个项目在构建过程中产生影响.</p><p>Webpack中既有Webpack内建的插件，也有其他第三方插件。第三方插件在使用之前需要使用NPM安装，并且配置到<code>plugins</code>数组中：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> webpack = <span class="built_in">require</span>(<span class="string">'webpack'</span>);</div><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">    <span class="attr">devtool</span>: <span class="string">'eval-source-map'</span>,</div><div class="line">    <span class="attr">entry</span>: __dirname + <span class="string">"/app/main.js"</span>,</div><div class="line">    <span class="attr">output</span>: &#123;... &#125;,</div><div class="line">    <span class="attr">module</span>: &#123;</div><div class="line">        <span class="attr">loaders</span>: [</div><div class="line">            &#123; <span class="attr">test</span>: <span class="regexp">/\.json$/</span>, <span class="attr">loader</span>: <span class="string">"json"</span> &#125;,</div><div class="line">            &#123; <span class="attr">test</span>: <span class="regexp">/\.js$/</span>, <span class="attr">exclude</span>: <span class="regexp">/node_modules/</span>, <span class="attr">loader</span>: <span class="string">'babel'</span> &#125;,</div><div class="line">            &#123; <span class="attr">test</span>: <span class="regexp">/\.css$/</span>, <span class="attr">loader</span>: <span class="string">'style!css?modules!postcss'</span> &#125;</div><div class="line">        ]</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">postcss</span>: [</div><div class="line">        <span class="built_in">require</span>(<span class="string">'autoprefixer'</span>)</div><div class="line">    ],</div><div class="line">    <span class="attr">plugins</span>: [</div><div class="line">        <span class="keyword">new</span> webpack.BannerPlugin(<span class="string">"Copyright Flying Unicorns inc."</span>) <span class="comment">//在生成文件开头插入banner</span></div><div class="line">    ],</div><div class="line">    <span class="attr">devServer</span>: &#123;... &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><strong>注意</strong>： 新的webpack版本中，不能直接包含自定义配置项，需要配置到<code>webpack.LoaderOptionsPlugin</code>中</p><blockquote><p><a href="https://segmentfault.com/q/1010000006987956" target="_blank" rel="external">https://segmentfault.com/q/1010000006987956</a></p></blockquote><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">plugins: &#123;</div><div class="line">  <span class="keyword">new</span> webpack.LoaderOptionsPlugin(&#123;</div><div class="line">    <span class="attr">options</span>: &#123;</div><div class="line">      <span class="attr">postcss</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> [precss, autoprefixer];</div><div class="line">      &#125;,</div><div class="line">      <span class="attr">devServer</span>: &#123;</div><div class="line">        <span class="attr">contentBase</span>: <span class="string">"./public"</span>, <span class="comment">//本地服务器所加载的页面所在的目录</span></div><div class="line">        colors: <span class="literal">true</span>, <span class="comment">//终端中输出结果为彩色</span></div><div class="line">        historyApiFallback: <span class="literal">true</span>, <span class="comment">//不跳转</span></div><div class="line">        inline: <span class="literal">true</span> <span class="comment">//实时刷新</span></div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;)</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="模块热替换Hot-Module-Replacement"><a href="#模块热替换Hot-Module-Replacement" class="headerlink" title="模块热替换Hot Module Replacement"></a>模块热替换Hot Module Replacement</h3><p>Hot Module Replacement（HMR）使得在你修改资源文件之后，浏览器能够自动反映修改效果而无需刷新页面。</p><p>两处配置：</p><ol><li>添加 HotModuleReplacementPlugin 配置</li><li>在 Webpack Dev Server 配置中添加 “hot” 参数</li></ol><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">// var webpack = require('webpack');</span></div><div class="line">plugins: [</div><div class="line">        <span class="keyword">new</span> webpack.HotModuleReplacementPlugin()</div><div class="line">    ],</div><div class="line"><span class="attr">devServer</span>: &#123;</div><div class="line">        <span class="attr">colors</span>: <span class="literal">true</span>,</div><div class="line">        <span class="attr">historyApiFallback</span>: <span class="literal">true</span>,</div><div class="line">        <span class="attr">inline</span>: <span class="literal">true</span>,</div><div class="line">        <span class="attr">hot</span>: <span class="literal">true</span></div><div class="line">    &#125;</div></pre></td></tr></table></figure><p>但对于 <strong>JavaScript modules 不能自动适合热替换处理</strong>（won’t be automatically eligible for hot replacement.）。</p><p>要使JavaScript modules适用于热替换，一种方式是在js模块文件中实现 Webpack 提供的 API.</p><p>另一种更实用的方式是: Using Babel.</p><h3 id="生产环境-产品环境配置"><a href="#生产环境-产品环境配置" class="headerlink" title="生产环境/产品环境配置"></a>生产环境/产品环境配置</h3><p>生产环境通常比开发环境多一些额外的需求，如 <strong>优化、压缩、缓存</strong> 以及 <strong>分离css和js文件</strong>等。</p><p>上述配置中，所有配置选项都在一个单独的<code>webpack.config.js</code>中。为了更好地组织项目资源和更清晰的区分生产和开发环境，通常将二者的配置分离，单独形成一个<code>webpack.prod.config.js</code>。</p><p><code>webpack.prod.config.js</code>与<code>webpack.config.js</code>相比，不需要配置devtool, devServer 和 Hot Module Replacement 等开发时才需要的内容。</p><p>而在<code>package.json</code>文件中，我们需要添加一个script：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="string">"scripts"</span>: &#123;</div><div class="line">4<span class="string">"start"</span>: <span class="string">"node_modules/.bin/webpack-dev-server --progress"</span>,</div><div class="line">4<span class="string">"build"</span>: <span class="string">"NODE_ENV=production node_modules/.bin/webpack –config ./webpack.production.config.js --progress"</span></div><div class="line">&#125;,</div></pre></td></tr></table></figure><p>但如果我们在“start” 中也添加 <code>NODE_ENV=development</code> 的话，Windows下可能报错，此时可以使用<code>cross-env</code> 解决跨平台设置NODE_ENV的问题。</p><blockquote><p><a href="https://segmentfault.com/a/1190000005811347" target="_blank" rel="external">使用cross-env解决跨平台设置NODE_ENV的问题</a></p></blockquote><p>此时的配置为（注意先安装 ：<code>npm i cross-env --save-dev</code> ）：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="string">"scripts"</span>: &#123;</div><div class="line">4<span class="string">"start"</span>: <span class="string">"cross-env NODE_ENV=development node_modules/.bin/webpack-dev-server --progress"</span>,</div><div class="line">4<span class="string">"build"</span>: <span class="string">"cross-env NODE_ENV=production node_modules/.bin/webpack –config ./webpack.production.config.js --progress"</span></div><div class="line">&#125;,</div></pre></td></tr></table></figure><hr><p>如果不分开两个配置，可以参考如下配置（使用vue-cli生成）</p><p><code>package.json</code>中</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="string">"scripts"</span>: &#123;</div><div class="line">    <span class="string">"dev"</span>: <span class="string">"cross-env NODE_ENV=development webpack-dev-server --inline --open --hot"</span>,</div><div class="line">    <span class="string">"build"</span>: <span class="string">"cross-env NODE_ENV=production webpack --progress --hide-modules"</span></div><div class="line">  &#125;,</div></pre></td></tr></table></figure><p><code>webpack.config.js</code>中</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">//module.exports = &#123;&#125; 之后。module.exports = &#123;&#125; 中按照开发环境配置</span></div><div class="line"><span class="keyword">if</span> (process.env.NODE_ENV === <span class="string">'production'</span>) &#123;</div><div class="line">    <span class="built_in">module</span>.exports.devtool = <span class="string">'#source-map'</span></div><div class="line">        <span class="comment">// http://vue-loader.vuejs.org/en/workflow/production.html</span></div><div class="line">    <span class="built_in">module</span>.exports.plugins = (<span class="built_in">module</span>.exports.plugins || []).concat([</div><div class="line">        <span class="keyword">new</span> webpack.DefinePlugin(&#123;</div><div class="line">            <span class="string">'process.env'</span>: &#123;</div><div class="line">                <span class="attr">NODE_ENV</span>: <span class="string">'"production"'</span></div><div class="line">            &#125;</div><div class="line">        &#125;),</div><div class="line">        <span class="keyword">new</span> webpack.optimize.UglifyJsPlugin(&#123;</div><div class="line">            <span class="attr">sourceMap</span>: <span class="literal">true</span>,</div><div class="line">            <span class="attr">compress</span>: &#123;</div><div class="line">                <span class="attr">warnings</span>: <span class="literal">false</span></div><div class="line">            &#125;</div><div class="line">        &#125;),</div><div class="line">        <span class="keyword">new</span> webpack.LoaderOptionsPlugin(&#123;</div><div class="line">            <span class="attr">minimize</span>: <span class="literal">true</span></div><div class="line">        &#125;)</div><div class="line">    ])</div><div class="line">&#125;</div></pre></td></tr></table></figure><hr><p>生产环境常用插件：</p><ul><li>UglifyJsPlugin – js文件压缩</li><li>ExtractTextPlugin 将requires/imports的css单独输出为css文件，从而将其从js文件中抽离</li></ul><p>使用：</p><ol><li>首先安装<code>npm install --save-dev extract-text-webpack-plugin</code></li><li>修改<code>webpack.prod.config.js</code>配置：</li></ol><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> webpack = <span class="built_in">require</span>(<span class="string">'webpack'</span>);</div><div class="line"><span class="keyword">var</span> ExtractTextPlugin = <span class="built_in">require</span>(<span class="string">'extract-text-webpack-plugin'</span>);</div><div class="line"></div><div class="line"><span class="comment">//in  rules  or loaders </span></div><div class="line">&#123;</div><div class="line">4<span class="attr">test</span>: <span class="regexp">/\.css$/</span>,</div><div class="line">4<span class="attr">loader</span>: ExtractTextPlugin.extract(<span class="string">'style-loader'</span>, <span class="string">'css-loader?modules!postcss'</span>)</div><div class="line">&#125;,</div><div class="line">&#123;</div><div class="line">  <span class="attr">test</span>: <span class="regexp">/\.less$/</span>,</div><div class="line">   <span class="attr">loader</span>: ExtractTextPlugin.extract(<span class="string">'css-loader!less-loader'</span>)</div><div class="line">&#125;</div><div class="line"><span class="comment">//plugins</span></div><div class="line">plugins: [</div><div class="line">4<span class="keyword">new</span> webpack.optimize.OccurenceOrderPlugin(),</div><div class="line">4<span class="keyword">new</span> webpack.optimize.UglifyJsPlugin(),</div><div class="line">4<span class="keyword">new</span> ExtractTextPlugin(<span class="string">"style.css"</span>) <span class="comment">//提取为style.css文件</span></div><div class="line">]</div></pre></td></tr></table></figure><h3 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h3><p>一个简单有效的缓存方法是，使用<strong>基于内容的唯一的文件名</strong>。当文件内容发生改变时，文件名相应地发生改变，这样远程客户端会保留一份内容的副本而只去请求发生变化的内容（新的文件名的内容）。</p><p>只需简单配置，Webpack 就可以在生成的文件名中添加 hash 值</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">output: &#123;</div><div class="line">4<span class="attr">path</span>: __dirname + <span class="string">"/build"</span>,</div><div class="line">4<span class="attr">filename</span>: <span class="string">"[name]-[hash].js"</span></div><div class="line">&#125;,</div><div class="line">  </div><div class="line">  <span class="comment">//in plugins</span></div><div class="line">  <span class="keyword">new</span> ExtractTextPlugin(<span class="string">"[name]-[hash].css"</span>)</div></pre></td></tr></table></figure><p>或者使用插件</p><blockquote><p><a href="http://www.cnblogs.com/yangmin01/p/6290595.html" target="_blank" rel="external">http://www.cnblogs.com/yangmin01/p/6290595.html</a></p></blockquote><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">// 该插件是对“webpack-md5-hash”的改进：在主文件中获取到各异步模块的hash值，然后将这些hash值与主文件的代码内容一同作为计算hash的参数，这样就能保证主文件的hash值会跟随异步模块的修改而修改。</span></div><div class="line"><span class="keyword">var</span> WebpackSplitHash = <span class="built_in">require</span>(<span class="string">'webpack-split-hash'</span>);</div><div class="line"></div><div class="line"><span class="comment">//在 output 中</span></div><div class="line"><span class="comment">//以文件内容的MD5生成Hash名称的script来防止缓存</span></div><div class="line"> filename: <span class="string">'js/[name].[chunkhash:8].js'</span>,</div><div class="line"><span class="comment">//异步加载的模块是要以文件形式加载，生成的文件名是以chunkFilename配置的</span></div><div class="line"> chunkFilename: <span class="string">'js/[name].[chunkhash:8].js'</span></div></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MapServer之安装和基本使用]]></title>
      <url>houzw.github.io.git/2017/01/18/MapServer%E4%B9%8B%E5%AE%89%E8%A3%85%E5%92%8C%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="MapServer之安装和基本使用"><a href="#MapServer之安装和基本使用" class="headerlink" title="MapServer之安装和基本使用"></a>MapServer之安装和基本使用</h1><blockquote><p><a href="http://mapserver.org/" target="_blank" rel="external">http://mapserver.org/</a></p></blockquote><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>MapServer 是一个发布空间数据和网络交互式地图制图应用的开源平台。最早在1990年代中期于 University of Minnesota 开发, MapServer 基于 <a href="http://mapserver.org/copyright.html#license" target="_blank" rel="external">MIT-style license</a> 发布, 可以运行在主流的操作系统上 (<a href="http://mapserver.org/download.html#windows" target="_blank" rel="external">Windows</a>, <a href="http://mapserver.org/download.html#linux" target="_blank" rel="external">Linux</a>, <a href="http://mapserver.org/download.html#osx" target="_blank" rel="external">Mac OS X</a>). MapServer不是一个全功能的GIS系统，其目标不在于此.</p><p>MapServer当前最新版为 7.0.4，可前往<a href="http://mapserver.org/" target="_blank" rel="external">官方网站</a>的<a href="http://mapserver.org/download.html" target="_blank" rel="external">下载</a>页面下载源码或<a href="http://mapserver.org/pdf/MapServer.pdf" target="_blank" rel="external">文档</a>. 针对Windows系统目前有4个二进制版本：<a href="http://www.ms4w.com/" target="_blank" rel="external">MS4W</a>、<a href="http://trac.osgeo.org/osgeo4w/" target="_blank" rel="external">OSGeo4W</a>、<a href="http://fwtools.maptools.org/" target="_blank" rel="external">FWTools</a>、<a href="http://www.gisinternals.com/sdk/" target="_blank" rel="external">Gisinternals</a></p><h2 id="MS4W安装使用"><a href="#MS4W安装使用" class="headerlink" title="MS4W安装使用"></a>MS4W安装使用</h2><p><strong>建议使用二进制安装包形式</strong></p><blockquote><p><a href="http://wenku.baidu.com/link?url=YPJUiyDuMOsywGZALxiSXdWwg7iXWTB4bcjDoneictGA_Q3PF1tA0EetYqUCA2SFH2hrjlREqp6pXSuKDsjOOzhs9SD5WGk8Wc9Blz6u7sBha_GrkCkBmYgVTuBMZ74o" target="_blank" rel="external">百度文库-MapServer的安装和使用</a></p><p><a href="http://www.ms4w.com/documentation.html" target="_blank" rel="external">官方文档</a>、或下载的安装包中的<code>README_INSTALL.html</code></p></blockquote><p>ms4w基本包里面包括以下内容：</p><ul><li>Apache version 2.4.20</li><li>PHP version 5.4.45</li><li>MapServer 7.0.1 CGI and MapScript (PHP)</li><li>GDAL 2.1.0</li><li>MapCache 1.4.1</li><li>mapserver utilities</li><li>gdal/ogr utilities</li><li>proj.4 utilities</li><li>shp2tile utility</li><li>shapelib utilities</li><li>shpdiff utility</li><li>avce00 utilities</li><li>spatialite utilities</li><li>unixutils</li><li>OWTChart 1.2.0</li><li>H264 Streaming Module for Apache</li></ul><h3 id="从旧版本升级"><a href="#从旧版本升级" class="headerlink" title="从旧版本升级"></a>从旧版本升级</h3><ol><li>打开一个<strong>DOS窗口</strong>（不要只是双击），切换到ms4w所在目录，执行<code>apache-uninstall.bat</code>，停止和移除之前的 Apache 服务。</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">The &quot;Apache MS4W Web Server&quot; service is stopping.</div><div class="line">The &quot;Apache MS4W Web Server&quot; service has stopped.</div><div class="line"></div><div class="line">Removing the &quot;Apache MS4W Web Server&quot; service</div><div class="line">The &quot;Apache MS4W Web Server&quot; service has been removed</div><div class="line">successfully.</div></pre></td></tr></table></figure><ol><li><p>备份你的旧的ms4w文件夹（或直接删除）</p></li><li><p>将下载的压缩包解压到相应的目录，如<code>C:/ms4w</code></p></li><li><p>在DOS中执行<code>apache-install.bat</code>，安装 MS4W Apache Web Server。此操作将Apache服务安装为Windows服务，这样可以设置Apache随机器一起启动。如下出现下述信息，说明安装成功</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">Installing the Apache MS4W Web Server service</div><div class="line">The Apache MS4W Web Server service is successfully installed.</div><div class="line">Testing httpd.conf....</div><div class="line">Errors reported here must be corrected before the service</div><div class="line">can be started.</div><div class="line">The Apache MS4W Web Server service is starting.</div><div class="line">The Apache MS4W Web Server service was started successfully.</div></pre></td></tr></table></figure></li><li><p>浏览器访问<code>http://localhost/</code> 或 <code>http://127.0.0.1/</code> 测试是否启动</p></li><li><p>可能的错误：不能绑定到 80 端口</p></li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">(OS 10013)以一种访问权限不允许的方式做了一个访问套接字的尝试。  : AH00072: make_sock: could not bind to address 0.0.0.0:80</div><div class="line">AH00451: no listening sockets available, shutting down</div><div class="line">AH00015: Unable to open logs</div><div class="line">Apache MS4W Web Server 服务正在启动 .</div><div class="line">Apache MS4W Web Server 服务无法启动。</div><div class="line"></div><div class="line">发生服务特定错误: 1.</div><div class="line"></div><div class="line">请键入 NET HELPMSG 3547 以获得更多的帮助。</div></pre></td></tr></table></figure><p>这是因为系统的<strong>80 端口被占用了</strong>（<code>netstat -aon | findstr 80</code>查看端口占用，<code>tasklist |findstr 4</code>查看进程）。通过以下方法可以解除占用<a href="http://www.imooc.com/article/4423" target="_blank" rel="external">^1</a>:</p><ul><li>打开注册表，在cmd下输入：<code>regedit</code>。</li><li>找到：<code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\HTTP</code>。</li><li>在右边找到<code>Start</code>这一项，将其改为0。</li><li>重启系统，System进程不会占用80端口。</li></ul><p>或者，修改Apache的默认端口80为8008（或其他未被使用的端口）：</p><ul><li>打开<code>ms4w\Apache\conf\httpd.conf</code>文件，找到58行<code>Listen 80</code>，修改为<code>Listen 8008</code></li></ul><p>再次执行<code>apache-install.bat</code>（必要时需要先<code>apache-uninstall.bat</code>、以管理员身份启动DOS命令行），将会看到服务启动成功的信息。</p><p>打开浏览器访问<code>http://localhost:8008/</code> （如果未修改Apache默认端口，则地址为<code>http://localhost</code>）会看到 <em>MS4W - MapServer 4 Windows - version 3.1.4</em></p><blockquote><p>若 ms4w 不是安装在磁盘的根目录，则需要进行配置。同时需要避免安装到包含空格的目录</p><p>在<code>/ms4w/Apache/conf/httpd.conf</code>、<code>/ms4w/Apache/cgi-bin/php.ini</code> 、<code>/ms4w/Apache/cgi-bin/php.ini</code> 、<code>/ms4w/setenv.bat</code> 文件中找到 <code>/ms4w/</code>替换为你的安装目录(如 “/Temp/ms4w/”)</p></blockquote><h3 id="应用组件"><a href="#应用组件" class="headerlink" title="应用组件"></a>应用组件</h3><p>如果安装时（exe安装）选择了Mapbender 、Openlayers等组件，则在页面的Applications下面会有Mapbender 、OpenLayers 等组件的相关链接。</p><p>如果没有选择安装组件，可以访问组件页面 <a href="http://www.ms4w.com/release/apps/" target="_blank" rel="external">http://www.ms4w.com/release/apps/</a> 获取独立的组件包，下载后解压（解压到当前文件夹）到MS4W的<strong>根目录</strong> (如, <code>C:/</code>，不是<code>C:/ms4w</code>目录下). 解压之后，</p><ul><li>相应应用的目录（如 ms-ogc-workshop）会出现在<code>/ms4w/apps/</code>目录下</li><li>一个新的<code>httpd_*.conf</code>文件会添加到<code>/ms4w/httpd.d/</code> 目录下. 如<code>/ms4w/httpd.d/httpd_ms_ogc_workshop.conf</code></li></ul><p>(<code>/httpd.d/</code>目录包含了Apache 的配置文件。这些配置文件决定了你计算机/服务器上哪些文件是可以通过web访问的。 每一个安装到Apache的web应用都会有一个新的配置文件.)</p><ul><li>重启Apache服务（apache-restart.bat），然后就可以在Applications发现其链接了。</li></ul><p>访问<code>http://127.0.0.1:8008/cgi-bin/mapserv.exe</code> 会出现 <em>No query information to decode. QUERY_STRING is set, but empty.</em></p><h3 id="全新安装"><a href="#全新安装" class="headerlink" title="全新安装"></a>全新安装</h3><p>如果是zip包形式安装，从上述第三步开始操作。若是使用二进制文件exe安装，双击exe文件，并选择需要的组件和安装目录即可安装，不需要手动执行<code>apache-install.bat</code>，同时ms4w会在开始菜单和桌面生成快捷方式（如果选择生成的话）</p><h2 id="MapScript配置"><a href="#MapScript配置" class="headerlink" title="MapScript配置"></a>MapScript配置</h2><blockquote><p>完整内容参考 <a href="https://ms4w.com/README_INSTALL.html#mapscript-configuration" target="_blank" rel="external">https://ms4w.com/README_INSTALL.html#mapscript-configuration</a></p></blockquote><p>MS4W &gt;= 1.5.0 包括了内置的对C#、Java和Python的支持。它们需要进行一些配置才能使用。</p><h4 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h4><p>首先需要安装Python，目前只支持 3.5.x (2018最新版本) （3.1.4 支持的是 2.7）</p><blockquote><p>v3.2.7 中，支持的python 依然是2.7</p></blockquote><h5 id="安装-Python-Mapscript-支持文件"><a href="#安装-Python-Mapscript-支持文件" class="headerlink" title="安装 Python Mapscript 支持文件"></a>安装 Python Mapscript 支持文件</h5><ul><li>只能与 ms4w 一起使用<ul><li>将 <code>/ms4w/Apache/cgi-bin/mapscript/python/mapscript*win32.zip</code> 解压到一个安全的目录（safe location）</li><li>在解压后的目录中切换到 <code>/Python-2.7.11/Lib/site-packages</code>，在目录中会发现4个文件：<ul><li>_mapscript.pyd</li><li>mapscript.py</li><li>mapscript.pyc</li><li><code>mapscript-&lt;version&gt;-py2.7.egg-info</code></li></ul></li><li>将4个文件拷贝到 <code>/ms4w/Apache/cgi-bin</code> 目录</li><li>将所需运行的 python cgi scripts 放到 ms4w 的 <code>/ms4w/Apache/cgi-bin</code> 目录, 并且在每一个脚本的顶部加上一行 “shebang” 行. 具体信息往下看 <strong>配置Apache运行Python脚本</strong> 部分的内容。</li></ul></li><li>系统级访问<ul><li>解压<code>/ms4w/Apache/cgi-bin/mapscript/python/mapscript*win32.zip</code></li><li><code>/Python-2.7.11/Lib/site-packages</code> 目录，发现三个文件：<ul><li>_mapscript.pyd</li><li>mapscript.py</li><li>mapscript.pyc</li></ul></li><li>将上述文件拷贝到你安装Python 2.7.x 的目录下的<code>site-packages</code>目录，如<code>C:/Python27/Lib/site-packages</code></li><li>添加<code>&lt;drive_letter&gt;:/ms4w/Apache/cgi-bin</code> 到系统的 PYTHONPATH 环境变量.</li></ul></li></ul><h4 id="配置Apache运行Python脚本"><a href="#配置Apache运行Python脚本" class="headerlink" title="配置Apache运行Python脚本"></a>配置Apache运行Python脚本</h4><h5 id="通过shebang-行"><a href="#通过shebang-行" class="headerlink" title="通过shebang 行"></a>通过shebang 行</h5><p>当你的机器上安装有多个Python时，推荐此方法。</p><p>在 <code>/ms4w/apache/cgi-bin</code>中的每个 python cgi 脚本顶部添加 “shebang line” ，必须是首行，且必须是<code>#!</code>后跟你系统中的Python可执行文件路径. 如:</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">#!c:/python27/python.exe -u</div></pre></td></tr></table></figure><p>The <code>-u</code> option shown above causes the script to use unbuffered output, which is generally what you need in web-serving contexts.</p><h5 id="通过-Apache-directives（指令）"><a href="#通过-Apache-directives（指令）" class="headerlink" title="通过 Apache directives（指令）"></a>通过 Apache directives（指令）</h5><p>#####测试</p><ul><li>将文件<code>/ms4w/gdalbindings/python/test-cgi-mapscript.py</code> 移到 <code>/ms4w/Apache/cgi-bin/</code></li><li>用文本编辑器打开，添加（修改）shebang 行，如<code>#!C:\Python27\ArcGIS10.1\python.exe -u</code></li><li>打开 <a href="http://127.0.0.1:8008/cgi-bin/test-cgi-mapscript.py" target="_blank" rel="external">http://127.0.0.1:8008/cgi-bin/test-cgi-mapscript.py</a> （确保Apache已启动）</li><li></li></ul><h2 id="FastCGI"><a href="#FastCGI" class="headerlink" title="FastCGI"></a>FastCGI</h2><p>为使用 FastCGI 你必须进行如下操作:</p><ol><li><p>在文本编辑器中打开 <code>/ms4w/Apache/conf/httpd.conf</code></p></li><li><p>取消<code>#178</code>的注释, 如:</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">LoadModule fcgid_module modules/mod_fcgid.so</div></pre></td></tr></table></figure></li><li><p>文件底部会看到 “<code>&lt;IfModule fcgid_module&gt;</code>” 部分. 若想使用 FastCGI 指令， (listed on the <a href="http://httpd.apache.org/mod_fcgid/mod/mod_fcgid.html" target="_blank" rel="external">mod_fcgid</a> page) 你可以取消这部分内容的注释并添加自己的指令 directives, 如:</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">&lt;IfModule fcgid_module&gt;</div><div class="line">   FcgidMinProcessesPerClass 0</div><div class="line">   FcgidIdleScanInterval 1</div><div class="line">   FcgidProcessLifeTime 10</div><div class="line">&lt;/IfModule&gt;</div></pre></td></tr></table></figure></li><li><p>如需要使用FastCGI连接 Oracle 数据库, 必须添加 Oracle Bin 目录 (文件 ‘oci.dll’ 所在目录) 到上面的 PATH 变量, 如:</p><figure class="highlight coffeescript"><table><tr><td class="code"><pre><div class="line">&lt;IfModule fcgid_module&gt;</div><div class="line">    ...</div><div class="line">    FcgidInitialEnv PATH <span class="string">"c:/oracle/product/10.2.0/client/BIN"</span></div><div class="line">    ...</div><div class="line">&lt;/IfModule&gt;</div></pre></td></tr></table></figure></li><li><p>保存并重启Apache (执行/ms4w/apache-restart.bat)</p></li><li><p>将 CGI 应用指向<code>/fcgi-bin/mapserv.exe</code>而不是之前的<code>/cgi-bin/mapserv.exe</code></p></li><li><p>添加下述参数到 想要使用 FastCGI 连接的图层 layer:</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">PROCESSING &quot;CLOSE_CONNECTION=DEFER&quot;</div></pre></td></tr></table></figure></li><li><p>试用一下. 若成功的话，你可以在Windows Task Manager中看到，在与应用交互时， “mapserv.exe”进程是打开的</p></li></ol><p>Notes:</p><ul><li>in testing this was successful with PostgreSQL 9.0.4 / PostGIS 1.5.2, and with Oracle 10.2.0.1.0.</li><li>general MapServer and FastCGI notes can be found in the <a href="http://www.mapserver.org/optimization/fastcgi.html" target="_blank" rel="external">FastCGI Howto</a>.</li></ul><h2 id="MapCache-Apache-模块"><a href="#MapCache-Apache-模块" class="headerlink" title="MapCache Apache 模块"></a>MapCache Apache 模块</h2><p>The MapCache Apache module and the mapcache_seed.exe utility (as of MS4W 3.1.0) are included. In order to use the MapCache Apache module you must do the following:</p><ol><li><p>Open /ms4w/Apache/conf/httpd.conf in a text editor</p></li><li><p>Uncomment line#180, and change to your correct path, such as:</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">LoadModule mapcache_module &quot;C:/ms4w/Apache/cgi-bin/mod_mapcache.dll&quot;</div></pre></td></tr></table></figure></li><li><p>Around line#408 of your httpd.conf file you will see a “<ifmodule mapcache_module="">” section. Modify the path to the included MapCache configuration (XML) file, such as:</ifmodule></p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">&lt;IfModule mapcache_module&gt;</div><div class="line">   &lt;Directory &quot;/ms4w/apps/mapcache/&quot;&gt;</div><div class="line">      AllowOverride None</div><div class="line">      Options None</div><div class="line">      Require all granted</div><div class="line">   &lt;/Directory&gt;</div><div class="line">   MapCacheAlias /mapcache &quot;C:/ms4w/apps/mapcache/mapcache.xml&quot;</div><div class="line">&lt;/IfModule&gt;</div></pre></td></tr></table></figure></li><li><p>Modify the mapcache.xml file. Please see the associated <a href="http://www.mapserver.org/mapcache/config.html" target="_blank" rel="external">MapCache docs</a> for assistance.</p></li></ol><ol><li><p>Save your httpd.conf file and restart apache (execute /ms4w/apache-restart.bat)</p></li><li><p>If the module was successfully loaded your /ms4w/Apache/logs/error.log file should contain a message similar to:</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">[notice] Apache/2.4.18 (Win32) mod-mapcache/1.4.1 configured</div><div class="line">-- resuming normal operations</div></pre></td></tr></table></figure></li><li><p>Test your MapCache configuration by following steps in the associated <a href="http://www.mapserver.org/mapcache/install.html#test-your-mapcache-module" target="_blank" rel="external">MapCache testing docs</a></p></li><li><p>The <a href="http://www.mapserver.org/mapcache/seed.html" target="_blank" rel="external">MapCache seeding utility</a> is also included. To run the mapcache_seed.exe file be sure to first execute the /ms4w/setenv.bat file in your command window.</p></li></ol><p>Notes:</p><ul><li><p>this module was tested with the cache types: disk, sqlite, tiff, and berkeleyDB. You should follow the <a href="http://www.mapserver.org/mapcache/caches.html" target="_blank" rel="external">MapCache Cache Types docs</a> for assistance, or contact <a href="http://www.gatewaygeomatics.com/" target="_blank" rel="external">Gateway Geomatics</a> for assistance/custom builds/configurations.</p></li><li><p>the module was tested on Windows 7 and Vista; if you are using an older version of Windows and require this module you should consider upgrading, or contact <a href="http://www.gatewaygeomatics.com/" target="_blank" rel="external">Gateway Geomatics</a> for assistance/custom builds/configurations. .</p></li><li><p>as this module is still in development, feedback is more than encouraged, it is required. Please send your MapCache questions to the <a href="http://www.mapserver.org/community/lists.html#mapserver-users" target="_blank" rel="external">MapServer-users mailing list</a>. You are also encouraged to contact Gateway Geomatics <a href="mailto:info%40gatewaygeomatics.com" target="_blank" rel="external">directly</a> for custom builds and to help fund the development and maintenance of MS4W.</p></li></ul><h2 id="使用-Python-GDAL模块"><a href="#使用-Python-GDAL模块" class="headerlink" title="使用 Python GDAL模块"></a>使用 Python GDAL模块</h2><p>Note:</p><blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">&gt;   Python 2.6 is required for the Python GDAL module in</div><div class="line">&gt;   MS4W, and you must have C:/python26 in your PATH to use</div><div class="line">&gt;   the utilities.</div><div class="line">&gt;</div></pre></td></tr></table></figure></blockquote><p>Python GDAL 模块及其工具类位于 <code>/ms4w/python/gdal/</code>. 使用方法:</p><ol><li>打开命令行窗口</li><li>切换到 ms4w 目录</li><li>setenv.bat</li><li>执行Python工具，如:</li></ol><blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">&gt;   gdal_merge.py</div><div class="line">&gt;</div></pre></td></tr></table></figure></blockquote><p>gdal_merge.py notes:</p><ul><li>-n (nodata_value) switch requires the NumPy module <a href="http://numpy.scipy.org/" target="_blank" rel="external">http://numpy.scipy.org/</a></li><li>raster_copy_with_nodata() also requires the NumPy module</li></ul><h2 id="Password-Protection-Configuration-for-Applications"><a href="#Password-Protection-Configuration-for-Applications" class="headerlink" title="Password Protection Configuration for Applications"></a>Password Protection Configuration for Applications</h2><p>The following section explains how to add password authentication to your MS4W application. However there are many other possible settings in Apache for this, so please consult the Apache HTTP Server documentation.</p><p>Here are the minimal steps for password protection:</p><ol><li><p>Modify your application’s httpd_xxx.conf file, so that “AllowOverride None” is replaced with “AllowOverride AuthConfig”, such as:</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">Alias /gmap/ &quot;/ms4w/apps/gmap/htdocs/&quot;</div><div class="line"></div><div class="line">&lt;Directory &quot;/ms4w/apps/gmap/htdocs/&quot;&gt;</div><div class="line">  AllowOverride AuthConfig</div><div class="line">  Options Indexes FollowSymLinks Multiviews</div><div class="line">  Order allow,deny</div><div class="line">  Allow from all</div><div class="line">&lt;/Directory&gt;</div></pre></td></tr></table></figure></li><li><p>Create a password file.</p><ul><li><p>open a DOS command window, and go to Apache’s bin directory</p></li><li><p>enter the following (replace “jeff” with the username you want to create, press ENTER and you will be prompted for a password to create):</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">C:/ms4w/Apache/bin&gt; htpasswd -c htpasswd.txt jeff</div></pre></td></tr></table></figure></li></ul></li><li><p>创建 htaccess 文件.</p><ul><li><p>create a file in your application directory (/ms4w/apps/gmap/htdocs/ in this example) named ‘.htaccess’</p></li><li><p>the file should contain (you can modify it however you wish though):</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">AuthType Basic</div><div class="line">AuthUserFile C:/ms4w/Apache/bin/htpasswd.txt</div><div class="line">AuthName &quot;Password Required&quot;</div><div class="line"></div><div class="line">require valid-user</div></pre></td></tr></table></figure></li></ul></li><li><p>重启 Apache</p><ul><li>执行<code>/ms4w/apache-restart.bat</code></li></ul></li><li><p>Access your application in a web browser.</p></li></ol><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Crypto-js - Quick-start Guide]]></title>
      <url>houzw.github.io.git/2017/01/11/Crypto-js--Quick-start-Guide/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="Crypto-js-Quick-start-Guide"><a href="#Crypto-js-Quick-start-Guide" class="headerlink" title="Crypto-js - Quick-start Guide"></a>Crypto-js - Quick-start Guide</h1><blockquote><p><a href="https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/crypto-js/CryptoJS%20v3.1.2.zip" target="_blank" rel="external">Download Crypto-js from code.google</a></p><p><a href="https://code.google.com/archive/p/crypto-js/wikis/QuickStartGuide_v3beta.wiki" target="_blank" rel="external">This page in code.google</a></p><p><a href="http://www.davidebarranca.com/2012/10/crypto-js-tutorial-cryptography-for-dummies/" target="_blank" rel="external">CryptoJS Tutorial For Dummies</a></p><p><a href="https://blog.zhengxianjun.com/2015/05/javascript-crypto-js/" target="_blank" rel="external">JavaScript Crypto-JS 使用手册</a></p></blockquote><h2 id="哈希-Hashers"><a href="#哈希-Hashers" class="headerlink" title="哈希 Hashers"></a>哈希 Hashers</h2><h2 id="哈希算法-The-Hasher-Algorithms"><a href="#哈希算法-The-Hasher-Algorithms" class="headerlink" title="哈希算法 The Hasher Algorithms"></a>哈希算法 The Hasher Algorithms</h2><h4 id="MD5"><a href="#MD5" class="headerlink" title="MD5"></a>MD5</h4><p>MD5 is a widely used hash function. It’s been used in a variety of security applications and is also commonly used to check the integrity of files. Though, MD5 is not collision resistant, and it isn’t suitable for applications like SSL certificates or digital signatures that rely on this property.</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> hash = CryptoJS.MD5(<span class="string">"Message"</span>);</div></pre></td></tr></table></figure><h4 id="SHA-1"><a href="#SHA-1" class="headerlink" title="SHA-1"></a>SHA-1</h4><p>The SHA hash functions were designed by the National Security Agency (NSA). SHA-1 is the most established of the existing SHA hash functions, and it’s used in a variety of security applications and protocols. Though, SHA-1’s collision resistance has been weakening as new attacks are discovered or improved.</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> hash = CryptoJS.SHA1(<span class="string">"Message"</span>);</div></pre></td></tr></table></figure><h4 id="SHA-256"><a href="#SHA-256" class="headerlink" title="SHA-256"></a>SHA-256</h4><p>SHA-256 is one of the three variants in the SHA-2 set. It isn’t as widely used as SHA-1, though it appears to provide much better security.</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> hash = CryptoJS.SHA256(<span class="string">"Message"</span>);</div></pre></td></tr></table></figure><h3 id="The-Hasher-Input"><a href="#The-Hasher-Input" class="headerlink" title="The Hasher Input"></a>The Hasher Input</h3><p>The hash algorithms accept either strings or instances of CryptoJS.lib.WordArray. A WordArray object represents an array of 32-bit words. When you pass a string, it’s automatically converted to a WordArray encoded as UTF-8.</p><h3 id="The-Hasher-Output"><a href="#The-Hasher-Output" class="headerlink" title="The Hasher Output"></a>The Hasher Output</h3><p>The hash you get back isn’t a string yet. It’s a WordArray object. When you use a WordArray object in a string context, it’s automatically converted to a hex string.</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> hash = CryptoJS.SHA256(<span class="string">"Message"</span>); </div><div class="line">alert(<span class="keyword">typeof</span> hash); </div><div class="line"><span class="comment">// object alert(hash);</span></div><div class="line"><span class="comment">// 2f77668a9dfbf8d5848b9eeb4a7145ca94c6ed9236e4a773f6dcafa5132b2f91</span></div></pre></td></tr></table></figure><p>You can convert a WordArray object to other formats by explicitly calling the toString method and passing an encoder.<br></p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> hash = CryptoJS.SHA256(<span class="string">"Message"</span>); </div><div class="line">alert(hash.toString(CryptoJS.enc.Base64)); </div><div class="line"><span class="comment">// L3dmip37+NWEi57rSnFFypTG7ZI25Kdz9tyvpRMrL5E= </span></div><div class="line">alert(hash.toString(CryptoJS.enc.Latin1)); </div><div class="line"><span class="comment">// /wf��ûøÕ���ëJqEÊ�Æí�6ä§söÜ¯¥+/� </span></div><div class="line">alert(hash.toString(CryptoJS.enc.Hex)); </div><div class="line"><span class="comment">// 2f77668a9dfbf8d5848b9eeb4a7145ca94c6ed9236e4a773f6dcafa5132b2f91</span></div></pre></td></tr></table></figure><p></p><h4 id="Progressive-Hashing"><a href="#Progressive-Hashing" class="headerlink" title="Progressive Hashing"></a>Progressive Hashing</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> sha256 = CryptoJS.algo.SHA256.create(); </div><div class="line">sha256.update(<span class="string">"Message Part 1"</span>); </div><div class="line">sha256.update(<span class="string">"Message Part 2"</span>); </div><div class="line">sha256.update(<span class="string">"Message Part 3"</span>); </div><div class="line"><span class="keyword">var</span> hash = sha256.finalize();</div></pre></td></tr></table></figure><h3 id="HMAC"><a href="#HMAC" class="headerlink" title="HMAC"></a>HMAC</h3><p>Keyed-hash message authentication codes (HMAC) is a mechanism for message authentication using cryptographic hash functions.HMAC can be used in combination with any iterated cryptographic hash function.</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> hash = CryptoJS.HmacMD5(<span class="string">"Message"</span>, <span class="string">"Secret Passphrase"</span>); </div><div class="line"><span class="keyword">var</span> hash = CryptoJS.HmacSHA1(<span class="string">"Message"</span>, <span class="string">"Secret Passphrase"</span>); </div><div class="line"><span class="keyword">var</span> hash = CryptoJS.HmacSHA256(<span class="string">"Message"</span>, <span class="string">"Secret Passphrase"</span>);</div></pre></td></tr></table></figure><h4 id="Progressive-HMAC-Hashing"><a href="#Progressive-HMAC-Hashing" class="headerlink" title="Progressive HMAC Hashing"></a>Progressive HMAC Hashing</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> hmac = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, <span class="string">"Secret Passphrase"</span>); </div><div class="line">hmac.update(<span class="string">"Message Part 1"</span>); </div><div class="line">hmac.update(<span class="string">"Message Part 2"</span>); </div><div class="line">hmac.update(<span class="string">"Message Part 3"</span>); </div><div class="line"><span class="keyword">var</span> hash = hmac.finalize();</div></pre></td></tr></table></figure><h3 id="PBKDF2"><a href="#PBKDF2" class="headerlink" title="PBKDF2"></a>PBKDF2</h3><p>PBKDF2 is a password-based key derivation function. In many applications of cryptography, user security is ultimately dependent on a password, and because a password usually can’t be used directly as a cryptographic key, some processing is required.A salt provides a large set of keys for any given password, and an iteration count increases the cost of producing keys from a password, thereby also increasing the difficulty of attack.</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> salt = CryptoJS.lib.WordArray.random(<span class="number">128</span>/<span class="number">8</span>); </div><div class="line"><span class="keyword">var</span> key128Bits = CryptoJS.PBKDF2(<span class="string">"Secret Passphrase"</span>, salt, &#123; <span class="attr">keySize</span>: <span class="number">128</span>/<span class="number">32</span> &#125;); </div><div class="line"><span class="keyword">var</span> key256Bits = CryptoJS.PBKDF2(<span class="string">"Secret Passphrase"</span>, salt, &#123; <span class="attr">keySize</span>: <span class="number">256</span>/<span class="number">32</span> &#125;); </div><div class="line"><span class="keyword">var</span> key512Bits = CryptoJS.PBKDF2(<span class="string">"Secret Passphrase"</span>, salt, &#123; <span class="attr">keySize</span>: <span class="number">512</span>/<span class="number">32</span> &#125;); </div><div class="line"><span class="keyword">var</span> key512Bits1000Iterations = CryptoJS.PBKDF2(<span class="string">"Secret Passphrase"</span>, salt, &#123; <span class="attr">keySize</span>: <span class="number">512</span>/<span class="number">32</span>, <span class="attr">iterations</span>: <span class="number">1000</span> &#125;);</div></pre></td></tr></table></figure><h2 id="Ciphers"><a href="#Ciphers" class="headerlink" title="Ciphers"></a>Ciphers</h2><h3 id="The-Algorithms"><a href="#The-Algorithms" class="headerlink" title="The Algorithms"></a>The Algorithms</h3><h4 id="AES"><a href="#AES" class="headerlink" title="AES"></a>AES</h4><p>The Advanced Encryption Standard (AES) is a U.S. Federal Information Processing Standard (FIPS). It was selected after a 5-year process where 15 competing designs were evaluated.</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> encrypted = CryptoJS.AES.encrypt(<span class="string">"Message"</span>, <span class="string">"Secret Passphrase"</span>);</div><div class="line"><span class="keyword">var</span> decrypted = CryptoJS.AES.decrypt(encrypted, <span class="string">"Secret Passphrase"</span>);</div></pre></td></tr></table></figure><h4 id="DES-Triple-DES"><a href="#DES-Triple-DES" class="headerlink" title="DES, Triple DES"></a>DES, Triple DES</h4><p>DES is a previously dominant algorithm for encryption, and was published as an official Federal Information Processing Standard (FIPS). DES is now considered to be insecure due to the small key size.</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> encrypted = CryptoJS.DES.encrypt(<span class="string">"Message"</span>, <span class="string">"Secret Passphrase"</span>); </div><div class="line"><span class="keyword">var</span> decrypted = CryptoJS.DES.decrypt(encrypted, <span class="string">"Secret Passphrase"</span>);</div></pre></td></tr></table></figure><p>Triple DES applies DES three times to each block to increase the key size. The algorithm is believed to be secure in this form.<br></p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> encrypted = CryptoJS.TripleDES.encrypt(<span class="string">"Message"</span>, <span class="string">"Secret Passphrase"</span>); </div><div class="line"><span class="keyword">var</span> decrypted = CryptoJS.TripleDES.decrypt(encrypted, <span class="string">"Secret Passphrase"</span>);</div></pre></td></tr></table></figure><p></p><h4 id="Rabbit"><a href="#Rabbit" class="headerlink" title="Rabbit"></a>Rabbit</h4><p>Rabbit is a high-performance stream cipher and a finalist in the eSTREAM Portfolio. It is one of the four designs selected after a 3 1/2-year process where 22 designs were evaluated.</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> encrypted = CryptoJS.Rabbit.encrypt(<span class="string">"Message"</span>, <span class="string">"Secret Passphrase"</span>); </div><div class="line"><span class="keyword">var</span> decrypted = CryptoJS.Rabbit.decrypt(encrypted, <span class="string">"Secret Passphrase"</span>);</div></pre></td></tr></table></figure><h4 id="RC4-RC4Drop"><a href="#RC4-RC4Drop" class="headerlink" title="RC4, RC4Drop"></a>RC4, RC4Drop</h4><p>RC4 is a widely-used stream cipher. It’s used in popular protocols such as SSL and WEP. Although remarkable for its simplicity and speed, the algorithm’s history doesn’t inspire confidence in its security.</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> encrypted = CryptoJS.RC4.encrypt(<span class="string">"Message"</span>, <span class="string">"Secret Passphrase"</span>); </div><div class="line"><span class="keyword">var</span> decrypted = CryptoJS.RC4.decrypt(encrypted, <span class="string">"Secret Passphrase"</span>);</div></pre></td></tr></table></figure><p>It was discovered that the first few bytes of keystream are strongly non-random, and leak information about the key. We can defend against this attack by discarding the initial portion of the keystream. This modified algorithm is traditionally called RC4-drop.By default, 192 words (768 bytes) are dropped, but you can configure the algorithm to drop any number of words.<br></p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> encrypted = CryptoJS.RC4Drop.encrypt(<span class="string">"Message"</span>, <span class="string">"Secret Passphrase"</span>); </div><div class="line"><span class="keyword">var</span> encrypted = CryptoJS.RC4Drop.encrypt(<span class="string">"Message"</span>, <span class="string">"Secret Passphrase"</span>, &#123; <span class="attr">drop</span>: <span class="number">3072</span>/<span class="number">4</span> &#125;); </div><div class="line"><span class="keyword">var</span> decrypted = CryptoJS.RC4Drop.decrypt(encrypted, <span class="string">"Secret Passphrase"</span>, &#123; <span class="attr">drop</span>: <span class="number">3072</span>/<span class="number">4</span> &#125;);</div></pre></td></tr></table></figure><p></p><h4 id="Custom-Key-and-IV"><a href="#Custom-Key-and-IV" class="headerlink" title="Custom Key and IV"></a>Custom Key and IV</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> key = CryptoJS.enc.Hex.parse(<span class="string">'000102030405060708090a0b0c0d0e0f'</span>); </div><div class="line"><span class="keyword">var</span> iv = CryptoJS.enc.Hex.parse(<span class="string">'101112131415161718191a1b1c1d1e1f'</span>); </div><div class="line"><span class="keyword">var</span> encrypted = CryptoJS.AES.encrypt(<span class="string">"Message"</span>, key, &#123; <span class="attr">iv</span>: iv &#125;);</div></pre></td></tr></table></figure><h4 id="Block-Modes-and-Padding"><a href="#Block-Modes-and-Padding" class="headerlink" title="Block Modes and Padding"></a>Block Modes and Padding</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> encrypted = CryptoJS.AES.encrypt(<span class="string">"Message"</span>, <span class="string">"Secret Passphrase"</span>, &#123; <span class="attr">mode</span>: CryptoJS.mode.CFB, <span class="attr">padding</span>: CryptoJS.pad.AnsiX923 &#125;);</div></pre></td></tr></table></figure><p>CryptoJS supports the following modes:</p><ul><li>CBC (the default)</li><li>CFB</li><li>CTR</li><li>OFB</li><li>ECB</li></ul><p>And CryptoJS supports the following padding schemes:</p><ul><li>Pkcs7 (the default)</li><li>Iso97971</li><li>AnsiX923</li><li>Iso10126</li><li>ZeroPadding</li><li>NoPadding</li></ul><h3 id="The-Cipher-Input"><a href="#The-Cipher-Input" class="headerlink" title="The Cipher Input"></a>The Cipher Input</h3><p>For the plaintext message, the cipher algorithms accept either strings or instances of CryptoJS.lib.WordArray.</p><p>For the key, when you pass a string, it’s treated as a passphrase to derive an actual key and IV. Or you can pass a WordArray that represents the actual key. If you pass the actual key, you must also pass the actual IV.</p><p>For the ciphertext, the cipher algorithms accept either strings or instances of CryptoJS.lib.CipherParams. A CipherParams object represents a collection of parameters such as the IV, a salt, and the raw ciphertext itself. When you pass a string, it’s automatically converted to a CipherParams object according to a configurable format strategy.</p><h3 id="The-Cipher-Output"><a href="#The-Cipher-Output" class="headerlink" title="The Cipher Output"></a>The Cipher Output</h3><p>The plaintext you get back after decryption is a WordArray object. See Hashers’ Output for more detail.</p><p>The ciphertext you get back after encryption isn’t a string yet. It’s a CipherParams object. A CipherParams object gives you access to all the parameters used during encryption. When you use a CipherParams object in a string context, it’s automatically converted to a string according to a format strategy. The default is an OpenSSL-compatible format.</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> encrypted = CryptoJS.AES.encrypt(<span class="string">"Message"</span>, <span class="string">"Secret Passphrase"</span>); alert(encrypted.key); </div><div class="line"><span class="comment">// 74eb593087a982e2a6f5dded54ecd96d1fd0f3d44a58728cdcd40c55227522223 alert(encrypted.iv); </span></div><div class="line"><span class="comment">// 7781157e2629b094f0e3dd48c4d786115 alert(encrypted.salt); </span></div><div class="line"><span class="comment">// 7a25f9132ec6a8b34 alert(encrypted.ciphertext); </span></div><div class="line"><span class="comment">// 73e54154a15d1beeb509d9e12f1e462a0 alert(encrypted); </span></div><div class="line"><span class="comment">// U2FsdGVkX1+iX5Ey7GqLND5UFUoV0b7rUJ2eEvHkYqA=</span></div></pre></td></tr></table></figure><p>You can define your own formats in order to be compatible with other crypto implementations. A format is an object with two methods—stringify and parse—that converts between CipherParams objects and ciphertext strings.</p><p>Here’s how you might write a JSON formatter:</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> JsonFormatter = &#123;</div><div class="line">    <span class="attr">stringify</span>: <span class="function"><span class="keyword">function</span>(<span class="params">cipherParams</span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> jsonObj = &#123; <span class="attr">ct</span>: cipherParams.ciphertext.toString(CryptoJS.enc.Base64) &#125;;</div><div class="line">        <span class="keyword">if</span> (cipherParams.iv) &#123;</div><div class="line">            jsonObj.iv = cipherParams.iv.toString();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (cipherParams.salt) &#123;</div><div class="line">            jsonObj.s = cipherParams.salt.toString();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="built_in">JSON</span>.stringify(jsonObj);</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">parse</span>: <span class="function"><span class="keyword">function</span>(<span class="params">jsonStr</span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> jsonObj = <span class="built_in">JSON</span>.parse(jsonStr);</div><div class="line">        <span class="keyword">var</span> cipherParams = CryptoJS.lib.CipherParams.create(&#123;</div><div class="line">            <span class="attr">ciphertext</span>: CryptoJS.enc.Base64.parse(jsonObj.ct)</div><div class="line">        &#125;);</div><div class="line">        <span class="keyword">if</span> (jsonObj.iv) &#123; cipherParams.iv = CryptoJS.enc.Hex.parse(jsonObj.iv) &#125;</div><div class="line">        <span class="keyword">if</span> (jsonObj.s) &#123; cipherParams.salt = CryptoJS.enc.Hex.parse(jsonObj.s) &#125;</div><div class="line">        <span class="keyword">return</span> cipherParams;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"><span class="keyword">var</span> encrypted = CryptoJS.AES.encrypt(<span class="string">"Message"</span>, <span class="string">"Secret Passphrase"</span>, &#123; <span class="attr">format</span>: JsonFormatter &#125;);</div><div class="line">alert(encrypted);</div><div class="line"><span class="comment">// &#123;"ct":"tZ4MsEnfbcDOwqau68aOrQ==","iv":"8a8c8fd8fe33743d3638737ea4a00698","s":"ba06373c8f57179c"&#125; var decrypted = CryptoJS.AES.decrypt(encrypted, "Secret Passphrase", &#123; format: JsonFormatter &#125;); alert(decrypted.toString(CryptoJS.enc.Utf8));</span></div><div class="line"><span class="comment">// Message</span></div></pre></td></tr></table></figure><h4 id="Progressive-Ciphering"><a href="#Progressive-Ciphering" class="headerlink" title="Progressive Ciphering"></a>Progressive Ciphering</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> key = CryptoJS.enc.Hex.parse(<span class="string">'000102030405060708090a0b0c0d0e0f'</span>); </div><div class="line"><span class="keyword">var</span> iv = CryptoJS.enc.Hex.parse(<span class="string">'101112131415161718191a1b1c1d1e1f'</span>); </div><div class="line"><span class="keyword">var</span> aesEncryptor = CryptoJS.algo.AES.createEncryptor(key, &#123; <span class="attr">iv</span>: iv &#125;); </div><div class="line"><span class="keyword">var</span> ciphertextPart1 = aesEncryptor.process(<span class="string">"Message Part 1"</span>); </div><div class="line"><span class="keyword">var</span> ciphertextPart2 = aesEncryptor.process(<span class="string">"Message Part 2"</span>);</div><div class="line"> <span class="keyword">var</span> ciphertextPart3 = aesEncryptor.process(<span class="string">"Message Part 3"</span>); </div><div class="line"> <span class="keyword">var</span> ciphertextPart4 = aesEncryptor.finalize(); </div><div class="line"> <span class="keyword">var</span> aesDecryptor = CryptoJS.algo.AES.createDecryptor(key, &#123; <span class="attr">iv</span>: iv &#125;); </div><div class="line"> <span class="keyword">var</span> plaintextPart1 = aesDecryptor.process(ciphertextPart1); </div><div class="line"> <span class="keyword">var</span> plaintextPart2 = aesDecryptor.process(ciphertextPart2); </div><div class="line"> <span class="keyword">var</span> plaintextPart3 = aesDecryptor.process(ciphertextPart3); </div><div class="line"> <span class="keyword">var</span> plaintextPart4 = aesDecryptor.process(ciphertextPart4); </div><div class="line"> <span class="keyword">var</span> plaintextPart5 = aesDecryptor.finalize();</div></pre></td></tr></table></figure><h3 id="Interoperability"><a href="#Interoperability" class="headerlink" title="Interoperability"></a>Interoperability</h3><p>With OpenSSL</p><p>Encrypt with OpenSSL:</p><p><code>openssl enc -aes-256-cbc -in infile -out outfile -pass pass:&quot;Secret Passphrase&quot; -e -base64</code></p><p>Decrypt with CryptoJS:</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> decrypted = CryptoJS.AES.decrypt(openSSLEncrypted, <span class="string">"Secret Passphrase"</span>);</div></pre></td></tr></table></figure><h2 id="Encoders"><a href="#Encoders" class="headerlink" title="Encoders"></a>Encoders</h2><p>CryptoJS can convert from encoding formats such as Base64, Latin1 or Hex to WordArray objects and vica versa.</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> words = CryptoJS.enc.Base64.parse(<span class="string">'SGVsbG8sIFdvcmxkIQ=='</span>); </div><div class="line"><span class="keyword">var</span> base64 = CryptoJS.enc.Base64.stringify(words); </div><div class="line"><span class="keyword">var</span> words = CryptoJS.enc.Latin1.parse(<span class="string">'Hello, World!'</span>); </div><div class="line"><span class="keyword">var</span> latin1 = CryptoJS.enc.Latin1.stringify(words); </div><div class="line"><span class="keyword">var</span> words = CryptoJS.enc.Hex.parse(<span class="string">'48656c6c6f2c20576f726c6421'</span>); </div><div class="line"><span class="keyword">var</span> hex = CryptoJS.enc.Hex.stringify(words); </div><div class="line"><span class="keyword">var</span> words = CryptoJS.enc.Utf8.parse(<span class="string">'𤭢'</span>); </div><div class="line"><span class="keyword">var</span> utf8 = CryptoJS.enc.Utf8.stringify(words); </div><div class="line"><span class="keyword">var</span> words = CryptoJS.enc.Utf16.parse(<span class="string">'Hello, World!'</span>); </div><div class="line"><span class="keyword">var</span> utf16 = CryptoJS.enc.Utf16.stringify(words);</div></pre></td></tr></table></figure><h1 id="CryptoJS-in-NodeJS"><a href="#CryptoJS-in-NodeJS" class="headerlink" title="CryptoJS in NodeJS"></a>CryptoJS in NodeJS</h1><blockquote><p><a href="https://www.npmjs.com/package/crypto-js" target="_blank" rel="external">https://www.npmjs.com/package/crypto-js</a></p><p>github地址：<a href="https://github.com/brix/crypto-js" target="_blank" rel="external">https://github.com/brix/crypto-js</a></p></blockquote><p><code>npm install crypto-js</code></p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">//Modular include:</span></div><div class="line"><span class="keyword">var</span> AES = <span class="built_in">require</span>(<span class="string">"crypto-js/aes"</span>);</div><div class="line"><span class="keyword">var</span> SHA256 = <span class="built_in">require</span>(<span class="string">"crypto-js/sha256"</span>);</div></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">//Including all libraries, for access to extra methods:</span></div><div class="line"><span class="keyword">var</span> CryptoJS = <span class="built_in">require</span>(<span class="string">"crypto-js"</span>);</div><div class="line"><span class="built_in">console</span>.log(CryptoJS.HmacSHA1(<span class="string">"Message"</span>, <span class="string">"Key"</span>));</div><div class="line"><span class="comment">// Encrypt </span></div><div class="line"><span class="keyword">var</span> ciphertext = CryptoJS.AES.encrypt(<span class="string">'my message'</span>, <span class="string">'secret key 123'</span>);</div><div class="line"><span class="comment">// Decrypt </span></div><div class="line"><span class="keyword">var</span> bytes  = CryptoJS.AES.decrypt(ciphertext.toString(), <span class="string">'secret key 123'</span>);</div><div class="line"><span class="keyword">var</span> plaintext = bytes.toString(CryptoJS.enc.Utf8);</div></pre></td></tr></table></figure><h3 id="List-of-modules"><a href="#List-of-modules" class="headerlink" title="List of modules"></a>List of modules</h3><ul><li><code>crypto-js/core</code></li><li><code>crypto-js/x64-core</code></li><li><code>crypto-js/lib-typedarrays</code></li></ul><hr><ul><li><code>crypto-js/md5</code></li><li><code>crypto-js/sha1</code></li><li><code>crypto-js/sha256</code></li><li><code>crypto-js/sha224</code></li><li><code>crypto-js/sha512</code></li><li><code>crypto-js/sha384</code></li><li><code>crypto-js/sha3</code></li><li><code>crypto-js/ripemd160</code></li></ul><hr><ul><li><code>crypto-js/hmac-md5</code></li><li><code>crypto-js/hmac-sha1</code></li><li><code>crypto-js/hmac-sha256</code></li><li><code>crypto-js/hmac-sha224</code></li><li><code>crypto-js/hmac-sha512</code></li><li><code>crypto-js/hmac-sha384</code></li><li><code>crypto-js/hmac-sha3</code></li><li><code>crypto-js/hmac-ripemd160</code></li></ul><hr><ul><li><code>crypto-js/pbkdf2</code></li></ul><hr><ul><li><code>crypto-js/aes</code></li><li><code>crypto-js/tripledes</code></li><li><code>crypto-js/rc4</code></li><li><code>crypto-js/rabbit</code></li><li><code>crypto-js/rabbit-legacy</code></li><li><code>crypto-js/evpkdf</code></li></ul><hr><ul><li><code>crypto-js/format-openssl</code></li><li><code>crypto-js/format-hex</code></li></ul><hr><ul><li><code>crypto-js/enc-latin1</code></li><li><code>crypto-js/enc-utf8</code></li><li><code>crypto-js/enc-hex</code></li><li><code>crypto-js/enc-utf16</code></li><li><code>crypto-js/enc-base64</code></li></ul><hr><ul><li><code>crypto-js/mode-cfb</code></li><li><code>crypto-js/mode-ctr</code></li><li><code>crypto-js/mode-ctr-gladman</code></li><li><code>crypto-js/mode-ofb</code></li><li><code>crypto-js/mode-ecb</code></li></ul><hr><ul><li><code>crypto-js/pad-pkcs7</code></li><li><code>crypto-js/pad-ansix923</code></li><li><code>crypto-js/pad-iso10126</code></li><li><code>crypto-js/pad-iso97971</code></li><li><code>crypto-js/pad-zeropadding</code></li><li><code>crypto-js/pad-nopadding</code></li></ul><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[空间信息技术——3S概述]]></title>
      <url>houzw.github.io.git/2016/12/25/%E7%A9%BA%E9%97%B4%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF3S%E6%A6%82%E8%BF%B0/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="空间信息技术——3S概述"><a href="#空间信息技术——3S概述" class="headerlink" title="空间信息技术——3S概述"></a>空间信息技术——3S概述</h1><p><strong>空间信息技术(Spatial Information technology)</strong> 是20世纪60年代兴起的一门新兴技术，70年代中期以后在我国得到迅速发展。主要包括卫星定位系统、地理信息系统和遥感等的理论与技术，同时结合计算机技术和通讯技术，进行空间数据的采集、量测、分析、存储、管理、显示、传播和应用等。空间信息技术在广义上也被称为”地球空间信息科学”，在国外被称为<strong><em>GeoInformatics</em></strong>。</p><p>其涉及的主要理论如下：</p><ul><li>空间信息的<strong>基准</strong>问题：包括几何基准、物理基准和时间基准，是确定空间信息几何形态和时空分布的基础，是空间信息技术与地球动力学交叉研究的基本问题；</li><li>空间信息的<strong>标准</strong>问题：主要包括：空间数据采集、存储与交换格式标准、空间数据精度和质量标准、空间信息的分类与代码、空间信息的安全、保密及技术服务标准等，标准问题是推动空间信息产业发展的根本问题；</li><li>空间信息的<strong>时空变化</strong>问题：主要揭示和掌握空间信息的时空变化特征和规律，并加以形式化描述，形成规范化的理论基础；同时进行时间优化与空间尺度的组合，以解决诸如不同尺度下信息的衔接、共享、融合和变化检测等问题；</li><li>空间信息的<strong>认知</strong>问题：空间信息以地球空间中各个相互联系、相互制约的元素为载体，在结构上具有圈层性，各元素之间的空间位置、空间形态、空间组织、空间层次、空间排列、空间格局、空间联系以及制约关系等均具可识别性。通过静态上的形态分析、发生上的成因分析、动态上的过程分析、演化上的力学分析以及时序上的模拟分析来阐释与推演地球形态，以达到对地球空间的客观认知；</li><li>空间信息的<strong>不确定性</strong>问题：主要包括：类型的不确定性、空间位置的不确定性、空间关系的不确定性、时域的不确定性、逻辑上的不一致性和数据的不完整性；</li><li>空间信息<strong>解译与反演</strong>问题：指在通过对空间信息的定性解译和定量反演，揭示和展现地球系统现今状态和时空变化规律，从现象到本质回答地球科学面临的资源、环境和灾害等诸多重大科学问题；</li><li>空间信息的<strong>表达与可视化</strong>问题：主要研究空间信息的表达与可视化技术方法，涉及到空间数据库的多尺度（多比例尺）表示、数字地图自动综合、图形可视化、动态仿真和虚拟现实等。</li></ul><h2 id="地理信息系统技术——GIS"><a href="#地理信息系统技术——GIS" class="headerlink" title="地理信息系统技术——GIS"></a>地理信息系统技术——GIS</h2><p>地理信息系统(Geographic Information Systems，简称GIS)是一种采集、存储、管理、分析、显示与应用地理信息的计算机系统，是分析和处理现实世界(资源与环境)的海量地理数据的通用技术。——陈述彭等,2003</p><p><img src="http://ofcj2lgtd.bkt.clouddn.com/Geographical-Information-Systems.jpg" alt="GIS"></p><h3 id="GIS的发展历程"><a href="#GIS的发展历程" class="headerlink" title="GIS的发展历程"></a>GIS的发展历程</h3><p><img src="http://ofcj2lgtd.bkt.clouddn.com/gis-history.png" alt="GIS的发展历程"></p><h3 id="特点与优势"><a href="#特点与优势" class="headerlink" title="特点与优势"></a>特点与优势</h3><p>三个方面的特征：</p><ul><li>具有采集、管理、分析和输出多种地理信息的能力，具有空间性和动态性；</li><li>由计算机系统支持进行空间地理数据管理，模拟常规的或专门的地理分析方法，作用于空间数据，完成人类难以完成的任务；</li><li>计算机系统的支持是GIS的重要特征，使得GIS能以快速、精确、综合地对复杂的地理系统进行空间定位和过程动态分析。</li></ul><p><img src="http://ofcj2lgtd.bkt.clouddn.com/gis2.jpg" alt=""></p><p><strong>GIS的技术优势</strong>在于它的地理空间数据管理、综合、模拟与分析评价及可视化展示能力，可以得到常规方法或普通信息系统难以得到的重要信息，实现地理空间过程演化的模拟和预测。</p><p><strong>空间分析</strong>是地理信息系统区别于其它信息系统的<strong>重要标志</strong> ：</p><p>1）拓扑叠合；2）缓冲区分析；3）网络分析；4）数字地形分析；5）空间集合分析；6）空间统计分析；7）地理建模</p><p><img src="http://ofcj2lgtd.bkt.clouddn.com/gis3.jpg" alt=""></p><h3 id="应用领域"><a href="#应用领域" class="headerlink" title="应用领域"></a>应用领域</h3><p>灾害控制和分析、水土保护、农业决策和精细农业、海洋渔业、环境保护、智慧城市、数字地球、军事国防等</p><p><img src="http://ofcj2lgtd.bkt.clouddn.com/gis-app.jpg" alt="gis应用"></p><h2 id="遥感—RS"><a href="#遥感—RS" class="headerlink" title="遥感—RS"></a>遥感—RS</h2><p><strong><em>Remote Sensing</em></strong>，以电磁波与地球表面物质相互作用为基础，利用遥感器和数据处理、分析系统，探测、分析和研究地球资源与环境，揭示地球表面各要素的空间分布特征和时空变化规律的一门科学技术。——赵英时《遥感应用分析原理与方法》</p><p><img src="http://ofcj2lgtd.bkt.clouddn.com/rs.png" alt="RS"></p><h3 id="中国遥感发展历程"><a href="#中国遥感发展历程" class="headerlink" title="中国遥感发展历程"></a>中国遥感发展历程</h3><ul><li><p>1979年引进TM、SPOT等国际卫星数据，开展广泛应用(陈述彭，2001)。</p></li><li><p>20世纪70年代末到80年代，多家单位联合开展了<strong>腾冲航空遥感试验、天津-渤海湾环境遥感试验和二滩水能开发遥感试验</strong>，培养出一大批遥感科学技术人才和专家，取得了丰硕的科技成果和显著的社会经济效益。这3项试验被称为中国遥感的“三大战役”。</p></li><li><p>此后40年间，中国遥感先后经历了：</p><p>(1)了解RS，掌握外国卫星应用技术；(2)借鉴外国先进技术，发展本国遥感技术与应用；(3)全方位开展国产应用卫星与卫星应用对接工作；(4)从实验应用型向自主遥感卫星产业化应用发展，成为国家重点支持战略性新兴产业。</p><blockquote><p>顾行发等，40年的跨越—中国航天遥感蓬勃发展中的“三大战役”，遥感学报，2016</p></blockquote></li></ul><h3 id="遥感的特点"><a href="#遥感的特点" class="headerlink" title="遥感的特点"></a>遥感的特点</h3><ul><li>面状信息获取;</li><li>时效性：快速准确/</li><li>连续性：动态观测</li><li>多维信息：平面、高程（立体）</li><li>生动、形象、直观：</li><li>经济：节约人力、物力、财力、时间</li></ul><p>综合地说：</p><ul><li><p>空间全球性和区域性相结合。</p></li><li><p>时间连续性和机动性相结合。</p></li><li><p>应用上专业性和综合性相结合</p><blockquote><p>徐冠华等，遥感与中国可持续发展：机遇和挑战，遥感学报，2016</p></blockquote></li></ul><h3 id="遥感的应用"><a href="#遥感的应用" class="headerlink" title="遥感的应用"></a>遥感的应用</h3><ul><li>资源：资源调查与监测</li><li>环境：大气环境、水环境</li><li>农业：农作物长势、估产</li><li>林业：种类、面积、长势</li><li>地质：地质构造、地质填图</li><li>城市：城市规划与管理</li><li>灾害：洪水、冰雪、干旱、火灾、污染、地震</li><li>气象：气象预报</li><li>水文：水下地形、土壤水分</li><li>海洋：水质、赤潮、海洋资源</li><li>军事：目标识别、目标监测</li><li>其他：血吸虫、毒品监测……</li></ul><p><img src="http://ofcj2lgtd.bkt.clouddn.com/rs3.jpg" alt="RS应用"></p><p><img src="http://ofcj2lgtd.bkt.clouddn.com/rs2.jpg" alt="RS-农业"></p><h2 id="全球导航卫星系统——GNSS"><a href="#全球导航卫星系统——GNSS" class="headerlink" title="全球导航卫星系统——GNSS"></a>全球导航卫星系统——GNSS</h2><p><strong><em>GNSS（ Global Navigation Satellite System ）</em></strong>是一种以卫星为基础的无线电导航系统。可发送高精度、全天时、全天候、连续实时的导航、定位和授时信息，是一种可供海陆空领域的军民用户共享的信息资源。GNSS通常表示空间所有在轨运行的卫星导航系统的总称，是一个综合的星座系统。</p><p>包括美国<strong>GSP</strong>、俄罗斯格洛纳斯(<strong>GLONASS</strong>)、欧盟伽利略(<strong>Galileo</strong>)和中国北斗卫星导航系统(<strong>BeiDou/COMPASS</strong>)，及一些区域导航系统和天基／地基增强系统，如日本QZSS准天顶卫星系统、印度IRNSS区域导航卫星系统等。</p><blockquote><p>赵爽. 全球导航卫星系统发展特点与面临挑战[J]. 国际太空, 2014(7):16-22.</p></blockquote><p><img src="http://ofcj2lgtd.bkt.clouddn.com/gnss-systems.jpg" alt="GNSS"></p><h3 id="GNSS的发展历程"><a href="#GNSS的发展历程" class="headerlink" title="GNSS的发展历程"></a>GNSS的发展历程</h3><p>1958年，美国研制第一代卫星导航系统“子午仪”(TRANSIT)，在1967年向民用开放定位、导航和测量服务。前苏联于1965也建立起一个卫星导航系统“圣卡达”（CICADA），并于1967年发射了第一颗工作卫星。</p><p>以GPS为代表的第二代全球卫星导航系统即是目前广泛应用的GNSS系统。</p><p>美国GPS系统于1995年开始投入正式运行，并在1996年启动了“GPS现代化”工程，对GPS系统进行全面升级，更换工作失效的卫星。至2012年5月，共有31颗GPS卫星在轨运行。</p><p>1982年第一颗GLONASS卫星发射成功。1996年俄罗斯宣布GLONASS全球卫星导航系统正式建成。从2003年开始， GLONASS系统进入全面升级阶段。<br>伽利略（Galileo）卫星导航系统是欧盟建设的全球导航定位系统，是世界上第一个完全向民用开放的具有商业性质的卫星定位系统。2003年起Galileo系统工程建设开始实施， 预计2018年前后建成具有完全工作能力的全球导航定位系统。</p><blockquote><p>纪龙蛰等，GNSS全球卫星导航系统发展概况及最新进展，全球定位系统，2012</p></blockquote><h4 id="北斗卫星导航系统"><a href="#北斗卫星导航系统" class="headerlink" title="北斗卫星导航系统"></a>北斗卫星导航系统</h4><p>北斗卫星导航系统（BeiDou / COMPASS）是我国独立自主建设和发展的全球卫星导航系统，目标是建成独立自主、开放兼容、技术先进、稳定可靠、覆盖全球的导航系统，为全球用户提供连续、稳定、可靠的定位、导航、授时服务；满足国家安全和经济社会发展对定位、导航、授时的需求，促进国家信息化建设和经济发展方式转变，提升经济效益和社会效益。</p><p><img src="http://ofcj2lgtd.bkt.clouddn.com/704f1c547f2488fc462fdc0c624a823c.jpg" alt=""></p><p>北斗系统建设的基本原则是开放、自主、兼容、渐进。</p><p>按照“三步走”的发展路线，“先区域、后全球，先有源、后无源”的发展思路分步实施，形成面向全球、突出区域、富有特色的北斗系统发展道路。</p><p>——第一步，建设北斗一号系统（也称北斗卫星导航试验系统）。1994年，启动北斗一号系统工程建设；2000年，发射2颗地球静止轨道卫星，建成系统并投入使用，采用有源定位体制，为中国用户提供定位、授时、广域差分和短报文通信服务；2003年，发射第三颗地球静止轨道卫星，进一步增强系统性能。</p><p>——第二步，建设北斗二号系统。2004年，启动北斗二号系统工程建设；2012年年底，完成14颗卫星（5颗地球静止轨道卫星、5颗倾斜地球同步轨道卫星和4颗中圆地球轨道卫星）发射组网。北斗二号系统在兼容北斗一号技术体制基础上，增加无源定位体制，为亚太地区用户提供定位、测速、授时、广域差分和短报文通信服务。</p><p>——第三步，建设北斗全球系统。2009年，启动北斗全球系统建设，继承北斗有源服务和无源服务两种技术体制；计划2018年，面向“一带一路”沿线及周边国家提供基本服务；2020年前后，完成35颗卫星发射组网，为全球用户提供服务。</p><p>至2016年6月12日，已发射北斗导航卫星23颗</p><p><img src="http://ofcj2lgtd.bkt.clouddn.com/bd-dev.jpg" alt="北斗"></p><blockquote><p>吴海玲等. 北斗卫星导航系统发展与应用[J]. 导航定位学报, 2015, 3(2):1-6.</p></blockquote><h3 id="GNSS的特点"><a href="#GNSS的特点" class="headerlink" title="GNSS的特点"></a>GNSS的特点</h3><ul><li>测站之间无需通视。不再需要建造占标，可大大减少经费和时间，同时使点位的选择变得更加灵活。</li><li>提供三维坐标。精确测定平面位置及大地高程。</li><li>观测时间短。短基线快速相对定位法仅需数分钟。</li><li>操作简便。</li></ul><ul><li>全天候作业。</li><li>定位精度高。</li></ul><p><img src="http://ofcj2lgtd.bkt.clouddn.com/gnss2.jpg" alt=""></p><h3 id="GNSS的应用"><a href="#GNSS的应用" class="headerlink" title="GNSS的应用"></a>GNSS的应用</h3><ul><li>军事国防</li><li>交通运输业（监控、调度）</li><li>大地测量与地球动力学</li><li>精细农业</li><li>遥感</li><li>卫星定轨</li><li>资源勘探</li><li>个人旅游及野外探险</li><li>电力、广电、通讯等网络的时间同步、时间传递</li><li>仪器制造、物流管理、船舶导航</li></ul><p><img src="http://ofcj2lgtd.bkt.clouddn.com/2014115141127272.jpg" alt=""></p><p><img src="http://ofcj2lgtd.bkt.clouddn.com/gnss-app.jpg" alt=""></p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MapServer之MapFile学习]]></title>
      <url>houzw.github.io.git/2016/12/19/MapServer%E4%B9%8BMapFile%E5%AD%A6%E4%B9%A0/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="MapServer之MapFile学习"><a href="#MapServer之MapFile学习" class="headerlink" title="MapServer之MapFile学习"></a>MapServer之MapFile学习</h1><p>##参考教程</p><p>教程 <a href="http://mapserver.org/tutorial/index.html" target="_blank" rel="external">http://mapserver.org/tutorial/index.html</a></p><p>教程资料，含数据 <a href="http://download.osgeo.org/mapserver/docs/mapserver-tutorial.zip" target="_blank" rel="external">http://download.osgeo.org/mapserver/docs/mapserver-tutorial.zip</a></p><blockquote><p>MapFile Editors</p><p><strong><a href="https://github.com/mapserver/mapserver/wiki/MapFile-Editors" target="_blank" rel="external">https://github.com/mapserver/mapserver/wiki/MapFile-Editors</a></strong></p></blockquote><p>##MapServer访问地址解析</p><p>如 <code>http://localhost/cgi-bin/mapserv?map=/ms4w/apps/tutorial/htdocs/example1-1.map&amp;layer=states&amp;mode=map</code> ，分为两个部分：</p><ul><li><p><code>http://localhost/cgi-bin/mapserv?</code>（windows下位 mapserv.exe）</p><p>调用 MapServer CGI 程序。直接访问出现信息</p><p><code>No query information to decode. QUERY_STRING is set, but empty.</code></p></li><li><p>查询字符串，包含CGI参数，以<code>&amp;</code>隔开</p><ul><li>参数 map，值<code>/ms4w/apps/tutorial/htdocs/example1-1.map</code>，指定 MapServer CGI程序需要处理的 mapfile 文件</li><li><em><code>layer=states</code></em>，指定 mapserv 程序启用 <code>states</code>图层</li><li><em><code>mode=map</code></em> ，指定 mapserv 对 mapfile 输出的处理方式。<ul><li>map 方式：直接发送图片到浏览器，而不在服务器中创建临时的图片</li><li>browser方式：在服务器中创建一个图片的临时目录</li></ul></li></ul></li></ul><hr><blockquote><p><a href="http://live.osgeo.org/zh/quickstart/mapserver_quickstart.html" target="_blank" rel="external">http://live.osgeo.org/zh/quickstart/mapserver_quickstart.html</a></p><p><a href="http://blog.csdn.net/qingyafan/article/details/49126705" target="_blank" rel="external">MapServer 之 mapfile 配置文件</a></p><p><a href="https://doc.tiki.org/Maps+Mapfile+Tutorial" target="_blank" rel="external">https://doc.tiki.org/Maps+Mapfile+Tutorial</a></p><p>MapServer官方文档 <a href="http://mapserver.org/mapfile/index.html" target="_blank" rel="external">http://mapserver.org/mapfile/index.html</a></p></blockquote><p>[TOC]</p><h2 id="MapFile简介"><a href="#MapFile简介" class="headerlink" title="MapFile简介"></a>MapFile简介</h2><p><strong>MapFile 是 MapServer 的核心</strong>。它定义了对象间的关系，指出MapServer中的数据位置，并定义了数据如何显示。即 <a href="http://mapserver.org/mapfile/index.html" target="_blank" rel="external">Mapfile</a> 用于控制对数据的栅格或矢量输出，其中包含了数据源和渲染样式（颜色、符号、标准等）信息。</p><p>QGIS中有一个 MapServer Export Plugin，可以在QGIS中配置好数据和样式之后，导出mapfile。</p><p>MapFile中的每个对象以其名称开始，以<strong><em>END</em></strong>结束（<strong>对象必须闭合</strong>）。MapFile中标签<strong>不区分大小写</strong>，但最好是大写。MapFile 中的注释使用 <code>#</code>(hash)。MapFile文件包含一个Map对象，其以“<strong><em>Map</em></strong>”开始，包含一系列的<strong><em>LAYER</em></strong>对象。在有多个 <code>LAYER</code>对象的时候，在前面的 <code>LAYER</code>会先绘制，后面的 <code>LAYER</code>会叠加在先绘制的图层上面。</p><p>——每个MapFile文件都必须以<strong><em>Map</em></strong>开始，以<strong><em>END</em></strong>结束。</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">MAP</div><div class="line"> ...</div><div class="line">   LAYER</div><div class="line">   ...</div><div class="line">   END <span class="comment"># end of layer1</span></div><div class="line">END <span class="comment"># end of map</span></div></pre></td></tr></table></figure><p>每个对象都有很多的配置参数，配置参数<strong>不必闭合</strong>。参数值为字符串时，最好<strong>加双引号</strong>。</p><p>Mapfile 使用 UTF-8 编码保存，后缀为<code>map</code> .</p><p><img src="http://img.blog.csdn.net/20151018225958746" alt="mapfile应用过程示意图"></p><p>mapfile应用过程示意图，出自【MapServer 之 mapfile 配置文件】</p><h2 id="MapFile的头部"><a href="#MapFile的头部" class="headerlink" title="MapFile的头部"></a>MapFile的头部</h2><p>mapfile 的头部（header）定义了一些控制地图在屏幕上显示效果的对象。包括<strong>MAP</strong>本身（最后需要END），决定如何创建网络地图图片的<strong>WEB</strong>对象、参考图或鹰眼图对象<strong>REFERENCE</strong>、比例尺对象<strong>SCALEBAR</strong>、图例对象<strong>LEGEND</strong>及控制地图是否能够查询的对象<strong>QUERYMAP</strong>。</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="comment"># Start of map file</span></div><div class="line">MAP</div><div class="line">    NAME <span class="string">"Efate"</span></div><div class="line">    STATUS ON</div><div class="line">    SIZE <span class="number">400</span> <span class="number">400</span></div><div class="line">    EXTENT <span class="number">196900</span> <span class="number">8027100</span> <span class="number">245000</span> <span class="number">8073000</span></div><div class="line">    UNITS METERS</div><div class="line">    SHAPEPATH <span class="string">"/var/www/html/map/"</span></div><div class="line">    IMAGETYPE png24</div><div class="line">    FONTSET <span class="string">"fonts/fontset.txt"</span></div><div class="line">    OUTPUTFORMAT</div><div class="line">        NAME png24</div><div class="line">        DRIVER <span class="string">"GD/PNG"</span></div><div class="line">        MIMETYPE <span class="string">"image/png"</span></div><div class="line">        IMAGEMODE RGB</div><div class="line">        EXTENSION <span class="string">"png"</span></div><div class="line">    END</div><div class="line"></div><div class="line">    <span class="comment"># Start of web interface definition</span></div><div class="line">    WEB</div><div class="line">        TEMPLATE /var/www/html/map/map.html</div><div class="line">        IMAGEPATH /var/www/html/map/images/</div><div class="line">        IMAGEURL /map/images/</div><div class="line">        LOG /var/www/html/map/maplog</div><div class="line">    END</div><div class="line"></div><div class="line">    <span class="comment"># Start of reference map 定义参考图（鹰眼图）</span></div><div class="line">    REFERENCE</div><div class="line">        IMAGE /var/www/html/map/data/efate.png</div><div class="line">        EXTENT <span class="number">196900</span> <span class="number">8027100</span> <span class="number">245000</span> <span class="number">8073000</span></div><div class="line">        STATUS ON</div><div class="line">        COLOR <span class="number">-1</span> <span class="number">-1</span> <span class="number">-1</span></div><div class="line">        OUTLINECOLOR <span class="number">255</span> <span class="number">0</span> <span class="number">0</span></div><div class="line">        SIZE <span class="number">95</span> <span class="number">95</span></div><div class="line">    END</div><div class="line"></div><div class="line">    <span class="comment"># Start of legend 图例</span></div><div class="line">    LEGEND</div><div class="line">        KEYSIZE <span class="number">18</span> <span class="number">12</span></div><div class="line">        LABEL</div><div class="line">            TYPE BITMAP</div><div class="line">            SIZE MEDIUM</div><div class="line">            COLOR <span class="number">0</span> <span class="number">0</span> <span class="number">89</span></div><div class="line">        END</div><div class="line">        STATUS ON</div><div class="line">    END</div><div class="line"></div><div class="line">    <span class="comment"># Start of scalebar 比例尺</span></div><div class="line">    SCALEBAR</div><div class="line">        IMAGECOLOR <span class="number">255</span> <span class="number">255</span> <span class="number">255</span></div><div class="line">        LABEL</div><div class="line">            COLOR <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>	</div><div class="line">            SIZE SMALL</div><div class="line">        END</div><div class="line">        SIZE <span class="number">350</span> <span class="number">5</span></div><div class="line">        COLOR <span class="number">255</span> <span class="number">255</span> <span class="number">255</span></div><div class="line">        BACKGROUNDCOLOR <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></div><div class="line">        OUTLINECOLOR <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></div><div class="line">        UNITS kilometers</div><div class="line">        INTERVALS <span class="number">5</span></div><div class="line">        STATUS ON</div><div class="line">    END</div><div class="line"></div><div class="line">    <span class="comment"># Start of query definitions 查询定义</span></div><div class="line">    QUERYMAP</div><div class="line">        STATUS ON</div><div class="line">        STYLE HILITE</div><div class="line">    END</div><div class="line">    </div><div class="line">4<span class="comment">#...</span></div><div class="line">4</div><div class="line">END <span class="comment">#  end of MAP</span></div></pre></td></tr></table></figure><p><strong>Tip: 一个快速使用 mapfile 的方法是直接应用上述内容，将 REFERENCE 部分中的图片指向真实内容. 这样就得到一个没有图层的mapfile文件。然后你可以往里面添加内容 ，根据你的需要进行修改.</strong><br>mapfile中下述内容的值必须准确设置才能工作:</p><p><strong><code>SHAPEPATH、IMAGEPATH、IMAGEURL、IMAGE</code></strong></p><h2 id="对象属性"><a href="#对象属性" class="headerlink" title="对象属性"></a>对象属性</h2><h3 id="MAP对象"><a href="#MAP对象" class="headerlink" title="MAP对象"></a>MAP对象</h3><blockquote><p><a href="http://mapserver.org/mapfile/map.html" target="_blank" rel="external">http://mapserver.org/mapfile/map.html</a></p></blockquote><h4 id="MAP对象的主要属性（MAP对象内部的LAYER对象等下文说明）："><a href="#MAP对象的主要属性（MAP对象内部的LAYER对象等下文说明）：" class="headerlink" title="MAP对象的主要属性（MAP对象内部的LAYER对象等下文说明）："></a>MAP对象的主要属性（MAP对象内部的LAYER对象等下文说明）：</h4><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">MAP</div><div class="line">4NAME <span class="string">"Efate"</span> <span class="comment"># map 文件名称</span></div><div class="line">4STATUS ON <span class="comment"># is this map on by default</span></div><div class="line">4SIZE <span class="number">400</span> <span class="number">400</span> <span class="comment"># 影像地图的像素大小 size in pixel of the image map</span></div><div class="line">4EXTENT <span class="number">196900</span> <span class="number">8027100</span> <span class="number">245000</span> <span class="number">8073000</span> <span class="comment"># 地图的地理范围 geographic extents of the map</span></div><div class="line">4UNITS METERS <span class="comment"># 地理范围的单位 units for the geographic extents</span></div><div class="line">4<span class="comment"># shapefile文件在服务器上的存储地址，同时作为参考目录使用 also used for directory reference</span></div><div class="line">    SHAPEPATH <span class="string">"/var/www/html/map/"</span></div><div class="line">4<span class="comment"># 输出影像的类型   24bits color PNG。PNG8 渲染速度比较快</span></div><div class="line">    IMAGETYPE png24 </div><div class="line">    <span class="comment"># 包含字体位置的文件 file containing the locations of fonts</span></div><div class="line">4FONTSET <span class="string">"fonts/fontset.txt"</span> </div><div class="line">    ...</div><div class="line">END</div></pre></td></tr></table></figure><ul><li><strong>NAME</strong> map相关的前缀，使用它来生成 scalebar 和 legend 的GIF 文件. 应该保持简短.</li><li><strong>SIZE</strong> <code>[x][y]</code> 输出影像（即地图）的像素的大小.</li><li><strong>EXTENT</strong><code>&lt;Lower Left X&gt; &lt;Lower Left Y&gt; &lt;Upper Right X&gt; &lt;Upper Right Y&gt;</code>：默认的地理坐标范围。可以使用<code>orginfo</code>获得矢量数据的四至，如<code>ogrinfo -al -so states_ugl.shp</code></li><li><strong>SHAPEPATH</strong>：文件目录（针对 shp 、tiff 等文件，非数据库或网络服务）。绝对路径 (如 <code>/ms4w/apps/tutorial/data</code> 或<code>C:/ms4w/apps/tutorial/data</code>) 或者相对 mapfile位置的路径 (如 ”../data”).</li><li><a href="http://mapserver.org/mapfile/web.html#web" target="_blank" rel="external">WEB</a> 对象，配置 MapServer 临时放置生成的地图图片的地址；</li><li><strong>UNITS</strong>： 地图坐标单位，用于比例尺 <code>[dd|feet|inches|kilometers|meters|miles|nauticalmiles]</code></li><li><strong>IMAGECOLOR</strong>，<code>[r][g][b]</code> ，设置地图的背景色，RGB；</li><li><strong>PROJECTION</strong>，地图使用的投影坐标系；</li><li><strong>SYMBOLSET</strong> ，指向符号定义文件，用于CLASS对象中的SYMBOL参数 <a href="http://mapserver.org/mapfile/symbology/construction.html#sym-construction" target="_blank" rel="external">Cartographic Symbol Reference</a></li></ul><h3 id="WEB对象"><a href="#WEB对象" class="headerlink" title="WEB对象"></a>WEB对象</h3><p>此对象内容定义了信息在服务器上存储的位置及其如何向浏览器提供服务</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">WEB</div><div class="line">  	<span class="comment"># location of the template for results</span></div><div class="line">4<span class="comment"># the line needs to be here, but it is not used (no file at this location)</span></div><div class="line">    TEMPLATE /var/www/html/map/map.html </div><div class="line">    <span class="comment"># 存放地图图片的位置，必须以“/”结尾</span></div><div class="line">  	IMAGEPATH /var/www/html/map/images/ </div><div class="line">4<span class="comment"># web path for the maps images</span></div><div class="line">  	IMAGEURL /map/images/ </div><div class="line">    <span class="comment"># 日志文件地址</span></div><div class="line">  	LOG /var/www/html/map/maplog </div><div class="line">END</div></pre></td></tr></table></figure><ul><li><strong>IAMGEPATH</strong>，存放生成的地图的图片和临时文件的路径；</li><li><strong>IMAGEURL</strong>，IMAGEPATH的<strong>基路径</strong>；</li><li><strong>METADATA</strong>，配置元数据，主要用来支持 OGC 的服务；</li></ul><h2 id="Projection"><a href="#Projection" class="headerlink" title="Projection"></a>Projection</h2><p><a href="http://mapserver.org/tutorial/example1-6.html" target="_blank" rel="external">http://mapserver.org/tutorial/example1-6.html</a></p><p>若定义了 PROJECTION 对象，则 MapServer 会将图层和投影信息传递给PROJ.4 库来进行重投影.</p><figure class="highlight yaml"><table><tr><td class="code"><pre><div class="line">PROJECTION</div><div class="line">    <span class="comment"># 采用的一种 PROJ.4 定义 of Lambert Azimuthal Equal-Area projection </span></div><div class="line">      <span class="string">"proj=laea"</span></div><div class="line">      <span class="string">"ellps=clrk66"</span></div><div class="line">      <span class="string">"lat_0=45"</span></div><div class="line">      <span class="string">"lon_0=-100"</span></div><div class="line">  END</div></pre></td></tr></table></figure><p>MapServer有两种定义投影的方式。</p><p>第一种如上例中，为传统的方式。</p><p>第二种是采用EPSG码，如</p><figure class="highlight yaml"><table><tr><td class="code"><pre><div class="line">PROJECTION</div><div class="line">4<span class="string">"init=epsg:2163"</span></div><div class="line">END</div></pre></td></tr></table></figure><p>map文件中定义的extent 的单位，必须和输出的投影的单位一致。因此，若之前采用的经纬度，则定义投影之后，需要修改extent的值。</p><p>可以使用 PROJ.4的 <code>cs2cs</code>命令来计算投影后地图的范围。</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">cs2cs +proj=latlong +datum=WGS84 +to +proj=laea +ellps=clrk66 +lat_0=45 +lon_0=-100</div><div class="line"># 输入southwestern （lower left 左下角）的坐标</div><div class="line">-97.5 41.619778 # 空格分隔</div><div class="line">208398.01  -372335.44  0.000  # 输出的目标坐标值。第三个为高程值，此处可以忽略</div><div class="line"># northeastern coordinate pair (upper right 右上角坐标）</div><div class="line">-82.122902 49.38562 </div><div class="line">1285308.08   632638.93  0.000 # 输出的目标坐标值</div><div class="line"># 由于投影分带的问题，这里的坐标与实际中使用的坐标不一样</div></pre></td></tr></table></figure><p>在 MAP 对象头部中定义 PROJECTION 作为<strong>输出投影</strong>之后，需要在 LAYER 对象 中定义PROJECTION作为<strong>输入投影</strong></p><h3 id="LAYER对象"><a href="#LAYER对象" class="headerlink" title="LAYER对象"></a><a href="http://mapserver.org/mapfile/layer.html" target="_blank" rel="external">LAYER对象</a></h3><p>所有文件的位置必须是相对于<code>SHAPEPATH</code>所设置的路径 。若有文件为<code>/var/www/html/map/data/mylayer.shp</code> ，而 SHAPEPATH 的值为<code>/var/www/html/map/</code>，则文件位置必须设置为<code>data/mylayer.shp</code>. 采用这种规则能便于在使用<code>Maps-&gt;Layer Management</code>上传文件时定位到文件地址。<br>文件名都是<strong>大小写敏感</strong>的(包括扩展名)，并应该<strong>绝对禁止包含空格</strong>！A shapefile is usually made of a shp, idx, dbf files while a Mapinfo layer is made of TAB, ID, MAP, DAT (and sometimes IND) files.</p><p><strong><em>LAYER</em></strong> 表示<strong>图层数据源及其显示属性</strong>。在 <strong><em>LAYER</em></strong> 中存在一系列的属性，例如：</p><ul><li><strong>STATUS</strong>：图层允许显示(<strong><em>ON</em></strong>)、不显示(<strong><em>OFF</em></strong>)或强制显示(<strong><em>DEFAULT</em></strong>)</li><li><strong>TYPE</strong>：渲染对象的几何类型，如 POLYGON 、LINE 、 POINT 、RASTER、ANNOTATION</li><li><strong>DATA</strong>：所使用的源文件名称，如 shp 文件，或者 SQL 查询语句。支持的格式同 OGR。</li><li><strong>CLASS</strong>：渲染样式控制</li><li><strong>PROJECTION</strong>，字符串，图层数据所在的坐标系；</li><li><strong>METADATA</strong>，要配置的服务的配置对象；</li><li><strong>CONNECTIONTYPE</strong>，连接的类型，默认是本地，也就是本地磁盘文件；</li><li><strong>CONNECTION</strong>，连接数据库的字符串，或者WMS等的URL，在图层数据在数据库中时候才会使用；在map文件中，必须<strong>单独成行</strong>（the string has to be in a single line in mapfile ）</li></ul><h4 id="Vector-layer"><a href="#Vector-layer" class="headerlink" title="Vector layer"></a>Vector layer</h4><h5 id="Shapefile"><a href="#Shapefile" class="headerlink" title="Shapefile"></a>Shapefile</h5><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">LAYER</div><div class="line">  NAME <span class="string">"My Layer"</span></div><div class="line">  TYPE LINE</div><div class="line">  STATUS ON</div><div class="line">  DATA <span class="string">"data/myshapefile.shp"</span></div><div class="line">  CLASS</div><div class="line">    COLOR <span class="number">255</span> <span class="number">0</span> <span class="number">0</span></div><div class="line">    NAME <span class="string">"My layer legend"</span></div><div class="line">  END <span class="comment"># end of class</span></div><div class="line">END <span class="comment"># end of layer</span></div></pre></td></tr></table></figure><blockquote><p>“My layer legend” in the LEGEND.</p></blockquote><h5 id="Mapinfo-TAB"><a href="#Mapinfo-TAB" class="headerlink" title="Mapinfo TAB"></a>Mapinfo TAB</h5><p>The difference with a shapefile is the use of the OGR library to read the Mapinfo files. The keyword CONNECTIONTYPE OGR must be used and the location of the file is given by the keyword CONNECTION instead of DATA. All the rest stay the same.</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">LAYER</div><div class="line">  NAME <span class="string">"My Layer"</span></div><div class="line">  TYPE LINE</div><div class="line">  STATUS ON</div><div class="line">  CONNECTIONTYPE OGR</div><div class="line">  CONNECTION <span class="string">"data/mymapinfofile.TAB"</span></div><div class="line">  CLASS</div><div class="line">    COLOR <span class="number">255</span> <span class="number">0</span> <span class="number">0</span></div><div class="line">    NAME <span class="string">"My layer legend"</span></div><div class="line">  END <span class="comment"># end of class</span></div><div class="line">END <span class="comment"># end of layer</span></div></pre></td></tr></table></figure><h4 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h4><p>To make the layer queryable add anywehere inside the LAYER object the following lines:</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">TEMPLATE &quot;query.html&quot;</div><div class="line">TOLERANCE 3</div><div class="line">TOLERANCEUNITS PIXELS</div></pre></td></tr></table></figure><p>第一个参数是必须的，但是并不一定需要指向一个真实的文件（ does not need to pint to a real file）. It is only used outsied tikimaps. The second parameters specify the pointing TOLERANCE in TOLERANCEUNITS, here 3 pixels. If you click on the map all the objects from this layer which are at less than 3 pixels from the click on the image will be selected.<br>The map is then redraw and at the bottom of the page will be the information related from the object.<br>Note: if you create a GIS layer which fields contain HTML tags, like for IMG or A (anchor/link), they will be rendered accordingly. This allows you to create a layer pointing to images stored on Tiki.</p><p>###STYLE</p><p><strong>COLOR</strong></p><p>多边形的填充色、线的颜色. RGB 格式.</p><p><strong>OUTLINECOLOR</strong></p><p>多边形边线的颜色. RGB 格式. MapServer 默认不绘制多边形的边线，需要设置此属性的值才能看到.</p><p>###Label</p><p><a href="http://mapserver.org/tutorial/example1-4.html" target="_blank" rel="external">http://mapserver.org/tutorial/example1-4.html</a></p><p>从图层的属性中选择一个字段用于在地图上显示。例如，若有一个GIS图层包含国家的名称，对应的字段为 “NAME”，则可以使用<code>LABELITEM &quot;NAME&quot;</code>来告诉 mapserver 将其值显示在地图上.<br>在 CLASS 对象里面, 应当设置这些标注如何渲染.</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">LAYER</div><div class="line">  NAME <span class="string">"Country Names"</span></div><div class="line">  TYPE POINT</div><div class="line">  STATUS ON</div><div class="line">  METADATA</div><div class="line">     DOWNLOAD <span class="string">"T"</span></div><div class="line">  END</div><div class="line">  LABELITEM <span class="string">"NAME"</span></div><div class="line">  LABELCACHE ON</div><div class="line">  CONNECTIONTYPE OGR</div><div class="line">  CONNECTION <span class="string">"data/Country.TAB"</span></div><div class="line">  CLASS</div><div class="line">     SYMBOL <span class="number">0</span></div><div class="line">     COLOR <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></div><div class="line">     NAME <span class="string">"Country Names"</span></div><div class="line">     LABEL</div><div class="line">        COLOR <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></div><div class="line">        FONT arial</div><div class="line">        TYPE TRUETYPE <span class="comment"># 字体的类型 TRUETYPE、BITMAP</span></div><div class="line">        POSITION CC <span class="comment"># C for center, U for upper, and L for lower，或使用 auto </span></div><div class="line">        PARTIALS TRUE</div><div class="line">        ANTIALIAS TRUE <span class="comment"># 是否启用Truetype字体的抗锯齿效果</span></div><div class="line">        MINDISTANCE <span class="number">300</span> <span class="comment"># 相同标注之间的最小距离。设置的比较大能够避免过于拥挤</span></div><div class="line">        SIZE <span class="number">7</span></div><div class="line">        BUFFER <span class="number">1</span> <span class="comment"># padding</span></div><div class="line">        OUTLINECOLOR <span class="number">255</span> <span class="number">255</span> <span class="number">255</span></div><div class="line">     END							     </div><div class="line">  END</div><div class="line">END</div></pre></td></tr></table></figure><p>上例中， LABEL 为黑色 (COLOR 0 0 0) 并使用 TRUETYPE 字体 arial . 标注的 POSITION 为相对于POINT 对象的 Center/Center . 若一个对象并不完全在地图上，其标注也会显示出来 (PARTIAL TRUE). 标注的 SIZE 为7 points. 标注之间的距离不会小于 1 个像素 (BUFFER 1). 为了让最后一个参数能够正常作用，应该启用 LABELCACHE. 最后，标注对象有一个白色的边界 (OUTLINECOLOR 255 255 255).</p><p>还可以设置</p><ul><li>MINFEATURESIZE 显示标签所需的最小目标要素的面积像素值。</li><li>MINSIZE 标签大小的最小像素值</li></ul><p>###Thematic Mapping</p><p>每个 layer 包括一个或多个 CLASS. CLASS 定义了如何在屏幕上绘制每个对象。 通过使用 CLASSITEM, 你可以使用一个字段来将同一类的不同对象区分开。例如，所有深度为 -100m 到 -500m的等深线属于一类，而-500m 到-1000m 的等深线属于另一类. 这种划分在CLASS里面是通过使用 EXPRESSION 实现的. EXPRESSION 使用基于CLASSITEM中字段的简单逻辑实现。<br>例如，使用表示 LINE 对象水深值的字段”value”，根据深度值的不同显示不同的颜色。若 EXPRESSION 为 true ，则 CLASS 中的参数会被应用. 一个没有EXPRESSION 的 CLASS 将被作为未被划分的对象的默认CLASS .</p><p>通过<code>ogrinfo</code>，或者其他程序查看shapefile文件中的 dbf 文件，可以确定 数据中包含的属性，用来定义 CLASSITEM。</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">LAYER</div><div class="line">  NAME <span class="string">"Bathymetry 20m"</span></div><div class="line">  TYPE LINE</div><div class="line">  STATUS OFF</div><div class="line">  METADATA</div><div class="line">    WIKI <span class="string">"FijiBathymetry"</span></div><div class="line">  END</div><div class="line">  TEMPLATE <span class="string">"query.html"</span></div><div class="line">  TOLERANCE <span class="number">3</span></div><div class="line">  TOLERANCEUNITS PIXELS</div><div class="line">  LABELITEM <span class="string">"Value"</span></div><div class="line">  CLASSITEM <span class="string">"Value"</span></div><div class="line">  LABELCACHE ON</div><div class="line">  CONNECTIONTYPE OGR</div><div class="line">  CONNECTION <span class="string">"data/fiji/viti_bathy_contour.TAB"</span></div><div class="line">  CLASS</div><div class="line">    SYMBOL <span class="number">0</span></div><div class="line">    COLOR <span class="number">0</span> <span class="number">200</span> <span class="number">255</span></div><div class="line">    NAME <span class="string">"Bathymetry 2.5m &gt;-50m"</span></div><div class="line">    expression ([Value]&gt;<span class="number">-50</span>)</div><div class="line">    LABEL</div><div class="line">      ANGLE AUTO</div><div class="line">      COLOR <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></div><div class="line">      FONT arial</div><div class="line">      TYPE TRUETYPE</div><div class="line">      POSITION cc</div><div class="line">      PARTIALS FALSE</div><div class="line">      BUFFER <span class="number">5</span></div><div class="line">      SIZE <span class="number">6</span></div><div class="line">      OUTLINECOLOR <span class="number">200</span> <span class="number">200</span> <span class="number">200</span></div><div class="line">    END</div><div class="line">  END</div><div class="line">  CLASS</div><div class="line">    SYMBOL <span class="number">0</span></div><div class="line">    COLOR <span class="number">0</span> <span class="number">100</span> <span class="number">255</span></div><div class="line">    NAME <span class="string">"Bathymetry 20m &gt;-500m"</span></div><div class="line">    expression ([Value]&lt;<span class="number">-50</span> AND [Value]&gt;=<span class="number">-500</span>)</div><div class="line">    LABEL</div><div class="line">      ANGLE AUTO</div><div class="line">      FONT arial</div><div class="line">      COLOR <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></div><div class="line">      TYPE TRUETYPE</div><div class="line">      POSITION cc</div><div class="line">      PARTIALS FALSE</div><div class="line">      BUFFER <span class="number">5</span></div><div class="line">      SIZE <span class="number">6</span></div><div class="line">      OUTLINECOLOR <span class="number">200</span> <span class="number">200</span> <span class="number">200</span></div><div class="line">    END</div><div class="line">  END</div><div class="line">END</div></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="code"><pre><div class="line">MAP</div><div class="line">  IMAGETYPE      PNG</div><div class="line">  EXTENT         <span class="bullet">-97.238976</span> <span class="number">41.619778</span> <span class="bullet">-82.122902</span> <span class="number">49.385620</span></div><div class="line">  SIZE           <span class="number">400</span> <span class="number">300</span></div><div class="line">  SHAPEPATH      <span class="string">"../data"</span></div><div class="line">  IMAGECOLOR     <span class="number">255</span> <span class="number">255</span> <span class="number">255</span></div><div class="line">  LAYER </div><div class="line">    NAME         states_poly</div><div class="line">    DATA         states_ugl</div><div class="line">    STATUS       OFF</div><div class="line">    TYPE         POLYGON</div><div class="line">    CLASSITEM    <span class="string">"CLASS"</span></div><div class="line">    CLASS</div><div class="line">      NAME <span class="string">'States'</span></div><div class="line">      EXPRESSION <span class="string">'land'</span> <span class="comment"># Only polygons where "CLASS" = 'land' will be drawn.</span></div><div class="line">      STYLE</div><div class="line">        COLOR      <span class="number">232</span> <span class="number">232</span> <span class="number">232</span></div><div class="line">      END</div><div class="line">    END</div><div class="line">    CLASS</div><div class="line">      NAME <span class="string">'Water'</span></div><div class="line">      EXPRESSION <span class="string">'water'</span> <span class="comment"># Only polygons where "CLASS" = 'water' will be drawn.</span></div><div class="line">      STYLE</div><div class="line">        COLOR      <span class="number">198</span> <span class="number">198</span> <span class="number">255</span></div><div class="line">      END</div><div class="line">    END</div><div class="line">  END </div><div class="line">END</div></pre></td></tr></table></figure><h3 id="Metadata"><a href="#Metadata" class="headerlink" title="Metadata"></a>Metadata</h3><p>在一个 LAYER 组内，可以定义一个（且仅有一个） METADATA 组. 部分 metadata 在tikiwiki中有特殊用途.</p><h4 id="WIKI"><a href="#WIKI" class="headerlink" title="WIKI"></a>WIKI</h4><p>实验WIKI 根据图层名生成一个链接到wiki页面的链接。 使用wiki页来说明图层信息:<br>custodian、所有者、创建日期、精度、历史、基准/投影、interesting layer features…</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">METADATA</div><div class="line"> 	WIKI <span class="string">"MyLayerPage"</span></div><div class="line">END</div></pre></td></tr></table></figure><p>###Raster layer</p><blockquote><p><a href="http://mapserver.org/tutorial/example1-5.html" target="_blank" rel="external">http://mapserver.org/tutorial/example1-5.html</a></p></blockquote><p>最简单的处理栅格图层的方式是使用包含投影信息的 Geotiff 图像. 但是生成 geotiff 图像可能需要其他遥感软件. 另一种方式是使用一个额外的包含图像像素坐标信息的文件。<br>当使用多个图像，而不是每个图像作为一个图层时，这些图像会被平铺（tiled）. 将为每个图像生成一个 包含矩形的shapefile 来帮助系统准确定位图像.</p><h5 id="Geotiff"><a href="#Geotiff" class="headerlink" title="Geotiff"></a>Geotiff</h5><p>设置 TYPE 为 RASTER， 并设置 DATA 指向 tiff 文件即可. 关键词 OFFSITE 用于指定tiff图像中透明部分的颜色. 这在拼接（tiling ）或叠加（overlapping ）多个影像时很有用。</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">LAYER</div><div class="line">  NAME <span class="string">"DTM 50m"</span></div><div class="line">  TYPE RASTER</div><div class="line">  STATUS OFF</div><div class="line">  DATA <span class="string">"data/fiji/VLevudtm.tif"</span></div><div class="line">  OFFSITE <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></div><div class="line">  PROCESSING <span class="string">"BANDS=1,2,3"</span>  <span class="comment"># 此处选择多光谱影像中需要显示的波段</span></div><div class="line">END</div></pre></td></tr></table></figure><p>PROCESSING 指定处理指令，参考 <a href="http://mapserver.org/mapfile/layer.html#layer" target="_blank" rel="external">http://mapserver.org/mapfile/layer.html#layer</a></p><h5 id="Image-Tiles"><a href="#Image-Tiles" class="headerlink" title="Image Tiles"></a>Image Tiles</h5><p>Images tiles are created using utility tools from the mapserver software. The utility is called gdaltindex and parses mainly geotiff images to get their boundaries and create a shapefile containing an outline for each of the images. Under Maps-&gt;Layer Management, at the bottom of the page a utility is avalilable to generate the shapefile. Basically upload the images to the right directory. The images should have the same name prefix. Then reference all these images with a wildcaard and name the shapefile to be created. For instance you can upload coralcoastsigatoka.tif, coralcoastmomi.tif, coralcoastnavua.tif and reference them as coralcoast*.tif and create the shapefile img_index.shp</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">LAYER</div><div class="line">  NAME <span class="string">"Coral Coast 4m IKONOS"</span></div><div class="line">  TYPE RASTER</div><div class="line">  METADATA</div><div class="line">    WIKI <span class="string">"FijiImagery"</span></div><div class="line">  END</div><div class="line">  STATUS ON</div><div class="line">  TILEINDEX <span class="string">"data/fiji/img_index.shp"</span></div><div class="line">  TILEITEM <span class="string">"Location"</span></div><div class="line">  OFFSITE <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></div><div class="line">END</div></pre></td></tr></table></figure><h4 id="Grid-Layer"><a href="#Grid-Layer" class="headerlink" title="Grid Layer"></a>Grid Layer</h4><p>A grid layer allows you to draw a grid in the local cordinates on your map. It is useful to find location of objects on the map. For best effect the grid must be the last layer in the mapfile to be drawn the last.</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">LAYER</div><div class="line">  NAME <span class="string">"Grid"</span></div><div class="line">  TYPE LINE</div><div class="line">  STATUS OFF</div><div class="line">  CLASS</div><div class="line">    COLOR <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></div><div class="line">    LABEL</div><div class="line">      FONT arial     <span class="comment"># must be in your FONTSET</span></div><div class="line">      TYPE TRUETYPE</div><div class="line">      SIZE <span class="number">8</span></div><div class="line">      COLOR <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></div><div class="line">      OUTLINECOLOR <span class="number">255</span> <span class="number">255</span> <span class="number">255</span></div><div class="line">    END</div><div class="line">  END</div><div class="line">  GRID</div><div class="line">    MINARCS <span class="number">2</span></div><div class="line">    MAXARCS <span class="number">6</span></div><div class="line">  END</div><div class="line">END</div></pre></td></tr></table></figure><h3 id="WMS图层"><a href="#WMS图层" class="headerlink" title="WMS图层"></a>WMS图层</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><div class="line">LAYER</div><div class="line">    NAME         modis_jpl</div><div class="line">    TYPE         RASTER</div><div class="line">    OFFSITE      <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></div><div class="line">    STATUS       OFF</div><div class="line">    CONNECTIONTYPE WMS</div><div class="line">    CONNECTION <span class="string">"http://wms.jpl.nasa.gov/wms.cgi?"</span></div><div class="line"></div><div class="line">    METADATA</div><div class="line">      <span class="string">"wms_srs"</span> <span class="string">"EPSG:4326"</span></div><div class="line">      <span class="string">"wms_name"</span> <span class="string">"modis"</span></div><div class="line">      <span class="string">"wms_server_version"</span> <span class="string">"1.1.1"</span></div><div class="line">      <span class="string">"wms_format"</span> <span class="string">"image/jpeg"</span></div><div class="line">    END</div><div class="line"></div><div class="line">    PROJECTION</div><div class="line">      <span class="string">"init=epsg:4326"</span></div><div class="line">    END</div><div class="line">END</div></pre></td></tr></table></figure><h3 id="DOWNLOAD"><a href="#DOWNLOAD" class="headerlink" title="DOWNLOAD"></a>DOWNLOAD</h3><p>若 DOWNLOAD 被设置为 “T”，那么组成此图层的文件将可以被注册用户下载 .</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">METADATA</div><div class="line"> DOWNLOAD <span class="string">"T"</span></div><div class="line">END</div></pre></td></tr></table></figure><p>The system selects all the files with the same base name as defined in the LAYER DATA or CONNECTION clause but with different extension. However if one of these files has the extension NDL, the download is disabled. This allows to upload GIS data that can only be viewable.</p><h3 id="Reference对象（鹰眼）"><a href="#Reference对象（鹰眼）" class="headerlink" title="Reference对象（鹰眼）"></a>Reference对象（鹰眼）</h3><p>这部分内容定义了如何显示一个概略图（鹰眼图）. 可以用一个图片来表示感兴趣的区域，并指定边界的坐标. 系统将会基于当前的视图，在图片上绘制一个矩形来标识视图的边界。</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">REFERENCE</div><div class="line">  IMAGE /var/www/html/map/data/efate.png <span class="comment"># location of the image</span></div><div class="line">  EXTENT <span class="number">196900</span> <span class="number">8027100</span> <span class="number">245000</span> <span class="number">8073000</span> <span class="comment"># extent of the image</span></div><div class="line">  STATUS ON <span class="comment"># the overview is on by default</span></div><div class="line">  COLOR <span class="number">-1</span> <span class="number">-1</span> <span class="number">-1</span> <span class="comment"># 透明背景</span></div><div class="line">  OUTLINECOLOR <span class="number">255</span> <span class="number">0</span> <span class="number">0</span> <span class="comment"># 边线的颜色</span></div><div class="line">  SIZE <span class="number">95</span> <span class="number">95</span> <span class="comment"># 图像大小，像素</span></div><div class="line">END</div></pre></td></tr></table></figure><p>The tip to create an image for overview, is to not worry about the image at the begining. Any image will do. When the layers are implemented in the mapfile and the main view sounds pretty enough, then select a default view, click <em>Redraw</em> if neccessary to get the minx, maxx, miny, maxy parameters in the URL, (if necessary adjust them manualy). Save the current map as an image onto your local machine, use an image editing software to resize the image to the size you want to use in the overview (here 95x95 pixel). Upload the image using the <em>maps-&gt;layer manager</em> and update the IMAGE link in the REFERENCE group to point to this new image. Finish by entering the correct EXTENTS that corresponds to the minx,miny,maxx,maxy of the map you used to create the overview.</p><h3 id="Legend"><a href="#Legend" class="headerlink" title="Legend"></a>Legend</h3><p>The legend is linked to each LAYER by the way each object type is represented (POINT, LINE, POLYGON,…) and its COLOR and OUTLINECOLOR and by the NAME used in the CLASS group. It is important to have a meaningful NAME for each CLASS group in every LAYER group. The NAME of the CLASS can be different from the NAME of the layer as a LAYER can have several CLASSes.</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">LEGEND</div><div class="line">  <span class="comment"># the size of the object representing the geographical object</span></div><div class="line">  KEYSIZE <span class="number">18</span> <span class="number">12</span></div><div class="line">  LABEL</div><div class="line">    <span class="comment"># Font type for the legend name of each geographical object</span></div><div class="line">    TYPE BITMAP</div><div class="line">4<span class="comment"># font size</span></div><div class="line">    SIZE MEDIUM</div><div class="line">4<span class="comment"># font color</span></div><div class="line">    COLOR <span class="number">0</span> <span class="number">0</span> <span class="number">89</span>	</div><div class="line">  END</div><div class="line">  <span class="comment"># legend is on by default</span></div><div class="line">  STATUS ON	</div><div class="line">END</div></pre></td></tr></table></figure><h3 id="Scalebar"><a href="#Scalebar" class="headerlink" title="Scalebar"></a>Scalebar</h3><p>显示比例尺以获取距离信息.</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">SCALEBAR</div><div class="line">  IMAGECOLOR <span class="number">255</span> <span class="number">255</span> <span class="number">255</span> <span class="comment"># 比例尺占位图片的背景色 background color of the image placeholder</span></div><div class="line">  LABEL</div><div class="line">    COLOR <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>	<span class="comment"># 表示距离的标签的文字颜色 color of the labels indicating the distance</span></div><div class="line">    SIZE SMALL <span class="comment"># 标签大小</span></div><div class="line">  END</div><div class="line">  SIZE <span class="number">350</span> <span class="number">5</span> <span class="comment"># 比例尺的像素大小 </span></div><div class="line">  COLOR <span class="number">255</span> <span class="number">255</span> <span class="number">255</span> <span class="comment"># 比例尺颜色 </span></div><div class="line">  BACKGROUNDCOLOR <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="comment"># 比例尺的背景色</span></div><div class="line">  OUTLINECOLOR <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="comment"># 比例尺外边界颜色</span></div><div class="line">  UNITS kilometers <span class="comment"># 比例尺单位</span></div><div class="line">  INTERVALS <span class="number">5</span> <span class="comment"># 比例尺中总的间隔数 How many intervals in total in the scalebar</span></div><div class="line">  STATUS ON <span class="comment"># 默认启用</span></div><div class="line">END</div></pre></td></tr></table></figure><h3 id="QUERYMAP"><a href="#QUERYMAP" class="headerlink" title="QUERYMAP"></a>QUERYMAP</h3><p>此部分内容用于设置地图为 <strong>可查询的</strong>，以及查询的结果如何显示。即使现在没有可查询的LAYER，也建议包含此部分内容，因为迟早会有这样的需求。</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">QUERYMAP</div><div class="line">  STATUS ON <span class="comment"># 地图默认可查询</span></div><div class="line">  STYLE HILITE <span class="comment"># 高亮显示选中对象</span></div><div class="line">END</div></pre></td></tr></table></figure><h2 id="OUTPUTFORMAT"><a href="#OUTPUTFORMAT" class="headerlink" title="OUTPUTFORMAT"></a><a href="http://mapserver.org/mapfile/outputformat.html" target="_blank" rel="external">OUTPUTFORMAT</a></h2><p>一个map文件可有一个或多个OUTPUTFORMAT 对象，用于定义可用的输出格式，如 PNG, GIF, JPEG, GeoTIFF, SVG, PDF 和 KML 等. pdf 和 svg 依赖 cairo</p><figure class="highlight yaml"><table><tr><td class="code"><pre><div class="line">OUTPUTFORMAT</div><div class="line">  NAME <span class="string">"png"</span></div><div class="line">  DRIVER AGG/PNG </div><div class="line">  MIMETYPE <span class="string">"image/png"</span></div><div class="line">  IMAGEMODE RGB <span class="comment"># [PC256|RGB|RGBA|INT16|FLOAT32|FEATURE]</span></div><div class="line">  EXTENSION <span class="string">"png"</span></div><div class="line">  FORMATOPTION <span class="string">"GAMMA=0.75"</span></div><div class="line">END</div></pre></td></tr></table></figure><p>driver： AGG/PNG 、 AGG/PNG8、AGG/JPEG、 OGR/Mapinfo File、CAIRO/SVG、CAIRO/PDF、CAIRO/PNG、GDAL/GTiff 、KML, KMZ 和 UTFGRID</p><p>FORMATOPTION ：Provides a driver or format specific option. 在一个 OUTPUTFORMAT 中可以有一个或多个 FORMATOPTION 声明 (optional)</p><h2 id="带注释示例"><a href="#带注释示例" class="headerlink" title="带注释示例"></a>带注释示例</h2><blockquote><p><a href="http://geomatica.como.polimi.it/corsi/geog_info_system/3_MapfileETHEX_10-11.pdf" target="_blank" rel="external">Editing the mapfile for a MapServer-based webGIS</a></p></blockquote><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="comment"># ethex.map (with full comments)</span></div><div class="line"><span class="comment"># 此处为 Map 对象定义起始</span></div><div class="line"><span class="comment"># First piece of information is about general characteristics of the map we want</span></div><div class="line"><span class="comment"># to create.</span></div><div class="line"><span class="comment"># It starts with the MAP keyword and finishes with the END keyword.</span></div><div class="line">MAP</div><div class="line">4<span class="comment"># 地图的名称</span></div><div class="line">4NAME <span class="string">"ethex"</span>	</div><div class="line">4<span class="comment"># 地图的地理范围: it is the first extension the webGIS will display</span></div><div class="line">4EXTENT <span class="number">1486000</span> <span class="number">5056000</span> <span class="number">1525000</span> <span class="number">5088000</span>	</div><div class="line">4<span class="comment"># 分辨率 (pixels) of the window where the map will be drawn in</span></div><div class="line">4SIZE <span class="number">500</span> <span class="number">400</span>	</div><div class="line">4<span class="comment"># 数据源路径</span></div><div class="line">4<span class="comment"># (NOTE! here the path is from the mapfile 此处路径从 mapfile 位置开始算)</span></div><div class="line">4SHAPEPATH <span class="string">"data/shpf"</span>	</div><div class="line">4<span class="comment"># 图形符号定义文件路径</span></div><div class="line">4<span class="comment"># (NOTE! 此处路径从 mapfile 位置开始算)</span></div><div class="line">4SYMBOLSET <span class="string">"graphics/symbols/Symbols.sym"</span></div><div class="line">4<span class="comment"># 包含 TrueType 字体定义的文件路径</span></div><div class="line">4<span class="comment"># (NOTE! here the path is from the mapfile)</span></div><div class="line">4FONTSET <span class="string">"graphics/fonts/fontset.txt"</span>	</div><div class="line">4<span class="comment"># 地图图片背景色</span></div><div class="line">4<span class="comment"># (R G B colour model)</span></div><div class="line">4IMAGECOLOR <span class="number">175</span> <span class="number">175</span> <span class="number">175</span>	</div><div class="line">4<span class="comment"># 单位 Geographic units</span></div><div class="line">4UNITS meters 	</div><div class="line">4<span class="comment">#...........................................................................</span></div><div class="line">4 <span class="comment"># Web 对象定义.</span></div><div class="line">4 <span class="comment"># It defines how the interface (template file) has to operate.</span></div><div class="line">4 <span class="comment"># 以 WEB 关键字开始以 END 关键字结束.</span></div><div class="line">4 <span class="comment"># Web 对象包含在 Map 对象里面 ( Map 对象的子对象)</span></div><div class="line">4 </div><div class="line">4 WEB</div><div class="line">4 	<span class="comment"># Path of the folder where MapServer writes temporary files</span></div><div class="line">4 	<span class="comment"># (NOTE! here the path is absolute)</span></div><div class="line">4 	IMAGEPATH <span class="string">"/usr/local/mapserver_tmp/"</span>	 	</div><div class="line">4 	<span class="comment"># Web path of the folder where MapServer writes temporary files</span></div><div class="line">4 	<span class="comment"># (NOTE! here the path is from the web root (E.g. from htdocs for</span></div><div class="line">4 	<span class="comment"># Apache web servers))</span></div><div class="line">4 	IMAGEURL <span class="string">"/tmp/"</span>	 	</div><div class="line">4 	<span class="comment"># 主模板文件名称  Name of the main template file</span></div><div class="line">4 	TEMPLATE <span class="string">"ethex.html"</span></div><div class="line">4 END	 </div><div class="line">4 <span class="comment"># Projection （投影）对象定义.</span></div><div class="line">4 <span class="comment"># 此处定义了地图的全局投影系统（ global CRS（Coordinate Reference System））  </span></div><div class="line">4 PROJECTION</div><div class="line">4 	<span class="comment"># 地图 CRS 的 EPSG 代码  </span></div><div class="line">4 	<span class="string">"init=epsg:3003"</span></div><div class="line">4 END</div><div class="line">4<span class="comment">#...........................................................................</span></div><div class="line">4 <span class="comment"># Reference 对象.</span></div><div class="line">4 <span class="comment"># 定义参考地图 reference map (鹰眼地图 overview map). </span></div><div class="line">4 REFERENCE</div><div class="line">4 	<span class="comment"># 状态 (值: ON 或 OFF)</span></div><div class="line">4 	STATUS on</div><div class="line">4 	<span class="comment"># 参考图图片文件路径</span></div><div class="line">4 	<span class="comment"># (NOTE! path is from the mapfile)</span></div><div class="line">4 	IMAGE <span class="string">"graphics/refmap/refmap.png"</span></div><div class="line">4 	</div><div class="line">4 	<span class="comment"># 窗口屏幕分辨率 (pixels) reference map</span></div><div class="line">4 	SIZE <span class="number">183</span> <span class="number">150</span></div><div class="line">4 	</div><div class="line">4 	<span class="comment"># 参考图地理范围</span></div><div class="line">4 	EXTENT <span class="number">1486000</span> <span class="number">5056000</span> <span class="number">1525000</span> <span class="number">5088000</span></div><div class="line">4 	</div><div class="line">4 	<span class="comment"># 表示主图显示范围的鹰眼图上方框填充颜色</span></div><div class="line">4 	<span class="comment">#  (值 -1 -1 -1 表示透明色)</span></div><div class="line">4 	COLOR <span class="number">-1</span> <span class="number">-1</span> <span class="number">-1</span></div><div class="line">4 </div><div class="line">4 	<span class="comment"># 方框线的颜色</span></div><div class="line">4 	OUTLINECOLOR <span class="number">255</span> <span class="number">0</span> <span class="number">0</span></div><div class="line">4 END</div><div class="line">4<span class="comment">#...........................................................................</span></div><div class="line">4 <span class="comment"># Querymap 对象.</span></div><div class="line">4 <span class="comment"># 定义了 query map (显示查询结果的地图 map drawn to display query results).</span></div><div class="line">4 QUERYMAP</div><div class="line">4 	<span class="comment"># (值: ON or OFF) </span></div><div class="line">4 	STATUS on</div><div class="line">4 	</div><div class="line">4 	<span class="comment"># 用于高亮显示查询结果颜色的颜色</span></div><div class="line">        <span class="comment"># Colour used to highlight queried features (默认: yellow)</span></div><div class="line">4 	COLOR <span class="number">255</span> <span class="number">0</span> <span class="number">0</span></div><div class="line">4 	</div><div class="line">4 	<span class="comment"># STYLE 如何高亮（下划线）显示结果要素的样式</span></div><div class="line">4 	<span class="comment"># 	hilite: 以COLOR定义的颜色为下划线显示结果要素 underlined ; 其他正常显示</span></div><div class="line">4 	<span class="comment"># 	normal: 正常显示，与未查询的要素一样</span></div><div class="line">4 	<span class="comment">#   selected: 查到的要素正常显示，其他要素不显示</span></div><div class="line">4 	STYLE hilite</div><div class="line">4 END</div><div class="line">4<span class="comment">#...........................................................................</span></div><div class="line">4 <span class="comment"># Legend 图例对象.</span></div><div class="line">4 <span class="comment"># static legend.</span></div><div class="line">4 LEGEND</div><div class="line">4 	<span class="comment">#  ON or OFF</span></div><div class="line">4 	STATUS on	 	</div><div class="line">4 	<span class="comment"># 图例背景色</span></div><div class="line">4 	IMAGECOLOR <span class="number">255</span> <span class="number">255</span> <span class="number">255</span>	 	</div><div class="line">4 	<span class="comment"># 图例符号Dimensions of the legend symbols (in pixels) 默认= 20 x 10</span></div><div class="line">4 	KEYSIZE <span class="number">18</span> <span class="number">12</span>	 	</div><div class="line">4 	<span class="comment"># Here starts the definition of the Label Object. The Label Object defines the</span></div><div class="line">4 	<span class="comment"># characteristics of the legend symbols.</span></div><div class="line">4 	LABEL </div><div class="line">4 		<span class="comment"># Here there is the definition of the font to be used; Generally bitmap fonts</span></div><div class="line">4 		<span class="comment"># are faster to be drawn than TrueType fonts. But TrueType fonts are scalable</span></div><div class="line">4 		<span class="comment"># and available in a variety of faces.</span></div><div class="line">4 		<span class="comment"># When truetype is selected the FONT parameter must be also defined.</span></div><div class="line">4 		TYPE truetype</div><div class="line">4 		FONT <span class="string">"courier"</span>	 		</div><div class="line">4 		<span class="comment"># 文本大小.</span></div><div class="line">4 		<span class="comment"># It has to be defined has: [integer] for truetype type</span></div><div class="line">4 		<span class="comment"># [tiny|small|medium|large|giant] for bitmap type.</span></div><div class="line">4 		SIZE <span class="number">10</span>	 		</div><div class="line">4 		<span class="comment"># As an alternative</span></div><div class="line">4 		<span class="comment"># TYPE bitmap</span></div><div class="line">4 		<span class="comment"># SIZE small (o giant o medium)</span></div><div class="line">4 		<span class="comment"># Here we define the color used</span></div><div class="line">4 		COLOR <span class="number">0</span> <span class="number">0</span> <span class="number">130</span></div><div class="line">4 	END</div><div class="line">4 END</div><div class="line">4<span class="comment">#...........................................................................</span></div><div class="line">4 <span class="comment"># 比例尺对象 Scalebar Object.</span></div><div class="line">4 SCALEBAR</div><div class="line">44<span class="comment"># Status of the scalebar (values: ON or OFF)</span></div><div class="line">44STATUS on		</div><div class="line">44<span class="comment"># Color to be used for odd intervals</span></div><div class="line">44COLOR <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> 	</div><div class="line">44<span class="comment">#Color to be used for outlining individual intervals</span></div><div class="line">44OUTLINECOLOR <span class="number">50</span> <span class="number">50</span> <span class="number">50</span>		</div><div class="line">44<span class="comment"># Color to be used for even intervals</span></div><div class="line">44BACKGROUNDCOLOR <span class="number">255</span> <span class="number">255</span> <span class="number">224</span>		</div><div class="line">44<span class="comment"># Background color for the scalebar</span></div><div class="line">44IMAGECOLOR <span class="number">215</span> <span class="number">215</span> <span class="number">200</span>		</div><div class="line">44<span class="comment"># Output scale bar units ([feet|inches|kilometers|meters|miles)</span></div><div class="line">44UNITS kilometers		</div><div class="line">44<span class="comment"># Number of intervals of the scalebar(integer)</span></div><div class="line">44INTERVALS <span class="number">4</span>		</div><div class="line">44<span class="comment"># Scalebar image size(in pixel)</span></div><div class="line">44SIZE <span class="number">200</span> <span class="number">2</span>		</div><div class="line">44<span class="comment"># Scalebar style: (available values: 0,1)</span></div><div class="line">44STYLE <span class="number">0</span>		</div><div class="line">44<span class="comment"># Here starts the definition of the Label Object. The Label Object defines the</span></div><div class="line">44<span class="comment"># characteristics of the scalebar symbols.</span></div><div class="line">44LABEL</div><div class="line">444TYPE bitmap</div><div class="line">444SIZE small</div><div class="line">444COLOR <span class="number">50</span> <span class="number">50</span> <span class="number">50</span></div><div class="line">44END</div><div class="line">44<span class="comment"># As an alternative:</span></div><div class="line">44<span class="comment"># LABEL</span></div><div class="line">444<span class="comment"># TYPE BITMAP</span></div><div class="line">444<span class="comment"># SIZE tiny</span></div><div class="line">444<span class="comment"># COLOR 255 0 0</span></div><div class="line">44<span class="comment"># END</span></div><div class="line">4 END </div><div class="line">4</div><div class="line">4<span class="comment">#...........................................................................</span></div><div class="line">4 <span class="comment"># Layer Object. The Layer Object determines the make-up of</span></div><div class="line">4 <span class="comment"># a specific cartographic layer in the map. Layers are drawn in their order of</span></div><div class="line">4 <span class="comment"># appearance in the MapFile (显示时，第一个图层在最下面，最后的图层在最上面).</span></div><div class="line">4 <span class="comment"># 每个 mapfile 最多 50 个图层.</span></div><div class="line">4 <span class="comment"># This can be changed by editing the map.h file to change the value of</span></div><div class="line">4 <span class="comment"># MS_MAXLAYERS to the desired number and recompiling Mapserver.</span></div><div class="line">    </div><div class="line">4 <span class="comment"># 1st LAYER: our first layer corresponds to a shapefile layer.</span></div><div class="line">4LAYER</div><div class="line">4 	<span class="comment"># 图层名称: it is the link between the MapFile and web interfaces that refer</span></div><div class="line">4 	<span class="comment"># to this name (max=20 characters)</span></div><div class="line">4 	NAME <span class="string">"municipalities"</span></div><div class="line">4 	</div><div class="line">4 	<span class="comment"># 图层状态 (values: DEFAULT = always displayed, ON = displayed on demand or</span></div><div class="line">4 	<span class="comment"># OFF = not displayed)</span></div><div class="line">4 	STATUS default</div><div class="line">4 	</div><div class="line">4 	<span class="comment"># Path and filename of the shapefile to process (without extension).</span></div><div class="line">4 	<span class="comment"># It has to be specified relatively to the SHAPEPATH option of the Map Object.</span></div><div class="line">4 	DATA <span class="string">"municipalities"</span></div><div class="line">4 	<span class="comment"># 数据类型： point/line/polygon/raster</span></div><div class="line">4 	TYPE polygon</div><div class="line">4 	<span class="comment"># Item name in the attribute table to be used for labeling.</span></div><div class="line">4 	LABELITEM <span class="string">"NAME"</span></div><div class="line">4 	<span class="comment"># Item name in the attribute table to be used for defining different thematic</span></div><div class="line">4 	<span class="comment"># classes.</span></div><div class="line">4 	CLASSITEM <span class="string">"DISTRICT"</span> </div><div class="line">44</div><div class="line">4 	<span class="comment"># Maximum scale at which the layer is labeled (double).</span></div><div class="line">4 	LABELMAXSCALE <span class="number">100000</span></div><div class="line">4 	<span class="comment"># Templates to be used to publish a set of results (multiresult query modes)</span></div><div class="line">4 	HEADER <span class="string">"header.html"</span></div><div class="line">4 	FOOTER <span class="string">"footer.html"</span></div><div class="line">4 	TEMPLATE <span class="string">"query.html"</span></div><div class="line">4 	<span class="comment"># Metadata definition needed for attribute queries (MapServer version 5+)</span></div><div class="line">4 	METADATA</div><div class="line">4 		qstring_validation_pattern <span class="string">'.'</span></div><div class="line">4 	END</div><div class="line">4 </div><div class="line">4 	<span class="comment"># Here starts the first Class Object. It defines the thematic classes of the</span></div><div class="line">4 	<span class="comment"># layer.</span></div><div class="line">4 	<span class="comment"># Each layer must have at least one class.</span></div><div class="line">4 	<span class="comment"># If more than one class has to be defined, membership is determined using</span></div><div class="line">4 	<span class="comment"># attribute values and expressions.</span></div><div class="line">4 	<span class="comment"># It starts with the keyword CLASS and terminates with the keyword END.</span></div><div class="line">4 	CLASS</div><div class="line">4 		<span class="comment"># Name to be used in the legend for the specific class. If it has not been</span></div><div class="line">4 		<span class="comment"># defined, in the legend this class doesn't appear.</span></div><div class="line">4 		NAME <span class="string">"Como district"</span></div><div class="line">4 		<span class="comment"># Value of the attribute item defined in CLASSITEM</span></div><div class="line">4 		EXPRESSION <span class="string">"Como"</span></div><div class="line">4 		<span class="comment"># Label to be used</span></div><div class="line">4 		LABEL</div><div class="line">4 			TYPE TRUETYPE</div><div class="line">4 			FONT <span class="string">"times"</span></div><div class="line">4 			SIZE <span class="number">8</span></div><div class="line">4 			<span class="comment"># Label positioning; available values: auto, ul|uc|ur|cl|cc|cr|ll|lc|lr; in</span></div><div class="line">4 			<span class="comment"># this latter case first letter refers to </span></div><div class="line">4 			<span class="comment"># Y coordinate (u= up, c= center, l= low), the second to X coordinate(l=</span></div><div class="line">4 			<span class="comment"># left, c= center, r= right.</span></div><div class="line">4 			<span class="comment"># By selecting the value "auto" MapServer is requested to calculate a</span></div><div class="line">4 			<span class="comment"># label position that will not interfere with other labels.</span></div><div class="line">4 			POSITION auto</div><div class="line">4 			<span class="comment"># Label color</span></div><div class="line">4 			COLOR <span class="number">155</span> <span class="number">155</span> <span class="number">155</span></div><div class="line">4 		END</div><div class="line">4 		<span class="comment"># Style to be used for the feautures of the layer.</span></div><div class="line">4 		STYLE</div><div class="line">4 			<span class="comment"># Color to be used for drawing features.</span></div><div class="line">4 			COLOR <span class="number">0</span> <span class="number">0</span> <span class="number">255</span></div><div class="line">4 			<span class="comment"># Color to be used for outlining polygons.</span></div><div class="line">4 			OUTLINECOLOR <span class="number">0</span> <span class="number">255</span> <span class="number">0</span></div><div class="line">4 		END</div><div class="line">4 	END</div><div class="line">4 	<span class="comment"># See previous class for comments</span></div><div class="line">44CLASS</div><div class="line">444NAME <span class="string">"Varese district"</span></div><div class="line">444EXPRESSION <span class="string">"Varese"</span></div><div class="line">444LABEL</div><div class="line">4444TYPE TRUETYPE</div><div class="line">4444FONT <span class="string">"times"</span></div><div class="line">4444SIZE <span class="number">8</span></div><div class="line">4444POSITION AUTO</div><div class="line">4444COLOR <span class="number">155</span> <span class="number">155</span> <span class="number">155</span></div><div class="line">444END</div><div class="line">444STYLE</div><div class="line">4444COLOR <span class="number">110</span> <span class="number">210</span> <span class="number">55</span></div><div class="line">4444OUTLINECOLOR <span class="number">225</span> <span class="number">0</span> <span class="number">0</span></div><div class="line">444END </div><div class="line">44END</div><div class="line">4END</div><div class="line">4<span class="comment">#...........................................................................</span></div><div class="line"></div><div class="line">4<span class="comment">#...........................................................................</span></div><div class="line">4 <span class="comment"># 3rd LAYER: it is a raster layer (see 2nd layer)</span></div><div class="line">4LAYER</div><div class="line">44NAME <span class="string">"NEraster"</span></div><div class="line">        <span class="comment"># Name of the group that the layer belongs to.</span></div><div class="line">44<span class="comment"># The group allows to do things like turning on and off a group of layers at</span></div><div class="line">44<span class="comment"># once.</span></div><div class="line">44<span class="comment">#GROUP "raster4"</span></div><div class="line">44STATUS on</div><div class="line">        <span class="comment"># Name of the data file: a path relative to SHAPEPATH is used.</span></div><div class="line">44DATA <span class="string">"../raster/ne.tif"</span></div><div class="line">44TYPE raster </div><div class="line">        <span class="comment"># Scale at which the layer is drawn.</span></div><div class="line">44MINSCALEDENOM <span class="number">2000</span></div><div class="line">44MAXSCALEDENOM <span class="number">25000</span></div><div class="line">4END</div><div class="line">4<span class="comment">#...........................................................................</span></div><div class="line"></div><div class="line">4<span class="comment">#...........................................................................</span></div><div class="line">4 <span class="comment"># 6th LAYER: it is a vector (shp file) layer </span></div><div class="line">4 LAYER</div><div class="line">4 	NAME <span class="string">"lakes"</span></div><div class="line">4 	STATUS default</div><div class="line">4 	DATA <span class="string">"lakes"</span></div><div class="line">4 	TYPE polygon</div><div class="line">4 	LABELITEM <span class="string">"NAME"</span></div><div class="line">4 	CLASS</div><div class="line">4 		NAME <span class="string">"Lakes"</span></div><div class="line">4 		STYLE</div><div class="line">4 			<span class="comment"># Name (or number) of the symbol to be used for the features</span></div><div class="line">4 			<span class="comment"># Symbols are defined in the file given in the SYMBOLSET parameter</span></div><div class="line">4 			SYMBOL <span class="string">"lakes_ellipse"</span></div><div class="line">4 			COLOR <span class="number">0</span> <span class="number">215</span> <span class="number">240</span></div><div class="line">4 			OUTLINECOLOR <span class="number">0</span> <span class="number">215</span> <span class="number">240</span></div><div class="line">4 		END</div><div class="line">4 		LABEL</div><div class="line">4 			TYPE truetype</div><div class="line">4 			FONT <span class="string">"mtypcors"</span></div><div class="line">4 			SIZE <span class="number">11</span></div><div class="line">4 			<span class="comment"># Label positioning; available values: auto, ul|uc|ur|cl|cc|cr|ll|lc|lr; in</span></div><div class="line">4 			<span class="comment"># this latter case first letter refers to Y coordinate (u= up, c= center,</span></div><div class="line">4 			<span class="comment"># l= low), the second to X coordinate(l= left, c= center, r= right).</span></div><div class="line">4 			<span class="comment"># By selecting the value "auto", MapServer is requested to calculate a</span></div><div class="line">4 			<span class="comment"># label position that will not interfere with other labels.</span></div><div class="line">4 			POSITION AUTO</div><div class="line">4 			COLOR <span class="number">0</span> <span class="number">0</span> <span class="number">255</span></div><div class="line">4 			BACKGROUNDCOLOR <span class="number">255</span> <span class="number">255</span> <span class="number">0</span></div><div class="line">4 		END</div><div class="line">4 	END</div><div class="line">4 END</div><div class="line">4<span class="comment">#........................................................................... </span></div><div class="line">4 <span class="comment"># 7th LAYER: it is a vector (shp file) layer</span></div><div class="line">4 LAYER</div><div class="line">4 	NAME <span class="string">"railways"</span></div><div class="line">4 	STATUS on</div><div class="line">4 	DATA <span class="string">"railways"</span></div><div class="line">4 	TYPE line</div><div class="line">4 	MAXSCALEDENOM <span class="number">100000</span></div><div class="line">4 	CLASS</div><div class="line">4 		NAME <span class="string">"Railways"</span></div><div class="line">4 		STYLE</div><div class="line">4 			SYMBOL <span class="string">"point"</span></div><div class="line">4 			COLOR <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></div><div class="line">4 			SIZE <span class="number">7</span></div><div class="line">4 		END</div><div class="line">4 		STYLE</div><div class="line">4 			SYMBOL <span class="string">"point"</span></div><div class="line">4 			COLOR <span class="number">255</span> <span class="number">255</span> <span class="number">0</span></div><div class="line">4 			SIZE <span class="number">5</span></div><div class="line">4 		END</div><div class="line">4 		STYLE</div><div class="line">4 			SYMBOL <span class="string">"line10-10"</span></div><div class="line">4 			COLOR <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></div><div class="line">4 			SIZE <span class="number">1</span></div><div class="line">4 		END</div><div class="line">4 	END</div><div class="line">4 END</div><div class="line">4</div><div class="line">4<span class="comment">#...........................................................................</span></div><div class="line">4 <span class="comment"># 8th LAYER:it is a vector (shp file) layer. A different projection (UTM32/WGS84</span></div><div class="line">4 <span class="comment"># characterises the data.</span></div><div class="line">4 LAYER </div><div class="line">4 	NAME <span class="string">"stations"</span></div><div class="line">4 	STATUS on</div><div class="line">4 	DATA <span class="string">"stations"</span></div><div class="line">4 	TYPE point</div><div class="line">4 	CLASSITEM <span class="string">"COMP_CODE"</span></div><div class="line">4 	LABELITEM <span class="string">"NAME"</span></div><div class="line">4 	LABELMAXSCALEDENOM <span class="number">100000</span></div><div class="line">4 	HEADER <span class="string">"header_f.html"</span></div><div class="line">4 	FOOTER <span class="string">"footer_f.html"</span></div><div class="line">4 	TEMPLATE <span class="string">"query_f.html"</span></div><div class="line">4 	<span class="comment"># Projection: 32632 is the CRS UTM32/WGS84 code.</span></div><div class="line">4 	PROJECTION</div><div class="line">4 		<span class="string">"init=epsg:32632"</span></div><div class="line">4 	END</div><div class="line">4 	METADATA</div><div class="line">4 		qstring_validation_pattern <span class="string">'.'</span></div><div class="line">4 	END</div><div class="line">4 	CLASS</div><div class="line">4 		NAME <span class="string">"FNM stations (WGS84-UTM)"</span></div><div class="line">4 		<span class="comment"># Four different kind of EXPRESSION are available to define the membership</span></div><div class="line">4 		<span class="comment"># to one specific class:</span></div><div class="line">4 		<span class="comment"># strings comparison (case sensitive and fastest to evaluate).</span></div><div class="line">4 		<span class="comment"># regular expression (a regular expression ( regexp or regex is a string</span></div><div class="line">4 		<span class="comment"># that describes or matches a set of strings,</span></div><div class="line">4 		<span class="comment"># according to certain syntax rules. For example</span></div><div class="line">4 		<span class="comment"># they are used by text editors and utilities</span></div><div class="line">4 		<span class="comment"># to search and manipulate bodies of text based on</span></div><div class="line">4 		<span class="comment"># certain patterns).</span></div><div class="line">4 		<span class="comment"># Examples available at:</span></div><div class="line">4 		<span class="comment"># http://umn.mapserver.ch/index_en.php</span></div><div class="line">4 		<span class="comment"># logical expression, delimited by parentheses "(expression)". Attribute </span></div><div class="line">444</div><div class="line">4 		<span class="comment"># names are delimited by square brackets "[ATTRIBUTE]".</span></div><div class="line">4 		<span class="comment"># The following logical operators are supported:</span></div><div class="line">4 		<span class="comment"># =,&gt;,&lt;,&lt;=,&gt;=,=,or,and,lt,gt,ge,le,eq,ne.</span></div><div class="line">4 		<span class="comment"># lenght function of the string;</span></div><div class="line">4 		<span class="comment"># example: EXPRESSION (length('[NAME_E]') &lt; 8)</span></div><div class="line">4 		<span class="comment">#</span></div><div class="line">4 		<span class="comment"># In the following, by using expression, "FNM" and "FS" stations are</span></div><div class="line">4 		<span class="comment"># given different symbols and colors.</span></div><div class="line">4 		EXPRESSION <span class="string">"FNM"</span></div><div class="line">4 		LABEL</div><div class="line">4 			TYPE truetype</div><div class="line">4 			FONT <span class="string">"arial"</span></div><div class="line">4 			SIZE <span class="number">9</span></div><div class="line">4 			POSITION auto</div><div class="line">4 			COLOR <span class="number">0</span> <span class="number">200</span> <span class="number">0</span></div><div class="line">4 			BACKGROUNDCOLOR <span class="number">200</span> <span class="number">255</span> <span class="number">0</span></div><div class="line">4 			<span class="comment">#SHADOWSIZE 1 1</span></div><div class="line">4 			<span class="comment">#SHADOWCOLOR 0 0 0</span></div><div class="line">4 			<span class="comment">#BACKGROUNDSHADOWSIZE 5 5</span></div><div class="line">4 			<span class="comment">#BACKGROUNDSHADOWCOLOR 0 100 0</span></div><div class="line">4 		END</div><div class="line">4 		STYLE</div><div class="line">4 			SYMBOL <span class="string">"7x7square"</span></div><div class="line">4 			COLOR <span class="number">0</span> <span class="number">200</span> <span class="number">0</span></div><div class="line">4 		END</div><div class="line">4 	END</div><div class="line">4 	CLASS</div><div class="line">4 		NAME <span class="string">"FS stations (WGS84-UTM)"</span></div><div class="line">4 		EXPRESSION <span class="string">"FS"</span></div><div class="line">4 		LABEL</div><div class="line">4 			TYPE truetype</div><div class="line">4 			FONT <span class="string">"mtypcors"</span></div><div class="line">4 			SIZE <span class="number">10</span></div><div class="line">4 			POSITION auto </div><div class="line">4 			COLOR <span class="number">0</span> <span class="number">0</span> <span class="number">157</span></div><div class="line">4 			BACKGROUNDCOLOR <span class="number">0</span> <span class="number">220</span> <span class="number">255</span></div><div class="line">4 		END</div><div class="line">4 		STYLE</div><div class="line">4 			SYMBOL <span class="string">"7x7square"</span></div><div class="line">4 			COLOR <span class="number">0</span> <span class="number">0</span> <span class="number">157</span></div><div class="line">4 		END</div><div class="line">4 	END</div><div class="line">4 END</div><div class="line">4<span class="comment">#...........................................................................</span></div><div class="line">4 <span class="comment"># 9th LAYER: it is a vector (MapInfo) layer. It is read through the OGR library.</span></div><div class="line">4 LAYER</div><div class="line">4 	NAME <span class="string">"alluvional-cones"</span></div><div class="line">4 	STATUS on</div><div class="line">4 	TYPE line</div><div class="line">4 	<span class="comment"># CONNECTIONTYPE specifies the connection:</span></div><div class="line">4 	<span class="comment"># CONNECTIONTYPE [local|sde|ogr|postgis|oraclespatial|wms]</span></div><div class="line">4 	CONNECTIONTYPE OGR</div><div class="line">44</div><div class="line">4 	<span class="comment"># Relative path and data file (here the path is from the mapfile)</span></div><div class="line">4 	CONNECTION <span class="string">"data/ogr/alluvional-cones.tab"</span></div><div class="line">4 	MAXSCALEDENOM <span class="number">100000</span></div><div class="line">4 	CLASS</div><div class="line">4 		NAME <span class="string">"Alluvional cones"</span></div><div class="line">4 		STYLE</div><div class="line">4 			COLOR <span class="number">214</span> <span class="number">49</span> <span class="number">148</span></div><div class="line">4 		END</div><div class="line">4 	END</div><div class="line">4 END</div><div class="line">4<span class="comment">#........................................................................... </span></div><div class="line">4</div><div class="line">4 <span class="comment"># 10th LAYER: it is the same as the 8th layer but in the Gauss/Boaga projection.</span></div><div class="line">4 LAYER</div><div class="line">4 	NAME <span class="string">"stationsgb"</span></div><div class="line">4 	STATUS on</div><div class="line">4 	DATA <span class="string">"GaussBoaga/stations"</span></div><div class="line">4 	TYPE point</div><div class="line">4 	CLASSITEM <span class="string">"COMP_CODE"</span></div><div class="line">4 	LABELITEM <span class="string">"NAME"</span></div><div class="line">4 	LABELMAXSCALEDENOM <span class="number">100000</span></div><div class="line">4 	HEADER <span class="string">"header_f.html"</span></div><div class="line">4 	FOOTER <span class="string">"footer_f.html"</span></div><div class="line">4 	TEMPLATE <span class="string">"query_f.html"</span></div><div class="line">4 	CLASS</div><div class="line">4 		NAME <span class="string">"FNM stations (GB)"</span></div><div class="line">4 		EXPRESSION <span class="string">"FNM"</span></div><div class="line">4 		LABEL</div><div class="line">4 			TYPE truetype</div><div class="line">4 			FONT <span class="string">"arial"</span></div><div class="line">4 			SIZE <span class="number">9</span></div><div class="line">4 			POSITION auto</div><div class="line">4 			COLOR <span class="number">0</span> <span class="number">200</span> <span class="number">0</span></div><div class="line">4 			BACKGROUNDCOLOR <span class="number">200</span> <span class="number">255</span> <span class="number">0</span></div><div class="line">4 		END</div><div class="line">4 		STYLE</div><div class="line">4 			SYMBOL <span class="string">"7x7square"</span></div><div class="line">4 			COLOR <span class="number">250</span> <span class="number">215</span> <span class="number">0</span></div><div class="line">4 		END</div><div class="line">4 	END</div><div class="line">4 	CLASS</div><div class="line">4 		 NAME <span class="string">"FS stations (GB)"</span></div><div class="line">4 		 EXPRESSION <span class="string">"FS"</span></div><div class="line">4 		 LABEL </div><div class="line">444 	 TYPE truetype</div><div class="line">444 	 FONT <span class="string">"mtypcors"</span></div><div class="line">444 	 SIZE <span class="number">10</span></div><div class="line">444 	 POSITION auto</div><div class="line">444 	 COLOR <span class="number">0</span> <span class="number">0</span> <span class="number">157</span></div><div class="line">444 	 BACKGROUNDCOLOR <span class="number">0</span> <span class="number">220</span> <span class="number">255</span></div><div class="line">4 		 END</div><div class="line">444 STYLE</div><div class="line">444 	SYMBOL <span class="string">"7x7square"</span></div><div class="line">444 	COLOR <span class="number">230</span> <span class="number">70</span> <span class="number">157</span></div><div class="line">444 END</div><div class="line">4 	END</div><div class="line">4 END</div><div class="line"><span class="comment"># end of the Map Object</span></div><div class="line">END</div></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[WebService 学习基础-1]]></title>
      <url>houzw.github.io.git/2016/12/18/WebService-%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80-1/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="WebService-基础学习-2"><a href="#WebService-基础学习-2" class="headerlink" title="WebService 基础学习-2"></a>WebService 基础学习-2</h1><h2 id="CXF支持的数据类型"><a href="#CXF支持的数据类型" class="headerlink" title="CXF支持的数据类型"></a>CXF支持的数据类型</h2><ol><li>基本数据类型，如int、float等</li><li>引用类型：String、集合（Map、List等）、自定义类型<ul><li>JDK的WebService不支持Map类型</li></ul></li></ol><h2 id="一次Web-Service请求的流程"><a href="#一次Web-Service请求的流程" class="headerlink" title="一次Web Service请求的流程"></a>一次Web Service请求的流程</h2><ol><li>客户端向服务端发送一个soap消息（http+xml）（根据wsdl）</li><li>服务端处理完成之后，给客户端返回一个soap消息</li></ol><h2 id="CXF拦截器"><a href="#CXF拦截器" class="headerlink" title="CXF拦截器"></a>CXF拦截器</h2><p><code>org.apache.cxf.interceptor</code> ——为了在WebService请求过程中，动态地操作请求和响应数据（消息）</p><h3 id="分类（从不同角度）"><a href="#分类（从不同角度）" class="headerlink" title="分类（从不同角度）"></a>分类（从不同角度）</h3><ul><li>服务端、客户端拦截器</li><li>入拦截器、出拦截器</li><li>系统拦截器、自定义拦截器（继承<code>AbstractPhaseInterceptor</code>）</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Interceptor</span>&lt;<span class="title">T</span> <span class="keyword">extends</span> <span class="title">Message</span>&gt; </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(T message)</span> <span class="keyword">throws</span> Fault</span>;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">handleFault</span><span class="params">(T message)</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>Endpoint发布之后有一个返回值， 其类型（Endpoint）可转为<code>org.apache.cxf.jaxws22.EndpointImpl</code></p><h3 id="系统拦截器——访问日志"><a href="#系统拦截器——访问日志" class="headerlink" title="系统拦截器——访问日志"></a>系统拦截器——访问日志</h3><p>如添加日志入拦截器：</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">List&lt;Interceptor&lt;? extends Message&gt;&gt; inInterceptors = endpointImpl.getInterceptors();</div><div class="line">inInterceptors.add(<span class="keyword">new</span> LoggingInInterceptor());</div></pre></td></tr></table></figure><p>客户端代码中添加日志出拦截器</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">XXXImplService implservice = <span class="keyword">new</span> XXXImplService();</div><div class="line">Client client = ClientProxy.getClient(implservice.getXXXImplPort());</div><div class="line">List&lt;Interceptor&lt;? extends Message&gt;&gt; outInterceptors = client.getOutInterceptors();</div></pre></td></tr></table></figure><h3 id="自定义拦截器——用户名和密码检查"><a href="#自定义拦截器——用户名和密码检查" class="headerlink" title="自定义拦截器——用户名和密码检查"></a>自定义拦截器——用户名和密码检查</h3><blockquote><p>参考：Apache CXF Web Service Development</p></blockquote><p>继承<code>AbstractPhaseInterceptor&lt;SoapMessage&gt;</code>（抽象过程拦截器，或直接<code>AbstractSoapInterceptor</code>）</p><p>soap消息头类似：</p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">soap:Header</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">OrderCredentials</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">username</span>&gt;</span>John<span class="tag">&lt;/<span class="name">username</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">password</span>&gt;</span>password<span class="tag">&lt;/<span class="name">password</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">OrderCredentials</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">soap:Header</span>&gt;</span></div></pre></td></tr></table></figure><p>客户端发送（out）,将用户名和密码信息添加到SOAP header中</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">clientHandlerInterceptor</span> <span class="keyword">extends</span> <span class="title">AbstractSoapInterceptor</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">private</span> String name;</div><div class="line">    <span class="keyword">private</span> String password;</div><div class="line">    <span class="comment">//需要一个构造函数（可以有参数）</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">myInterceptor</span><span class="params">(String name, String password)</span></span>&#123;</div><div class="line">        <span class="keyword">super</span>(Phase.PRE_PROTOCOL);<span class="comment">//准备协议时拦截</span></div><div class="line">        <span class="keyword">this</span>.name = name;</div><div class="line">        <span class="keyword">this</span>.password = password;</div><div class="line">      <span class="comment">//execute during the WRITE phase and after the SoapPreProtocolOutInterceptor interceptor class</span></div><div class="line">     	<span class="comment">//super(Phase.WRITE);?</span></div><div class="line">44<span class="comment">//addAfter(SoapPreProtocolOutInterceptor.class.getName());?</span></div><div class="line">    &#125;  </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(SoapMessage message)</span> <span class="keyword">throws</span> Fault</span></div><div class="line">    &#123;       </div><div class="line">        List&lt;Header&gt; headers = message.getHeaders();<span class="comment">//获得消息头</span></div><div class="line">        Document document = DOMUtils.createDocument();</div><div class="line">        Element root = document.createElement(<span class="string">"OrderCredentials"</span>);</div><div class="line">        Element nameEl = document.createElement(<span class="string">"name"</span>);</div><div class="line">        Element pwEl = document.createElement(<span class="string">"pw"</span>);</div><div class="line">        nameEl.setTextContent(name);</div><div class="line">        pwEl.setTextContent(password);</div><div class="line">        root.appendChild(nameEl);</div><div class="line">        root.appendChild(pwEl);</div><div class="line"></div><div class="line">        headers.add(<span class="keyword">new</span> Header(<span class="keyword">new</span> QName(<span class="string">"OrderCredentials"</span>),root));</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>添加（参考上面日志拦截器）</p><p>服务端检查</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">checkInterceptor</span> <span class="keyword">extends</span> <span class="title">AbstractSoapInterceptor</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">private</span> String userName;</div><div class="line">    <span class="keyword">private</span> String password;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">checkInterceptor</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">super</span>(Phase.PRE_INVOKE);<span class="comment">//在PRE_INVOKE阶段执行</span></div><div class="line">    &#125;  </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(SoapMessage message)</span> <span class="keyword">throws</span> Fault</span></div><div class="line">    &#123;       </div><div class="line">        QName qnameCredentials = <span class="keyword">new</span> QName(<span class="string">"OrderCredentials"</span>);</div><div class="line">      <span class="keyword">if</span> (message.hasHeader(qnameCredentials)) &#123;</div><div class="line">444Header header = message.getHeader(qnameCredentials);<span class="comment">//根据qname获得相应的header</span></div><div class="line">      		Element elementOrderCredential= (Element) header.getObject();<span class="comment">//转为标签</span></div><div class="line">444Node nodeUser = elementOrderCredential.getFirstChild();</div><div class="line">       		Node nodePassword = elementOrderCredential.getLastChild();</div><div class="line">       <span class="keyword">if</span> (usernamel != <span class="keyword">null</span>) &#123;</div><div class="line">444userName = nodeUser.getTextContent();<span class="comment">//获得用户名</span></div><div class="line">44&#125;</div><div class="line">44<span class="keyword">if</span> (passwordel != <span class="keyword">null</span>) &#123;</div><div class="line">444password = nodePassword.getTextContent();<span class="comment">//获得密码</span></div><div class="line">44&#125; </div><div class="line">      <span class="comment">//判断</span></div><div class="line">      <span class="keyword">if</span> (<span class="string">"John"</span>.equalsIgnoreCase(userName) &amp;&amp; <span class="string">"password"</span>.</div><div class="line">444equalsIgnoreCase(password)) &#123;</div><div class="line">444System.out.println(<span class="string">"Authentication successful for John"</span>);</div><div class="line">44&#125; <span class="keyword">else</span> &#123;</div><div class="line">444<span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Invalid user"</span>);<span class="comment">//抛出异常</span></div><div class="line">44&#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>写好之后添加为<strong>入拦截器</strong></p><ul><li>在EndpointImpl中添加，或</li><li>在<code>@WebService</code>类上面添加<code>@InInterceptors (interceptors = {&quot;demo.checkInterceptor&quot; })</code></li></ul><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[SOAP教程]]></title>
      <url>houzw.github.io.git/2016/12/13/SOAP%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="SOAP-教程"><a href="#SOAP-教程" class="headerlink" title="SOAP 教程"></a>SOAP 教程</h1><blockquote><p><a href="http://www.w3school.com.cn/soap/index.asp" target="_blank" rel="external">http://www.w3school.com.cn/soap/index.asp</a></p></blockquote><h2 id="什么是-SOAP？"><a href="#什么是-SOAP？" class="headerlink" title="什么是 SOAP？"></a>什么是 SOAP？</h2><ul><li>SOAP 指<strong>简易对象访问协议</strong></li><li>SOAP 是一种<strong>通信协议</strong></li><li>SOAP 用于<strong>应用程序之间</strong>的通信</li><li>SOAP 是一种用于<strong>发送消息</strong>的格式</li><li>SOAP 被设计用来<strong>通过因特网</strong>进行通信</li><li>SOAP <strong>独立于平台</strong></li><li>SOAP <strong>独立于语言</strong></li><li>SOAP 基于 <strong>XML</strong></li><li>SOAP 很<strong>简单并可扩展</strong></li><li>SOAP <strong>允许您绕过防火墙</strong></li><li>SOAP 将被作为 <strong>W3C 标准</strong>来发展</li></ul><h2 id="SOAP-语法"><a href="#SOAP-语法" class="headerlink" title="SOAP 语法"></a>SOAP 语法</h2><h3 id="SOAP-构建模块"><a href="#SOAP-构建模块" class="headerlink" title="SOAP 构建模块"></a>SOAP 构建模块</h3><p>一条 SOAP 消息就是一个普通的 XML 文档，包含下列元素：</p><ul><li><strong>必需</strong>的 <strong>Envelope</strong> 元素，可把此 XML 文档<strong>标识</strong>为一条 SOAP 消息</li><li><strong>可选</strong>的 <strong>Header</strong> 元素，包含<strong>头部</strong>信息</li><li><strong>必需</strong>的 <strong>Body</strong> 元素，包含所有的<strong>调用和响应</strong>信息</li><li><strong>可选</strong>的 <strong>Fault</strong> 元素，提供有关在处理此消息所发生<strong>错误</strong>的信息</li></ul><p>所有以上的元素均被声明于针对 SOAP 封装的<strong>默认命名空间</strong>中：</p><p><a href="http://www.w3.org/2001/12/soap-envelope" target="_blank" rel="external">http://www.w3.org/2001/12/soap-envelope</a></p><p>以及针对 SOAP <strong>编码和数据类型</strong>的<strong>默认命名空间</strong>：</p><p><a href="http://www.w3.org/2001/12/soap-encoding" target="_blank" rel="external">http://www.w3.org/2001/12/soap-encoding</a></p><h3 id="语法规则"><a href="#语法规则" class="headerlink" title="语法规则"></a>语法规则</h3><ul><li>SOAP 消息<strong>必须</strong>用 <strong>XML</strong> 来编码</li><li>SOAP 消息<strong>必须</strong>使用 <strong>SOAP Envelope</strong> 命名空间</li><li>SOAP 消息<strong>必须</strong>使用 <strong>SOAP Encoding</strong> 命名空间</li><li>SOAP 消息<strong>不能</strong>包含 <strong>DTD</strong> 引用</li><li>SOAP 消息<strong>不能</strong>包含 <strong>XML 处理指令</strong></li></ul><h3 id="SOAP-消息的基本结构"><a href="#SOAP-消息的基本结构" class="headerlink" title="SOAP 消息的基本结构"></a>SOAP 消息的基本结构</h3><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line">&lt;?xml version="1.0"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">soap:Envelope</span></span></div><div class="line"><span class="attr">xmlns:soap</span>=<span class="string">"http://www.w3.org/2001/12/soap-envelope"</span></div><div class="line"><span class="attr">soap:encodingStyle</span>=<span class="string">"http://www.w3.org/2001/12/soap-encoding"</span>&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">soap:Header</span>&gt;</span></div><div class="line">  ...</div><div class="line"><span class="tag">&lt;/<span class="name">soap:Header</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">soap:Body</span>&gt;</span></div><div class="line">  ...</div><div class="line">  <span class="tag">&lt;<span class="name">soap:Fault</span>&gt;</span></div><div class="line">    ...</div><div class="line">  <span class="tag">&lt;/<span class="name">soap:Fault</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">soap:Body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">soap:Envelope</span>&gt;</span></div></pre></td></tr></table></figure><h2 id="SOAP-Envelope-元素"><a href="#SOAP-Envelope-元素" class="headerlink" title="SOAP Envelope 元素"></a>SOAP Envelope 元素</h2><p><strong>强制使用的 SOAP 的 Envelope 元素是 SOAP 消息的根元素。</strong></p><h3 id="SOAP-Envelope-元素-1"><a href="#SOAP-Envelope-元素-1" class="headerlink" title="SOAP Envelope 元素"></a>SOAP Envelope 元素</h3><p>Envelope 元素是 SOAP 消息的<strong>根元素</strong>。它可把 XML 文档定义为 SOAP 消息。</p><p>请注意 <code>xmlns:soap</code> 命名空间的值应当始终是：<code>http://www.w3.org/2001/12/soap-envelope</code> 如果使用了不同的命名空间，应用程序会发生错误，并抛弃此消息。</p><p>并且它可把封装定义为 SOAP 封装：</p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line">&lt;?xml version="1.0"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">soap:Envelope</span></span></div><div class="line"><span class="attr">xmlns:soap</span>=<span class="string">"http://www.w3.org/2001/12/soap-envelope"</span></div><div class="line"><span class="attr">soap:encodingStyle</span>=<span class="string">"http://www.w3.org/2001/12/soap-encoding"</span>&gt;</div><div class="line">  ...</div><div class="line">  Message information goes here</div><div class="line">  ...</div><div class="line"><span class="tag">&lt;/<span class="name">soap:Envelope</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="encodingStyle-属性"><a href="#encodingStyle-属性" class="headerlink" title="encodingStyle 属性"></a>encodingStyle 属性</h3><p>SOAP 的 <strong>encodingStyle</strong> 属性用于定义在文档中使用的<strong>数据类型</strong>。此属性可出现在<strong>任何 SOAP 元素</strong>中，并会被应用到元素的内容及元素的所有子元素上。SOAP 消息<strong>没有默认的编码方式</strong>。</p><p>语法 <code>soap:encodingStyle=&quot;URI&quot;</code></p><h2 id="SOAP-Header-元素"><a href="#SOAP-Header-元素" class="headerlink" title="SOAP Header 元素"></a>SOAP Header 元素</h2><p><strong>可选</strong>的 SOAP <strong>Header</strong> 元素可包含有关 SOAP 消息的<strong>应用程序专用信息</strong>（比如认证、支付等）。如果 Header 元素被提供，则它必须是 Envelope 元素的<strong>第一个子元素</strong>。</p><p>注释：所有 Header 元素的<strong>直接子元素</strong>必须是<strong>合格的命名空间</strong>。</p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line">&lt;?xml version="1.0"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">soap:Envelope</span></span></div><div class="line"><span class="attr">xmlns:soap</span>=<span class="string">"http://www.w3.org/2001/12/soap-envelope"</span></div><div class="line"><span class="attr">soap:encodingStyle</span>=<span class="string">"http://www.w3.org/2001/12/soap-encoding"</span>&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">soap:Header</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">m:Trans</span> <span class="attr">xmlns:m</span>=<span class="string">"http://www.w3school.com.cn/transaction/"</span> <span class="attr">soap:mustUnderstand</span>=<span class="string">"1"</span>&gt;</span>234<span class="tag">&lt;/<span class="name">m:Trans</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">soap:Header</span>&gt;</span></div><div class="line">...</div><div class="line"><span class="tag">&lt;/<span class="name">soap:Envelope</span>&gt;</span></div></pre></td></tr></table></figure><p>上面的例子包含了一个带有一个 “Trans” 元素的头部，它的值是 234，此元素的 “mustUnderstand” 属性的值是 “1”。</p><p>SOAP 在默认的命名空间中定义了三个属性。这三个属性是：<strong><em>actor</em></strong>、 <strong><em>mustUnderstand</em></strong> 以及 <strong><em>encodingStyle</em></strong>。这些被定义在 SOAP 头部的属性可定义容器如何对 SOAP 消息进行处理。</p><h3 id="actor-属性"><a href="#actor-属性" class="headerlink" title="actor 属性"></a>actor 属性</h3><p>通过沿着消息路径经过不同的端点，SOAP 消息可<strong>从某个发送者传播到某个接收者</strong>。并非 SOAP 消息的所有部分均打算传送到 SOAP 消息的最终端点，不过，另一个方面，也许打算传送给消息路径上的一个或多个端点。</p><p>SOAP 的 actor 属性可被用于将 Header 元素寻址到一个<strong>特定的端点</strong>。</p><p>语法 <code>soap:actor=&quot;URI&quot;</code></p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">soap:Header</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">m:Trans</span> <span class="attr">xmlns:m</span>=<span class="string">"http://www.w3school.com.cn/transaction/"</span></span></div><div class="line"><span class="attr">soap:actor</span>=<span class="string">"http://www.w3school.com.cn/appml/"</span>&gt;234<span class="tag">&lt;/<span class="name">m:Trans</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">soap:Header</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="mustUnderstand-属性"><a href="#mustUnderstand-属性" class="headerlink" title="mustUnderstand 属性"></a>mustUnderstand 属性</h3><p>SOAP 的 <strong>mustUnderstand</strong> 属性可用于<strong>标识标题项对于要对其进行处理的接收者来说是强制的还是可选的</strong>。</p><p>假如向 Header 元素的某个子元素添加了 “mustUnderstand=”1”，则它可指示处理此头部的接收者<strong>必须</strong>认可此元素。假如此接收者<strong>无法认可</strong>此元素，则在处理此头部时<strong>必须失效</strong>。</p><p>语法 <code>soap:mustUnderstand=&quot;0|1&quot;</code></p><h2 id="SOAP-Body-元素"><a href="#SOAP-Body-元素" class="headerlink" title="SOAP Body 元素"></a>SOAP Body 元素</h2><p><strong>必需</strong>的 SOAP <strong>Body</strong> 元素可包含打算传送到消息最终端点的<strong>实际 SOAP 消息</strong>。</p><p>SOAP Body 元素的直接子元素可以是合格的命名空间。SOAP 在默认的命名空间中定义了 Body 元素内部的一个元素。即 SOAP 的 <strong>Fault</strong> 元素，用于指示错误消息。</p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line">&lt;?xml version="1.0"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">soap:Envelope</span></span></div><div class="line"><span class="attr">xmlns:soap</span>=<span class="string">"http://www.w3.org/2001/12/soap-envelope"</span></div><div class="line"><span class="attr">soap:encodingStyle</span>=<span class="string">"http://www.w3.org/2001/12/soap-encoding"</span>&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">soap:Body</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">m:GetPrice</span> <span class="attr">xmlns:m</span>=<span class="string">"http://www.w3school.com.cn/prices"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">m:Item</span>&gt;</span>Apples<span class="tag">&lt;/<span class="name">m:Item</span>&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">m:GetPrice</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">soap:Body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">soap:Envelope</span>&gt;</span></div></pre></td></tr></table></figure><p>上面的例子请求苹果的价格。请注意，上面的<code>m:GetPrice</code>和<code>Item</code>元素是<em>应用程序专用的元素</em>。它们并不是 SOAP 标准的一部分。</p><p>而一个 SOAP <strong>响应</strong>应该类似这样：</p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line">&lt;?xml version="1.0"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">soap:Envelope</span></span></div><div class="line"><span class="attr">xmlns:soap</span>=<span class="string">"http://www.w3.org/2001/12/soap-envelope"</span></div><div class="line"><span class="attr">soap:encodingStyle</span>=<span class="string">"http://www.w3.org/2001/12/soap-encoding"</span>&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">soap:Body</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">m:GetPriceResponse</span> <span class="attr">xmlns:m</span>=<span class="string">"http://www.w3school.com.cn/prices"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">m:Price</span>&gt;</span>1.90<span class="tag">&lt;/<span class="name">m:Price</span>&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">m:GetPriceResponse</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">soap:Body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">soap:Envelope</span>&gt;</span></div></pre></td></tr></table></figure><h2 id="SOAP-Fault-元素"><a href="#SOAP-Fault-元素" class="headerlink" title="SOAP Fault 元素"></a>SOAP Fault 元素</h2><p><strong>可选</strong>的 SOAP Fault 元素用于<strong>指示错误消息</strong>。</p><p>如果已提供了 Fault 元素，则它必须是 <strong>Body 元素的子元素</strong>。在一条 SOAP 消息中，Fault 元素<strong>只能出现一次</strong>。</p><p>SOAP 的 Fault 元素拥有下列子元素：</p><table><thead><tr><th>子元素</th><th>描述</th></tr></thead><tbody><tr><td><code>&lt;faultcode&gt;</code></td><td>供识别故障的代码</td></tr><tr><td><code>&lt;faultstring&gt;</code></td><td>可供人阅读的有关故障的说明</td></tr><tr><td><code>&lt;faultactor&gt;</code></td><td>有关是谁引发故障的信息</td></tr><tr><td><code>&lt;detail&gt;</code></td><td>存留涉及 Body 元素的应用程序专用错误信息</td></tr></tbody></table><h3 id="SOAP-Fault-代码"><a href="#SOAP-Fault-代码" class="headerlink" title="SOAP Fault 代码"></a>SOAP Fault 代码</h3><p>在下面定义的 faultcode 值<strong>必须</strong>用于描述错误时的 faultcode 元素中：</p><table><thead><tr><th>错误</th><th>描述</th></tr></thead><tbody><tr><td><code>VersionMismatch</code></td><td>SOAP Envelope 元素的<strong>无效命名空间</strong>被发现</td></tr><tr><td><code>MustUnderstand</code></td><td>Header 元素的一个直接子元素（带有设置为 “1” 的 mustUnderstand 属性）无法被理解。</td></tr><tr><td><code>Client</code></td><td>消息被<strong>不正确地构成</strong>，或包含了<strong>不正确的信息</strong>。</td></tr><tr><td><code>Server</code></td><td><strong>服务器有问题</strong>，因此无法处理进行下去。</td></tr></tbody></table><h2 id="SOAP-HTTP-Binding"><a href="#SOAP-HTTP-Binding" class="headerlink" title="SOAP HTTP Binding"></a>SOAP HTTP Binding</h2><h3 id="HTTP-协议"><a href="#HTTP-协议" class="headerlink" title="HTTP 协议"></a>HTTP 协议</h3><p>HTTP 在 <strong>TCP/IP</strong> 之上进行通信。HTTP 客户机使用 TCP 连接到 HTTP 服务器。在建立连接之后，客户机可向服务器发送 <strong>HTTP 请求</strong>消息：</p><figure class="highlight http"><table><tr><td class="code"><pre><div class="line"><span class="keyword">POST</span> <span class="string">/item</span> HTTP/1.1</div><div class="line"><span class="attribute">Host</span>: 189.123.345.239</div><div class="line"><span class="attribute">Content-Type</span>: text/plain</div><div class="line"><span class="attribute">Content-Length</span>: 200</div></pre></td></tr></table></figure><p>随后服务器会处理此请求，然后向客户机发送一个 <strong>HTTP 响应</strong>。此响应包含了可指示请求状态的<strong>状态代码</strong>：</p><figure class="highlight"><table><tr><td class="code"><pre><div class="line">200 OK</div><div class="line">Content-Type: text/plain</div><div class="line">Content-Length: 200</div></pre></td></tr></table></figure><p>在上面的例子中，服务器返回了一个 200 的状态代码。这是 HTTP 的标准成功代码。</p><p>假如服务器无法对请求进行解码，它可能会返回类似这样的信息：</p><figure class="highlight"><table><tr><td class="code"><pre><div class="line">400 Bad Request</div><div class="line">Content-Length: 0</div></pre></td></tr></table></figure><h3 id="SOAP-HTTP-Binding-1"><a href="#SOAP-HTTP-Binding-1" class="headerlink" title="SOAP HTTP Binding"></a>SOAP HTTP Binding</h3><p>SOAP 方法指的是遵守 SOAP 编码规则的 HTTP 请求/响应。</p><p><strong>HTTP + XML = SOAP</strong></p><p>SOAP 请求可能是 HTTP <strong>POST</strong> 或 HTTP <strong>GET</strong> 请求。</p><p>HTTP POST 请求规定<strong>至少两个 HTTP 头</strong>：<strong>Content-Type</strong> 和 <strong>Content-Length</strong>。</p><h3 id="Content-Type"><a href="#Content-Type" class="headerlink" title="Content-Type"></a>Content-Type</h3><p>SOAP 的请求和响应的 Content-Type 头可定义消息的 <strong>MIME</strong> 类型，以及用于请求或响应的 XML 主体的字符编码（可选）。</p><p>语法<code>Content-Type: MIMEType; charset=character-encoding</code></p><p>例子</p><figure class="highlight http"><table><tr><td class="code"><pre><div class="line"><span class="keyword">POST</span> <span class="string">/item</span> HTTP/1.1</div><div class="line"><span class="attribute">Content-Type</span>: application/soap+xml; charset=utf-8</div></pre></td></tr></table></figure><h3 id="Content-Length"><a href="#Content-Length" class="headerlink" title="Content-Length"></a>Content-Length</h3><p>SOAP 的请求和响应的 Content-Length 头规定请求或响应主体的字节数。</p><p>语法 <code>Content-Length: bytes</code></p><h2 id="SOAP-实例"><a href="#SOAP-实例" class="headerlink" title="SOAP 实例"></a>SOAP 实例</h2><p>在下面的例子中，一个 GetStockPrice 请求被发送到了服务器。此请求有一个 StockName 参数，而在响应中则会返回一个 Price 参数。此功能的命名空间被定义在此地址中： “<a href="http://www.example.org/stock" target="_blank" rel="external">http://www.example.org/stock</a>“</p><h3 id="SOAP-请求："><a href="#SOAP-请求：" class="headerlink" title="SOAP 请求："></a>SOAP 请求：</h3><figure class="highlight http"><table><tr><td class="code"><pre><div class="line"><span class="keyword">POST</span> <span class="string">/InStock</span> HTTP/1.1</div><div class="line"><span class="attribute">Host</span>: www.example.org</div><div class="line"><span class="attribute">Content-Type</span>: application/soap+xml; charset=utf-8</div><div class="line"><span class="attribute">Content-Length</span>: nnn</div></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line">&lt;?xml version="1.0"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">soap:Envelope</span> <span class="attr">xmlns:soap</span>=<span class="string">"http://www.w3.org/2001/12/soap-envelope"</span></span></div><div class="line"><span class="attr">soap:encodingStyle</span>=<span class="string">"http://www.w3.org/2001/12/soap-encoding"</span>&gt;</div><div class="line">  <span class="tag">&lt;<span class="name">soap:Body</span> <span class="attr">xmlns:m</span>=<span class="string">"http://www.example.org/stock"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">m:GetStockPrice</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">m:StockName</span>&gt;</span>IBM<span class="tag">&lt;/<span class="name">m:StockName</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">m:GetStockPrice</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">soap:Body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">soap:Envelope</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="SOAP-响应："><a href="#SOAP-响应：" class="headerlink" title="SOAP 响应："></a>SOAP 响应：</h3><figure class="highlight http"><table><tr><td class="code"><pre><div class="line">HTTP/1.1 <span class="number">200</span> OK</div><div class="line"><span class="attribute">Content-Type</span>: application/soap+xml; charset=utf-8</div><div class="line"><span class="attribute">Content-Length</span>: nnn</div></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line">&lt;?xml version="1.0"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">soap:Envelope</span></span></div><div class="line"><span class="attr">xmlns:soap</span>=<span class="string">"http://www.w3.org/2001/12/soap-envelope"</span></div><div class="line"><span class="attr">soap:encodingStyle</span>=<span class="string">"http://www.w3.org/2001/12/soap-encoding"</span>&gt;</div><div class="line">  <span class="tag">&lt;<span class="name">soap:Body</span> <span class="attr">xmlns:m</span>=<span class="string">"http://www.example.org/stock"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">m:GetStockPriceResponse</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">m:Price</span>&gt;</span>34.5<span class="tag">&lt;/<span class="name">m:Price</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">m:GetStockPriceResponse</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">soap:Body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">soap:Envelope</span>&gt;</span></div></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[GDAL Python 学习笔记-1]]></title>
      <url>houzw.github.io.git/2016/12/10/GDAL-Python-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="GDAL-Python-学习笔记-1"><a href="#GDAL-Python-学习笔记-1" class="headerlink" title="GDAL Python 学习笔记-1"></a>GDAL Python 学习笔记-1</h1><blockquote><p><a href="http://pcjericks.github.io/py-gdalogr-cookbook/index.html" target="_blank" rel="external">Python GDAL/OGR Cookbook</a></p></blockquote><h2 id="基本"><a href="#基本" class="headerlink" title="基本"></a>基本</h2><h3 id="判断GDAL-OGR是否已安装"><a href="#判断GDAL-OGR是否已安装" class="headerlink" title="判断GDAL/OGR是否已安装"></a>判断GDAL/OGR是否已安装</h3><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">try</span>:</div><div class="line">    <span class="keyword">from</span> osgeo <span class="keyword">import</span> ogr,osr,gdal</div><div class="line"><span class="keyword">except</span>:</div><div class="line">    sys.exit(<span class="string">"Error: can not found ogr/osr/gdal modules"</span>)</div></pre></td></tr></table></figure><h3 id="查看安装的GDAL-OGR的版本"><a href="#查看安装的GDAL-OGR的版本" class="headerlink" title="查看安装的GDAL/OGR的版本"></a>查看安装的GDAL/OGR的版本</h3><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">version = int(gdal.VersionInfo(<span class="string">'VERSION_NUM'</span>)) <span class="comment">#'VERSION_NUM'可以不写，但不能写成'VERSION'</span></div><div class="line">print(version)  <span class="comment"># 2010000</span></div><div class="line"><span class="keyword">if</span>(version&lt;<span class="number">1100000</span>):</div><div class="line">    sys.exit(<span class="string">"Error: Python bindings of GDAL 1.10 or later required"</span>)</div></pre></td></tr></table></figure><h3 id="启用Python异常"><a href="#启用Python异常" class="headerlink" title="启用Python异常"></a>启用Python异常</h3><p>GDAL/OGR Python包在发生错误时，默认不会抛出异常，而是返回一个错误值，并将错误信息通过<code>sys.stdout()</code> 输出。通过使用<code>gdal.UseExceptions()</code>方法来启用异常</p><figure class="highlight"><table><tr><td class="code"><pre><div class="line">ds = gdal.Open("a.tif") # a.tif是随便写的一个文件，并不存在</div><div class="line"># 不启用异常时</div><div class="line">ERROR 4: `a.tif' does not exist in the file system,</div><div class="line">and is not recognized as a supported dataset name.</div><div class="line"></div><div class="line"># 使用了 gdal.UseExceptions() 时</div><div class="line">Traceback (most recent call last):</div><div class="line">  File "F:/workspace/python/gdal/readTif.py", line 13, in &lt;module&gt;</div><div class="line">    ds = gdal.Open("a.tif")</div><div class="line">RuntimeError: `a.tif' does not exist in the file system,</div><div class="line">and is not recognized as a supported dataset name.</div></pre></td></tr></table></figure><p>当然，也可以随时停用：<code>gdal.DontUseExceptions()</code></p><h3 id="安装GDAL-OGR-错误处理器-error-handler"><a href="#安装GDAL-OGR-错误处理器-error-handler" class="headerlink" title="安装GDAL/OGR 错误处理器 | error handler"></a>安装GDAL/OGR 错误处理器 | error handler</h3><p>一个捕获GDAL错误、类和信息的函数。大于1.10版本时才能使用</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">try</span>:</div><div class="line">    <span class="keyword">from</span> osgeo <span class="keyword">import</span> ogr, osr, gdal</div><div class="line"><span class="keyword">except</span>:</div><div class="line">    sys.exit(<span class="string">'ERROR: cannot find GDAL/OGR modules'</span>)</div><div class="line"></div><div class="line"><span class="comment"># example GDAL error handler function</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">gdal_error_handler</span><span class="params">(err_class, err_num, err_msg)</span>:</span></div><div class="line">    errtype = &#123;</div><div class="line">            gdal.CE_None:<span class="string">'None'</span>,</div><div class="line">            gdal.CE_Debug:<span class="string">'Debug'</span>,</div><div class="line">            gdal.CE_Warning:<span class="string">'Warning'</span>,</div><div class="line">            gdal.CE_Failure:<span class="string">'Failure'</span>,</div><div class="line">            gdal.CE_Fatal:<span class="string">'Fatal'</span></div><div class="line">    &#125;</div><div class="line">    err_msg = err_msg.replace(<span class="string">'\n'</span>,<span class="string">' '</span>)</div><div class="line">    err_class = errtype.get(err_class, <span class="string">'None'</span>)</div><div class="line">    <span class="keyword">print</span> <span class="string">'Error Number: %s'</span> % (err_num)</div><div class="line">    <span class="keyword">print</span> <span class="string">'Error Type: %s'</span> % (err_class)</div><div class="line">    <span class="keyword">print</span> <span class="string">'Error Message: %s'</span> % (err_msg)</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</div><div class="line">    <span class="comment"># install error handler 安装</span></div><div class="line">    gdal.PushErrorHandler(gdal_error_handler)</div><div class="line"></div><div class="line">    <span class="comment"># Raise a dummy error </span></div><div class="line">    gdal.Error(<span class="number">1</span>, <span class="number">2</span>, <span class="string">'test error'</span>)</div><div class="line"></div><div class="line">    <span class="comment">#uninstall error handler 卸载此函数</span></div><div class="line">    gdal.PopErrorHandler()</div></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[TauDEM 命令行使用方法]]></title>
      <url>houzw.github.io.git/2016/12/10/TauDEM-%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="TauDEM-命令行使用方法"><a href="#TauDEM-命令行使用方法" class="headerlink" title="TauDEM 命令行使用方法"></a>TauDEM 命令行使用方法</h1><blockquote><p>首先切换到数据目录</p></blockquote><h2 id="1-填洼（Remove-Pits）-gt-PitRemove"><a href="#1-填洼（Remove-Pits）-gt-PitRemove" class="headerlink" title="1. 填洼（Remove Pits）-&gt;PitRemove"></a>1. 填洼（Remove Pits）-&gt;PitRemove</h2><p><strong><code>mpiexec -n 8 PitRemove logan.tif</code></strong></p><p>主方法是 <strong>PitRemove</strong> ，可选参数：</p><ul><li><p><code>-4way</code> 沿着东南西北四个方向逐像元进行调整（condition），而不包括对角线方向像元（diagonal neighbors.）</p></li><li><p><code>-depmask</code> 指定 Depression Mask Grid ，即真实的、不应该填充的洼地格网</p></li><li><p><code>-n [num]</code> 处理器数量。 MPI并行运算时区域被划分的条数，根据你电脑的处理器核数设置</p><blockquote><p>注意，如果出现“PitRemove.exe无法找到入口” 之类的错误，最好重新安装一下 TauDEM</p></blockquote></li></ul><figure class="highlight powershell"><table><tr><td class="code"><pre><div class="line">pitremove &lt;basefilename&gt;</div><div class="line">Usage with specific file names（指定文件名时的用法）:</div><div class="line"> pitremove -z &lt;demfile&gt; -fel &lt;newfile&gt; [-sfdr &lt;flowfile&gt;]</div><div class="line">&lt;basefilename&gt; is the name of the raw digital elevation model.</div><div class="line">&lt;demfile&gt; is the name of the input elevation grid file.</div><div class="line">&lt;newfile&gt; is the output elevation grid with pits filled.</div><div class="line">&lt;flowfile&gt; is the input grid of flow directions to be imposed.</div><div class="line">The following are appended to the file names</div><div class="line">before the files are opened:</div><div class="line">fel    output elevation grid with pits filled.</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">F:\GIScience\TauDEMExercise\LoganCmdDemo\Logan&gt;mpiexec -n 4 pitremove logan.tif</div><div class="line">PitRemove version 5.3.5</div><div class="line">This run may take on the order of 1 minutes to complete.</div><div class="line">This estimate is very approximate.</div><div class="line">Run time is highly uncertain as it depends on the complexity of the input data</div><div class="line">and speed and memory of the computer. This estimate is based on our testing on</div><div class="line">a dual quad core Dell Xeon E5405 2.0GHz PC with 16GB RAM.</div><div class="line">Input file logan.tif has projected coordinate system.</div><div class="line">Processes: 4</div><div class="line">Header read time: 0.071046</div><div class="line">Data read time: 0.002704</div><div class="line">Compute time: 0.313855</div><div class="line">Write time: 0.128918</div><div class="line">Total time: 0.516524</div></pre></td></tr></table></figure><p>执行命令后，会在目录下生成结果文件 <code>loganfel.tif</code></p><p>文件名中的<code>fel</code>及<code>-fel</code> 表示：经过填充或削峰的移除了洼地的，在水文上正确的高程网格（<em>filled elevations</em>）</p><blockquote><p>Hydrologically correct elevation grid with pits removed either by filling or carving</p><p>arcgis中工具箱执行显示的命令行<code>mpiexec -n 8 pitremove -z &quot;H:\GIS data\TaoXi_model data\dem\dem_TX.tif&quot; -fel &quot;H:\GIS data\TaoXi_model data\dem\dem_TXfel_arcgis.tif&quot;</code></p></blockquote><h2 id="2-流向-Flow-Directions"><a href="#2-流向-Flow-Directions" class="headerlink" title="2. 流向 | Flow Directions"></a>2. 流向 | Flow Directions</h2><h4 id="基于D8算法-gt-D8Flowdir（基于填洼之后的文件）"><a href="#基于D8算法-gt-D8Flowdir（基于填洼之后的文件）" class="headerlink" title="基于D8算法 -&gt; D8Flowdir（基于填洼之后的文件）"></a>基于D8算法 -&gt; D8Flowdir（基于填洼之后的文件）</h4><p><code>mpiexec -n 8 D8Flowdir -p loganp.tif -sd8 logansd8.tif -fel loganfel.tif</code></p><ul><li><code>p/-p</code> 使用D8流向函数获得的D8 流向格网 <em>pointfile</em></li><li><code>sd8/-sd8</code> 表示 D8 坡度格网 (slope measured as drop/distance) <em>slopefile</em></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">F:\GIScience\TauDEMExercise\LoganCmdDemo\Logan&gt;mpiexec -n 8 D8Flowdir -p loganp.tif -sd8 logansd8.tif -fel loganfel.tif</div><div class="line">D8FlowDir version 5.3.5</div><div class="line"></div><div class="line">Input file loganfel.tif has projected coordinate system.</div><div class="line">All slopes evaluated. 20682 flats to resolve.</div><div class="line">Draining flats towards lower adjacent terrain</div><div class="line">.............................................................................................</div><div class="line">Draining flats away from higher adjacent terrain</div><div class="line">.............</div><div class="line">Setting directions</div><div class="line">Iteration complete. Number of flats remaining: 730</div><div class="line">Draining flats towards lower adjacent terrain</div><div class="line">.......</div><div class="line">Draining flats away from higher adjacent terrain</div><div class="line">....</div><div class="line">Setting directions</div><div class="line">Iteration complete. Number of flats remaining: 1</div><div class="line">Draining flats towards lower adjacent terrain</div><div class="line">.</div><div class="line">Draining flats away from higher adjacent terrain</div><div class="line">..</div><div class="line">Setting directions</div><div class="line">Processors: 8</div><div class="line">Header read time: 0.022047</div><div class="line">Data read time: 0.045222</div><div class="line">Compute Slope time: 0.078398</div><div class="line">Write Slope time: 0.280949</div><div class="line">Resolve Flat time: 1.398364</div><div class="line">Write Flat time: 0.050057</div><div class="line">Total time: 1.875038</div></pre></td></tr></table></figure><h4 id="基于Dinf（D∞）算法-gt-DinfFlowdir"><a href="#基于Dinf（D∞）算法-gt-DinfFlowdir" class="headerlink" title="基于Dinf（D∞）算法 -&gt; DinfFlowdir"></a>基于Dinf（D∞）算法 -&gt; DinfFlowdir</h4><p><code>mpiexec -n 8 DinfFlowdir -ang loganang.tif -slp loganslp.tif -fel loganfel.tif</code></p><ul><li><code>ang/-ang</code> D-Infinity 流向格网（flow angles，从正东开始逆时针的弧度） <em>angfile</em></li><li><code>slp/-slp</code> D-Infinity 坡度格网 <em>slopefile</em></li></ul><h3 id="集水面积-Contributing-area-gt-AreaD8"><a href="#集水面积-Contributing-area-gt-AreaD8" class="headerlink" title="集水面积 | Contributing area -&gt; AreaD8"></a>集水面积 | Contributing area -&gt; AreaD8</h3><p><code>mpiexec -n 8 AreaD8 -p loganp.tif -ad8 loganad8.tif [-o outletfile.shp] [ -wg demwg.tif] [-nc]</code></p><ul><li><code>ad8/-ad8</code> D8集水面积格网（面积以格网单元数计）</li><li><code>wg/-wg</code> 权重格网，可选。 weight grid file <em>wgfile</em></li><li><code>-o</code> 表示流域出口点shp 文件（ outlets shapefile）</li></ul><p><code>mpiexec -n 8 AreaDinf -ang loganang.tif -sca logansca.tif</code></p><p><code>mpiexec -n 8 Aread8 -p loganp.tif -o loganoutlet.shp -ad8 loganad8o.tif</code></p><ul><li>​</li></ul><h3 id="河网-Gridnet"><a href="#河网-Gridnet" class="headerlink" title="河网 | Gridnet"></a>河网 | Gridnet</h3><p><code>mpiexec -n 8 Gridnet -p loganp.tif -plen loganplen.tif -tlen logantlen.tif -gord logangord.tif</code></p><h3 id="PeukerDouglas"><a href="#PeukerDouglas" class="headerlink" title="PeukerDouglas"></a>PeukerDouglas</h3><p><code>mpiexec -n 8 PeukerDouglas -fel loganfel.tif -ss loganss.tif</code></p><h3 id="PeukerDouglas-法水系划分-stream-delineation"><a href="#PeukerDouglas-法水系划分-stream-delineation" class="headerlink" title="PeukerDouglas 法水系划分 |  stream delineation"></a>PeukerDouglas 法水系划分 | stream delineation</h3><p><code>mpiexec -n 8 Aread8 -p loganp.tif -o loganoutlet.shp -ad8 loganssa.tif -wg loganss.tif</code><br><code>mpiexec -n 8 Dropanalysis -p loganp.tif -fel loganfel.tif -ad8 loganad8.tif -ssa loganssa.tif -drp logandrp.txt -o loganoutlet.shp -par 5 500 10 0</code><br><code>mpiexec -n 8 Threshold -ssa loganssa.tif -src logansrc.tif -thresh 300</code></p><h3 id="水流网络-河网-Stream-Network"><a href="#水流网络-河网-Stream-Network" class="headerlink" title="水流网络/河网 | Stream Network"></a>水流网络/河网 | Stream Network</h3><p><code>mpiexec -n 8 Streamnet -fel loganfel.tif -p loganp.tif -ad8 loganad8.tif -src logansrc.tif -ord loganord3.tif -tree logantree.dat -coord logancoord.</code></p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Windows 下使用VNC连接 CentOS7 桌面]]></title>
      <url>houzw.github.io.git/2016/12/06/Windows-%E4%B8%8B%E4%BD%BF%E7%94%A8VNC%E8%BF%9E%E6%8E%A5-CentOS7-%E6%A1%8C%E9%9D%A2/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="Windows-下使用VNC远程连接-CentOS-7-桌面"><a href="#Windows-下使用VNC远程连接-CentOS-7-桌面" class="headerlink" title="Windows 下使用VNC远程连接 CentOS 7 桌面"></a>Windows 下使用VNC远程连接 CentOS 7 桌面</h1><p>出于使用方便的考虑，有时候我们需要远程连接Linux桌面环境，尤其是我这种Linux菜鸟。Windows下连接Linux命令行界面可以使用SSH，而连接桌面环境则需要使用VNC（ Virtual Network Computing）。</p><blockquote><p>以下介绍来自百度百科 <a href="http://baike.baidu.com/link?url=NBmXnNNQrRLQAHQI2ubyJKFuAv2lWTN7jn6bLLeKAQhXZ-l1-Hs7dbk9iemvNIswZJy7gAVgS3H0KyVPml3xCa" target="_blank" rel="external">VNC</a></p></blockquote><hr><p>VNC ( Virtual Network Console ) 是<a href="http://baike.baidu.com/view/747782.htm" target="_blank" rel="external">虚拟网络</a>控制台的缩写。它是一款优秀的<a href="http://baike.baidu.com/view/51293.htm" target="_blank" rel="external">远程控制</a>工具软件，由著名的 <a href="http://baike.baidu.com/view/259956.htm" target="_blank" rel="external">AT&amp;T</a> 的欧洲研究实验室开发的。VNC 是在基于 <a href="http://baike.baidu.com/view/8095.htm" target="_blank" rel="external">UNIX</a> 和 <a href="http://baike.baidu.com/view/1634.htm" target="_blank" rel="external">Linux</a> 操作系统的免费的<a href="http://baike.baidu.com/view/444964.htm" target="_blank" rel="external">开源软件</a>，远程控制能力强大，高效实用，其性能可以和<a href="http://baike.baidu.com/view/4821.htm" target="_blank" rel="external">Windows</a> 和 <a href="http://baike.baidu.com/view/32702.htm" target="_blank" rel="external">MAC</a> 中的任何远程控制软件媲美。 在 Linux 中，VNC 包括以下四个命令：<code>vncserver，vncviewer，vncpasswd</code>，和<code>vncconnect</code>。大多数情况下用户只需要其中的两个命令：<code>vncserver</code> 和 <code>vncviewer</code>。</p><p>VNC基本上是由两部分组成：一部分是客户端的应用程序(vncviewer)；另外一部分是服务器端的应用程序(<a href="http://baike.baidu.com/view/6625593.htm" target="_blank" rel="external">vncserver</a>)。VNC的服务器端应用程序在UNIX和Linux操作系统中适应性很强，<a href="http://baike.baidu.com/view/185360.htm" target="_blank" rel="external">图形用户界面</a>十分友好，看上去和Windows下的<a href="http://baike.baidu.com/view/43207.htm" target="_blank" rel="external">软件界面</a>也很类似。在任何安装了客户端的应用程序(vncviewer)的Linux平台的计算机都能十分方便地和安装了服务器端的应用程序(vncserver)的计算机相互连接。</p><p>同样可能远程连入UNIX、Linux进行图形化操作的还有流行的Xmanager，VNC与之相比——两者工作原理不一样，前者（VNC）是远程连入操作系统，所有操作在UNIX、Linux<a href="http://baike.baidu.com/view/23880.htm" target="_blank" rel="external">主机</a><a href="http://baike.baidu.com/view/1087294.htm" target="_blank" rel="external">服务端</a>进行，即使操作过程中“本地电脑与<a href="http://baike.baidu.com/view/287878.htm" target="_blank" rel="external">操作主机</a>网络断开”，也不影响操作的顺利进行；而后者（Xmanager）是通过端口将主机服务器的UI界面引导到本地电脑进行展现，如操作过程出现“本地电脑与操作主机网络断开”，操作将中断失败！如果操作中进行的工作任务非常重要，不能中断，如ORACLE RAC实施，结果是灾难性的！更重要的是，VNC是免费的、开源的，Xmanager需要注册的。</p><hr><p>本文就简单介绍使用TigerVNC 实现 Windows 10 远程连接 CentOS 7 桌面环境。</p><h2 id="Linux端（VNC-Server端）"><a href="#Linux端（VNC-Server端）" class="headerlink" title="Linux端（VNC Server端）"></a>Linux端（VNC Server端）</h2><p>安装CentOS时没有安装 <em>X-Windowss</em> 桌面环境的话，需要先安装才能用。这里假设已经安装了桌面环境</p><blockquote><p>以下内容参照 <a href="https://my.oschina.net/huhaoren/blog/497394?p=&lt;!--￼14--" target="_blank" rel="external">Centos 7 安装VNC步骤</a></p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">rpm -q tigervnc tigervnc-server # 查看服务器是否装了VNC</div><div class="line"># 若没有安装</div><div class="line">package tigervnc is not installed</div><div class="line">package tigervnc-server is not installed</div></pre></td></tr></table></figure><h4 id="1-安装tigervnc-server"><a href="#1-安装tigervnc-server" class="headerlink" title="1. 安装tigervnc-server"></a>1. 安装tigervnc-server</h4><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">yum install tigervnc-server -y</div></pre></td></tr></table></figure><h4 id="2-修改配置信息"><a href="#2-修改配置信息" class="headerlink" title="2. 修改配置信息"></a>2. 修改配置信息</h4><p>在<code>/etc/systemd/system/</code>下建立文件夹<code>vncserver@:1.service</code> 把<code>example config</code> 文件从<code>/lib/systemd/system/vncserver@.service</code>复制到里面</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">cp /lib/systemd/system/vncserver@.service /etc/systemd/system/vncserver@:1.service</div></pre></td></tr></table></figure><blockquote><p><a href="https://wiki.archlinux.org/index.php/Virtual_Network_Computing_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87" target="_blank" rel="external">Virtual Network Computing (简体中文)</a>）)</p><p>VNC服务运行的默认端口是 :1 ，它代表服务运行的TCP端口（5900+n = 端口号）。</p><p>在物理内存允许的条件下，Linux系统可以拥有任意数量的VNC服务——它们互相并行。</p></blockquote><p>打开配置文件<code>/etc/systemd/system/vncserver@:1.service</code>替换掉默认用户名<code>&lt;USER&gt;</code>中的<code>USER</code> 为你的用户名，如<code>root</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">ExecStart=/sbin/runuser -l &lt;USER&gt; -c &quot;/usr/bin/vncserver %i&quot;</div><div class="line">PIDFile=/home/&lt;USER&gt;/.vnc/%H%i.pid</div></pre></td></tr></table></figure><h4 id="3-重加载-systemd，为VNC设密码"><a href="#3-重加载-systemd，为VNC设密码" class="headerlink" title="3. 重加载 systemd，为VNC设密码"></a>3. 重加载 systemd，为VNC设密码</h4><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">systemctl daemon-reload</div><div class="line">vncpassw # 设置密码</div></pre></td></tr></table></figure><h4 id="4-修改防火墙"><a href="#4-修改防火墙" class="headerlink" title="4. 修改防火墙"></a>4. 修改防火墙</h4><p>若为<code>iptables</code>，则参考上面引用的博客文章</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">firewall-cmd --permanent --add-service vnc-server</div><div class="line">systemctl restart firewalld.service</div></pre></td></tr></table></figure><p>如果报：</p><p>Centos7 VNC报vncserver@:1.service:control process exited,code-exited status=98</p><p>修改配置文件中的<code>Type=forking</code>为</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">type=simple</div></pre></td></tr></table></figure><h4 id="5-设默认启动并开启VNC"><a href="#5-设默认启动并开启VNC" class="headerlink" title="5. 设默认启动并开启VNC"></a>5. 设默认启动并开启VNC</h4><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">systemctl enable vncserver@:1.service</div><div class="line">systemctl start vncserver@:1.service</div></pre></td></tr></table></figure><h4 id="6-可能出现的问题"><a href="#6-可能出现的问题" class="headerlink" title="6. 可能出现的问题"></a>6. 可能出现的问题</h4><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line"># systemctl start vncserver@:1.service</div><div class="line">Job for vncserver@:1.service failed. See &apos;systemctl status vncserver@:1.service&apos; and &apos;journalctl -xn&apos; for details.</div></pre></td></tr></table></figure><blockquote><p><a href="https://www.centos.org/forums/viewtopic.php?t=47713" target="_blank" rel="external">https://www.centos.org/forums/viewtopic.php?t=47713</a></p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">rm -rf /tmp/.X11-unix/</div></pre></td></tr></table></figure><p>然后重新start。不管用的话，</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">vncserver -kill :1 # 杀死进程。不过可能根本没有这一进程</div><div class="line"> sudo su - # 或 su root 切换到root用户</div><div class="line">[root@localhost ~]# systemctl start vncserver@:1.service</div><div class="line">systemctl status vncserver@:1.service -l # 查看状态</div></pre></td></tr></table></figure><h2 id="Windows端（VNC-Viewer端）"><a href="#Windows端（VNC-Viewer端）" class="headerlink" title="Windows端（VNC Viewer端）"></a>Windows端（VNC Viewer端）</h2><h4 id="1-下载VNC-Viewer"><a href="#1-下载VNC-Viewer" class="headerlink" title="1. 下载VNC Viewer"></a>1. 下载VNC Viewer</h4><p>VNC有 <a href="https://www.realvnc.com/" target="_blank" rel="external">Real<em>VNC</em></a> 等多种，这里使用与服务端系统的 <a href="http://tigervnc.org/" target="_blank" rel="external">TigerVNC</a> 。去 <a href="https://bintray.com/tigervnc/stable/tigervnc/1.7.0" target="_blank" rel="external">https://bintray.com/tigervnc/stable/tigervnc/1.7.0</a> 下载exe文件, 然后安装即可。</p><h4 id="2-连接CentOS7"><a href="#2-连接CentOS7" class="headerlink" title="2. 连接CentOS7"></a>2. 连接CentOS7</h4><p>启动<code>VNC Viewer</code> ，输入ip和连接的端口号</p><p><img src="http://ofcj2lgtd.bkt.clouddn.com/2016-12-06_202947.png" alt=""></p><p>然后按照提示输入vnc密码，即可连接了</p><p><img src="http://ofcj2lgtd.bkt.clouddn.com/2016-12-06_203631.png" alt=""></p><h4 id="可能存在的问题"><a href="#可能存在的问题" class="headerlink" title="可能存在的问题"></a>可能存在的问题</h4><p>在上面使用了<code>root</code>用户启动服务</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">[root@localhost ~]# systemctl start vncserver@:1.service</div></pre></td></tr></table></figure><p>如果<code>exit</code> 退出root用户，回到普通用户，可能就连接不上了，报<code>read. Connection reset by peer</code>之类的错误。而且，我们在普通用户下查看状态，发现是failed</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">[houzw@localhost ~]$ systemctl status vncserver@1.service</div><div class="line">● vncserver@1.service - Remote desktop service (VNC)</div><div class="line">   Loaded: loaded (/usr/lib/systemd/system/vncserver@.service; enabled; vendor preset: disabled)</div><div class="line">   Active: failed (Result: exit-code) since 二 2016-12-06 20:35:40 CST; 3min 32s ago</div><div class="line">  Process: 16295 ExecStart=/usr/sbin/runuser -l &lt;USER&gt; -c /usr/bin/vncserver %i (code=exited, status=1/FAILURE)</div><div class="line">  Process: 16292 ExecStartPre=/bin/sh -c /usr/bin/vncserver -kill %i &gt; /dev/null 2&gt;&amp;1 || : (code=exited, status=0/SUCCESS)</div></pre></td></tr></table></figure><p>这时候我们需要</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">[houzw@localhost ~]$ vncserver</div><div class="line"></div><div class="line">New &apos;localhost.localdomain:3 (houzw)&apos; desktop is localhost.localdomain:3</div><div class="line"></div><div class="line">Starting applications specified in /home/houzw/.vnc/xstartup</div><div class="line">Log file is /home/houzw/.vnc/localhost.localdomain:3.log</div><div class="line"></div><div class="line">[houzw@localhost ~]$ exit</div></pre></td></tr></table></figure><p>然后连接就可以了</p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[地理空间及空间关系]]></title>
      <url>houzw.github.io.git/2016/12/04/%E5%9C%B0%E7%90%86%E7%A9%BA%E9%97%B4%E5%8F%8A%E7%A9%BA%E9%97%B4%E5%85%B3%E7%B3%BB/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><blockquote><p>【GIS大百科】主要整理介绍GIS、RS、GPS相关的概念、技术、应用知识，定位于GIS科普。特点是简明扼要、图文并茂、既专业又易懂。</p><h1 id="地理空间及空间关系"><a href="#地理空间及空间关系" class="headerlink" title="地理空间及空间关系"></a>地理空间及空间关系</h1></blockquote><h2 id="1-地理空间及其距离量度"><a href="#1-地理空间及其距离量度" class="headerlink" title="1. 地理空间及其距离量度"></a>1. 地理空间及其距离量度</h2><ol><li><p><strong>地理学</strong>上，<strong>地理空间</strong>（<strong>Geographic Space</strong>）指物质、能量、信息的存在在形态、结构过程、功能关系上的分布方式和格局及其在时间上的延续。地理空间上至大气电离层，下至地幔莫霍面，是生命过程活跃的场所，也是宇宙过程对地球影响最大的区域。</p><p><img src="http://ofcj2lgtd.bkt.clouddn.com/blogs/gis/sp.jpg" alt="sp"></p><p>地理空间一般包括地理空间定位框架及其所连接的特征实体，<strong>地理空间定位框架</strong>即大地测量控制，由平面控制网和高程控制网组成。（即：地理空间依赖<strong>空间参照系统</strong>来确定）</p><p>——地理信息系统的中空间的概念常用“<strong>地理空间</strong>” （<strong>Geo-spatial</strong>）来表述。地理空间被定义为绝对空间和相对空间两种形式。</p></li><li><p>地理信息系统中的<strong>地理空间</strong>，指经过<strong>投影变换</strong>后放在<strong>笛卡儿坐标</strong>中的<strong>地球表层特征空间</strong>，它的理论基础在于旋转椭球体和地图投影变换。</p><ul><li><p><strong>绝对空间</strong>是具有<strong>属性描述</strong>的<strong>空间位置的集合</strong>，它由一系列不同位置的<strong>空间坐标值</strong>组成；</p></li><li><p><strong>相对空间</strong>是具有<strong>空间属性特征</strong>的<strong>实体</strong>的集合，它由实体间的<strong>空间关系</strong>构成。</p></li></ul></li><li><p>地理空间的<strong>距离量度</strong></p><p>沿真实的的地球表面进行或沿地球旋转椭球体的距离量算：<strong>大圆的弧长</strong>。</p><ul><li><p><strong>欧几里德距离d(i, j)</strong>——笛卡儿坐标系</p></li><li><p><strong>曼哈顿距离</strong>（出租车距离）：指两点在南北方向上的距离加上在东西方向上的距离。只适用于讨论具有规则布局的城市街道的相关问题。</p></li><li><strong>时间距离</strong>（旅行时间距离）是根据从空间中一点到达另一点所需时间进行度量的。</li></ul></li></ol><h2 id="2-地理空间的表达及拓扑"><a href="#2-地理空间的表达及拓扑" class="headerlink" title="2. 地理空间的表达及拓扑"></a>2. 地理空间的表达及拓扑</h2><blockquote><p>可参考 <a href="http://blog.sina.com.cn/s/blog_8e405e9601019w0n.html" target="_blank" rel="external">地理空间的表达</a></p></blockquote><ul><li>如果采用一个<strong>没有大小</strong>的点（坐标）来表达基本点要素，称为<strong>矢量表示方法</strong>。</li><li>如果采用一个有<strong>固定大小</strong>的点（面元）来表达基本点要素，称为<strong>栅格表示法</strong>。</li></ul><h3 id="2-1-矢量表达法"><a href="#2-1-矢量表达法" class="headerlink" title="2.1 矢量表达法"></a>2.1 矢量表达法</h3><p>不同的空间特征具有不同的<strong>矢量维数</strong>：0，1，2，3 维，点、线、面、体。集中表现了地理实体的形状特征以及不同实体之间的空间关系分布。</p><ul><li>0维矢量为空间中的一个点（point）。点包括如下几类实体：<ul><li>实体点（Entity point）：代表一个实体。如钻孔点、高程点、建筑物和公共设施。</li><li>注记点（Text point）:用于定位注记。</li><li>内点（Label point）:存在于多边形内，用于标识多边形的属性。</li><li>结点（Node）:表示弧段的起点和终点。</li><li>角点(Vertex)或中间点:表示线段或弧段的内部点。</li></ul></li><li>一维矢量表示空间中的线划要素，它包括线段、边界、弧段、网络等。</li><li>二维矢量表示空间的一个面状要素，在二维欧氏平面上是指由一组闭合弧段所包围的空间区域。所以，二维矢量又称多边形，是对岛、湖泊、地块、储量块段、行政区域等现象的描述。</li><li>三维矢量用于表达三维空间中的现象和物体，是由一组或多组空间曲面所包围的空间对象，它具有体积、长度、宽度、高度、空间曲面的面积、空间曲面的周长等属性。</li></ul><h3 id="2-2-栅格表达法"><a href="#2-2-栅格表达法" class="headerlink" title="2.2 栅格表达法"></a>2.2 <strong>栅格表达法</strong></h3><p>依<strong>行列</strong>构成的<strong>单元矩阵</strong>叫栅格Grid，每一个单元都以一定数值表现了某一地理现象。点就是具有一定数值的栅格单元，线表现为按线特征连续的一组单元，面表现为按二维形状特征相连续的一组单元。</p><p>栅格表达法主要描述空间实体的级别分布特征及其位置。栅格表示法的精度与分辨率有关。</p><p><img src="http://ofcj2lgtd.bkt.clouddn.com/blogs/gis/shge.png" alt="矢量表达与栅格表达"></p><h3 id="2-3-不规则三角网TIN"><a href="#2-3-不规则三角网TIN" class="headerlink" title="2.3 不规则三角网TIN"></a>2.3 不规则三角网<strong>TIN</strong></h3><p>将一表面表示成一系列<strong>不重叠</strong>的<strong>相连接</strong>的<strong>三角形</strong>。</p><h3 id="2-4-地理空间的拓扑"><a href="#2-4-地理空间的拓扑" class="headerlink" title="2.4 地理空间的拓扑"></a>2.4 地理空间的拓扑</h3><p>Node-Arc-Polygon结点—弧段—多边形</p><ul><li><strong>连接性</strong>Connectivity：弧段在结点处的相互连接关系。Arc-NodeTopology； 弧段端点序列。</li><li><strong>多边形区域定义</strong>Area Definition：多个弧段首尾相连构成多边形的内部域。弧段序列Polygon-Arc</li><li><strong>邻接性</strong>Contiguity ：通过定义弧段的左右多边形及其方向性来判断弧段左右多边形的邻接性。Left-Right</li></ul><p><strong>组合图理论</strong>：解决空间配置的二义性组织问题。(陈述彭P26)</p><h3 id="2-5-空间关系"><a href="#2-5-空间关系" class="headerlink" title="2.5 空间关系"></a>2.5 <strong>空间关系</strong></h3><p><strong>地理实体对象之间的空间相互作用关系</strong>。</p><h4 id="1-拓扑关系（Topological-SpatialRelationship）"><a href="#1-拓扑关系（Topological-SpatialRelationship）" class="headerlink" title="1) 拓扑关系（Topological SpatialRelationship）"></a>1) <strong>拓扑关系</strong>（Topological SpatialRelationship）</h4><p>指满足拓扑几何学原理的各空间数据间的相互关系。即用结点、弧段和多边形所表示的实体之间的邻接、关联和包含等关系。</p><p>（Node结点 弧段的交点； Arc弧段 相邻两结点之间的坐标链；Polygon 多边形 有限弧段组成的封闭区。）</p><p><strong>有利于</strong>：（1）确定地理实体间的相对空间位置，无需坐标和距离（2）利于空间要素查询（3）重建地理实体。</p><p><strong>拓扑关系描述</strong>: 4I模型、9I模型（九交模型）、Voronoi图模型</p><ul><li><strong>基本的拓扑关系</strong><ul><li><strong>拓扑邻接</strong>：<strong>同类</strong>元素之间的拓扑关系。</li><li><strong>拓扑关联</strong>：<strong>不同类</strong>元素之间的拓扑关系。</li><li><strong>拓扑包含</strong>：<strong>同类不同级</strong>元素之间的拓扑关系。</li></ul></li><li><strong>复杂的拓扑关系</strong>：点、线、面之间的<strong>相邻、相交、相离、包含、重和</strong></li><li><strong>地理空间数据拓扑关系的表示</strong><ul><li><strong>面块-弧段</strong>的拓扑关系b=b(a)：面块|弧段</li><li><strong>弧段-结点</strong>的拓扑关系a=a(n)：弧段|起点|结点</li><li><strong>结点-弧段</strong>关系n=n(a)结点|弧段</li><li><strong>弧段-面块</strong>关系：a=a(b):弧段|左面块|右面块</li><li><strong>弧段-结点-面块</strong>关系a=a(n,b)：弧段|起结点|终结点|左多边形|右多边形<br><img src="http://ofcj2lgtd.bkt.clouddn.com/blogs/gis/topo.png" alt="topo"></li></ul></li></ul><h4 id="2-方向（顺序）关系（Order-Spatialrelationship）"><a href="#2-方向（顺序）关系（Order-Spatialrelationship）" class="headerlink" title="2) 方向（顺序）关系（Order Spatialrelationship）"></a>2) <strong>方向（顺序）关系</strong>（Order Spatialrelationship）</h4><p><strong>地理事物在空间中的相互方位和排列顺序。</strong></p><p>点状实体顺序关系:两点连线与某一基准方向的夹角</p><h4 id="3-度量（距离）关系（Metric-SpatialRelationship）"><a href="#3-度量（距离）关系（Metric-SpatialRelationship）" class="headerlink" title="3) 度量（距离）关系（Metric SpatialRelationship）"></a>3) <strong>度量（距离）关系</strong>（Metric SpatialRelationship）</h4><p>空间对象之间的距离关系。</p><h2 id="3-主要研究内容"><a href="#3-主要研究内容" class="headerlink" title="3. 主要研究内容"></a>3. 主要研究内容</h2><blockquote><p><a href="http://baike.baidu.com/link?url=pN3NLwf6FDqkDJdUZRX4ePkxv0Rmxp-kwimjysZqVM6QjV7eWo8G5Ea_wnDI7ox0jG0wj2FnIWVKsY5qw28dLVLI6GSt2gqzjr-1TOmk8dIEMDMpkH_fWUOULHtTmcQm" target="_blank" rel="external">百度百科-地理空间</a></p></blockquote><ul><li>地理空间的<strong>宏观分异规律与微观变化特征</strong>；</li><li>地理事物在空间中的<strong>分布形态、分布方式和分布格局</strong>；</li><li>地理事物在空间中<strong>互相作用、互相影响</strong>的特点；</li><li>地理事物在空间中所表现的<strong>基本关系</strong>以及此种关系<strong>随距离的变化状况</strong>；</li><li>地理事物的<strong>空间效应</strong>特征；</li><li>地理事物的<strong>空间充填原理及规则</strong>；</li><li>地理事物的<strong>空间行为表现</strong>；</li><li>地理空间对于<strong>物质、能量和信息的再分配</strong>问题；</li><li>地理事物的<strong>空间特征与时间要素的耦合</strong>；</li><li>地理<strong>空间的优化及区位选择的经济价值</strong>。</li></ul><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[GIS基本概念]]></title>
      <url>houzw.github.io.git/2016/12/01/GIS%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="GIS-概述"><a href="#GIS-概述" class="headerlink" title="GIS 概述"></a>GIS 概述</h1><h2 id="0-基本概念"><a href="#0-基本概念" class="headerlink" title="0. 基本概念"></a>0. 基本概念</h2><ol><li><p><strong>数据</strong> Data 是一种未经加工的原始资料，数字、文字、符号、图像都是数据，数据本身没有意义。</p></li><li><p><strong>信息</strong>（Information）是数据的内容，它用文字、数字、符号、语言、图像等介质来表示事件、事物、现象等的内容、数量或特征。客观性、适用性、可传输性和共享性。</p><p>——数据是客观对象的表示，而信息则是数据内涵的意义，是数据的内容和解释。 ——信息 = 数据 + 数据处理</p></li><li><p><strong>地理数据</strong>是各种地理特征和现象间关系的符号化表示，包括空间位置、属性特征（简称属性）及时域特征三部分。</p></li><li><strong>地理信息</strong>是有关地理实体的性质、特征和运动状态的表征和一切有用的知识，它是对表达地理特征与地理现象之间关系的地理数据的解释。空间位置、属性及时间是地理空间分析的三大基本要素。空间分布性、具有多维结构、时序特征十分明显、具有丰富的信息。</li><li><strong>地理实体</strong>：自然界现象和社会经济事件中不能再分割的单元。地理实体类别及实体内容的确定是从具体需要出发的。属性特征：空间特征：时间特征</li><li><strong>地理空间实体</strong>包括点（point）、线(line)、面(polygon)、曲面(surface)和体(volume)等多种数据类型。</li><li><strong>空间对象</strong>（空间目标、空间实体）与数据模型和数据结构有关，美国空间数据交换标准SDTS分为0、1、2、3维、聚合空间对象。采用拓扑空间关系、具有空间位置特征、属性、时间、空间关系特征。</li></ol><h2 id="1-GIS-定义"><a href="#1-GIS-定义" class="headerlink" title="1. GIS 定义"></a>1. GIS 定义</h2><p>【定义 0】地理信息系统(Geographic Information Systems，简称GIS)是在计算机硬、软件系统支持下，对现实世界(资源与环境)的研究和变迁的各类空间数据及描述这些空间数据特性的属性进行采集、存储、管理、运算、分析、显示和描述的技术系统。</p><p>【定义1】是一种采集、存储、管理、分析、显示与应用地理信息的计算机系统。 <em>(陈述彭等,《地理信息系统导论》2003)</em> （是分析和处理海量地理数据的通用技术。）</p><p>【定义2】是将计算机硬件、软件、地理数据以及系统管理人员组织而成的对任一形式的地理信息进行高效获取、存储、更新、操作、分析及显示的集成。</p><p>【定义3】是在计算机硬、软件的支持下，以地理空间数据库(Geospatial Database)为基础，采用地理模型分析方法，适时提供多种空间的和动态的地理信息，为地理研究和地理决策服务的计算机技术系统。地理信息系统属于空间型信息系统。</p><p>【定义4】是利用现代计算机图形技术和数据库技术，输入、存储、编辑、分析、显示空间信息及其属性信息的地理资料系统。在地理信息系统中储存和处理的数据可以分成两大类：第一类是反映事物地理空间位置的信息称空间信息或空间数据(也称地图数据，图形数据)。第二类是与地理位置有关的反映事物其它特征的信息，称属性信息或属性数据(也可称 为文字数据，非图形数据)。通过GIS系统这两类信息的特有管理方式，在它们之间建立双向对应关系，实现图形和数据的互查互用。</p><p>【定义5】是一种决策支持系统，它具有信息系统的各种特点。地理信息系统与其他信息系统的主要区别在于其存储和处理的信息是经过地理编码的，地理位置及与该位置有关的地物属性信息成为信息检索的重要部分。在地理信息系统中，现实世界被表达成一系列的地理要素和地理现象，这些地理特征至少由空间位置参考信息和非位置信息两个组成部分。</p><p><img src="http://ofcj2lgtd.bkt.clouddn.com/blogs/gis/gis.png" alt="gis"></p><p>地理信息系统的定义是由两个部分组成的。</p><p>一方面，地理信息系统是一门学科，是描述、存储、分析和输出空间信息的理论和方法的一门新兴的交叉学科；另一方面，地理信息系统是一个技术系统，是以地理空间数据库(Geospatial Database)为基础，采用地理模型分析方法，适时提供多种空间的和动态的地理信息，为地理研究和地理决策服务的计算机技术系统。</p><h2 id="2-GIS的基本构成与功能、应用领域"><a href="#2-GIS的基本构成与功能、应用领域" class="headerlink" title="2. GIS的基本构成与功能、应用领域"></a>2. GIS的基本构成与功能、应用领域</h2><h3 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h3><p>5个主要组成部分：<strong>系统硬件、系统软件、空间数据、应用人员和应用模型。</strong></p><ul><li><strong>硬件</strong>：计算机、网络设备、存储、输入输出设备、数据采集设备</li><li><strong>软件</strong>：系统软件（与硬件有关）、基础软件（GIS软件平台）、应用软件、数据库系统</li><li><strong>空间数据</strong>：用来表示空间实体的位置、形状、大小和分布特征诸方面信息的数据，适用于描述所有呈二维、三维和多维分布的关于区域的现象。空间数据不仅具有实体本身的空间位置及形态信息，而且还有实体属性和空间关系(如拓扑关系)信息。是GIS的血液，是GIS开展研究、应用的基础</li><li><strong>应用人员</strong>：系统开发、系统管理以及使用人员。</li><li><strong>应用模型</strong>是联系GIS应用系统与常规专业研究的纽带；是综合利用GIS应用系统中大量数据的工具； 是GIS应用系统解决各种实际问题的武器；是GIS应用系统向更高技术水平发展的基础。</li></ul><p><img src="http://ofcj2lgtd.bkt.clouddn.com/blogs/gis/zc.jpg" alt="zc"></p><h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><p>（1）数据采集与编辑（2）数据存储与管理<br>（3）数据处理与变换（4）空间分析与统计<br>（5）产品制作与显示（6）二次开发和编程</p><p><strong>空间分析</strong>是地理信息系统区别于其它信息系统的重要标志。三个层次：空间检索、空间拓扑叠加分析、空间模拟分析。具体：1）拓扑叠合；2）缓冲区分析；3）网络分析；4）数字地形分析；5）空间集合分析；</p><p><strong>应用功能</strong>：空间数据的可视化、统计与量算、规划与管理、预测与监测、辅助决策</p><p><img src="http://ofcj2lgtd.bkt.clouddn.com/blogs/gis/gn.jpg" alt="gn"></p><h3 id="应用领域"><a href="#应用领域" class="headerlink" title="应用领域"></a>应用领域</h3><p>灾害控制和分析、水土保护、农业决策和精细农业、海洋渔业、环境保护、城市GIS、数字地球、军事国防等</p><h2 id="3-特点"><a href="#3-特点" class="headerlink" title="3. 特点"></a>3. 特点</h2><ol><li>具有采集、管理、分析和输出多种地理空间信息的能力；</li><li>以地理研究和地理决策为目的，以地理模型方法为手段，具有空间分析、多要素综合分析和动态预测的能力；并能产生高层次的地理信息。</li><li>具有公共的地理定位基础，所有的地理要素，要按经纬度或者特有的坐标系统进行严格的空间定位，才能使具有时序性、多维性、区域性特征的空间要素进行复合和分解，将隐含其中的信息变为显示表达，形成空间和时间上连续分布的综合信息基础，支持空间问题的处理与决策。</li><li>由计算机系统支持进行空间地理数据管理，并由计算机程序模拟常规的或专门的地理分析方法，作用于空间数据，产生有用信息，完成人类难以完成的任务。</li><li>地理信息系统从外部来看，它表现为计算机软硬件系统；而其内涵确是由计算机程序和地理数据组织而成的地理空间信息模型，是一个逻辑缩小的、高度信息化的地理系统。信息的流动及信息流动的结果，完全由计算机程序的运行和数据的交换来仿真。</li></ol><p><strong>三个方面的特征：</strong></p><ol><li>具有采集、管理、分析和输出多种地理信息的能力，具有空间性和动态性；</li><li>由计算机系统支持进行空间地理数据管理，并由计算机程序模拟常规的或专门的地理分析方法，作用于空间数据，产生有用信息，完成人类难以完成的任务；</li><li>计算机系统的支持是地理信息系统的重要特征，因而使得地理信息系统能以快速、精确、综合地对复杂的地理系统进行空间定位和过程动态分析。</li></ol><p><img src="http://ofcj2lgtd.bkt.clouddn.com/blogs/gis/yyong.png" alt="yyong"></p><p>地理信息系统的外观，表现为计算机软硬件系统；其内涵却是由计算机程序和地理数据组织而成的地理空间信息模型。当具有一定地学知识的用户使用地理信息系统时，他所面对的数据不再是毫无意义的，而是把客观世界抽象为模型化的空间数据，用户可以按应用的目的观测这个现实世界模型的各个方面的内容，取得自然过程的分析和预测的信息，用于管理和决策，这就是地理信息系统的意义。一个逻辑缩小的、高度信息化的地理系统，从视觉、计量和逻辑上对地理系统在功能方面进行模拟，信息的流动以及信息流动的结果，完全由计算机程序的运行和数据的变换来仿真。地理学家可以在地理信息系统支持下提取地理系统各不同侧面、不同层次的空间和时间特征，也可以快速地模拟自然过程的演变或思维过程的结果，取得地理预测或“实验”的结果，选择优化方案，用于管理与决策。<br><em>(邬伦，《地理信息系统原理、方法和应用》)</em></p><h2 id="4-地理信息系统的发展透视"><a href="#4-地理信息系统的发展透视" class="headerlink" title="4. 地理信息系统的发展透视"></a>4. 地理信息系统的发展透视</h2><ol><li>国际</li></ol><p>（1）60年代为地理信息系统开拓期，注重于空间数据的地学处理。<br>（2）70年代为地理信息系统的巩固发展期，注重于空间地理信息的管理。<br>（3）80年代为地理信息系统大发展时期，注重于空间决策支持分析。<br>（4）90年代为地理信息系统的用户时代。</p><ol><li>我国: 起步(1970-1980) 、准备(1980-1985)、发展(1985-1995)、产业化(1996以后)阶段。</li></ol><p>（1）以1980年中国科学院遥感所成立全国第一个地理信息系统研究室为标志。<br>（2）地理信息系统进入发展阶段的标志是第七个五年计划开始。<br>（3）自90年代起，地理信息系统步入快速发展阶段。</p><ol><li><p>发展目标</p><p>到2020年形成万亿元的年产值，是2010年产业总产值1000亿的10倍。</p></li><li><p>GIS的发展态势<br>（1）GIS已经成为一门综合性技术（2）GIS的产业化发展势头强劲（3）GIS网络化已经成为当今社会热点</p><p>3D、时态（Temporal GIS）、地理信息建模系统、面向对象、云GIS、智慧城市、3S集成||标准化、社会化、网络化、组件化、集成化</p></li></ol><h2 id="5-GIS与其它学科技术的关系"><a href="#5-GIS与其它学科技术的关系" class="headerlink" title="5. GIS与其它学科技术的关系"></a>5. GIS与其它学科技术的关系</h2><p><img src="http://ofcj2lgtd.bkt.clouddn.com/blogs/gis/guanxi.png" alt="guanxi"></p><ol><li>GIS有别于DBMS（数据库管理系统）：GIS是能对空间数据进行分析的DBMS，GIS必须包含DBMS。</li><li>GIS有别于MIS（管理信息系统）GIS要对图形数据和属性数据库共同管理、分析和应用，GIS的软硬件设备要复杂、系统功能要强；MIS则只有属性数据库的管理，即使存贮了图形，也是以文件形式管理，图形要素不能分解、查询、没有拓扑关系。管理地图和地理信息的MIS不一定就是GIS，MIS在概念上更接近DBMS。</li><li><p>GIS有别于地图数据库</p><p>地图数据库仅仅是将数字地图有组织地存放起来，不注重分析和查询，不可能去综合图形数据和属性数据进行深层次的空间分析，提供辅助决策的信息，它只是GIS的一个数据源。</p></li><li><p>GIS有别于CAD系统</p><p>二者虽然都有参考系统，都能描述图形， GIS与CAD的最大的区别是它能够提供地理位置信息服务（具有地理坐标）和具有决策分析功能。 CAD 是设计我们世界的工具；GIS 是管理我们世界的工具；</p></li></ol><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux 学习之2]]></title>
      <url>houzw.github.io.git/2016/11/26/Linux%E5%9F%BA%E7%A1%80/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><blockquote><p><a href="http://man.linuxde.net/" target="_blank" rel="external">Linux命令大全</a></p></blockquote><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><p>清屏：<code>ctrl + l</code></p><p>清除当前行命令：<code>ctrl+u</code></p><p>终端字体变小：<code>ctrl + 减号</code> 变大 <code>ctrl + shift + 加号</code></p><h2 id="Linux目录结构"><a href="#Linux目录结构" class="headerlink" title="Linux目录结构"></a>Linux目录结构</h2><ul><li><p><code>/</code> 系统根目录</p></li><li><p><code>bin</code> 存放二进制可执行文件(<code>ls</code>,<code>cat</code>,<code>mkdir</code>等)</p></li><li><p><code>boot</code> 存放用于系统引导时使用的各种文件</p></li><li><p><code>dev</code> 用于存放设备文件</p></li><li><p><code>etc</code> 存放系统配置文件</p></li><li><p><code>home</code> 存放所有用户文件的根目录</p></li><li><p><code>lib</code> 存放跟文件系统中的程序运行所需要的共享库及内核模块</p></li><li><p><code>mnt</code> 系统管理员安装临时文件系统的安装点</p></li><li><p><code>opt</code> 额外安装的可选应用程序包所放置的位置</p></li><li><p><code>proc</code> 虚拟文件系统，存放当前内存的映射</p></li><li><p><code>root</code> 超级用户目录</p></li><li><p><code>sbin</code> 存放二进制可执行文件，只有root才能访问</p></li><li><p><code>tmp</code> <code>sbin</code>用于存放各种临时文件</p></li><li><p><code>usr</code> 用于存放系统应用程序，比较重要的目录<code>/usr/local</code> 本地管理员软件安装目录</p></li><li><p><code>var</code> 用于存放运行时需要改变数据的文件</p></li></ul><h2 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h2><h3 id="文件目录操作命令"><a href="#文件目录操作命令" class="headerlink" title="文件目录操作命令"></a>文件目录操作命令</h3><ul><li><p><code>ls</code> 显示文件和目录列表</p><ul><li><code>-l</code> 列出文件的详细信息</li><li><code>-a</code> 列出当前目录所有文件，包含隐藏文件</li></ul></li><li><code>mkdir</code> 创建目录<ul><li><code>-p</code> 父目录不存在情况下先生成父目录</li></ul></li><li><code>cd</code> 切换目录</li><li><code>touch</code> 生成一个<strong>空</strong>文件</li><li><code>echo</code> 生成一个带内容文件</li><li><code>cat、tac</code> 显示文本文件内容</li><li><code>cp</code> 复制文件或目录</li><li><code>rm</code> 删除文件<ul><li><code>-r</code> 同时删除该目录下的<strong>所有文件</strong>（递归）</li><li><code>-f</code> 强制删除文件或目录</li></ul></li><li><code>mv</code> 移动文件或目录、文件或重命名<ul><li><code>mv aaa bbb</code> 将<code>aaa</code>改名为<code>bbb</code></li></ul></li><li><code>find</code> 在文件系统中查找指定的文件<ul><li><code>-name</code> 文件名</li></ul></li><li><code>wc</code> 统计文本文档的行数，字数，字符数</li><li><code>grep</code> 在指定的文本文件中查找指定的字符串</li><li><code>rmdir</code> 删除空目录</li><li><code>tree</code> 显示目录树/目录改名</li><li><code>pwd</code> 显示当前工作目录</li><li><code>ln</code> 建立链接文件</li><li><code>more、less</code> 分页显示文本文件内容</li><li><code>Head、tail</code> 分别显示文件开头和结尾内容</li></ul><h3 id="系统管理命令"><a href="#系统管理命令" class="headerlink" title="系统管理命令"></a>系统管理命令</h3><ul><li><code>stat</code> 显示指定文件的相关信息,比ls命令显示内容更多</li><li><code>who、w</code> 显示在线登录用户</li><li><code>whoami</code> 显示用户自己的身份</li><li><code>hostname</code> 显示主机名称</li><li><code>uname</code>显示系统信息</li><li><code>top</code> 显示当前系统中耗费资源最多的进程</li><li><code>ps</code> 显示瞬间的进程状态-</li><li><code>du</code> 显示指定的文件（目录）已使用的磁盘空间的总量 ( <code>-h</code> 人性化显示（Mb或Gb）)</li><li><code>df</code> 显示文件系统磁盘空间的使用情况</li><li><code>free</code> 显示当前内存和交换空间的使用情况</li><li><code>ifconfig</code> 显示网络接口信息</li><li><code>ping</code> 测试网络的连通性</li><li><code>netstat</code> 显示网络状态信息</li><li><code>man</code> 命令帮助信息查询</li><li><code>Alias</code> 设置命令别名</li><li><code>alias [别名]=[“指令名”]</code></li><li><code>Clear</code> 清屏</li><li><code>Kill</code> 杀死进程</li></ul><h3 id="其他基本命令"><a href="#其他基本命令" class="headerlink" title="其他基本命令"></a>其他基本命令</h3><p>当前目录：<code>pwd</code> 查看此帮助<code>man pwd</code></p><h3 id="软件相关"><a href="#软件相关" class="headerlink" title="软件相关"></a>软件相关</h3><p><code>which (选项)(参数)</code> 用于<strong>查找并显示给定命令的绝对路径</strong>，环境变量PATH中保存了查找命令时需要遍历的目录。which指令会在环境变量<code>$PATH</code>设置的目录里查找符合条件的文件。也就是说，使用which命令，就可以看到<strong>某个系统命令是否存在，以及执行的到底是哪一个位置的命令</strong>。</p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Windows下SSH安装使用]]></title>
      <url>houzw.github.io.git/2016/11/25/Windows%E4%B8%8BSSH%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="Windows下SSH安装使用"><a href="#Windows下SSH安装使用" class="headerlink" title="Windows下SSH安装使用"></a>Windows下SSH安装使用</h1><h2 id="1-通过Cygwin安装"><a href="#1-通过Cygwin安装" class="headerlink" title="1. 通过Cygwin安装"></a>1. 通过Cygwin安装</h2><blockquote><p>安装配置参考目录</p><p><a href="http://gotgit.readthedocs.io/en/latest/01-meet-git/050-install-on-windows-cygwin.html" target="_blank" rel="external">Windows下安装和使用Git（Cygwin篇）</a></p><p><a href="http://blog.csdn.net/GarfieldEr007/article/details/50913256" target="_blank" rel="external">http://blog.csdn.net/GarfieldEr007/article/details/50913256</a></p><p><a href="https://microtechnology-services.github.io/2016/04/29/cygwin-sshd-on-windows-domain.html" target="_blank" rel="external">https://microtechnology-services.github.io/2016/04/29/cygwin-sshd-on-windows-domain.html</a></p><p><a href="http://www.cnblogs.com/liuning8023/p/3692085.html" target="_blank" rel="external">Windows 环境 cygwin 安装 SSH</a></p></blockquote><ul><li><p>访问 www.cygwin.com, 点击 “Install now!” 链接， 此操作将会下载一个安装文件, <code>setup-x86.exe</code>（或 <a href="http://www.cygwin.com/setup-x86_64.exe" target="_blank" rel="external">setup-x86_64.exe</a>）; 保存到 <code>Foo</code>. 安装文件 <code>setup-x86_64.exe</code> 是一个小程序，当你运行它时，会从互联网下载真正的安装文件.</p></li><li><p>双击<code>setup.exe</code>，会出现一系列的对话框. 选择 “Install from Internet.” 。“Local Package Directory” 选择 <code>Foo</code>. 对于 “Select install root directory” 我们建议你使用默认的 <code>C:\cygwin</code>. 随后会需要选择连接类型，根据你的网络情况选择。下一步选择一个软件镜像，选择离你最近的一个(如163的镜像或 <a href="http://mirrors.ustc.edu.cn" target="_blank" rel="external">http://mirrors.ustc.edu.cn</a>) .</p></li><li><p>接下来会需要你选择需要安装的包。若你不想安装某个包，点击使其出现 “skip” . 对于最小化的安装，你只需要选择 “cygwin” 和“openssh”，或再选择<code>vim</code>， 大概 1900KB; 而整个安装的话包会大很多。</p></li><li><p>需要设置 HOME 和 PATH 环境变量. Ssh 会在给定的HOME目录下创建一个 <code>.ssh</code> 目录, 从而有地方存放数据，如你的公共和私有密钥. PATH 必须被设置到 Cygwin的 <code>bin</code> 目录, 从而可以找到 ssh 的可执行文件.</p></li><li><p>有些还设置了环境变量 <code>CYGWIN = ntsec tty</code>，这样应该后面配置ssh时不需要输入CYGWIN 的值了</p></li><li><p>安装完成后以<strong>管理员身份</strong>运行cygwin终端，输入<code>ssh-host-config</code>对ssh进行配置</p><p>需要注意的几个配置：</p><ul><li>strict modes -&gt; yes</li><li>privilege separation -&gt; no （或yes，会问是否创建新的名为sshd的用户）</li><li>value of CYGWIN for the daemon - <code>ntsec</code></li><li>user to run as -&gt;<code>cyg_server</code> (or whichever one maps to your domain user in <code>/etc/passwd</code> )</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">$ ssh-host-config</div><div class="line"></div><div class="line">*** Info: Generating missing SSH host keys</div><div class="line">*** Query: Overwrite existing /etc/ssh_config file? (yes/no) yes</div><div class="line">*** Info: Creating default /etc/ssh_config file</div><div class="line">*** Query: Overwrite existing /etc/sshd_config file? (yes/no) yes</div><div class="line">*** Info: Creating default /etc/sshd_config file</div><div class="line"></div><div class="line">*** Info: StrictModes is set to &apos;yes&apos; by default.</div><div class="line">*** Info: This is the recommended setting, but it requires that the POSIX</div><div class="line">*** Info: permissions of the user&apos;s home directory, the user&apos;s .ssh</div><div class="line">*** Info: directory, and the user&apos;s ssh key files are tight so that</div><div class="line">*** Info: only the user has write permissions.</div><div class="line">*** Info: On the other hand, StrictModes don&apos;t work well with default</div><div class="line">*** Info: Windows permissions of a home directory mounted with the</div><div class="line">*** Info: &apos;noacl&apos; option, and they don&apos;t work at all if the home</div><div class="line">*** Info: directory is on a FAT or FAT32 partition.</div><div class="line">*** Query: Should StrictModes be used? (yes/no) yes</div><div class="line"></div><div class="line">*** Info: Privilege separation is set to &apos;sandbox&apos; by default since</div><div class="line">*** Info: OpenSSH 6.1.  This is unsupported by Cygwin and has to be set</div><div class="line">*** Info: to &apos;yes&apos; or &apos;no&apos;.</div><div class="line">*** Info: However, using privilege separation requires a non-privileged account</div><div class="line">*** Info: called &apos;sshd&apos;.</div><div class="line">*** Info: For more info on privilege separation read /usr/share/doc/openssh/README.privsep.</div><div class="line">*** Query: Should privilege separation be used? (yes/no) no</div><div class="line">*** Info: Updating /etc/sshd_config file</div><div class="line"></div><div class="line">*** Query: Do you want to install sshd as a service?</div><div class="line">*** Query: (Say &quot;no&quot; if it is already installed as a service) (yes/no) yes</div><div class="line">*** Query: Enter the value of CYGWIN for the daemon: [] ntsec</div><div class="line">*** Info: On Windows Server 2003, Windows Vista, and above, the</div><div class="line">*** Info: SYSTEM account cannot setuid to other users -- a capability</div><div class="line">*** Info: sshd requires.  You need to have or to create a privileged</div><div class="line">*** Info: account.  This script will help you do so.</div><div class="line"></div><div class="line">*** Info: It&apos;s not possible to use the LocalSystem account for services</div><div class="line">*** Info: that can change the user id without an explicit password</div><div class="line">*** Info: (such as passwordless logins [e.g. public key authentication]</div><div class="line">*** Info: via sshd) when having to create the user token from scratch.</div><div class="line">*** Info: For more information on this requirement, see</div><div class="line">*** Info: https://cygwin.com/cygwin-ug-net/ntsec.html#ntsec-nopasswd1</div><div class="line"></div><div class="line">*** Info: If you want to enable that functionality, it&apos;s required to create</div><div class="line">*** Info: a new account with special privileges (unless such an account</div><div class="line">*** Info: already exists). This account is then used to run these special</div><div class="line">*** Info: servers.</div><div class="line"></div><div class="line">*** Info: Note that creating a new user requires that the current account</div><div class="line">*** Info: have Administrator privileges itself.</div><div class="line"></div><div class="line">*** Info: No privileged account could be found.</div><div class="line"></div><div class="line">*** Info: This script plans to use &apos;cyg_server&apos;.</div><div class="line">*** Info: &apos;cyg_server&apos; will only be used by registered services.</div><div class="line">*** Query: Do you want to use a different name? (yes/no) no</div><div class="line">*** Query: Create new privileged user account &apos;HOUZHIWEI-PC\cyg_server&apos; (Cygwin name: &apos;cyg_server&apos;)? (yes/no) yes</div><div class="line">*** Info: Please enter a password for new user cyg_server.  Please be sure</div><div class="line">*** Info: that this password matches the password rules given on your system.</div><div class="line">*** Info: Entering no password will exit the configuration.</div><div class="line">*** Query: Please enter the password:</div><div class="line">*** Query: Reenter:</div><div class="line"></div><div class="line">*** Info: User &apos;cyg_server&apos; has been created with password &apos;victorho&apos;.</div><div class="line">*** Info: If you change the password, please remember also to change the</div><div class="line">*** Info: password for the installed services which use (or will soon use)</div><div class="line">*** Info: the &apos;cyg_server&apos; account.</div><div class="line"></div><div class="line"></div><div class="line">*** Info: The sshd service has been installed under the &apos;cyg_server&apos;</div><div class="line">*** Info: account.  To start the service now, call `net start sshd&apos; or</div><div class="line">*** Info: `cygrunsrv -S sshd&apos;.  Otherwise, it will start automatically</div><div class="line">*** Info: after the next reboot.</div><div class="line"></div><div class="line">*** Info: Host configuration finished. Have fun!</div></pre></td></tr></table></figure><ul><li><p>启动服务</p><p><code>net start sshd</code>或 <code>cygrunsrv -S sshd</code> 。由于已经安装sshd为service，下次启动系统会自动启动</p></li><li><p>测试 （在DOS命令行下也是可以的）</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">$ ssh -V # 不是 ssh -version</div><div class="line">OpenSSH_7.2p2, OpenSSL 1.0.2j  26 Sep 2016</div></pre></td></tr></table></figure><p>或者测试登录远程主机：<code>ssh &lt;remote host&gt; -l &lt;login name&gt;</code></p></li></ul><h2 id="ssh-keygen-基本用法"><a href="#ssh-keygen-基本用法" class="headerlink" title="ssh-keygen 基本用法"></a>ssh-keygen 基本用法</h2><blockquote><p>搬运自 <a href="https://www.liaohuqiu.net/cn/posts/ssh-keygen-abc/" target="_blank" rel="external">ssh-keygen 基本用法</a></p></blockquote><p>使用 <code>ssh-kengen</code> 会在<code>~/.ssh/</code>目录下生成两个文件，不指定文件名(<code>-f</code>)和密钥类型(<code>-t</code>, 有 DSA, RSA, ECDSA, ED25519等)的时候，默认生成的两个文件是：</p><ul><li><code>id_rsa</code></li><li><code>id_rsa.pub</code></li></ul><p>第一个是私钥文件，第二个是公钥文件。</p><p>生成ssh key的时候，可以通过 <code>-f</code> （file）选项指定生成文件的文件名，如下:</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">[huqiu@101 .ssh]$ ssh-keygen -f test   -C &quot;test key&quot;</div><div class="line">                             # ~~文件名   ~~~~ 备注（comment）</div></pre></td></tr></table></figure><p>如果没有指定文件名，会询问你输入文件名:</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">[huqiu@101 .ssh]$ ssh-keygen</div><div class="line">Generating public/private rsa key pair.</div><div class="line">Enter file in which to save the key (/home/huqiu/.ssh/id_rsa):</div></pre></td></tr></table></figure><p>你可以输入你想要的文件名，这里我们输入<code>test</code>。</p><blockquote><p><strong>注意</strong>: 使用SSH连接Github或OSChina等时，可能会出现</p><p><code>Permission denied (publickey)</code></p><p>这是因为你使用了自己的文件名，而非默认的<code>id_rsa</code>！</p><p>连接方式一：指定文件 <code>ssh -i ~/.ssh/id_rsa_oschina</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">&gt;   $ ssh -i ~/.ssh/id_rsa_oschina git@git.oschina.net</div><div class="line">&gt;   PTY allocation request failed on channel 0</div><div class="line">&gt;   Welcome to Git@OSC, houzw!</div><div class="line">&gt;   Connection to git.oschina.net closed.</div><div class="line">&gt;</div></pre></td></tr></table></figure></blockquote><p>&gt;</p><blockquote><p>方式二：修改<code>.ssh</code>目录下的配置文件<code>config</code>(若没有则先<code>touch ~/.ssh/config</code>)</p><p>通过这种方式可以配置多个ssh key</p><p><a href="http://blog.jobbole.com/33790/" target="_blank" rel="external">高效使用 SSH 的 16 个技巧</a> 、<a href="https://www.cyberciti.biz/faq/create-ssh-config-file-on-linux-unix/" target="_blank" rel="external">OpenSSH Config File Examples</a></p><figure class="highlight yaml"><table><tr><td class="code"><pre><div class="line">&gt;   Host github // 主机别名，不能重名。</div><div class="line">&gt;   	HostName github.com  // 主机所在域名或IP.   github的Host必须写成“github.com”  【如果Host写成主机域名，可以省略？】</div><div class="line">&gt;   	PreferredAuthentications publickey</div><div class="line">&gt;   	User git  // 登录用户名，当远程服务器上的用户名和本地的用户名不同</div><div class="line">&gt;   	IdentityFile ~/.ssh/user2  // 私钥路径</div><div class="line">&gt;   	Port <span class="number">22000</span>  //端口号,可选</div><div class="line"><span class="string">&gt;</span></div></pre></td></tr></table></figure><p>设置Host别名之后，ssh登录时可以使用 <code>ssh username@Host</code> 的形式代替 <code>ssh username@HostName</code></p><p>Github的SSH测试 <code>$ ssh -T git@github.com</code></p></blockquote><h3 id="密码"><a href="#密码" class="headerlink" title="密码"></a>密码</h3><p>之后，会询问你是否需要输入密码(passphrase)。输入密码之后，以后每次都要输入密码。请根据你的安全需要决定是否需要密码，如果不需要，直接回车:</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">[huqiu@101 .ssh]$ ssh-keygen -t rsa -f test -C &quot;test key&quot;</div><div class="line">Generating public/private rsa key pair.</div><div class="line">Enter passphrase (empty for no passphrase):</div><div class="line">Enter same passphrase again:</div></pre></td></tr></table></figure><blockquote><p>Passphrase也是一种密码，是在程序读取你的私钥文件时要用到的（即你的私钥文件被加密保存了）．如果你想完全自动登录对端（不想交互式输入任何东西）那么这里可以不输入passphrase（直接回车），不过从安全性上面来说并不是太好（更好的办法是采用 <code>ssh-agent</code> 来加载密钥（加载时输入passphrase），然后在后面使用过程中就是 ssh-agent 与对端交互，不再需要输入passphrase了）</p></blockquote><h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><p>如果文件名是<code>test</code>，结果是:</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">[huqiu@101 .ssh]$ ll test*</div><div class="line">-rw------- 1 huqiu huqiu 1675 Sep 15 13:24 test</div><div class="line">-rw-r--r-- 1 huqiu huqiu  390 Sep 15 13:24 test.pub</div></pre></td></tr></table></figure><h3 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h3><p>上面生成的命令中，<code>-C</code>选项是公钥文件中的备注:</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">[huqiu@101 .ssh]$ cat test.pub</div><div class="line">ssh-rsa</div><div class="line">AAAAB3NzaC1yc2EAAAABIwAAAQEAlgjiMw7AskxbvpQY9rmZPQxQBzh9laxFvbaini2EgmQkNsXBA9WJOXn2YBJauoiVsdUKBWA97avjsobrTxsCYvFr1yQQvTfTlbqlqGNIhQc/3HjTl2pIkClpDWvBrRN+jpyESS4MNbfOL1qjT4c/QhGvj6U6HrN6kUyn58oyyJpTzOLG74AZELJ2Led57QvTw1yJXZuAMWioR0A3BGd25fdocLX3ebux6ya8AsloOVYfsAqGlggrARe6FXjLfMH4a/nxaAdiDYVXU/Vr1ybK9P7SfyEDGJi3JtgiPUlA6vPxUC</div><div class="line">E+9IJPQaqqeqCGzrJ6G/XO7om1v9YLLG/H/ZN2tQ== test key         # ~~~~备注</div></pre></td></tr></table></figure><h3 id="文件的权限"><a href="#文件的权限" class="headerlink" title="文件的权限"></a>文件的权限</h3><p>为了让私钥文件和公钥文件能够在认证中起作用，请确保权限正确。</p><p>对于<code>.ssh</code> 以及父文件夹，当前用户用户一定要有执行权限，<strong>其他用户最多只能有执行权限</strong>。</p><p>对于公钥和私钥文件也是: 当前用户一定要有执行权限，其他用户最多只能有执行权限。</p><ul><li>对于客户端: 私钥必须为<code>600</code>权限或者更严格权限(<code>400</code>),一旦其他用户可读,私钥就不起作用(如<code>640</code>),表现为系统认为不存在私钥。</li><li>对于服务器端:要求必须公钥其他用户不可写,一旦其他用户可写(如660),就无法用key登录,表现为：<code>Permission denied(publickey)</code>。</li><li>同时要求<code>.ssh</code>目录其他用户不可写,一旦其他用户可写(如770),就无法使用key登录,表现为：<code>Permission denied(publickey)</code>。</li></ul><p>不仅.ssh目录，更上 层的目录的权限同样会有影响。</p><p>home中用户目录的可写,表示其他用户对.ssh子目录也有改写的权限(删除或重命令),也就导致ssh判断.ssh为其他用户可写,拒绝使用key登录。</p><blockquote><p>对于利用公钥登录，对其他用户配置执行权限是没有问题的。但是对于git，公钥和私钥, 以及config等相关文件的权限，其他用户不可有任何权限。</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">&gt;   chmod 700 ~/.ssh</div><div class="line">&gt;   chmod 600 ~/.ssh/authorized_keys</div><div class="line">&gt;</div></pre></td></tr></table></figure></blockquote><p>&gt;</p><blockquote></blockquote><h3 id="SSH免密码登录"><a href="#SSH免密码登录" class="headerlink" title="SSH免密码登录"></a>SSH免密码登录</h3><blockquote><ul><li><a href="http://www.cnblogs.com/liuning8023/p/3692085.html" target="_blank" rel="external">Windows 环境 cygwin 安装 SSH</a></li><li><a href="http://www.cnblogs.com/bamanzi/p/ssh-login-without-password.html" target="_blank" rel="external">如何配置ssh免密码登录</a></li><li><p><a href="http://blog.csdn.net/joe_007/article/details/8298814" target="_blank" rel="external">【hadoop】ssh localhost 免密码登陆（图解）</a></p><p>在生成密钥对的过程中，不输入密码，直接回车。避免每次登录都需要输入密码。</p><p>或者使用<code>-P &#39;&#39;</code> 参数，这样不用多次回车</p></li></ul></blockquote><h4 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h4><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">D:\Program Files\ConsoleZ&gt;ssh-keygen -t rsa</div><div class="line">Generating public/private rsa key pair.</div><div class="line">Enter file in which to save the key (/home/houzhiwei/.ssh/id_rsa):</div><div class="line">Enter passphrase (empty for no passphrase):</div><div class="line">Enter same passphrase again:</div><div class="line">Your identification has been saved in /home/houzhiwei/.ssh/id_rsa.</div><div class="line">Your public key has been saved in /home/houzhiwei/.ssh/id_rsa.pub.</div><div class="line">The key fingerprint is:</div><div class="line">SHA256:mclUKbp4BzSf7pMP6+iB55xOzgLIj79gHc+9eF1gsR0 houzhiwei@houzhiwei-PC</div><div class="line">The key&apos;s randomart image is:</div><div class="line">+---[RSA 2048]----+</div><div class="line">|          ..     |</div><div class="line">|      o .o.E     |</div><div class="line">|     . +.o+ .    |</div><div class="line">|      oooB .     |</div><div class="line">|.. . . +S .      |</div><div class="line">|..o =.+ o  .     |</div><div class="line">| ooo.+++o..      |</div><div class="line">|.....B.==+       |</div><div class="line">|  .o.=@ooo.      |</div><div class="line">+----[SHA256]-----+</div><div class="line"></div><div class="line">D:\Program Files\ConsoleZ&gt;</div></pre></td></tr></table></figure><h4 id="将公钥拷贝到目标服务器："><a href="#将公钥拷贝到目标服务器：" class="headerlink" title="将公钥拷贝到目标服务器："></a>将公钥拷贝到目标服务器：</h4><ul><li>使用<code>ssh-copy-id</code> 工具</li></ul><blockquote><p>这一次要输入密码．如果生成密钥时输入了passphrase的话，这里还得输入passphrase</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">houzw@houzw-PC ~/.ssh</div><div class="line">$ ssh-copy-id -i ~/.ssh/id_rsa_centos.pub houzw@192.168.1.109</div><div class="line">/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: &quot;/home/houzw/.ssh/id_rsa_centos.pub&quot;</div><div class="line">The authenticity of host &apos;192.168.1.109 (192.168.1.109)&apos; can&apos;t be established.</div><div class="line">ECDSA key fingerprint is SHA256:kCnXmyP9B/4nm+OLG5Nm6NiFOgg2YO3kkjPq3aS08yo.</div><div class="line">Are you sure you want to continue connecting (yes/no)? yes</div><div class="line">/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed</div><div class="line">/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys</div><div class="line">houzw@192.168.1.109&apos;s password:</div><div class="line"></div><div class="line">Number of key(s) added: 1</div><div class="line"></div><div class="line">Now try logging into the machine, with:   &quot;ssh &apos;houzw@192.168.1.109&apos;&quot;</div><div class="line">and check to make sure that only the key(s) you wanted were added.</div></pre></td></tr></table></figure><p><code>ssh-copy-id</code> 把本地主机的公钥复制到远程主机的<code>authorized_keys</code>文件上，也会给远程主机的用户主目录（home）和<code>~/.ssh</code>, 和<code>~/.ssh/authorized_keys</code>设置合适的权限 。</p><p>如果需要指定端口</p><p><code>ssh-copy-id -i /path/key/file.pub &quot;user@server.example.com -p 4242&quot;</code></p><blockquote><p>如果设置之后还是需要输入密码，请检查服务器<code>.ssh</code>与<code>~/.ssh/authorized_keys</code>的权限及本机<code>ssh</code>的<code>config</code>。<code>config</code>中设置Host别名之后，ssh登录时可以使用 <code>ssh username@Host</code> 的形式代替 <code>ssh username@HostName</code> 。如</p><figure class="highlight yaml"><table><tr><td class="code"><pre><div class="line">&gt;   Host centos</div><div class="line">&gt;   	HostName <span class="number">192.168</span><span class="number">.1</span><span class="number">.109</span></div><div class="line">&gt;   	IdentityFile ~/.ssh/id_rsa_centos</div><div class="line">&gt;   	User houzw</div><div class="line"><span class="string">&gt;</span></div></pre></td></tr></table></figure></blockquote><p>&gt;</p><blockquote><p>则可以用<code>ssh houzw@centos</code> 登录。这时候再使用 <code>ssh houzw@192.168.1.109</code> 就需要输入密码了</p></blockquote><ul><li>使用<code>scp</code>，第一次会要求输入一次密码</li></ul><p><code>scp -i ~/.ssh/id_rsa_centos.pub houzw@192.168.1.109:~/.ssh/authorized_keys</code></p><ul><li>先登录，再拷贝，再添加（考虑到权限问题）</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">$ ssh username@www-03.nixcraft &quot;umask 077; mkdir .ssh&quot;</div><div class="line">$ cat $HOME/.ssh/id_rsa.pub | ssh username@www-03.nixcraft &quot;cat &gt;&gt; .ssh/authorized_keys&quot;</div></pre></td></tr></table></figure><h3 id="删除ssh中旧的公钥记录"><a href="#删除ssh中旧的公钥记录" class="headerlink" title="删除ssh中旧的公钥记录"></a>删除ssh中旧的公钥记录</h3><p><code>ssh-keygen -f &quot;~/.ssh/known_hosts&quot; -R 192.168.1.254</code></p><p>如果<code>mkstemp: No such file or directory</code>），去掉<code>-f</code>参数</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">houzw@houzw-PC ~/.ssh</div><div class="line">$ ssh-keygen -R 192.168.1.109</div><div class="line"># Host 192.168.1.109 found: line 3</div><div class="line">/home/houzw/.ssh/known_hosts updated.</div><div class="line">Original contents retained as /home/houzw/.ssh/known_hosts.old</div></pre></td></tr></table></figure><hr><h4 id="关于HOME环境变量：最好不设置！"><a href="#关于HOME环境变量：最好不设置！" class="headerlink" title="关于HOME环境变量：最好不设置！"></a>关于HOME环境变量：最好不设置！</h4><p>Cygwin确定用户主目录有几个原则，依照顺序确定主目录。首先查看系统的HOME环境变量，其次查看<code>/etc/passwd</code>中为用户设置的主目录。有的软件遵照这个原则，而有些Cygwin应用，如ssh，却没有使用HOME环境变量而直接使用<code>/etc/passwd</code>中的的设置（这会导致<code>ssh-keygen</code> 生成的密钥对文件不会存放到设置的HOME目录(如<code>D:\Programs\SSH</code>，即 <code>/cygdrive/d/Programs/SSH</code>)下，而是其默认目录下，如<code>/home/houzw/.ssh/id_rsa</code>）。要想避免在同一个Cygwin环境下有两个不同的用户主目录设置，可以采用下面两种方法。</p><ul><li><p>方法1：修改Cygwin启动的批处理文件（如：<code>C:\cygwin\Cygwin.bat</code>），在批处理的开头添加如下的一行，就可以清除其他软件为Windows引入的HOME环境变量。<code>set HOME=</code></p><p>此方法时，<code>ssh-keygen</code>还是默认使用的<code>/etc/passwd</code>中的的设置</p></li><li><p>方法2：如果希望使用HOME环境变量指向的主目录，则通过手工编辑<code>/etc/passwd</code>文件，将其中用户主目录修改成HOME环境变量所指向的目录。（<code>ssh-keygen</code>不再使用默认的<code>/etc/passwd</code>中的的设置，但是<code>ssh localhost</code>登录之后仍是其中的路径，没办法免密码登录<code>localhost</code> ？）</p><p>若没有<code>passwd</code>文件，则创建一个：<code>mkpasswd -l &gt; /etc/passwd</code> ，内容会自动生成。</p><p><code>passwd</code>文件每一行内容： <strong>用户名</strong>:<strong>口令</strong>:<strong>用户标识号</strong>:<strong>组标识号</strong>:<strong>注释性描述</strong>:<strong>主目录</strong>:<strong>登录Shell</strong></p><p>将 <code>houzw:*:197608:197121:U-houzw-PC\houzw,S-1-5-21-1228681770-2473699563-3202222160-1000:/home/houzw:/bin/bash</code>中的<code>/home/houzw</code> 修改为<code>/cygdrive/d/Programs/SSH</code></p></li></ul><p><strong>最好就使用默认的主目录</strong>，不然无法免密码登录（也有可能我哪里设置有问题）</p><hr><h2 id="移除已有的-sshd-服务和用户"><a href="#移除已有的-sshd-服务和用户" class="headerlink" title="移除已有的 sshd 服务和用户"></a>移除已有的 sshd 服务和用户</h2><p>如果想移除已存在的一个<code>sshd</code>服务，先停止然后移除</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">cygrunsrv --stop sshd # 或 net stop sshd</div><div class="line">cygrunsrv --remove sshd # 或 cygrunsrv --R sshd</div></pre></td></tr></table></figure><p>然后删除本机的 <code>cyg_server</code> 用户（<code>net user cyg_server /del</code>）（或你自己在<code>ssh-host-config</code>中设置的用户名）.</p><hr><p>移除 Cygwin</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line"># sotp sshd</div><div class="line">net stop sshd</div><div class="line"></div><div class="line"># 刪除 cygwin</div><div class="line">sc delete sshd</div><div class="line"></div><div class="line"># 刪除帳號 sshd cyg_server</div><div class="line">net user sshd /del</div><div class="line">net user cyg_server /del</div><div class="line"></div><div class="line">#</div><div class="line">takeown /f C:\cygwin /r /d y</div><div class="line">icacls c:\cygwin /t /grant everyone:F</div><div class="line"></div><div class="line"># 刪除檔案目錄</div><div class="line">rmdir /s /q c:\cygwin</div></pre></td></tr></table></figure><h2 id="2-使用Git"><a href="#2-使用Git" class="headerlink" title="2. 使用Git"></a>2. 使用Git</h2><p>下载安装</p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[WebService 学习基础-1]]></title>
      <url>houzw.github.io.git/2016/11/24/WebService-%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="WebService-学习基础-1"><a href="#WebService-学习基础-1" class="headerlink" title="WebService 学习基础-1"></a>WebService 学习基础-1</h1><h3 id="Schema规范"><a href="#Schema规范" class="headerlink" title="Schema规范"></a>Schema规范</h3><ul><li>所有的标签和属性都需要由<code>schema</code>文件来定义</li><li>所有的<code>schema</code>文件都需要有一个命名空间（<code>namespace</code>）作为其id</li><li><code>schema</code>文档的<code>namespace</code>由<code>targetNamespace</code>属性来指定，其值为一个<code>url</code> （不一定能够访问）</li><li><code>xml</code>文档引入相应<code>schema</code> 文档，使用<code>xmlns</code>属性来指定其值（<code>schema</code>文档的<code>targetNamespace</code>属性）</li><li>如果引入的<code>schema</code>不是W3C定义的，必须指定<code>schema</code>文档（<code>.xsd</code>）的地址，其值由<code>schemaLocation</code>属性确定.<code>schemaLocation</code>的值形式为<code>“namespace值 文档位置（.xsd）”</code></li><li><code>schemaLocation</code>属性的使用需引入<code>http://www.w3.org/2001/XMLSchema-instance</code>命名空间</li><li>引入多个命名空间时，在<code>xmlns</code>后面使用<code>（冒号）: 别名</code> 来指定别名，其下面定义的标签都要使用<code>别名:标签名</code>形式。如<code>xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;</code>，则有<code>&lt;xsd:annotation&gt;</code></li></ul><h3 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a>HTTP协议</h3><h4 id="请求（request）"><a href="#请求（request）" class="headerlink" title="请求（request）"></a>请求（request）</h4><ul><li>请求行（请求方式，协议版本等）</li><li>请求头（）</li><li>请求体，POST请求时才有</li></ul><h4 id="响应（response）"><a href="#响应（response）" class="headerlink" title="响应（response）"></a>响应（response）</h4><ul><li>状态行（协议版本 状态码 原因描述）</li><li>响应头</li><li>响应体</li></ul><h3 id="WebService"><a href="#WebService" class="headerlink" title="WebService"></a>WebService</h3><blockquote><p>常用webservice <a href="http://www.webxml.com.cn/zh_cn/web_services.aspx" target="_blank" rel="external">http://www.webxml.com.cn/zh_cn/web_services.aspx</a></p></blockquote><ul><li>跨平台</li><li>跨语言</li><li>网络访问，远程调用</li></ul><h4 id="常用术语"><a href="#常用术语" class="headerlink" title="常用术语"></a>常用术语</h4><ul><li><p>wsdl—— Web Services Description Language</p><p>定义了webservice服务端与客户端交互传递请求和响应数据的格式</p><p>一个webservice对应一个唯一的wsdl文件</p></li><li><p>soap——simple object access protocol</p><p>基于http和xml的协议，用于在web上交换结构化的数据</p><p>soap消息：请求消息和响应消息</p><p>http+xml片段</p></li><li><p>SEI ——webservice endpoint interface（终端）</p><p>服务器端用来处理请求的接口</p></li><li><p>CXF</p></li><li><p>Axis2</p></li></ul><h3 id="使用JDK开发WebService"><a href="#使用JDK开发WebService" class="headerlink" title="使用JDK开发WebService"></a>使用JDK开发WebService</h3><ol><li><p>定义SEI</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">package</span> com.vtech.service;</div><div class="line"><span class="comment">//SEI</span></div><div class="line"><span class="meta">@WebService</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">HelloWS</span></span>&#123;</div><div class="line">  <span class="meta">@WebMethod</span></div><div class="line">  <span class="function">String <span class="title">sayHi</span><span class="params">(String txt)</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>定义实现类</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">package</span> com.vtech.service.impl;</div><div class="line"><span class="meta">@WebService</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWSImpl</span> <span class="keyword">implements</span> <span class="title">HelloWS</span></span>&#123;</div><div class="line">  <span class="meta">@Override</span></div><div class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">sayHi</span><span class="params">(String txt)</span></span>&#123;</div><div class="line">    System.out.println(<span class="string">"sayHi: "</span> + txt);</div><div class="line">        <span class="keyword">return</span> <span class="string">"Hello"</span> + txt;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>发布服务</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServiceTest</span></span></div><div class="line">&#123;</div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="title">ServiceTest</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        <span class="comment">// START SNIPPET: publish</span></div><div class="line">        System.out.println(<span class="string">"Starting Server"</span>);</div><div class="line">        HelloWSImpl implementor = <span class="keyword">new</span> HelloWSImpl();</div><div class="line">        String address = <span class="string">"http://localhost:9000/services/hello"</span>;<span class="comment">//服务地址</span></div><div class="line">        Endpoint.publish(address, implementor);<span class="comment">//发布</span></div><div class="line">        <span class="comment">// END SNIPPET: publish</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        <span class="keyword">new</span> ServiceTest();</div><div class="line">        System.out.println(<span class="string">"Server ready..."</span>);</div><div class="line">        <span class="comment">//Thread.sleep(5 * 60 * 1000);</span></div><div class="line">        <span class="comment">//System.out.println("Server exiting");</span></div><div class="line">        <span class="comment">//System.exit(0);</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>查看WSDL文件</p><p>访问<code>http://localhost:9000/services/hello?wsdl</code></p><p>(不加<code>?wsdl</code>访问报<code>No binding operation info while invoking unknown method with params unknown.</code>)</p></li><li><p>生成客户端代码</p><p>使用<code>jdk</code>的 <code>wsimport.exe</code>工具生成客户端代码</p><p><code>wsimport -keep -p com.vtech.ws.client http://localhost:9000/services/hello?wsdl</code></p><p>命令参数说明：</p><ul><li><p><code>-d</code>: 生成客户端执行类的<code>class</code>文件的存放目录</p></li><li><p><code>-s</code>: 生成客户端执行类的<strong>源文件</strong>的存放目录</p></li><li><p><code>-p</code>: 定义生成类的<strong>包名</strong></p></li><li><p><code>-keep</code> 导出webservice的class文件时是否也导出源代码<a href="http://lib.csdn.net/base/javaee" target="_blank" rel="external">Java</a>文件</p></li><li><p>注意：若是在包下面执行的命令，不需要再加包名了</p></li><li><p>生成<code>sayHi</code>方法对应的类<code>SayHi</code>及<code>SayHiResponse</code> 、<code>HelloWS</code>、<code>Hello</code>、<code>ObjectFactory</code>等类/接口，如果有服务端定义了实体类，还会生成相应的实体类。其中<code>Hello</code>就是生成的<strong>客户端类</strong>：</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="meta">@WebServiceClient</span>(name = <span class="string">"hello"</span>, targetNamespace = <span class="string">"http://impl.service.vtech.com/"</span>, wsdlLocation = <span class="string">"http://localhost:9000/services/hello?wsdl"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Hello</span>    <span class="keyword">extends</span> <span class="title">Service</span></span></div><div class="line">&#123;</div><div class="line">  <span class="comment">//...其他代码</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul></li><li><p>测试客户端代码</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClientTest</span></span></div><div class="line">&#123;</div><div class="line">4<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span></div><div class="line">4&#123;</div><div class="line">44Hello helloFactory = <span class="keyword">new</span> Hello();</div><div class="line">44<span class="comment">// 代理对象</span></div><div class="line">44HelloService service = helloFactory.getHelloServiceImplPort();</div><div class="line">44String hi = service.sayHi(<span class="string">" houzw"</span>);</div><div class="line">44System.out.println(hi);</div><div class="line">4&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>注意：测试时可能报错</p><blockquote><p><a href="http://stackoverflow.com/questions/4254334/illegalannotationexception-two-classes-have-the-same-xml-type-name" target="_blank" rel="external">IllegalAnnotationException: Two classes have the same XML type name</a></p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">两个类具有相同的 XML 类型名称 &quot;&#123;http://service.vtech.com/&#125;sayHiResponse&quot;。请使用 @XmlType.name 和 @XmlType.namespace 为类分配不同的名称。</div><div class="line">4this problem is related to the following location:</div><div class="line">44at com.vtech.webservice.jaxws_asm.SayHiResponse</div><div class="line">4this problem is related to the following location:</div><div class="line">44at com.vtech.webservice.SayHiResponseVO</div><div class="line">44at public javax.xml.bind.JAXBElement com.vtech.webservice.ObjectFactory.createSayHiResponse(com.vtech.webservice.SayHiResponseVO)</div><div class="line">44at com.vtech.webservice.ObjectFactory</div></pre></td></tr></table></figure><p>这时候需要修改相关类上面内容。如将生成的下述代码中的<code>XmlType</code>中的<code>sayHiResponse</code>改为<code>sayHiResponse2</code></p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="meta">@XmlAccessorType</span>(XmlAccessType.FIELD)</div><div class="line"><span class="meta">@XmlType</span>(name = <span class="string">"sayHiResponse2"</span>, propOrder = &#123;</div><div class="line">44<span class="string">"_return"</span></div><div class="line">&#125;)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SayHiResponse</span></span>&#123;</div><div class="line">  <span class="comment">//...</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><p>这是由于JAX-WS对webservice里面的每个方法都生成一个类，生成的类名为:<code>methodName + &quot;Response&quot;</code>(查看<code>wsdl</code>文件中的<code>wsdl:output</code> 可以发现), 所以就会导致生成的类和原来的类有两个相同的<code>xml type</code>。</p><ul><li><strong>更换返回值对象的name</strong> (如加<code>Msg</code>)</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="meta">@XMLType</span>(name=<span class="string">"CreateProcessResponseMsg"</span>, namespace=<span class="string">"http://xxx.yyy.com"</span>)</div></pre></td></tr></table></figure><ul><li><strong>更换返回值对象的namespace</strong>(如加<code>message</code>)</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="meta">@XMLType</span>(name=<span class="string">"CreateProcessResponse"</span>, namespace=<span class="string">"http://xxx.yyy.com/message"</span>)</div></pre></td></tr></table></figure><ul><li><p><strong>给方法上加上下面的注解</strong>.<strong>这个注解其实会改变生成的类的名称，对接口是没有影响的.</strong></p><p><code>@WebMethod(operationName=&quot;differentFromMethodName&quot;)</code></p></li></ul><p>如果使用cxf的<code>wsdl2java</code>生成代码，在命令参数中加<code>-xjc-npa</code></p></li></ol><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Apache CXF 配置【TBD】]]></title>
      <url>houzw.github.io.git/2016/11/23/Apache-CXF-%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:01 GMT+0800 (中国标准时间) --><h1 id="Apache-CXF-配置"><a href="#Apache-CXF-配置" class="headerlink" title="Apache CXF 配置"></a>Apache CXF 配置</h1><blockquote><p><a href="http://cxf.apache.org/docs/configuration.html" target="_blank" rel="external">Configuration</a></p></blockquote><h2 id="其他页面-Subpages"><a href="#其他页面-Subpages" class="headerlink" title="其他页面 | Subpages"></a>其他页面 | Subpages</h2><ul><li><a href="http://cxf.apache.org/docs/bus-configuration.html" target="_blank" rel="external">Bus Configuration</a></li><li><a href="http://cxf.apache.org/docs/featureslist.html" target="_blank" rel="external">FeaturesList</a></li><li><a href="http://cxf.apache.org/docs/jmx-management.html" target="_blank" rel="external">JMX Management</a></li><li><a href="http://cxf.apache.org/docs/wsaconfiguration.html" target="_blank" rel="external">WSAConfiguration</a></li><li><a href="http://cxf.apache.org/docs/wspconfiguration.html" target="_blank" rel="external">WSPConfiguration</a></li><li><a href="http://cxf.apache.org/docs/wsrmconfiguration.html" target="_blank" rel="external">WSRMConfiguration</a></li></ul><h2 id="为CXF准备配置文件-Supplying-a-Configuration-file-to-CXF"><a href="#为CXF准备配置文件-Supplying-a-Configuration-file-to-CXF" class="headerlink" title="为CXF准备配置文件 | Supplying a Configuration file to CXF"></a>为CXF准备配置文件 | Supplying a Configuration file to CXF</h2><p>CXF会自动发现你写的XML配置文件。不论是WebService客户端还是服务端 ，CXF默认的配置文件地址是class path下的<code>/cxf.xml</code>。例如，当你在servlet容器中运行程序时，配置文件默认位于web程序的<code>/WEB-INF/classes</code>文件夹。</p><p>如果想要覆盖默认位置，可以指定一个命令行属性（ command line property）: <code>-Dcxf.config.file=some_other_config.xml</code>. 自定义配置文件也需要在 class path目录下.</p><p>使用<code>url</code>作为配置文件地址的话，这样设置<code>-Dcxf.config.file.url=config_file_url</code></p><p>CXF配置文件实际上也是一个 <a href="http://springframework.org/" target="_blank" rel="external">Spring</a> 配置文件, 因此所有配置文件以下列内容开始:</p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></div><div class="line">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></div><div class="line">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></div><div class="line">http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd"&gt;</div><div class="line"> </div><div class="line"><span class="comment">&lt;!-- Configuration goes here! --&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></div></pre></td></tr></table></figure><p>注意，从 CXF 2.6.0开始, <code>cxf.xml</code>读取需要添加Maven依赖:</p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  (或支持的最新版本)</div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure><h2 id="配置文件类型-Types-of-Configuration-files"><a href="#配置文件类型-Types-of-Configuration-files" class="headerlink" title="配置文件类型 | Types of Configuration files"></a>配置文件类型 | Types of Configuration files</h2><h3 id="客户端配置文件-Client-configuration-file"><a href="#客户端配置文件-Client-configuration-file" class="headerlink" title="客户端配置文件 | Client configuration file"></a>客户端配置文件 | Client configuration file</h3><p>Placing a <code>cxf.xml</code> file (or other-named file as configured above) in the classpath of the Web Service Client can be used to configure client-specific functionality. For example, the following client<code>cxf.xml</code> file turns off <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.4" target="_blank" rel="external">chunked transfer encoding</a> for a specific service in requests and responses:</p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></div><div class="line">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></div><div class="line">       <span class="attr">xmlns:http-conf</span>=<span class="string">"http://cxf.apache.org/transports/http/configuration"</span></div><div class="line">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://cxf.apache.org/transports/http/configuration</span></div><div class="line">           http://cxf.apache.org/schemas/configuration/http-conf.xsd</div><div class="line">           http://www.springframework.org/schema/beans</div><div class="line">           http://www.springframework.org/schema/beans/spring-beans.xsd"&gt;</div><div class="line"> </div><div class="line">  <span class="tag">&lt;<span class="name">http-conf:conduit</span></span></div><div class="line">           <span class="attr">name</span>=<span class="string">"&#123;urn:ebay:apis:eBLBaseComponents&#125;Shopping.http-conduit"</span>&gt;</div><div class="line">      <span class="tag">&lt;<span class="name">http-conf:client</span> <span class="attr">AllowChunking</span>=<span class="string">"false"</span>/&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">http-conf:conduit</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="服务配置文件-Server-configuration-files"><a href="#服务配置文件-Server-configuration-files" class="headerlink" title="服务配置文件 | Server configuration files"></a>服务配置文件 | Server configuration files</h3><p>Typically, the <code>cxf.xml</code> file in the classpath of the web service is intended primarily for configuration of the CXF bus, the object used for the creation of all services and endpoints. Endpoint configuration is primarily done either via a <code>WEB-INF/cxf-servlet.xml</code> file or a Spring application context file designated by the web application deployment descriptor (<code>web.xm</code>l file). The cxf-servlet.xml file is somewhat slower because it loads all possible CXF modules for an endpoint; the Spring application context method is faster because it allows you to specify which CXF modules are needed.</p><p>For an example configuration via a cxf-servlet.xml file, our <a href="http://svn.apache.org/viewvc/cxf/trunk/systests/transports/src/test/java/org/apache/cxf/systest/servlet/" target="_blank" rel="external">system tests</a> have a <a href="http://svn.apache.org/viewvc/cxf/trunk/systests/transports/src/test/java/org/apache/cxf/systest/servlet/cxf-servlet.xml?view=markup" target="_blank" rel="external">cxf-servlet.xml file</a> which is explicitly referenced in the init-param element in the<a href="http://svn.apache.org/viewvc/cxf/trunk/systests/transports/src/test/java/org/apache/cxf/systest/servlet/web-external.xml?view=markup" target="_blank" rel="external">web.xml</a> deployment descriptor. (Note it is not necessary to use the <strong>init-param</strong> element if you use the file name <code>&quot;cxf-servlet.xml&quot;</code>; this is the default name that CXF uses to look for such a file.)</p><p>For an example of using a Spring application context file for endpoint configuration, refer to our <a href="http://svn.apache.org/viewvc/cxf/trunk/distribution/src/main/release/samples/java_first_spring_support/" target="_blank" rel="external">Java First Spring Support</a> sample. You can see how the web.xml deployment descriptor explicitly references the beans.xml application context file via a <strong>context-param</strong> element (and ContextLoaderListener object); also that the application context file manually imports the three cxf modules that it needs.</p><h2 id="配置哪些内容及如何配置？-What-can-I-configure-and-how-do-I-do-it"><a href="#配置哪些内容及如何配置？-What-can-I-configure-and-how-do-I-do-it" class="headerlink" title="配置哪些内容及如何配置？| What can I configure and how do I do it?"></a>配置哪些内容及如何配置？| What can I configure and how do I do it?</h2><p>If you want to change CXF’s default behaviour, enable specific functionality or fine tune a component’s behaviour, you can in most cases do so without writing a single line of code, simply by supplying a Spring configuration file.<br>In some cases it also possible to achieve the same end by extending your wsdl contract: you can add CXF specific extension elements to the wsdl:port element and in that way fine tune the behaviour of the specified transport. Or you can use WS-Policy to express the fact that your application uses WS-Addressing, for example.</p><p>Using Spring configuration files however is the most versatile way to achieve a specific goal: you can use it to</p><ol><li>Enable functionality via simple constructs called features.</li><li>Set properties of runtime components by referring to these runtime components using either plain Spring bean elements, or, more conveniently, using CXF custom beans elements.</li><li>Modify the actual composition of the runtime (change the way the runtime is wired up).</li></ol><p>The following examples show the what the Spring configuration would look like if you wanted to enable the logging of inbound and outbound messages and faults.</p><p><strong>Enabling message logging using plain Spring bean elements</strong></p><p><strong>强烈不推荐</strong>使用这种格式（Using this format is <strong>STRONGLY discouraged</strong>），因为它将你的配置与CXF内部类绑定在一起 (SpringBus). 更好的方式是使用下面描述的 <code>cxf:bus</code> 元素</p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></div><div class="line">    <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></div><div class="line">    <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></div><div class="line">http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd"&gt;</div><div class="line"> </div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"logInbound"</span> <span class="attr">class</span>=<span class="string">"org.apache.cxf.interceptor.LoggingInInterceptor"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"logOutbound"</span> <span class="attr">class</span>=<span class="string">"org.apache.cxf.interceptor.LoggingOutInterceptor"</span>/&gt;</span></div><div class="line">     </div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"cxf"</span> <span class="attr">class</span>=<span class="string">"org.apache.cxf.bus.spring.SpringBus"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"inInterceptors"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"logInbound"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"outInterceptors"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"logOutbound"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"outFaultInterceptors"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"logOutbound"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"inFaultInterceptors"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"logInbound"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span> </div><div class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></div></pre></td></tr></table></figure><p>In this example, you specify that the CXF bus is implemented by class org.apache.cxf.bus.spring.SpringBus, and that its id is “cxf”. This is the default, but you have to re-iterate the fact if you want the bus to contribute the logging interceptors to the outbound and inbound interceptor chain for all client and server endpoints. You can avoid this duplication by using the next form of configuration:</p><p><strong>Enabling message logging using custom CXF bean elements</strong></p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></div><div class="line">      <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></div><div class="line">      <span class="attr">xmlns:cxf</span>=<span class="string">"http://cxf.apache.org/core"</span></div><div class="line">      <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></div><div class="line">http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd</div><div class="line">http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd"&gt;</div><div class="line"> </div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"logInbound"</span> <span class="attr">class</span>=<span class="string">"org.apache.cxf.interceptor.LoggingInInterceptor"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"logOutbound"</span> <span class="attr">class</span>=<span class="string">"org.apache.cxf.interceptor.LoggingOutInterceptor"</span>/&gt;</span></div><div class="line"> </div><div class="line">    <span class="tag">&lt;<span class="name">cxf:bus</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">cxf:inInterceptors</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"logInbound"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">cxf:inInterceptors</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">cxf:outInterceptors</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"logOutbound"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">cxf:outInterceptors</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">cxf:outFaultInterceptors</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"logOutbound"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">cxf:outFaultInterceptors</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">cxf:inFaultInterceptors</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"logInbound"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">cxf:inFaultInterceptors</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">cxf:bus</span>&gt;</span> </div><div class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></div></pre></td></tr></table></figure><p>Here, there is no need to specify the implementation class of the bus - nor the fact that the inInterceptors, outInterceptors, outFaultInterceptors, and inFaultInterceptors child elements are of type list. All of this information is embedded in the underlying schema and the bean definition parser that’s invoked for<code>&lt;cxf:bus&gt;</code> elemens. Note that you have to specify the location of this schema in the schemaLocation attribute of the <code>&lt;beans&gt;</code> element so that Spring can validate the configuration file. But it gets even simpler in the next example:</p><p><strong>Enabling message logging using the Logging feature</strong></p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></div><div class="line">      <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></div><div class="line">      <span class="attr">xmlns:cxf</span>=<span class="string">"http://cxf.apache.org/core"</span></div><div class="line">      <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></div><div class="line">http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd</div><div class="line">http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd"&gt;</div><div class="line"> </div><div class="line">    <span class="tag">&lt;<span class="name">cxf:bus</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">cxf:features</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">cxf:logging</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">cxf:features</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">cxf:bus</span>&gt;</span> </div><div class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></div></pre></td></tr></table></figure><p>The following sections explain which of the above mechanisms (feature, custom CXF bean or plain Spring bean; or indeed others such as wsdl extensors or policy assertions) you can use to enable and/or configure the various components in CXF, and what your configuration options are:</p><ul><li><a href="http://cxf.apache.org/docs/bus-configuration.html" target="_blank" rel="external">Bus</a></li><li><a href="http://cxf.apache.org/docs/jax-ws-configuration.html" target="_blank" rel="external">JAX-WS Configuration</a></li><li>HTTP <a href="http://cxf.apache.org/docs/client-http-transport-including-ssl-support.html" target="_blank" rel="external">Client</a> and <a href="http://cxf.apache.org/docs/standalone-http-transport.html" target="_blank" rel="external">Server</a></li><li><a href="http://cxf.apache.org/docs/jms-transport.html" target="_blank" rel="external">JMS Transport</a></li><li>Soap Binding</li><li>XML Binding</li><li><a href="http://cxf.apache.org/docs/wsaconfiguration.html" target="_blank" rel="external">WS-Addressing</a></li><li><a href="http://cxf.apache.org/docs/wsrmconfiguration.html" target="_blank" rel="external">WS-Reliable Messaging</a></li><li><a href="http://cxf.apache.org/docs/wspconfiguration.html" target="_blank" rel="external">WS-Policy Framework</a></li></ul><p>For a list of available features, see <a href="http://cxf.apache.org/docs/featureslist.html" target="_blank" rel="external">here</a>.</p><h2 id="Advanced-Configuration"><a href="#Advanced-Configuration" class="headerlink" title="Advanced Configuration"></a>Advanced Configuration</h2><p>If you are writing your own component for CXF, please see <a href="http://cxf.apache.org/docs/configuration-for-developers.html" target="_blank" rel="external">Configuration for Developers</a> page.</p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Apache-CXF-利用spring写一个服务]]></title>
      <url>houzw.github.io.git/2016/11/23/Apache-CXF-%E5%88%A9%E7%94%A8spring%E5%86%99%E4%B8%80%E4%B8%AA%E6%9C%8D%E5%8A%A1/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:01 GMT+0800 (中国标准时间) --><h1 id="Apache-CXF-利用Spring写一个服务"><a href="#Apache-CXF-利用Spring写一个服务" class="headerlink" title="Apache CXF -利用Spring写一个服务"></a>Apache CXF -利用Spring写一个服务</h1><blockquote><p><a href="http://cxf.apache.org/docs/writing-a-service-with-spring.html" target="_blank" rel="external">Writing a service with Spring</a></p></blockquote><h2 id="环境搭建-Setting-up-your-build"><a href="#环境搭建-Setting-up-your-build" class="headerlink" title="环境搭建 | Setting up your build"></a>环境搭建 | Setting up your build</h2><p>推荐使用 <a href="http://maven.apache.org/" target="_blank" rel="external">Apache Maven</a> 建立web service项目. 点击超链接查看本实例的 Maven <a href="http://svn.apache.org/viewvc/cxf/trunk/distribution/src/main/release/samples/java_first_spring_support/pom.xml?view=co" target="_blank" rel="external">pom.xml</a> 配置.</p><p><a href="http://maven.apache.org/plugins/maven-dependency-plugin/" target="_blank" rel="external">Maven Dependency Plugin</a> 的<code>mvn dependency:list</code>和<code>mvn dependency:tree</code> 命令可以查看项目所用的依赖。</p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.cxf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cxf-rt-frontend-jaxws<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.cxf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cxf-rt-transports-http<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.cxf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cxf-rt-transports-http-jetty<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.eclipse.jetty<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jetty-webapp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div></pre></td></tr></table></figure><h2 id="编写服务"><a href="#编写服务" class="headerlink" title="编写服务"></a>编写服务</h2><h3 id="首先编写服务的接口，其有一个sayHi方法向提交姓名者输出“Hello”"><a href="#首先编写服务的接口，其有一个sayHi方法向提交姓名者输出“Hello”" class="headerlink" title="首先编写服务的接口，其有一个sayHi方法向提交姓名者输出“Hello”"></a>首先编写服务的接口，其有一个<code>sayHi</code>方法向提交姓名者输出“Hello”</h3><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">package</span> demo.spring.service;</div><div class="line"><span class="keyword">import</span> javax.jws.WebService;</div><div class="line"><span class="meta">@WebService</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">HelloWord</span></span>&#123;</div><div class="line">  <span class="function">String <span class="title">sayHi</span><span class="params">(String text)</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="然后写实现类"><a href="#然后写实现类" class="headerlink" title="然后写实现类"></a>然后写实现类</h3><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">package</span> demo.spring.service;</div><div class="line"><span class="keyword">import</span> jjavax.jws.WebService;</div><div class="line"><span class="meta">@WebService</span>(endpointInterface = <span class="string">"demo.spring.service.HelloWorld"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> <span class="keyword">implements</span> <span class="title">HelloWorld</span></span>&#123;</div><div class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">sayHi</span><span class="params">(String text)</span></span>&#123;</div><div class="line">    System.out.println(<span class="string">"sayHi called!"</span>);</div><div class="line">    <span class="keyword">return</span> <span class="string">"Hello "</span> + text;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>实现类的 <code>@WebService</code> 注解使 CXF 知道创建WSDL时使用哪个接口。</p><h3 id="声明服务beans-Declaring-your-server-beans"><a href="#声明服务beans-Declaring-your-server-beans" class="headerlink" title="声明服务beans | Declaring your server beans"></a>声明服务beans | Declaring your server beans</h3><p>CXF包含对Spring的XML配置的支持。对于 JAX-WS 端的应用，利用<code>&lt;jaxws:endpoint&gt;</code> bean来建立一个 服务端终端（endpoint）。</p><p>在<code>WEB-INF</code>下面创建声明一个端点bean的<code>cxf-servlet.xml</code>文件</p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:jaxws</span>=<span class="string">"http://cxf.apache.org/jaxws"</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">"classpath:META-INF/cxf/cxf.xml"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">"classpath:META-INF/cxf/cxf-servlet.xml"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">jaxws:endpoint</span> <span class="attr">id</span>=<span class="string">"helloWorld"</span> <span class="attr">implementor</span>=<span class="string">"demo.spring.service.HelloWorldImpl"</span> <span class="attr">address</span>=<span class="string">"/HelloWorld"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></div></pre></td></tr></table></figure><p>如果想引用一个Spring管理的bean，可以这样写</p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"hello"</span> <span class="attr">class</span>=<span class="string">"demo.spring.service.HelloWorldImpl"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">jaxws:endpoint</span> <span class="attr">id</span>=<span class="string">"helloWorld"</span> <span class="attr">implementor</span>=<span class="string">"#hello"</span> <span class="attr">address</span>=<span class="string">"/HelloWorld"</span> /&gt;</span></div></pre></td></tr></table></figure><p>这个bean使用了下列属性：</p><ul><li><code>id</code> 指定了bean在spring环境中的 <code>id</code></li><li><code>implementor</code>指定了实现类</li><li><code>address</code>指定了服务的网络地址，此地址只能是一个<strong>相对地址</strong>。 这是因为CXF不知道<code>war</code>的名称以及servlet容器监听的端口，CXF将会在运行时随请求url一起更新终端地址。</li></ul><p>为了让一个bean名称而非一个类名作为implementor, 只需要在提供的bean名称之前添加<code>#</code>。如<code>implementor=&quot;#myBean&quot;</code>.</p><p>更多信息查看 <a href="http://cxf.apache.org/docs/jax-ws-configuration.html" target="_blank" rel="external">JAX-WS Configuration</a>.</p><h3 id="设置Servlet环境-Setting-up-the-Servlet"><a href="#设置Servlet环境-Setting-up-the-Servlet" class="headerlink" title="设置Servlet环境 | Setting up the Servlet"></a>设置Servlet环境 | Setting up the Servlet</h3><p>由于我们采用了默认的 “cxf-servlet.xml” 文件，我们也可以采用被其他例子使用的 <a href="http://svn.apache.org/viewvc/cxf/trunk/distribution/src/main/release/etc/web.xml?revision=HEAD" target="_blank" rel="external">default web.xml</a> 。</p><p>若我们使用了任意命名的配置文件，如<code>beans.xml</code>,那么我们需要加入下列元素:</p><p>Spring的 <code>ContextLoaderLister</code>. 其用来启动 Spring 并明确地加载指定的配置文件. 我们可以通过 <code>context-param</code> 元素来指定文件地址，如.</p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">...</span>&gt;</span></div><div class="line">...</div><div class="line">   <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>WEB-INF/beans.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></div><div class="line"> </div><div class="line">   <span class="tag">&lt;<span class="name">listener</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span></div><div class="line">         org.springframework.web.context.ContextLoaderListener</div><div class="line">      <span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></div></pre></td></tr></table></figure><p>值的注意的一点是，选定的终端bean的地址必须是servlet监听的内容。例如，如果servlet注册了<code>&quot;/some-services/*&quot;</code>， 但我们的地址是<code>&quot;/more-services/HelloWorld&quot;</code>,那么 CXF 是无法获取到请求的.</p><h2 id="创建客户端（简便方法）-Create-a-Client-Easy-Way"><a href="#创建客户端（简便方法）-Create-a-Client-Easy-Way" class="headerlink" title="创建客户端（简便方法） | Create a Client (Easy Way)"></a>创建客户端（简便方法） | Create a Client (Easy Way)</h2><p>就像服务端使用的<code>&lt;jaxws:endpoint&gt;</code> ，客户端可以使用 <code>&lt;jaxws:client&gt;</code> . 你需要给一个bean名称，一个服务接口和一个服务URL, 它会根据指定的名称创建一个bean，实现这个服务接口，调用远程SOAP服务:</p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></div><div class="line">       <span class="attr">xmlns:jaxws</span>=<span class="string">"http://cxf.apache.org/jaxws"</span></div><div class="line">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></div><div class="line">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></div><div class="line">http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd"&gt;</div><div class="line"> </div><div class="line">    <span class="tag">&lt;<span class="name">jaxws:client</span> <span class="attr">id</span>=<span class="string">"helloClient"</span> <span class="attr">serviceClass</span>=<span class="string">"demo.spring.HelloWorld"</span>  <span class="attr">address</span>=<span class="string">"http://localhost:9002/HelloWorld"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></div></pre></td></tr></table></figure><p>可以在其他任意的Spring bean中注入（<code>inject</code>）<code>&quot;helloClient&quot;</code>bean 或者手动去 Spring的应用上下文中查找:</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">ApplicationContext context = ...; <span class="comment">// your Spring ApplicationContext</span></div><div class="line">HelloWorld client = (HelloWorld) context.getBean(<span class="string">"helloClient"</span>);</div></pre></td></tr></table></figure><p>可以利用 <code>&lt;jaxws:client&gt;</code> 元素做更多复杂的使其（ sophisticated things），如添加一个嵌套的标签来给客户端附加 JAX-WS Handlers 或 CXF Interceptors . 查看 <a href="http://cxf.apache.org/docs/jax-ws-configuration.html" target="_blank" rel="external">JAX-WS Configuration</a>.</p><h2 id="创建客户端（更复杂方法）-Create-a-Client-More-Manual-Way"><a href="#创建客户端（更复杂方法）-Create-a-Client-More-Manual-Way" class="headerlink" title="创建客户端（更复杂方法）| Create a Client (More Manual Way)"></a>创建客户端（更复杂方法）| Create a Client (More Manual Way)</h2><p>CXF 包含一个可以从服务接口创建客户端的 JaxWsProxyFactory bean。你只需简单 地告诉它你的<strong>服务类</strong>和<strong>服务URL</strong>是什么，然后就可以利用 JaxWsProxyFactory 的 <code>create()</code>方法来创建客户端。</p><p>例子:</p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:jaxws</span>=<span class="string">"http://cxf.apache.org/jaxws"</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://cxf.apache.org/jaxws http://cxf.apache.org/schema/jaxws.xsd"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"client"</span> <span class="attr">class</span>=<span class="string">"demo.spring.service.HelloWorld"</span> <span class="attr">factory-bean</span>=<span class="string">"clientFactory"</span> <span class="attr">factory-method</span>=<span class="string">"create"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"clientFactory"</span> <span class="attr">class</span>=<span class="string">"org.apache.cxf.jaxws.JaxWsProxyFactoryBean"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"serviceClass"</span> <span class="attr">value</span>=<span class="string">"demo.spring.service.HelloWorld"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"address"</span> <span class="attr">value</span>=<span class="string">"http://localhost:9002/services/HelloWorld"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></div></pre></td></tr></table></figure><p>若你打算访问你的客户端，你只需要将它从Spring上下文中取出来 (或更好的方法是，利用Spring将其注入到你的应用程序中）:</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">ApplicationContext context = ...; <span class="comment">// your Spring ApplicationContext</span></div><div class="line">HelloWorld client = (HelloWorld) context.getBean(<span class="string">"client"</span>);</div></pre></td></tr></table></figure><p>客户端代码位于<a href="http://svn.apache.org/repos/asf/cxf/trunk/distribution/src/main/release/samples/java_first_spring_support/src/main/java/demo/spring/client/Client.java" target="_blank" rel="external">Client.java</a></p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">package</span> demo.spring.client;</div><div class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</div><div class="line"><span class="keyword">import</span> demo.spring.service.HelloWorld;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Client</span><span class="params">()</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        <span class="comment">// START SNIPPET: client</span></div><div class="line">        ClassPathXmlApplicationContext context </div><div class="line">            = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="keyword">new</span> String[] &#123;<span class="string">"client-beans.xml"</span>&#125;);</div><div class="line">        HelloWorld client = (HelloWorld)context.getBean(<span class="string">"client"</span>);</div><div class="line">        String response = client.sayHi(<span class="string">"Joe"</span>);</div><div class="line">        System.out.println(<span class="string">"Response: "</span> + response);</div><div class="line">        System.exit(<span class="number">0</span>);</div><div class="line">      <span class="comment">// END SNIPPET: client</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>有些应用情景会需要更多额外的配置 (且不是上述的 <code>&lt;jaxws:client&gt;</code> 语法). 查看 <a href="http://cxf.apache.org/docs/jax-ws-configuration.html" target="_blank" rel="external">JAX-WS Configuration</a>.</p><h2 id="进一步操作-Advanced-Steps"><a href="#进一步操作-Advanced-Steps" class="headerlink" title="进一步操作 | Advanced Steps"></a>进一步操作 | Advanced Steps</h2><p>更多使用Spring 的信息可以阅读 <a href="http://cxf.apache.org/docs/configuration.html" target="_blank" rel="external">Configuration</a> 和User’s Guided <a href="http://cxf.apache.org/docs/spring.html" target="_blank" rel="external">Spring</a> 部分。</p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CentOS 7 基本使用(TBD)]]></title>
      <url>houzw.github.io.git/2016/11/18/CentOS%C2%A07%C2%A0%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:01 GMT+0800 (中国标准时间) --><h1 id="CentOS-7-基本使用"><a href="#CentOS-7-基本使用" class="headerlink" title="CentOS 7 基本使用"></a>CentOS 7 基本使用</h1><blockquote><p><a href="http://www.runoob.com/linux/linux-tutorial.html" target="_blank" rel="external">Linux 教程</a></p><p><a href="http://seisman.info/linux-environment-for-seismology-research.html" target="_blank" rel="external">用 CentOS 7 打造合适的科研环境</a></p><p><a href="http://www.tecmint.com/things-to-do-after-minimal-rhel-centos-7-installation/2/" target="_blank" rel="external">30 Things to Do After Minimal RHEL/CentOS 7 Installation</a></p></blockquote><p>[TOC]</p><h2 id="Shell-命令解释"><a href="#Shell-命令解释" class="headerlink" title="Shell 命令解释"></a>Shell 命令解释</h2><p><a href="https://explainshell.com/" target="_blank" rel="external">https://explainshell.com/</a></p><h2 id="添加用户到sudoers"><a href="#添加用户到sudoers" class="headerlink" title="添加用户到sudoers"></a>添加用户到sudoers</h2><p>命令：<br></p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">su -</div><div class="line">***   # root用户的密码</div><div class="line">vim /etc/sudoers</div><div class="line"># 若无写入权限，则 chmod u+w /etc/sudoers</div><div class="line"># 找到 Allow root to ruan any commands anywhere</div><div class="line"># 找到 root  ALL=(ALL)  ALL，在下面新加一行</div><div class="line">:i # vim编辑</div><div class="line">&lt;username&gt;  ALL=(ALL)  ALL</div><div class="line">:wq # vim 保存退出</div></pre></td></tr></table></figure><p></p><h2 id="系统信息查看"><a href="#系统信息查看" class="headerlink" title="系统信息查看"></a>系统信息查看</h2><ul><li>查看linux版本 <code>lsb_release -a</code></li><li>查看端口占用情况 <code>lsof -i tcp:8080</code></li><li>列出所有端口 <code>netstat -ntlp</code></li><li>查看所占用的目录大小 <code>du -sh</code> (不显示子目录大小，以人性化方式显示（Mb）)</li><li><p>查看所有文件系统 <code>df -h</code> （磁盘目录）</p><h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2></li><li><p>shell 中临时设置，立即生效</p><p><code>export PATH=/usr/local/mongodb/bin:$PATH</code></p></li><li><p><code>~/.bashrc</code> 新开终端生效，或者<code>source ~/.bashrc</code> 命令立即生效</p><p>仅对当前用户有效</p><p><code>vim ~/.bashrc</code> ， 添加 <code>export PATH=/usr/local/mongodb/bin:$PATH</code></p></li><li><p><code>/etc/profile</code>文件，系统重启后生效</p><p>对所有用户有效</p><p><code>vim /etc/profile</code> ， 添加 <code>export PATH=/usr/local/mongodb/bin:$PATH</code></p></li></ul><blockquote><p><a href="https://blog.csdn.net/boolbo/article/details/52437760" target="_blank" rel="external">CentOS查看和修改PATH环境变量的方法</a></p><p><a href="https://blog.csdn.net/zhanglh046/article/details/52373440" target="_blank" rel="external">Linux中环境变量文件profile、bashrc、bash_profile之间的区别和联系</a></p></blockquote><h2 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h2><blockquote><p><a href="https://segmentfault.com/a/1190000003931716" target="_blank" rel="external">不可不知的centos7 firewalld 防火墙的使用</a> / <a href="http://www.centoscn.com/CentOS/help/2015/0208/4667.html" target="_blank" rel="external">CentOS 7 firewalld使用简介</a></p><p>开启 firewalld之后，使用iptables设置的防火墙不管用了，需要使用firewalld配置</p></blockquote><p>使用<code>systemctl status firewalld</code>查看状态，若为<code>Active: inactive (dead)</code> 或执行命令时显示<code>FirewallD is not running</code>，可以执行 <code>systemctl start firewalld</code> 开启防火墙。</p><p>开启端口</p><p><code>firewall-cmd --zone=public --add-port=80/tcp --permanent</code></p><p>重启防火墙</p><p><code>firewall-cmd --reload</code></p><p>添加 EPEL源（ Extra Packages for Enterprise Linux）</p><p><code>sudo yum install epel-release</code></p><h2 id="查看帮助"><a href="#查看帮助" class="headerlink" title="查看帮助"></a>查看帮助</h2><p><a href="http://www.centoscn.com/CentOS/help/2014/0220/2419.html" target="_blank" rel="external">http://www.centoscn.com/CentOS/help/2014/0220/2419.html</a></p><ul><li><code>man 命令</code></li><li><code>whatis 命令</code></li><li><code>命令 -？</code></li><li><code>命令 --help 或 help -命令</code> 前者属于外部命令帮助，后者属于内部命令帮助。使用<code>type 命令</code>查看命令类型，有 builtin为内部命令</li></ul><p><code>-?, --help</code> 显示此帮助列表<br></p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">--restrict           禁用某些潜在的有危险的选项</div><div class="line">--usage              显示简短的用法说明</div><div class="line">--version             打印程序版本</div></pre></td></tr></table></figure><p></p><h2 id="程序安装-查看"><a href="#程序安装-查看" class="headerlink" title="程序安装/查看"></a>程序安装/查看</h2><h3 id="软件源"><a href="#软件源" class="headerlink" title="软件源"></a>软件源</h3><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">yum repolist # 列出本机所有源</div><div class="line">cp /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.bak # 备份默认yum源</div></pre></td></tr></table></figure><p>清华大学镜像：</p><p><a href="https://mirror.tuna.tsinghua.edu.cn/help/centos/" target="_blank" rel="external">https://mirror.tuna.tsinghua.edu.cn/help/centos/</a></p><p><a href="https://mirrors.tuna.tsinghua.edu.cn/help/epel/" target="_blank" rel="external">https://mirrors.tuna.tsinghua.edu.cn/help/epel/</a></p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">yum install epel-release</div><div class="line">vim /etc/yum.repos.d/epel.repo  # centos 源则为 CentOS-Base.repo</div><div class="line"># 取消注释 baseurl开头的行，并注释mirrorlist 开头的行</div><div class="line"># 把文件里的 http://download.fedoraproject.org/pub 替换成 https://mirrors.tuna.tsinghua.edu.cn</div><div class="line">yum makecache # 生成缓存</div></pre></td></tr></table></figure><p>fedoraproject：</p><p><code>su -c &#39;rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm&#39;</code></p><p>添加aliyun的 <strong>epel</strong> 源</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo</div><div class="line"># 下载新的 CentOS-Base.repo 到/etc/yum.repos.d/</div><div class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</div></pre></td></tr></table></figure><h3 id="rpm（RedHat-Package-Manager）软件操作"><a href="#rpm（RedHat-Package-Manager）软件操作" class="headerlink" title="rpm（RedHat Package Manager）软件操作"></a>rpm（<strong>RedHat Package Manager</strong>）软件操作</h3><p>####软件库</p><ul><li><a href="http://rpm.pbone.net/" target="_blank" rel="external">http://rpm.pbone.net/</a></li><li><a href="https://pkgs.org/" target="_blank" rel="external">https://pkgs.org/</a></li></ul><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p><code>rpm -i &lt;软件包&gt;</code> 安装rpm软件（静默安装）；</p><p><code>-v</code> 显示详细的安装信息；<code>-h</code>显示安装进度。</p><p><code>rpm -vih &lt;软件包&gt;</code> 显示详细的安装信息，并显示进度</p><h4 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h4><p><code>rpm -e &lt;软件包&gt;</code></p><h4 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h4><p><code>rpm -U &lt;软件包&gt;</code> 删除原软件，仅保留配置文件，然后安装新版本</p><h3 id="rpm-命令查看程序信息"><a href="#rpm-命令查看程序信息" class="headerlink" title="rpm 命令查看程序信息"></a>rpm 命令查看程序信息</h3><p>一般有源码和包安装两种方式.</p><ul><li>源码安装的话可以看 configure 的日志;</li><li>rpm 等包方式的话,就要查其中的数据库了,比如 <code>rpm -q</code>进行查询.</li><li><code>-q</code> &lt;== 查询(查询本机已经安装的包时不需要版本名称)</li><li><code>-qi</code> #查询被安装的包的详细信息(information)</li><li><code>-qa | grep dhcp</code> &lt;== 列出所有被安装的rpm package</li><li><code>-qc</code> 列出配置文件(/etc下的文件)</li><li><code>-qd</code> 列出帮助文件(man)</li><li><code>-ql dhcp</code> &lt;== 查询指定 rpm 包中的文件列表</li><li><code>-qf /bin/ls</code> &lt;== 查询哪个库里包含了 ls 文件(注意，需要安装了 <code>/bin/ls</code> 后才能查到)</li><li><code>-qp &lt; rpm package name&gt;</code> &lt;== 根据rpm包查询(<code>.rpm</code> 文件),可以接其他参数(如<code>i</code>查详细信息，<code>l</code>查文件列表 等)</li><li><code>-qR</code> 列出需要的依赖套件<h3 id="软件安装信息"><a href="#软件安装信息" class="headerlink" title="软件安装信息"></a>软件安装信息</h3></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">yum list installed &lt;软件包名&gt;* # 是否通过 yum 安装过任意版本的软件</div><div class="line">yum list | grep packageName</div><div class="line"># 列出所有可安装的软件包</div><div class="line">yum list</div><div class="line"># 列出所有可更新的软件包</div><div class="line">yum list updates</div><div class="line"># 列出所有已经安装但不在repository的包</div><div class="line">yum list extras</div><div class="line"># 查看软件包的详细信息</div><div class="line">yum info ..</div><div class="line"># 清除yum缓存</div><div class="line">yum clean ..</div><div class="line">yum clean all</div><div class="line"># yum clean headers清除header，yum clean packages清除下载的rpm包，yum clean all一全部清除</div><div class="line"></div><div class="line">yum search &apos;keyword&apos;</div><div class="line">autoconf -V # 查看版本</div><div class="line">yum info autoconf # 查看安装信息</div><div class="line">which autoconf # </div><div class="line">yum install &apos;package_name&apos;</div><div class="line">yum remove &apos;package_name&apos;</div><div class="line"></div><div class="line">rpm -q &lt;软件包名&gt;  # 是否安装（没安装就没有安装信息）</div><div class="line">rpm -qa &lt;软件包名&gt;   # 列出包的安装信息</div><div class="line">rpm -qa|grep &lt;软件包名&gt; # 列出包含&lt;软件包名&gt;字段的软件的信息。</div><div class="line">rpm -ql &lt;软件包名&gt; # 查看软件安装位置 如 rpm -ql postgresql95-server</div></pre></td></tr></table></figure><p>RPM默认安装路径：</p><table><thead><tr><th>/etc</th><th>一些设置文件放置的目录如/etc/crontab</th></tr></thead><tbody><tr><td>/usr/bin</td><td>一些可执行文件</td></tr><tr><td>/usr/lib</td><td>一些程序使用的动态函数库</td></tr><tr><td>/usr/share/doc</td><td>一些基本的软件使用手册与帮助文档</td></tr><tr><td>/usr/share/man</td><td>一些man page文件</td></tr></tbody></table><h3 id="查看程序安装目录"><a href="#查看程序安装目录" class="headerlink" title="查看程序安装目录"></a>查看程序安装目录</h3><p><code>rpm -ql 程序名称</code></p><h3 id="CentOS-7-中-yum-安装-ntfs-3g"><a href="#CentOS-7-中-yum-安装-ntfs-3g" class="headerlink" title="CentOS 7 中 yum 安装 ntfs-3g"></a>CentOS 7 中 yum 安装 ntfs-3g</h3><p>CentOS默认源里没有ntfs3g，想要添加ntfs支持，无非是自己下载编译安装或者加源yum安装。</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">yum update; yum install ntfs-3g # 更新？</div><div class="line">yum install ntfs-3g</div></pre></td></tr></table></figure><p>##进程总数</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">ps -ef| wc -l</div><div class="line">ps -ef| grep httpd | wc -l</div></pre></td></tr></table></figure><p>##<a href="https://www.cnblogs.com/emanlee/p/3587571.html" target="_blank" rel="external">Linux查看物理CPU个数、核数、逻辑CPU个数</a></p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line"># 总核数 = 物理CPU个数 X 每颗物理CPU的核数 </div><div class="line"># 总逻辑CPU数 = 物理CPU个数 X 每颗物理CPU的核数 X 超线程数</div><div class="line"></div><div class="line"># 查看物理CPU个数</div><div class="line">cat /proc/cpuinfo| grep &quot;physical id&quot;| sort| uniq| wc -l</div><div class="line"></div><div class="line"># 查看每个物理CPU中core的个数(即核数)</div><div class="line">cat /proc/cpuinfo| grep &quot;cpu cores&quot;| uniq</div><div class="line"></div><div class="line"># 查看逻辑CPU的个数</div><div class="line">cat /proc/cpuinfo| grep &quot;processor&quot;| wc -l</div><div class="line"># 查看CPU信息（型号）</div><div class="line">cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c</div></pre></td></tr></table></figure><p>##目录/文件占用空间</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">df -h # 查看各目录磁盘空间</div><div class="line"># 查看目录大小并按照大小倒序展示  --max-depth=1：其中，数字“1”是指查询结果中最多显示的目录层数，这里指最多显示一层目录。</div><div class="line">du -h --max-depth=1 path | sort -hr </div><div class="line"># 如 du -h --max-depth=1 /usr/local/ | sort -hr</div><div class="line"></div><div class="line"># 用echo或cat或clear命令清除文件内容：</div><div class="line"># 此命令会把/var/log目录中的big.log文件内容清除，而又不删除big.log文件</div><div class="line">echo &gt; /var/log/big.log </div><div class="line"># 此命令能与“echo &gt; /var/log/big.log”达到相同效果，不过，命令执行后，需要用“Ctrl + d”结束</div><div class="line">cat &gt; /var/log/big.log </div><div class="line"># 此命令会把big.log文件内容清空，而不删除文件</div><div class="line">clear &gt; /var/log/big.log </div><div class="line"># 搜索当前目录下，超过800M大小的文件</div><div class="line">find . -type f -size +800M </div><div class="line"># 查找超过800M大小文件，并显示查找出来文件的具体大小</div><div class="line">find . -type f -size +800M  -print0 | xargs -0 du -h</div></pre></td></tr></table></figure><blockquote><p><a href="https://www.cnblogs.com/nuccch/p/6797778.html" target="_blank" rel="external">linux磁盘空间占满问题快速定位并解决</a></p><p><a href="https://www.cnblogs.com/kluan/p/4458278.html" target="_blank" rel="external">centos磁盘爆满，查找大文件并清理</a></p></blockquote><p>##关机</p><p>Linux命令：shutdown</p><p>功能说明：系统关机指令。</p><p>语　　法：<code>shutdown [-efFhknr][-t 秒数][时间][警告信息]</code></p><p>补充说明：shutdown指令可以关闭所有程序，并依用户的需要，进行重新开机或关机的动作。</p><p>参　　数：</p><p>-c 　当执行”shutdown -h 11:50”指令时，只要按+键就可以中断关机的指令。</p><p>-f 　重新启动时不执行fsck（磁盘维护）。</p><p>-F 　重新启动时执行fsck。</p><p>-h 　将系统关机。</p><p>-k 　只是送出信息给所有用户，但不会实际关机。</p><p>-n 　不调用init程序进行关机，而由shutdown自己进行。</p><p>-r 　shutdown之後重新启动。</p><p>-t&lt;秒数&gt; 　送出警告信息和删除信息之间要延迟多少秒。</p><p>[时间] 设置多久时间後执行shutdown指令。</p><p>[警告信息] 　要传送给所有登入用户的信息。</p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[本体编辑器（Ontology Editor）]]></title>
      <url>houzw.github.io.git/2016/11/16/%E6%9C%AC%E4%BD%93%E7%BC%96%E8%BE%91%E5%99%A8%EF%BC%88Ontology%20Editor%EF%BC%89%E4%BB%8B%E7%BB%8D/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="本体编辑器（Ontology-Editor）"><a href="#本体编辑器（Ontology-Editor）" class="headerlink" title="本体编辑器（Ontology Editor）"></a>本体编辑器（Ontology Editor）</h1><blockquote><p>译自 W3C <a href="https://www.w3.org/wiki/Ontology_editors" target="_blank" rel="external">Ontology editors</a> last modified on 2 February 2015, at 14:41.</p><p>部分网址做了更新</p></blockquote><p>如果一个数据发布者不能发现相关的词汇，或者现有的词汇不够好/不适合使用，他们可以建立自己的本体。编辑器可以帮助他们完成诸如下述任务：（？原文没有说是啥内容）</p><p>这需要大量的努力和一些指导，以下是一些最佳实践:</p><ul><li><a href="https://www.w3.org/wiki/DontWorryBeCrappy" target="_blank" rel="external">DontWorryBeCrappy</a>: 做错没关系，以后改进就是了;</li><li><a href="http://www.w3.org/TR/swbp-vocab-pub/" target="_blank" rel="external">Best Practice Recipes for Publishing RDF Vocabularies</a>.</li></ul><h2 id="Contents"><a href="#Contents" class="headerlink" title="Contents"></a>Contents</h2><p>[<a href="https://www.w3.org/wiki/Ontology_editors#" target="_blank" rel="external">hide</a>]</p><ul><li><a href="https://www.w3.org/wiki/Ontology_editors#Prot.C3.A9g.C3.A9" target="_blank" rel="external">1 Protégé</a></li><li><a href="https://www.w3.org/wiki/Ontology_editors#NeOn_Toolkit" target="_blank" rel="external">2 NeOn Toolkit</a></li><li><a href="https://www.w3.org/wiki/Ontology_editors#SWOOP" target="_blank" rel="external">3 SWOOP</a></li><li><a href="https://www.w3.org/wiki/Ontology_editors#Neologism" target="_blank" rel="external">4 Neologism</a></li><li><a href="https://www.w3.org/wiki/Ontology_editors#TopBraid_Composer" target="_blank" rel="external">5 TopBraid Composer</a></li><li><a href="https://www.w3.org/wiki/Ontology_editors#Vitro" target="_blank" rel="external">6 Vitro</a></li><li><a href="https://www.w3.org/wiki/Ontology_editors#Knoodl" target="_blank" rel="external">7 Knoodl</a></li><li><a href="https://www.w3.org/wiki/Ontology_editors#Anzo_for_Excel" target="_blank" rel="external">8 Anzo for Excel</a></li><li><a href="https://www.w3.org/wiki/Ontology_editors#OWLGrEd" target="_blank" rel="external">9 OWLGrEd</a></li><li><a href="https://www.w3.org/wiki/Ontology_editors#Fluent_Editor" target="_blank" rel="external">10 Fluent Editor</a></li><li><a href="https://www.w3.org/wiki/Ontology_editors#Semantic_Turkey" target="_blank" rel="external">11 Semantic Turkey</a></li><li><a href="https://www.w3.org/wiki/Ontology_editors#VocBench" target="_blank" rel="external">12 VocBench</a></li></ul><h2 id="Protege"><a href="#Protege" class="headerlink" title="Protégé"></a><a href="http://protege.stanford.edu/" target="_blank" rel="external">Protégé</a></h2><p><strong>描述:</strong> 本体编辑器 (受欢迎, 插件支持).</p><p><strong>网址:</strong> <a href="http://protege.stanford.edu/" target="_blank" rel="external">http://protege.stanford.edu/</a></p><p><strong>特点:</strong></p><p><strong>可能的不足:</strong></p><h2 id="NeOn-Toolkit"><a href="#NeOn-Toolkit" class="headerlink" title="NeOn Toolkit"></a><a href="http://neon-toolkit.org/" target="_blank" rel="external">NeOn Toolkit</a></h2><blockquote><p>最新版本2.5.2，更新于2011/11/12</p></blockquote><p>描述:** 另一款拥有很多可用插件的本体编辑器。其特别适用于大规模的项目（heavy-weight projects） (例如多模块，多语言，本体集成等。multi-modular ontologies, multi-lingual, ontology integration).</p><p><strong>网址:</strong> <a href="http://neon-toolkit.org/" target="_blank" rel="external">http://neon-toolkit.org/</a></p><p><strong>特点:</strong></p><p><strong>可能的不足:</strong></p><h2 id="SWOOP"><a href="#SWOOP" class="headerlink" title="SWOOP"></a><a href="http://www.mindswap.org/2004/SWOOP/" target="_blank" rel="external">SWOOP</a></h2><p><strong>描述:</strong> 一款小巧简单的本体编辑器.</p><p><strong>网址:</strong>（无法访问） <a href="http://www.mindswap.org/2004/SWOOP/" target="_blank" rel="external">http://www.mindswap.org/2004/SWOOP/</a></p><p><strong>特点:</strong></p><p><strong>可能的不足:</strong></p><h2 id="Neologism"><a href="#Neologism" class="headerlink" title="Neologism"></a><a href="http://neologism.deri.ie/" target="_blank" rel="external">Neologism</a></h2><blockquote><p>最新版 0.5.2，更新于 2011/07/04</p></blockquote><p><strong>描述:</strong> 一款开源免费的在线词语编辑与发布平台</p><p><strong>网址:</strong> <a href="http://neologism.deri.ie/" target="_blank" rel="external">http://neologism.deri.ie/</a></p><p><strong>特点:</strong></p><p><strong>可能的不足:</strong></p><h2 id="TopBraid-Composer"><a href="#TopBraid-Composer" class="headerlink" title="TopBraid Composer"></a><a href="http://www.topquadrant.com/products/TB_Composer.html" target="_blank" rel="external">TopBraid Composer</a></h2><blockquote><p>商业软件</p></blockquote><p><strong>描述:</strong> 多用途语义网编辑器（ multipurpose）</p><p><strong>网址:</strong> <a href="http://www.topquadrant.com/tools/modeling-topbraid-composer-standard-edition/" target="_blank" rel="external">http://www.topquadrant.com/tools/modeling-topbraid-composer-standard-edition/</a></p><p><strong>特点:</strong></p><p><strong>可能的不足:</strong></p><h2 id="Vitro"><a href="#Vitro" class="headerlink" title="Vitro"></a><a href="http://vitro.mannlib.cornell.edu/" target="_blank" rel="external">Vitro</a></h2><p><strong>描述:</strong> 一款综合性的本体编辑器和语义网应用程序</p><p><strong>网址:</strong> <a href="http://vitro.mannlib.cornell.edu/" target="_blank" rel="external">http://vitro.mannlib.cornell.edu/</a></p><p><strong>github</strong>: <a href="https://github.com/vivo-project/Vitro" target="_blank" rel="external">https://github.com/vivo-project/Vitro</a></p><p><strong>特点:</strong> Vitro 是建立语义网应用程序的“全栈”（ “full stack”）框架。它不局限于具体领域。</p><p><strong>可能的不足:</strong></p><h2 id="Knoodl"><a href="#Knoodl" class="headerlink" title="Knoodl"></a><a href="http://www.knoodl.com/" target="_blank" rel="external">Knoodl</a></h2><p><strong>描述:</strong> 一款面向社区的本体和知识库编辑器.</p><p><strong>网址:</strong> <a href="http://www.knoodl.com/" target="_blank" rel="external">http://www.knoodl.com/</a></p><p><strong>特点:</strong> 一款分布式信息管理系统 Distributed Information Management System (DIMS)™，包含创建、管理、分析和可视化RDF/OWL 描述功能。</p><p><strong>可能的不足:</strong></p><h2 id="Anzo-for-Excel"><a href="#Anzo-for-Excel" class="headerlink" title="Anzo for Excel"></a><a href="http://www.cambridgesemantics.com/products/anzo_for_excel" target="_blank" rel="external">Anzo for Excel</a></h2><blockquote><p>此工具已被Anzo Smart Data Manager等工具替代</p></blockquote><p>描述:** 基于电子表格数据和结构生成初始化的本体.</p><p><strong>网址:</strong> <a href="http://www.cambridgesemantics.com/" target="_blank" rel="external">http://www.cambridgesemantics.com/</a></p><p><strong>特点:</strong></p><p><strong>可能的不足:</strong></p><h2 id="OWLGrEd"><a href="#OWLGrEd" class="headerlink" title="OWLGrEd"></a><a href="http://owlgred.lumii.lv/" target="_blank" rel="external">OWLGrEd</a></h2><p><strong>描述:</strong> 一款用于OWL的图形化本体编辑器.</p><p><strong>网址:</strong> <a href="http://owlgred.lumii.lv/" target="_blank" rel="external">http://owlgred.lumii.lv/</a></p><p><strong>特点:</strong> 图形化编辑，且包含一个Protégé Plugin</p><p><strong>可能的不足:</strong></p><h2 id="Fluent-Editor"><a href="#Fluent-Editor" class="headerlink" title="Fluent Editor"></a><a href="http://cognitum.eu/" target="_blank" rel="external">Fluent Editor</a></h2><p><strong>描述:</strong> 一款使用受控自然语言（ Controlled Natural Language）的全面的编辑和调节复杂本体的工具（editing and manipulating complex ontologies.）</p><p><strong>网址:</strong> <a href="http://www.cognitum.eu/Semantics/FluentEditor/" target="_blank" rel="external">http://www.cognitum.eu/Semantics/FluentEditor/</a></p><p><strong>特点:</strong> 直观的OWL/SWRL自然语言表达提升了生产率，并使编辑过的本体更加容易阅读与理解.</p><p><strong>可能的不足:</strong></p><h2 id="Semantic-Turkey"><a href="#Semantic-Turkey" class="headerlink" title="Semantic Turkey"></a><a href="http://semanticturkey.uniroma2.it/" target="_blank" rel="external">Semantic Turkey</a></h2><p><strong>描述:</strong> 一个知识管理与获取平台（ Knowledge Management and Acquisition Platform.）基于 OSGi框架使其支持多种客户端。内嵌的客户端是一个FireFox扩展.</p><p><strong>网址:</strong> <a href="http://semanticturkey.uniroma2.it/" target="_blank" rel="external">http://semanticturkey.uniroma2.it/</a></p><p><strong>Bitbucket</strong>(类似github): <a href="https://bitbucket.org/art-uniroma2/semantic-turkey.git" target="_blank" rel="external">https://bitbucket.org/art-uniroma2/semantic-turkey.git</a></p><p><strong>特点:</strong> 它的 Firefox 界面可用于语义标注与/或知识获取（ Semantic Annotation and/or Knowledge Acquisition） (标注后的文本内容可被用于生成新的语义内容). 支持 OWL/SKOS/SKOS-XL</p><p><strong>可能的不足:</strong> 对 OWL 的支持有限. 截止 0.10版本, 不支持编辑 OWL Restrictions.</p><h2 id="VocBench"><a href="#VocBench" class="headerlink" title="VocBench"></a><a href="http://vocbench.uniroma2.it/" target="_blank" rel="external">VocBench</a></h2><p><strong>描述:</strong> 一个SKOS-XL Thesauri 协作环境（ Collaborative Environment for SKOS-XL Thesauri ）(同样支持向文本SKOS的转换)</p><p><strong>网址:</strong> <a href="http://vocbench.uniroma2.it/" target="_blank" rel="external">http://vocbench.uniroma2.it/</a></p><p><strong>Bitbucket</strong>(类似github): <a href="https://bitbucket.org/art-uniroma2/vocbench" target="_blank" rel="external">https://bitbucket.org/art-uniroma2/vocbench</a></p><p><strong>特点:</strong> 对协作的支持和详细的编辑工作流</p><p><strong>可能的不足:</strong></p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Header First 设计模式-01-设计模式入门（To Be Done）]]></title>
      <url>houzw.github.io.git/2016/11/14/Header%20First%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-01-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%85%A5%E9%97%A8/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="Header-First-设计模式-01"><a href="#Header-First-设计模式-01" class="headerlink" title="Header First 设计模式-01"></a>Header First 设计模式-01</h1><h2 id="设计模式入门"><a href="#设计模式入门" class="headerlink" title="设计模式入门"></a>设计模式入门</h2><h3 id="设计原则1-封装"><a href="#设计原则1-封装" class="headerlink" title="设计原则1-封装"></a>设计原则1-封装</h3><p>找出应用中可能需要变化之处，把他们<strong>独立出来</strong>，不要和那些不需要变化的代码混在一起。</p><p>即，把会变化的部分取出来并“<strong>封装</strong>“起来，好让其他部分不会受到影响。这样一来，系统变得更有弹性。</p><p>例如，把“鸭子”类的“飞行”行为独立出来，这样就可以为不同类的鸭子定义不同的飞行行为。</p><h3 id="设计原则2-针对接口编程"><a href="#设计原则2-针对接口编程" class="headerlink" title="设计原则2-针对接口编程"></a>设计原则2-针对接口编程</h3><p>针对<strong>接口</strong>编程，而不是针对实现编程。避免依赖于某个具体的实现类，避免被绑死在实际的实现类中。</p><p>“<strong>针对接口编程</strong>”的真正意思是<strong>“针对超类型（supertype）编程“。 针对超类型（supertype）编程</strong>可以更明确地说成“<strong>变量的声明类型应该是超类型</strong>，通常是一个抽象类或是一个接口。这样，只要是具体实现此超类型的类所产生的的对象，都可以指定给这个变量。这也意味着，声明类时，不必理会以后执行时的真正对象类型！”</p><p>针对接口编程，关键就在<strong>多态</strong>。</p><h3 id="设计原则3-多用组合，少用继承"><a href="#设计原则3-多用组合，少用继承" class="headerlink" title="设计原则3-多用组合，少用继承"></a>设计原则3-多用组合，少用继承</h3><p>组合是将多个类结合起来使用。组合使建立系统具有很大的弹性，不仅可以将算法族封装成类，更可以在“在运行时动态地改变行为”，只要组合的行为对象符合正确的接口标准即可。</p><p>继承会导致代码在子类中重复，运行时不能改变其行为，同时，对父类的修改会导致出现其他子类不需要的改变。另一方面，也很难指定类的全部行为。</p><h3 id="设计原则4-开放-关闭原则"><a href="#设计原则4-开放-关闭原则" class="headerlink" title="设计原则4-开放-关闭原则"></a>设计原则4-开放-关闭原则</h3><p>类应该对扩展开放，对修改关闭。</p><hr><h2 id="策略模式（Strategy-Pattern）"><a href="#策略模式（Strategy-Pattern）" class="headerlink" title="策略模式（Strategy Pattern）"></a>策略模式（Strategy Pattern）</h2><p><strong>策略模式</strong>定义了算法（行为）族，分别封装起来，让他们之间可以互相替换，此模式<strong>让算法的变化独立于使用</strong>算法的客户。</p><h2 id="观察者模式（Observer-Pattern）"><a href="#观察者模式（Observer-Pattern）" class="headerlink" title="观察者模式（Observer Pattern）"></a>观察者模式（Observer Pattern）</h2><p><strong>观察者模式</strong>定义了对象之间的一对多依赖。当一个对象改变状态时，他的所有依赖者都会收到通知并自动更新。</p><p>实现：</p><ul><li>Subject接口：<code>registerObserver(Observer o)</code>、<code>removeObserver(Observer o)</code>、<code>notifyObservers</code></li><li>Observer接口：<code>update</code></li></ul><p>Java内置对观察者模式的支持，包括Observer接口和Observable类（不是接口，内部包括一个<code>setChanged</code> 方法），支持push或pull的方式获取数据。</p><h2 id="装饰者模式（Decorator-Pattern）"><a href="#装饰者模式（Decorator-Pattern）" class="headerlink" title="装饰者模式（Decorator Pattern）"></a>装饰者模式（Decorator Pattern）</h2><p>装饰者和被装饰对象有着相同的超类型。</p><p>可以用一个或多个装饰者包装一个对象。</p><p>在任何需要原始对象（被包装者）的场合，可以用装饰过的对象替代它。（因为二者有相同的超类型）</p><p><strong>装饰者模式</strong>动态地将责任附加到对象上。若要扩展功能，装饰者提供了比继承更有弹性的替代方案。</p><p>每个装饰者都“有一个”（包装一个）组件，即装饰者有一个实例变量以保存某个被装饰者的引用。</p><p>装饰者实例：Java I/O 类：BufferedInputStream 为具体的装饰者，扩展自抽象的装饰类FilterInputStream：<code>new BufferedInputStream(new FileInputStream(&quot;xx.txt&quot;))</code></p><p>装饰者模式的缺点：利用装饰者模式，常造成设计中有大量的小类，如Java I/O包中的类。</p><h2 id="工厂模式（Factory-Pattern）"><a href="#工厂模式（Factory-Pattern）" class="headerlink" title="工厂模式（Factory Pattern）"></a>工厂模式（Factory Pattern）</h2><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[软件开发规范]]></title>
      <url>houzw.github.io.git/2016/11/05/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h2 id="description-“打算给小组介绍的软件开发规范，目前有点简单，主要是介绍了版本及大公司的一些规范链接”"><a href="#description-“打算给小组介绍的软件开发规范，目前有点简单，主要是介绍了版本及大公司的一些规范链接”" class="headerlink" title="description: “打算给小组介绍的软件开发规范，目前有点简单，主要是介绍了版本及大公司的一些规范链接”"></a>description: “打算给小组介绍的软件开发规范，目前有点简单，主要是介绍了版本及大公司的一些规范链接”</h2><h1 id="软件开发规范-TBD"><a href="#软件开发规范-TBD" class="headerlink" title="软件开发规范 (TBD)"></a>软件开发规范 (TBD)</h1><h2 id="1-版本规则"><a href="#1-版本规则" class="headerlink" title="1. 版本规则"></a>1. 版本规则</h2><h3 id="版本名称"><a href="#版本名称" class="headerlink" title="版本名称"></a>版本名称</h3><ul><li><p><strong>α（alphal）内部测试版</strong></p><p><code>α</code>版，此版本表示该软件仅仅是一个初步完成品，通常只在<strong>软件开发者内部交流、内部测试</strong>，也有很少一部分发布给专业测试人员。一般而言，该版本软件的 bug 较多，普通用户最好不要安装。</p></li><li><p><strong>β（beta）外部测试版</strong></p><p>该版本相对于<code>α</code>版已有了很大的改进，消除了严重的错误，但还是存在着一些缺陷，需要经过大规模的发布测试来进一步消除。这一版本通常由软件公司免费发布，用户可从相关的站点下载。通过一些专业爱好者的测试，将结果反馈给开发者，开发者们再进行有针对性的修改。该版本也不适合一般用户安装。</p></li><li><p><strong>γ（gamma）版</strong></p><p>该版本已经相当成熟了，与即将发行的正式版相差无几（现在叫做 RC - Release Candidate）。</p></li><li><p><strong>RC (Release Candidate) 发行候选版本</strong></p><p>和Beta版最大的差别在于Beta阶段会一直加入新的功能，但是到了RC版本，几乎就不会加入新的功能了，而主要着重于除错! 是最终发放给用户的最接近正式版的版本，发行后改正bug就是正式版了，就是正式版之前的最后一个测试版.</p></li><li><p><strong>release 最终释放版</strong><br>该版本意味“最终释放版”，在出了一系列的测试版之后，终归会有一个正式版本，对于用户而言，购买该版本的软件绝对不会错。该版本有时也称为标准版。一般情况下，release不会以单词形式出现在软件封面上，取而代之的是符号 (r) ，如 windows nt(r) 4.0、ms-dos(r) 6.22 等。</p></li></ul><h3 id="版本号"><a href="#版本号" class="headerlink" title="版本号"></a>版本号</h3><p>版本格式：<strong>主版本号.次版本号.修订号</strong>，版本号递增规则如下：</p><ol><li>主版本号：当软件<strong>整体重写</strong>或做了<strong>不兼容的修改</strong></li><li>次版本号：当你做了向下兼容的<strong>功能性新增</strong></li><li>修订号：当你做了向下兼容的<strong>问题修正</strong></li></ol><h2 id="2-文件编码"><a href="#2-文件编码" class="headerlink" title="2.文件编码"></a>2.文件编码</h2><p>所有开发文件，包括<code>Java、Javascript、HTML、CSS、JSP、XML、Properties</code>等等统一为 <strong>UTF-8</strong> 编码</p><p>HTML页面顶部添加 <code>&lt;!DOCTYPE html&gt;</code>，<code>HEAD</code>部分添加<code>&lt;meta charset=&quot;utf-8&quot;&gt;</code></p><p>XML页面顶部使用：<code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</code></p><h2 id="3-代码"><a href="#3-代码" class="headerlink" title="3. 代码"></a>3. 代码</h2><p>前端规范：<a href="http://alloyteam.github.io/CodeGuide/" target="_blank" rel="external">腾讯AllyTeam前端代码规范</a> / <a href="https://github.com/ecomfe/spec" target="_blank" rel="external">百度 EFE team 前端规范</a></p><p>Java 代码规范：<a href="https://google.github.io/styleguide/javaguide.html" target="_blank" rel="external">Google Java Style Guide</a> / <a href="http://www.hawstein.com/posts/google-java-style.html" target="_blank" rel="external">Google规范中文版</a></p><p>项目规范：<a href="http://www.uml.org.cn/softwareprocess/201210173.asp" target="_blank" rel="external">普通软件项目开发过程规范</a></p><h4 id="HTML规范："><a href="#HTML规范：" class="headerlink" title="HTML规范："></a>HTML规范：</h4><p>标签、属性、属性命名由<strong>小写英文、数字和_</strong>组成，且<strong>所有标签必须闭合</strong>，属性值必须用双引号””,<br>避免使用中文拼音尽量简易并要求语义化。</p><p><code>Javascript</code>代码段使用：<br></p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</div><div class="line">...</div><div class="line">&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure><p></p><p><code>Javascript</code>模块文件或函数在开始处使用<code>&#39;use strict&#39;;</code><br><code>CSS</code>引用：<code>&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;...css&quot; /&gt;</code></p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Apache Shiro学习 - 5 - Realms]]></title>
      <url>houzw.github.io.git/2016/11/04/Apache%20Shiro%E5%AD%A6%E4%B9%A0%20-%205%20-%20Realms/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:01 GMT+0800 (中国标准时间) --><h1 id="Apache-Shiro学习-5-Realms"><a href="#Apache-Shiro学习-5-Realms" class="headerlink" title="Apache Shiro学习 - 5 - Realms"></a>Apache Shiro学习 - 5 - Realms</h1><blockquote><p>Realm 是Shiro中必须的安全数据源 ( A Realm is essentially a security-specific <a href="http://en.wikipedia.org/wiki/Data_Access_Object" target="_blank" rel="external">DAO</a> )</p></blockquote><p><code>Realm</code>是应用程序中获取诸如用户、角色、权限等安全数据的组件。<code>Realm</code> 将特定应用程序的数据转换成Shiro能够处理的格式，从而使Shiro能够提供一个单一的、易于理解的 <a href="https://shiro.apache.org/subject.html" target="_blank" rel="external">Subject</a> 编程API ，不论你数据源有多少、数据与特定的应用程序联系多么紧密（how application-specific your data might be）。<code>Realm</code>通常与数据源，如关系数据库、LDAP（轻量级目录访问协议，Lightweight Directory Access Protocol）目录、文件系统或其他类似资源，具有1对1的关系，因而， <code>Realm</code> 接口的实现，需要使用特定的数据源API来发现权限数据（<code>roles, permissions</code>等），包括 JDBC, File IO, Hibernate （MyBatis）或 JPA, 或其他 Data Access API.</p><p>由于多数数据源同时保存身份验证数据（如密码等凭证(credentials)）和授权数据（如roles 或 permission），每个 Shiro 的<code>Realm</code> 都能够同时执行认证与授权操作（ authentication and authorization operations）.</p><h2 id="Realm-配置"><a href="#Realm-配置" class="headerlink" title="Realm 配置"></a>Realm 配置</h2><p>如果使用 Shiro的 INI 配置, 你可以像定义其他对象一样在<code>[main]</code>部分定义 <code>Realms</code> 引用，但它们有两种方式配置到一个 <code>securityManager</code>上去: 明确和不明确（explicitly or implicitly）.</p><h3 id="明确指定-Explicit-Assignment"><a href="#明确指定-Explicit-Assignment" class="headerlink" title="明确指定 | Explicit Assignment"></a>明确指定 | Explicit Assignment</h3><p>基于INI配置知识我们可以知道，有一个明显的配置方法，就是定义一个或多个<code>Realm</code>之后，将它们作为一个集合（collection）属性配置到<code>securityManager</code>对象上去：</p><figure class="highlight"><table><tr><td class="code"><pre><div class="line">fooRealm = com.company.foo.Realm</div><div class="line">barRealm = com.company.another.Realm</div><div class="line">bazRealm = com.company.baz.Realm</div><div class="line"></div><div class="line">securityManager.realms = $fooRealm, $barRealm, $bazRealm</div></pre></td></tr></table></figure><p>明确指定是确定性的（deterministic） - 你可以精确地控制你要使用的<code>realm</code>及它们在验证与授权时的使用顺序。<code>Realm</code>顺序的影响在将在 <a href="#Authentication-sequence">Authentication Sequence</a> 部分详细说明.</p><h3 id="模糊指定-Implicit-Assignment"><a href="#模糊指定-Implicit-Assignment" class="headerlink" title="模糊指定 | Implicit Assignment"></a>模糊指定 | Implicit Assignment</h3><blockquote><p>不推荐 <strong>Not Preferred</strong></p></blockquote><p>不明确的指定可能在你改变<code>realm</code>定义顺序时导致不可预测的问题。不建议使用此方法。Implicit Assignment 很有可能在将来的 Shiro 版本中移除。</p><p>如果某些原因使你不想明确地配置<code>securityManager.realms</code>属性, 你可以让Shiro 去探测所有配置的<code>realm</code>并且将它们直接指定给 <code>securityManager</code> .</p><p>此方法中, <code>realm</code> 将根据它们定义时的顺序被指定给 <code>securityManager</code> .</p><p><code>shiro.ini</code> 例子:</p><figure class="highlight ini"><table><tr><td class="code"><pre><div class="line"><span class="attr">blahRealm</span> = com.company.blah.Realm</div><div class="line"><span class="attr">fooRealm</span> = com.company.foo.Realm</div><div class="line"><span class="attr">barRealm</span> = com.company.another.Realm</div><div class="line"></div><div class="line"><span class="comment"># no securityManager.realms assignment here</span></div></pre></td></tr></table></figure><p>基本和加上下面这条配置的效果一样:</p><figure class="highlight"><table><tr><td class="code"><pre><div class="line">securityManager.realms = $blahRealm, $fooRealm, $barRealm</div></pre></td></tr></table></figure><p>但需要注意的是，只有定义<code>realm</code>时的顺序会直接影响它们在验证和授权时如何被使用。若你修改了<code>realm</code>定义的顺序， 你将会修改主验证器 <code>Authenticator</code>的验证顺序（ <a href="https://shiro.apache.org/authentication.html#Authentication-sequence" target="_blank" rel="external">Authentication Sequence</a> ）功能。</p><p>因此，不建议使用 Implicit Assignment.</p><h2 id="Realm身份验证-Realm-Authentication"><a href="#Realm身份验证-Realm-Authentication" class="headerlink" title="Realm身份验证 | Realm Authentication"></a>Realm身份验证 | Realm Authentication</h2><p>一旦你理解了Shiro的身份验证工作流（ <a href="https://shiro.apache.org/authentication.html#Authentication-sequence" target="_blank" rel="external">Authentication workflow</a> ），在尝试进行身份验证时清楚地知道验证器 <code>Authenticator</code>如何与<code>realm</code>交互是非常重要的。</p><h3 id="验证令牌支持-Supporting-AuthenticationTokens"><a href="#验证令牌支持-Supporting-AuthenticationTokens" class="headerlink" title="验证令牌支持 | Supporting AuthenticationTokens"></a>验证令牌支持 | Supporting <code>AuthenticationTokens</code></h3><p>正如在 <a href="https://shiro.apache.org/authentication.html#Authentication-sequence" target="_blank" rel="external">身份验证顺序</a> 中所言, 在一个 <code>Realm</code> 被用来进行身份验证之前，它的 <a href="https://shiro.apache.org/static/current/apidocs/org/apache/shiro/realm/Realm.html#supports-org.apache.shiro.authc.AuthenticationToken-" target="_blank" rel="external"><code>supports</code></a> 方法被调用了. 只有当返回值为 <code>true</code>, 它的 <code>getAuthenticationInfo(token)</code> 方法才会被激活.</p><p><code>Realm</code>通常会检查提交的令牌(<code>token</code>)是否是它可以处理的类型（接口或类）。例如，一个 处理生物特征资料（ biometric data）的 Realm是不能处理 <code>UsernamePasswordTokens</code> 的, 因而它的<code>supports</code> 方法将会返回 <code>false</code>.</p><h3 id="处理支持的认证令牌-Handling-supported-AuthenticationTokens"><a href="#处理支持的认证令牌-Handling-supported-AuthenticationTokens" class="headerlink" title="处理支持的认证令牌 | Handling supported AuthenticationTokens"></a>处理支持的认证令牌 | Handling supported <code>AuthenticationTokens</code></h3><p>若一个 <code>Realm</code>支持（ <code>supports</code>）一个提交的令牌（ <code>AuthenticationToken</code>）,验证器（ <code>Authenticator</code> ）将会调用Realm的 <a href="https://shiro.apache.org/static/current/apidocs/org/apache/shiro/realm/Realm.html#getAuthenticationInfo-org.apache.shiro.authc.AuthenticationToken-" target="_blank" rel="external">getAuthenticationInfo(token)</a> 方法. 这实际上表示了<code>Realm</code>后面数据源的验证尝试（This effectively represents an authentication attempt with the <code>Realm&#39;s</code> backing data source）。此方法的顺序是:</p><ol><li>检查 <code>token</code> 中当事人（principal ）的识别信息（ identifying principal (账号识别信息)）</li><li>基于 <code>principal</code>, 在数据源中查找对应的账号数据</li><li>确保令牌提供分凭证 <code>credentials</code> 与保存在数据中的一致</li><li>若凭证相匹配, 将返回一个以Shiro能够处理的格式封装了账号信息的 <a href="https://shiro.apache.org/static/current/apidocs/org/apache/shiro/authc/AuthenticationInfo.html" target="_blank" rel="external">AuthenticationInfo</a> 实例</li><li>如果凭证不匹配, 抛出 <a href="https://shiro.apache.org/static/current/apidocs/org/apache/shiro/authc/AuthenticationException.html" target="_blank" rel="external">AuthenticationException</a> 异常</li></ol><p>这是所有Realm的 <code>getAuthenticationInfo</code>实现的最高级别工作流。 在此方法中，Realm可以自由地做任何处理, 例如记录登录尝试, 更新数据记录, 或其他任何与此数据源的认证尝试相关的操作.</p><p>唯一需要的是，若凭证与给定的 principal(s)匹配, 必须返回一个代表那个数据源的Subject的账号信息的非null的 <code>AuthenticationInfo</code> 实例。</p><blockquote><p><strong>捷径</strong></p><p>直接实现<code>Realm</code> 接口将会是耗时且容易出错的工作. 大部分人都选择实现其抽象子类 <a href="https://shiro.apache.org/static/current/apidocs/org/apache/shiro/realm/AuthorizingRealm.html" target="_blank" rel="external">AuthorizingRealm</a> 。此类实现了基本的验证和授权工作流，节约了你的时间和精力。</p></blockquote><h3 id="凭证比对-Credentials-Matching"><a href="#凭证比对-Credentials-Matching" class="headerlink" title="凭证比对 | Credentials Matching"></a>凭证比对 | Credentials Matching</h3><p>在上述 <code>realm</code> 的认证工作流中, 一个<code>Realm</code>必须要去核实 <a href="https://shiro.apache.org/subject.html" target="_blank" rel="external">Subject</a> 提交的凭证 (如密码) 必须与数据存储中的相匹配. 若它们相匹配，则验证被认为是成功的，系统核实了终端用户的身份。</p><blockquote><p><strong>Realm Credentials Matching</strong></p><p>比对提交的凭证与<code>Realm</code>后面数据源中存储的凭证是每个<code>Realm</code>的责任而非验证器的 <code>Authenticator</code> 。 每个<code>Realm</code> 都精通凭证格式 和存储及详细的凭证匹配的知识, 而 <code>Authenticator</code> 只是一个工作流组件.</p></blockquote><p>凭证匹配过程在所有应用程序中几乎都是一样的，唯一的区别只是比较的数据。 为确保这一过程在需要时是可插拔和可自定义的， <a href="https://shiro.apache.org/static/current/apidocs/org/apache/shiro/realm/AuthenticatingRealm.html" target="_blank" rel="external">AuthenticatingRealm</a> 和它的子类支持凭证匹配器（ <a href="https://shiro.apache.org/static/current/apidocs/org/apache/shiro/authc/credential/CredentialsMatcher.html" target="_blank" rel="external">CredentialsMatcher</a> ）的概念来执行凭证比对。</p><p>当获取到账号数据之后, 此数据及提交的 <code>AuthenticationToken</code> 将被呈现给 <code>CredentialsMatcher</code> 以检查提交的数据是否与存储的数据相匹配.</p><p>Shiro已有了一些 <code>CredentialsMatcher</code> 的实现类以便于你快速开始开发,如 <a href="https://shiro.apache.org/static/current/apidocs/org/apache/shiro/authc/credential/SimpleCredentialsMatcher.html" target="_blank" rel="external">SimpleCredentialsMatcher</a> 和 <a href="https://shiro.apache.org/static/current/apidocs/org/apache/shiro/authc/credential/HashedCredentialsMatcher.html" target="_blank" rel="external">HashedCredentialsMatcher</a>, 但若你想配置一个自己的实现类来实现自己的匹配逻辑，你可以直接这样做:</p><figure class="highlight"><table><tr><td class="code"><pre><div class="line">Realm myRealm = new com.company.shiro.realm.MyRealm();</div><div class="line">CredentialsMatcher customMatcher = new com.company.shiro.realm.CustomCredentialsMatcher();</div><div class="line">myRealm.setCredentialsMatcher(customMatcher);</div></pre></td></tr></table></figure><p>或者，使用 Shiro的 INI配置（ <a href="https://shiro.apache.org/configuration.html" target="_blank" rel="external">configuration</a> ）:</p><figure class="highlight"><table><tr><td class="code"><pre><div class="line">[main]</div><div class="line">...</div><div class="line">customMatcher = com.company.shiro.realm.CustomCredentialsMatcher</div><div class="line">myRealm = com.company.shiro.realm.MyRealm</div><div class="line">myRealm.credentialsMatcher = $customMatcher</div><div class="line">...</div></pre></td></tr></table></figure><h4 id="简单相等比较-Simple-Equality-Check"><a href="#简单相等比较-Simple-Equality-Check" class="headerlink" title="简单相等比较 | Simple Equality Check"></a>简单相等比较 | Simple Equality Check</h4><p>所有 Shiro 预设的（out-of-the-box） <code>Realm</code> 实现默认使用 <a href="https://shiro.apache.org/static/current/apidocs/org/apache/shiro/authc/credential/SimpleCredentialsMatcher.html" target="_blank" rel="external">SimpleCredentialsMatcher</a>. <code>SimpleCredentialsMatcher</code> 对存储的账号数据与提交于 <code>AuthenticationToken</code>中的数据执行一种简单直接的相等比较.</p><p>例如, 若提交了一个 <a href="https://shiro.apache.org/static/current/apidocs/org/apache/shiro/authc/UsernamePasswordToken.html" target="_blank" rel="external">UsernamePasswordToken</a> , <code>SimpleCredentialsMatcher</code> 会将提交的密码与存储在数据库中的密码进行精确的相等比较 .</p><p><code>SimpleCredentialsMatcher</code> 执行的相等比对并不仅仅是字符串比较. 它可以执行大部分常见的字节数据源的比对，如字符串（Strings）, 字符数组（ character arrays）, 字节数组（ byte arrays）,文件（ Files）和输入流（ InputStreams）. See its JavaDoc for more.</p><h4 id="哈希凭证-Hashing-Credentials"><a href="#哈希凭证-Hashing-Credentials" class="headerlink" title="哈希凭证 | Hashing Credentials"></a>哈希凭证 | Hashing Credentials</h4><p>与以原始格式存储和比对凭证相比，一种更安全的存储终端用户凭证（如密码）的方法是在将它们存储到数据库之前对其执行单向哈希（ one-way hash）。</p><p>这确保了终端用户的密码永远不会以其原始形式存储，而且无人知道其原始值。这是比文本或原始数据比对更加安全的机制，任何有安全考虑的应用程序都应该采用这种方式。</p><p>为支持这种首选的密码散列策略（preferred cryptographic hashing strategies）, Shiro 提供了 <a href="https://shiro.apache.org/static/current/apidocs/org/apache/shiro/authc/credential/HashedCredentialsMatcher.html" target="_blank" rel="external">HashedCredentialsMatcher</a> 实现类的配置来代替前述的 <code>SimpleCredentialsMatcher</code>.</p><p>散列密码（Hashing credentials）和加盐 （ salting） 及多次哈希/散列（multiple hash iterations ）的优点的讨论超出了 <code>Realm</code> 文档的范畴, 获取更多详细信息请参考 <a href="https://shiro.apache.org/static/current/apidocs/org/apache/shiro/authc/credential/HashedCredentialsMatcher.html" target="_blank" rel="external">HashedCredentialsMatcher JavaDoc</a> 。</p><h5 id="哈希及相应的匹配器-Hashing-and-Corresponding-Matcher"><a href="#哈希及相应的匹配器-Hashing-and-Corresponding-Matcher" class="headerlink" title="哈希及相应的匹配器 | Hashing and Corresponding Matcher"></a>哈希及相应的匹配器 | Hashing and Corresponding Matcher</h5><p>那么，如何配置Shiro应用程序来简便的实现这种效果?</p><p>Shiro 提供了多个 <code>HashedCredentialsMatcher</code> 的子类实现. 你必须在你的<code>realm</code>中配置特定的实现类来与你用来哈希用户密码的算法相匹配。</p><p>例如, 假设你使用用户名/密码对来进行验证 。由于上述优点，你想在插件用户账户时使用 <a href="https://en.wikipedia.org/wiki/SHA_hash_functions" target="_blank" rel="external">SHA-256</a> 算法来散列用户密码。 你应该散列用户输入的文本密码，并保存其值:</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">import</span> org.apache.shiro.crypto.hash.Sha256Hash;</div><div class="line"><span class="keyword">import</span> org.apache.shiro.crypto.RandomNumberGenerator;</div><div class="line"><span class="keyword">import</span> org.apache.shiro.crypto.SecureRandomNumberGenerator;</div><div class="line">...</div><div class="line"></div><div class="line"><span class="comment">//使用 Random Number Generator 来生成盐（salts）. 这比不使用盐或使用用户名做盐要安全</span></div><div class="line"><span class="comment">// Shiro makes this easy.</span></div><div class="line"></div><div class="line"><span class="comment">//Note that a normal app would reference an attribute rather</span></div><div class="line"><span class="comment">//than create a new RNG every time:</span></div><div class="line"></div><div class="line">RandomNumberGenerator rng = <span class="keyword">new</span> SecureRandomNumberGenerator();</div><div class="line">Object salt = rng.nextBytes();</div><div class="line"></div><div class="line"><span class="comment">//Now hash the plain-text password with the random salt and multiple</span></div><div class="line"><span class="comment">//iterations and then Base64-encode the value (requires less space than Hex):</span></div><div class="line"></div><div class="line">String hashedPasswordBase64 = <span class="keyword">new</span> Sha256Hash(plainTextPassword, salt, <span class="number">1024</span>).toBase64();</div><div class="line"></div><div class="line">User user = <span class="keyword">new</span> User(username, hashedPasswordBase64);</div><div class="line"></div><div class="line"><span class="comment">//save the salt with the new account.  The HashedCredentialsMatcher</span></div><div class="line"><span class="comment">//will need it later when handling login attempts:</span></div><div class="line"></div><div class="line">user.setPasswordSalt(salt);</div><div class="line">userDAO.create(user);</div></pre></td></tr></table></figure><p>因为你使用了 <code>SHA-256</code> 来散列你的密码, 你需要告诉 Shiro 使用合适的 <code>HashedCredentialsMatcher</code> 来与你的选择相匹配 . 本例中, 我们创建了一个随机盐（ salt ）且执行了1024次迭代来增强安全 (查阅 <code>HashedCredentialsMatcher</code> 的 JavaDoc 了解为啥). 下面是 Shiro的相关 INI 配置:</p><figure class="highlight"><table><tr><td class="code"><pre><div class="line">[main]</div><div class="line">...</div><div class="line">credentialsMatcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher</div><div class="line"># 本例中使用的是 base64 编码,而非 hex:</div><div class="line">credentialsMatcher.storedCredentialsHexEncoded = false</div><div class="line">credentialsMatcher.hashIterations = 1024</div><div class="line"># This next property is only needed in Shiro 1.0\.  Shiro 1.1 及之后的版本不需要下面一行的配置:</div><div class="line">credentialsMatcher.hashSalted = true</div><div class="line"></div><div class="line">...</div><div class="line">myRealm = com.company.....</div><div class="line">myRealm.credentialsMatcher = $credentialsMatcher</div><div class="line">...</div></pre></td></tr></table></figure><h6 id="SaltedAuthenticationInfo"><a href="#SaltedAuthenticationInfo" class="headerlink" title="SaltedAuthenticationInfo"></a>SaltedAuthenticationInfo</h6><p>确保上述设置工作的最后一件事是，你的 <code>Realm</code> 实现类必须返回一个 <a href="https://shiro.apache.org/static/current/apidocs/org/apache/shiro/authc/SaltedAuthenticationInfo.html" target="_blank" rel="external">SaltedAuthenticationInfo</a> 实例（通常是<code>SimpleAuthenticationInfo</code>对象）而不是一个通常的<code>AuthenticationInfo</code> . <code>SaltedAuthenticationInfo</code> 接口确保你在创建账户时使用的盐 (如上面的<code>user.setPasswordSalt(salt);</code> ) 可以被 <code>HashedCredentialsMatcher</code>使用.</p><p><code>HashedCredentialsMatcher</code> 需要盐以便对提交的 <code>AuthenticationToken</code> 执行相同的哈希操作，来查看令牌是否与你储存的数据相匹配. 因而，若你在用户密码中加盐（你应该这样做！），请确保你的 <code>Realm</code>实现类返回了一个 <code>SaltedAuthenticationInfo</code> 实例.</p><h3 id="禁用认证-Disabling-Authentication"><a href="#禁用认证-Disabling-Authentication" class="headerlink" title="禁用认证 | Disabling Authentication"></a>禁用认证 | Disabling Authentication</h3><p>若因为某些原因，你不想你的 Realm 对一个数据源进行认证(可能你只想利用Realm进行授权操作), 你应该使Realm的 <code>supports</code> 方法返回<code>false</code>来完全禁用Realm对认证的支持. 这样你的Realm永远将不会在认证尝试时被使用.</p><p>当然，若你想对Subjects进行认证，请确保最少配置了一个 <code>Realm</code> 来支持 AuthenticationTokens .</p><h2 id="Realm-授权-Realm-Authorization"><a href="#Realm-授权-Realm-Authorization" class="headerlink" title="Realm 授权 | Realm Authorization"></a>Realm 授权 | Realm Authorization</h2><p>待续 TBD</p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[地形因子分类整合方案]]></title>
      <url>houzw.github.io.git/2016/11/03/%E5%9C%B0%E5%BD%A2%E5%9B%A0%E5%AD%90%E5%88%86%E7%B1%BB%E6%95%B4%E5%90%88/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h2 id="地形因子分类整合方案"><a href="#地形因子分类整合方案" class="headerlink" title="地形因子分类整合方案"></a>地形因子分类整合方案</h2><blockquote><p>《黄土高原数字地形分析探索与实践》</p></blockquote><h3 id="1-根据描述尺度范围的地形因子分类整合方案"><a href="#1-根据描述尺度范围的地形因子分类整合方案" class="headerlink" title="1. 根据描述尺度范围的地形因子分类整合方案"></a>1. 根据描述尺度范围的地形因子分类整合方案</h3><p>微观：描述一个微分点单元的信息，其量值大小一般只受它所在点的点位高程及微小邻域范围内高程信息的影响。微观地形因子具有空间矢量特征。基于DEM的微观地形因子提取，通常采用基于空间矢量分析原理的差分计算方法。</p><p>宏观：描述的空间范围一般都是一个区域，或者说把一个分析窗口直接看做一个整体，分析该曲面和水平面之间，或它对应的最佳拟合坡面之间的复合特征。其量值大小不仅受它所在点的点位高程影响，而且还有分析窗口内的所哟高程点信息密切相关。基于DEM的宏观地形因子提取，一般通过移动分析窗口的方法，或采用数理统计方法实现。</p><table><br><tr><br><th colspan="2">类型</th><br><th>地形因子</th><br></tr><br><tr><br><td colspan="2">微观地形因子</td><br><td>高程、高差、坡度、坡向、曲率、平距、坡度变率、地形指数、累积流量、上坡坡度、上坡坡长、散水坡长、径流长度、变差系数、变异系数、凹凸系数、粗糙度</td><br></tr><br><tr><br><td rowspan="3">宏观地形因子</td><br><td>坡面尺度</td><br><td>坡形、坡位、坡长、形状指数、特征参数、坡面高度、倾斜度、倾斜方向、延伸方向、面积、表面积、体积、分维数</td><br></tr><br><tr><br><td>流域尺度</td><br><td>形态要素、紧度系数、圆度、狭长度、曲度、拉长度、不对称系数、河网密度、水系发展系数、不均匀系数、上坡面积、散水坡度、散水面积、流域坡度、流域长度、流域面积、单位汇水面积、最大最小汇水（分水）面积、地形起伏度、地表粗糙度、地表切割深度、高程变异系数、沟壑密度、坡谱、面积高程曲线、平均高程、平均高程差、高程标准差、高程变幅、高程偏差、高程百分位、相对高程百分位、面积、表面积、体积、分维数、分枝比</td><br></tr><br><tr><br><td>区域尺度</td><br><td>地形起伏度、地表粗糙度、地表切割深度、高程变异系数、沟壑密度、坡谱、面积高程曲线、平均高程、平均高程差、高程标准差、高程变幅、高程偏差、高程百分位、相对高程百分位、面积、表面积、体积、分维数、地形纹理等</td><br></tr><br></table><h3 id="2-根据计算方法的地形因子分类整合方案"><a href="#2-根据计算方法的地形因子分类整合方案" class="headerlink" title="2. 根据计算方法的地形因子分类整合方案"></a>2. 根据计算方法的地形因子分类整合方案</h3><p>基本：可由高程数据直接计算得到，具有明确的数学表达式和物理定义。一般在格网DEM的局部范围内通过差分或曲面拟合技术实现，结果均为具有实际物理意义和量纲的量，可以通过实地或地形图的量测而直接检验。</p><table><br><tr><br><th colspan="2">类型</th><br><th>地形因子</th><br></tr><br><tr><br><td colspan="2">基本地形因子</td><br><td>高程、高差、坡度、坡向、曲率、平距、坡度变率、坡向变率、地形指数、面积、表面积、体积、坡形、坡位、坡长、形状指数、特征参数、形态要素、紧度系数、圆度、狭长度、曲度、拉长度、不对称系数、不均匀系数、上坡面积、散水坡度、散水面积、流域坡度、流域长度、流域面积、单位汇水面积、最大最小汇水（分水）面积、分维数等</td><br></tr><br><tr><br><td rowspan="3">特征地形因子</td><br><td>特征点</td><br><td>凸点、凹点、山脊点、山谷点、平地点、交线点、径流结点</td><br></tr><br><tr><br><td>特征线</td><br><td>山脊线、山谷线、沟沿线、海岸线、断层线、昴边线、坡脚线、排水网络</td><br></tr><br><tr><br><td>特征面</td><br><td>分水山肩、汇水山肩、分水背坡、汇水背坡、分水坡麓、汇水坡麓、洼地、流域、纵断面、横断面、可视区等</td><br></tr><br><tr><br><td colspan="2">统计</td><br><td>平均高程、平均高程差、高程标准差、高程变幅、高程偏差、高程百分位、相对高程百分位、平均方向、合成长度、沟壑密度、河网密度、地形起伏度、地表粗糙度、地表切割深度、高程变异系数、坡谱、面积高程曲线</td><br></tr><br><tr><br><td colspan="2">复合</td><br><td>地形湿度指数、水流强度指数、输沙能力指数、日照强度指数、遮蔽角</td><br></tr><br></table><h4 id="地形曲率因子分类信息表"><a href="#地形曲率因子分类信息表" class="headerlink" title="地形曲率因子分类信息表"></a>地形曲率因子分类信息表</h4><table><br><tr><br><th>曲率类型</th><br><th>名称</th><br><th>地学意义</th><br></tr><br><tr><br><td>第一类曲率<br>（与坐标系无关）</td><br><td>平均曲率CM（Mean Curvature）<br>非球形曲率CU（Unsphericity Curvature）<br>最大曲率Cmax（Maximal Curvature）<br>最小曲率Cmin（Minimal Curvature）<br>全高斯曲率CG（Total Gaussian Curvature）<br>全曲率CTol（Total Curvature）</td><br><td>地表距离平衡态程度<br>局部地表与球体接近程度<br>识别山脊线几何要素<br>识别山谷线几何要素<br>识别地形因子部位<br>识别地形因子部位</td><br></tr><br><tr><br><td>第二类曲率<br>（与高度场相关）</td><br><td>曲率差CD（Difference Curvature）<br>剖面曲率CP（Profile Curvature）<br>等高线曲率CC（Contour Curvature）<br>剖面曲率差CPE（Profile Curvature Excess）<br>水平曲率差CHE（Horizontal Curvature Excess）<br>全环曲率CR（Total Ring Curvature）<br>全累积曲率CA（Total Accumulation Curvature）<br>正切曲率CT（Tangential Curvature）<br>纵向曲率CL（Longitudal Curvature）<br>断面曲率CS（Cross Section Curvature）<br>流线曲率CF（Flow-path Curvature）</td><br><td>比较第一和第二累计机理<br>第二种物质运动累计机理<br>地表物质运动的汇合和发散模式<br>将流水线摆动程度分解成两部分<br>将流水线摆动程度分解成两部分<br>流水线摆动程度<br>地表物质运动累计发散区域<br>第一种物质运动累计机理<br>地貌特征识别与提取<br>地貌特征识别与提取<br>水流路径摆动程度</td><br></tr><br></table><h3 id="3-根据描述主题特征的分类"><a href="#3-根据描述主题特征的分类" class="headerlink" title="3. 根据描述主题特征的分类"></a>3. 根据描述主题特征的分类</h3><table><br><tr><br><th colspan="3">类型</th><br><th>地形因子</th><br></tr><br><tr><br><td rowspan="5">形态因子</td><br><td colspan="2">地形点</td><br><td>高程、高差、坡度、坡向、曲率、平距、坡度变率、坡向变率、地形指数、凹凸系数</td><br></tr><br><tr><br><td>地形线</td><br><td>长度、延伸方向、曲率、弯曲个数、分维值</td><br></tr><br><tr><br><td rowspan="3">地形面</td><br><td>平面形态</td><br><td>直径、扁率、长轴和短轴长度、弯曲程度、面积、延伸性、形状系数</td><br></tr><br><tr><br><td>横剖面形态</td><br><td>坡形、顶面与坡面、坡面与坡面之间的转折、坡面长度、坡度、高度、对称性、地面宽度</td><br></tr><br><tr><br><td>纵剖面形态</td><br><td>起伏度、坡降、形状系数</td><br></tr><br><tr><br><td>结构因子</td><br><td colspan="3">地形网络、特征点簇、地形图谱、地形纹理、积分统计曲线</td><br></tr><br></table><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[WSDL 教程 [To be continued]]]></title>
      <url>houzw.github.io.git/2016/10/31/WSDL%20%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="WSDL-教程"><a href="#WSDL-教程" class="headerlink" title="WSDL 教程"></a>WSDL 教程</h1><blockquote><p>搬运自 <a href="http://www.w3school.com.cn/wsdl/index.asp" target="_blank" rel="external">http://www.w3school.com.cn/wsdl/index.asp</a></p></blockquote><p><strong>WSDL（网络服务描述语言，Web Services Description Language）是一门基于 XML 的语言，用于描述 Web Services 以及如何对它们进行访问。</strong></p><h3 id="0-什么是-WSDL"><a href="#0-什么是-WSDL" class="headerlink" title="0. 什么是 WSDL?"></a>0. 什么是 WSDL?</h3><ul><li>WSDL 指网络服务描述语言</li><li>WSDL 使用 XML 编写</li><li>WSDL 是一种 XML 文档</li><li>WSDL 用于描述网络服务</li><li>WSDL 也可用于定位网络服务</li><li>WSDL 还不是 W3C 标准</li></ul><h3 id="WSDL-可描述网络服务（Web-Services）"><a href="#WSDL-可描述网络服务（Web-Services）" class="headerlink" title="WSDL 可描述网络服务（Web Services）"></a>WSDL 可描述网络服务（Web Services）</h3><p>WSDL 是一种使用 XML 编写的文档。这种文档可描述某个 Web service。它可规定服务的位置，以及此服务提供的操作（或方法）。</p><h2 id="1-WSDL-文档"><a href="#1-WSDL-文档" class="headerlink" title="1. WSDL 文档"></a>1. WSDL 文档</h2><p><strong>WSDL 文档仅仅是一个简单的 XML 文档。它包含一系列描述某个 web service 的定义。</strong></p><h2 id="1-1-WSDL-文档结构"><a href="#1-1-WSDL-文档结构" class="headerlink" title="1.1 WSDL 文档结构"></a>1.1 WSDL 文档结构</h2><p>WSDL 文档是利用这些主要的元素来描述某个 web service 的：</p><table><thead><tr><th>元素</th><th>定义</th></tr></thead><tbody><tr><td><code>&lt;portType&gt;</code></td><td>web service 执行的操作</td></tr><tr><td><code>&lt;message&gt;</code></td><td>web service 使用的消息</td></tr><tr><td><code>&lt;types&gt;</code></td><td>web service 使用的数据类型</td></tr><tr><td><code>&lt;binding&gt;</code></td><td>web service 使用的通信协议</td></tr></tbody></table><p>一个 WSDL 文档的主要结构是类似这样的：</p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">definitions</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">types</span>&gt;</span></div><div class="line">   definition of types........</div><div class="line"><span class="tag">&lt;/<span class="name">types</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">message</span>&gt;</span></div><div class="line">   definition of a message....</div><div class="line"><span class="tag">&lt;/<span class="name">message</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">portType</span>&gt;</span></div><div class="line">   definition of a port.......</div><div class="line"><span class="tag">&lt;/<span class="name">portType</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">binding</span>&gt;</span></div><div class="line">   definition of a binding....</div><div class="line"><span class="tag">&lt;/<span class="name">binding</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">definitions</span>&gt;</span></div></pre></td></tr></table></figure><p>WSDL 文档可包含其它的元素，比如 extension 元素，以及一个 service 元素，此元素可把若干个 web services 的定义组合在一个单一的 WSDL 文档中。</p><h2 id="1-2-WSDL-端口"><a href="#1-2-WSDL-端口" class="headerlink" title="1.2 WSDL 端口"></a>1.2 WSDL 端口</h2><p><code>&lt;portType&gt;</code>元素是最重要的 WSDL 元素。它可描述一个 web service、可被执行的操作，以及相关的消息。</p><p>可以把 <code>&lt;portType&gt;</code> 元素比作传统编程语言中的一个<strong>函数库</strong>（或一个模块、或一个<strong>类</strong>）。</p><h2 id="1-3-WSDL-消息"><a href="#1-3-WSDL-消息" class="headerlink" title="1.3 WSDL 消息"></a>1.3 WSDL 消息</h2><p><code>&lt;message&gt;</code>元素定义一个操作的数据元素。每个消息均由一个或多个<strong>部件</strong>组成。可以把这些部件比作传统编程语言中一个函数调用的<strong>参数</strong>。</p><h2 id="1-4-WSDL-types"><a href="#1-4-WSDL-types" class="headerlink" title="1.4 WSDL types"></a>1.4 WSDL types</h2><p><code>&lt;types&gt;</code> 元素定义 web service 使用的数据类型。为了最大程度的平台中立性，WSDL 使用 XML Schema 语法来定义数据类型。</p><h2 id="1-5-WSDL-Bindings"><a href="#1-5-WSDL-Bindings" class="headerlink" title="1.5 WSDL Bindings"></a>1.5 WSDL Bindings</h2><p><code>&lt;bindings&gt;</code> 元素为每个端口定义消息格式和协议细节。</p><h2 id="WSDL-实例"><a href="#WSDL-实例" class="headerlink" title="WSDL 实例"></a>WSDL 实例</h2><p>这是某个 WSDL 文档的简化的片段：</p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">message</span> <span class="attr">name</span>=<span class="string">"getTermRequest"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">part</span> <span class="attr">name</span>=<span class="string">"term"</span> <span class="attr">type</span>=<span class="string">"xs:string"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">message</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">message</span> <span class="attr">name</span>=<span class="string">"getTermResponse"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">part</span> <span class="attr">name</span>=<span class="string">"value"</span> <span class="attr">type</span>=<span class="string">"xs:string"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">message</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">portType</span> <span class="attr">name</span>=<span class="string">"glossaryTerms"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">operation</span> <span class="attr">name</span>=<span class="string">"getTerm"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">message</span>=<span class="string">"getTermRequest"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">output</span> <span class="attr">message</span>=<span class="string">"getTermResponse"</span>/&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">operation</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">portType</span>&gt;</span></div></pre></td></tr></table></figure><p>在这个例子中，<code>&lt;portType&gt;</code>元素把 “glossaryTerms” 定义为某个<em>端口</em> 的名称，把 “getTerm” 定义为某个<strong>操作</strong>的名称。</p><p>操作 “getTerm” 拥有一个名为 “getTermRequest” 的<strong>输入消息</strong>，以及一个名为 “getTermResponse” 的<strong>输出消息</strong>。</p><p><code>&lt;message&gt;</code>元素可定义每个消息的<strong>部件</strong>，以及相关联的数据类型。</p><p>对比传统的编程，<strong>glossaryTerms</strong> 是一个<strong>函数库</strong>，而 “<strong>getTerm</strong>“ 是带有<strong>输入参数</strong> “getTermRequest” 和<strong>返回参数</strong> getTermResponse 的一个<strong>函数</strong>。</p><h1 id="2-WSDL-端口"><a href="#2-WSDL-端口" class="headerlink" title="2. WSDL 端口"></a>2. WSDL 端口</h1><p>端口定义了指向某个 web service 的连接点。</p><h2 id="2-1-操作类型"><a href="#2-1-操作类型" class="headerlink" title="2.1 操作类型"></a>2.1 操作类型</h2><p>请求-响应是最普通的操作类型，不过 WSDL 定义了四种类型：</p><table><thead><tr><th>类型</th><th>定义</th></tr></thead><tbody><tr><td>One-way</td><td>此操作可<strong>接受</strong>消息，但不会返回响应。</td></tr><tr><td>Request-response</td><td>此操作可<strong>接受</strong>一个请求并会返回一个响应</td></tr><tr><td>Solicit-response</td><td>此操作可<strong>发送</strong>一个请求，并会<strong>等待</strong>一个响应。</td></tr><tr><td>Notification</td><td>此操作可<strong>发送</strong>一条消息，但<strong>不会等待响应</strong>。</td></tr></tbody></table><h2 id="2-2-One-Way-操作"><a href="#2-2-One-Way-操作" class="headerlink" title="2.2 One-Way 操作"></a>2.2 One-Way 操作</h2><p>一个 one-way 操作（只有input，没有output）的例子：</p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">message</span> <span class="attr">name</span>=<span class="string">"newTermValues"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">part</span> <span class="attr">name</span>=<span class="string">"term"</span> <span class="attr">type</span>=<span class="string">"xs:string"</span>/&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">part</span> <span class="attr">name</span>=<span class="string">"value"</span> <span class="attr">type</span>=<span class="string">"xs:string"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">message</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">portType</span> <span class="attr">name</span>=<span class="string">"glossaryTerms"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">operation</span> <span class="attr">name</span>=<span class="string">"setTerm"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"newTerm"</span> <span class="attr">message</span>=<span class="string">"newTermValues"</span>/&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">operation</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">portType</span> &gt;</span></div></pre></td></tr></table></figure><p>在这个例子中，端口 “glossaryTerms” 定义了一个名为 “setTerm” 的 one-way 操作。</p><p>这个 “setTerm” 操作可接受新术语表项目消息的输入，这些消息使用一条名为 “newTermValues” 的消息，此消息带有输入参数 “term” 和 “value”。不过，没有为这个操作定义任何输出。</p><hr><h2 id="2-3-Request-Response-操作"><a href="#2-3-Request-Response-操作" class="headerlink" title="2.3 Request-Response 操作"></a>2.3 Request-Response 操作</h2><p>一个 request-response 操作（既有input，又有output）的例子：</p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">message</span> <span class="attr">name</span>=<span class="string">"getTermRequest"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">part</span> <span class="attr">name</span>=<span class="string">"term"</span> <span class="attr">type</span>=<span class="string">"xs:string"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">message</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">message</span> <span class="attr">name</span>=<span class="string">"getTermResponse"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">part</span> <span class="attr">name</span>=<span class="string">"value"</span> <span class="attr">type</span>=<span class="string">"xs:string"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">message</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">portType</span> <span class="attr">name</span>=<span class="string">"glossaryTerms"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">operation</span> <span class="attr">name</span>=<span class="string">"getTerm"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">message</span>=<span class="string">"getTermRequest"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">output</span> <span class="attr">message</span>=<span class="string">"getTermResponse"</span>/&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">operation</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">portType</span>&gt;</span></div></pre></td></tr></table></figure><p>在这个例子中，端口 “glossaryTerms” 定义了一个名为 “getTerm” 的 <em>request-response</em> 操作。</p><p>“getTerm” 操作会请求一个名为 “getTermRequest” 的输入消息，此消息带有一个名为 “<em>term</em>“ 的参数，并将返回一个名为 “<em>getTermResponse</em>“ 的输出消息，此消息带有一个名为 “<em>value</em>“ 的参数。</p><h2 id="3-WSDL-绑定"><a href="#3-WSDL-绑定" class="headerlink" title="3. WSDL 绑定"></a>3. WSDL 绑定</h2><p><strong>WSDL 绑定可为 web service 定义<em>消息格式</em> 和 <em>协议细节</em>。</strong></p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">message</span> <span class="attr">name</span>=<span class="string">"getTermRequest"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">part</span> <span class="attr">name</span>=<span class="string">"term"</span> <span class="attr">type</span>=<span class="string">"xs:string"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">message</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">message</span> <span class="attr">name</span>=<span class="string">"getTermResponse"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">part</span> <span class="attr">name</span>=<span class="string">"value"</span> <span class="attr">type</span>=<span class="string">"xs:string"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">message</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">portType</span> <span class="attr">name</span>=<span class="string">"glossaryTerms"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">operation</span> <span class="attr">name</span>=<span class="string">"getTerm"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">message</span>=<span class="string">"getTermRequest"</span> /&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">output</span> <span class="attr">message</span>=<span class="string">"getTermResponse"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">operation</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">portType</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- WSDL 绑定--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">binding</span> <span class="attr">type</span>=<span class="string">"glossaryTerms"</span> <span class="attr">name</span>=<span class="string">"b1"</span>&gt;</span>   <span class="comment">&lt;!-- type 属性指向用于 binding 的端口(portType)--&gt;</span></div><div class="line"><span class="comment">&lt;!-- style 属性可取值 "rpc" 或 "document". transport 属性定义了要使用的 SOAP 协议--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">soap:binding</span> <span class="attr">style</span>=<span class="string">"document"</span> <span class="attr">transport</span>=<span class="string">"http://schemas.xmlsoap.org/soap/http"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">operation</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">soap:operation</span> <span class="attr">soapAction</span>=<span class="string">"http://example.com/getTerm"</span> /&gt;</span> <span class="comment">&lt;!-- 端口提供的操作--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">soap:body</span> <span class="attr">use</span>=<span class="string">"literal"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">input</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">output</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">soap:body</span> <span class="attr">use</span>=<span class="string">"literal"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">output</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">operation</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">binding</span>&gt;</span></div></pre></td></tr></table></figure><p><em>binding</em> 元素有两个属性 - name 属性和 type 属性。name 属性定义 binding 的名称，而 type 属性指向用于 binding 的端口，在这个例子中是 “glossaryTerms” 端口。</p><p><em>soap:binding</em> 元素有两个属性 - style 属性和 transport 属性。style 属性可取值 “rpc” 或 “document”。在这个例子中我们使用 document。transport 属性定义了要使用的 SOAP 协议。在这个例子中我们使用 HTTP。</p><p><em>operation</em> 元素定义了每个端口提供的操作符。对于每个操作，相应的 SOAP 行为都需要被定义。同时您必须如何对输入和输出进行<strong>编码</strong>。在这个例子中我们使用了 “literal”。</p><h2 id="4-WSDL-和-UDDI"><a href="#4-WSDL-和-UDDI" class="headerlink" title="4. WSDL 和 UDDI"></a>4. WSDL 和 UDDI</h2><p><strong>UDDI 是一种目录服务，企业可以使用它对 Web services 进行注册和搜索。UDDI英文为 “Universal Description, Discovery and Integration”，可译为“通用描述、发现与集成服务”。</strong></p><h3 id="什么是-UDDI？"><a href="#什么是-UDDI？" class="headerlink" title="什么是 UDDI？"></a>什么是 UDDI？</h3><p>UDDI 是一个独立于平台的框架，用于通过使用 Internet 来描述服务，发现企业，并对企业服务进行集成。</p><ul><li>UDDI 指的是通用描述、发现与集成服务</li><li>UDDI 是一种用于存储有关 web services 的信息的目录。</li><li>UDDI 是一种由 WSDL 描述的 web services 界面的目录。</li><li>UDDI 经由 SOAP 进行通信</li><li>UDDI 被构建入了微软的 .NET 平台</li></ul><h3 id="UDDI-基于什么？"><a href="#UDDI-基于什么？" class="headerlink" title="UDDI 基于什么？"></a>UDDI 基于什么？</h3><p>UDDI 使用 W3C 和 IETF* 的因特网标准，比如 XML、HTTP 和 DNS 协议。</p><p>UDDI 使用 WSDL 来描述到达 web services 的界面</p><p>此外，通过采用 SOAP，还可以实现跨平台的编程特性，大家知道，SOAP 是 XML 的协议通信规范，可在 W3C 的网站找到相关的信息。</p><p>*注释：IETF - Internet Engineering Task Force</p><h3 id="UDDI-的好处"><a href="#UDDI-的好处" class="headerlink" title="UDDI 的好处"></a>UDDI 的好处</h3><p>任何规模的行业或企业都能得益于 UDDI。</p><p>在 UDDI 之前，还不存在一种 Internet 标准，可以供企业为它们的企业和伙伴提供有关其产品和服务的信息。也不存在一种方法，来集成到彼此的系统和进程中。</p><p>UDDI 规范帮助我们解决的问题：</p><ul><li>使得在成百万当前在线的企业中发现正确的企业成为可能</li><li>定义一旦首选的企业被发现后如何启动商业</li><li>扩展新客户并增加对目前客户的访问</li><li>扩展销售并延伸市场范围</li><li>满足用户驱动的需要，为在全球 Internet 经济中快速合作的促进来清除障碍</li></ul><h3 id="谁在支持-UDDI？"><a href="#谁在支持-UDDI？" class="headerlink" title="谁在支持 UDDI？"></a>谁在支持 UDDI？</h3><p>UDDI 是一个跨行业的研究项目，由所有主要的平台和软件提供商驱动，比如：Dell, Fujitsu, HP, Hitachi, IBM, Intel, Microsoft, Oracle, SAP, 以及 Sun, 它既是一个市场经营者的团体，也是一个电子商务的领导者。</p><p>已有数百家公司参与了这个 UDDI 团体。</p><hr><p><strong>描述于 W3C 工作草案的完整 WSDL 1.2 语法已列在下面：</strong></p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">wsdl:definitions</span> <span class="attr">name</span>=<span class="string">"nmtoken"</span>? <span class="attr">targetNamespace</span>=<span class="string">"uri"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">namespace</span>=<span class="string">"uri"</span> <span class="attr">location</span>=<span class="string">"uri"</span>/&gt;</span> *</div><div class="line">    <span class="tag">&lt;<span class="name">wsdl:documentation</span> <span class="attr">....</span> /&gt;</span> ?</div><div class="line">  </div><div class="line">    <span class="tag">&lt;<span class="name">wsdl:types</span>&gt;</span> ?</div><div class="line">        <span class="tag">&lt;<span class="name">wsdl:documentation</span> <span class="attr">....</span> /&gt;</span> ?</div><div class="line">        <span class="tag">&lt;<span class="name">xsd:schema</span> <span class="attr">....</span> /&gt;</span> *</div><div class="line">    <span class="tag">&lt;/<span class="name">wsdl:types</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">wsdl:message</span> <span class="attr">name</span>=<span class="string">"ncname"</span>&gt;</span> *</div><div class="line">        <span class="tag">&lt;<span class="name">wsdl:documentation</span> <span class="attr">....</span> /&gt;</span> ?</div><div class="line">        <span class="tag">&lt;<span class="name">part</span> <span class="attr">name</span>=<span class="string">"ncname"</span> <span class="attr">element</span>=<span class="string">"qname"</span>? <span class="attr">type</span>=<span class="string">"qname"</span>?/&gt;</span> *</div><div class="line">    <span class="tag">&lt;/<span class="name">wsdl:message</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">wsdl:portType</span> <span class="attr">name</span>=<span class="string">"ncname"</span>&gt;</span> *</div><div class="line">        <span class="tag">&lt;<span class="name">wsdl:documentation</span> <span class="attr">....</span> /&gt;</span> ?</div><div class="line">        <span class="tag">&lt;<span class="name">wsdl:operation</span> <span class="attr">name</span>=<span class="string">"ncname"</span>&gt;</span> *</div><div class="line">            <span class="tag">&lt;<span class="name">wsdl:documentation</span> <span class="attr">....</span> /&gt;</span> ?</div><div class="line">            <span class="tag">&lt;<span class="name">wsdl:input</span> <span class="attr">message</span>=<span class="string">"qname"</span>&gt;</span> ?</div><div class="line">                <span class="tag">&lt;<span class="name">wsdl:documentation</span> <span class="attr">....</span> /&gt;</span> ?</div><div class="line">            <span class="tag">&lt;/<span class="name">wsdl:input</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">wsdl:output</span> <span class="attr">message</span>=<span class="string">"qname"</span>&gt;</span> ?</div><div class="line">                <span class="tag">&lt;<span class="name">wsdl:documentation</span> <span class="attr">....</span> /&gt;</span> ?</div><div class="line">            <span class="tag">&lt;/<span class="name">wsdl:output</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">wsdl:fault</span> <span class="attr">name</span>=<span class="string">"ncname"</span> <span class="attr">message</span>=<span class="string">"qname"</span>&gt;</span> *</div><div class="line">                <span class="tag">&lt;<span class="name">wsdl:documentation</span> <span class="attr">....</span> /&gt;</span> ?</div><div class="line">            <span class="tag">&lt;/<span class="name">wsdl:fault</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">wsdl:operation</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">wsdl:portType</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">wsdl:serviceType</span> <span class="attr">name</span>=<span class="string">"ncname"</span>&gt;</span> *</div><div class="line">        <span class="tag">&lt;<span class="name">wsdl:portType</span> <span class="attr">name</span>=<span class="string">"qname"</span>/&gt;</span> +</div><div class="line">    <span class="tag">&lt;/<span class="name">wsdl:serviceType</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">wsdl:binding</span> <span class="attr">name</span>=<span class="string">"ncname"</span> <span class="attr">type</span>=<span class="string">"qname"</span>&gt;</span> *</div><div class="line">        <span class="tag">&lt;<span class="name">wsdl:documentation</span> <span class="attr">....</span> /&gt;</span> ?</div><div class="line">        <span class="tag">&lt;<span class="name">--</span> <span class="attr">binding</span> <span class="attr">details</span> <span class="attr">--</span>&gt;</span> *</div><div class="line">        <span class="tag">&lt;<span class="name">wsdl:operation</span> <span class="attr">name</span>=<span class="string">"ncname"</span>&gt;</span> *</div><div class="line">            <span class="tag">&lt;<span class="name">wsdl:documentation</span> <span class="attr">....</span> /&gt;</span> ?</div><div class="line">            <span class="tag">&lt;<span class="name">--</span> <span class="attr">binding</span> <span class="attr">details</span> <span class="attr">--</span>&gt;</span> *</div><div class="line">            <span class="tag">&lt;<span class="name">wsdl:input</span>&gt;</span> ?</div><div class="line">                <span class="tag">&lt;<span class="name">wsdl:documentation</span> <span class="attr">....</span> /&gt;</span> ?</div><div class="line">                <span class="tag">&lt;<span class="name">--</span> <span class="attr">binding</span> <span class="attr">details</span> <span class="attr">--</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">wsdl:input</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">wsdl:output</span>&gt;</span> ?</div><div class="line">                <span class="tag">&lt;<span class="name">wsdl:documentation</span> <span class="attr">....</span> /&gt;</span> ?</div><div class="line">                <span class="tag">&lt;<span class="name">--</span> <span class="attr">binding</span> <span class="attr">details</span> <span class="attr">--</span>&gt;</span> *</div><div class="line">            <span class="tag">&lt;/<span class="name">wsdl:output</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">wsdl:fault</span> <span class="attr">name</span>=<span class="string">"ncname"</span>&gt;</span> *</div><div class="line">                <span class="tag">&lt;<span class="name">wsdl:documentation</span> <span class="attr">....</span> /&gt;</span> ?</div><div class="line">                <span class="tag">&lt;<span class="name">--</span> <span class="attr">binding</span> <span class="attr">details</span> <span class="attr">--</span>&gt;</span> *</div><div class="line">            <span class="tag">&lt;/<span class="name">wsdl:fault</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">wsdl:operation</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">wsdl:binding</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">wsdl:service</span> <span class="attr">name</span>=<span class="string">"ncname"</span> <span class="attr">serviceType</span>=<span class="string">"qname"</span>&gt;</span> *</div><div class="line">        <span class="tag">&lt;<span class="name">wsdl:documentation</span> <span class="attr">....</span> /&gt;</span> ?</div><div class="line">        <span class="tag">&lt;<span class="name">wsdl:port</span> <span class="attr">name</span>=<span class="string">"ncname"</span> <span class="attr">binding</span>=<span class="string">"qname"</span>&gt;</span> *</div><div class="line">            <span class="tag">&lt;<span class="name">wsdl:documentation</span> <span class="attr">....</span> /&gt;</span> ?</div><div class="line">            <span class="tag">&lt;<span class="name">--</span> <span class="attr">address</span> <span class="attr">details</span> <span class="attr">--</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">wsdl:port</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">wsdl:service</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">wsdl:definitions</span>&gt;</span></div></pre></td></tr></table></figure><p>可以去下述站点查看常用的天气、手机号归属地、火车时刻表等服务：</p><p><a href="http://www.webxml.com.cn/zh_cn/web_services.aspx" target="_blank" rel="external">http://www.webxml.com.cn/zh_cn/web_services.aspx</a></p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Apache CXF 使用 - 04 -简介 -  如何开发一个服务的客户端]]></title>
      <url>houzw.github.io.git/2016/10/31/Apache%20CXF%20%E4%BD%BF%E7%94%A8%20-%2004%20-%E7%AE%80%E4%BB%8B%20-%20%20%E5%A6%82%E4%BD%95%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AA%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%AE%A2%E6%88%B7%E7%AB%AF/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:01 GMT+0800 (中国标准时间) --><h2 id="Apache-CXF-使用-04-简介-如何开发一个服务的客户端"><a href="#Apache-CXF-使用-04-简介-如何开发一个服务的客户端" class="headerlink" title="Apache CXF 使用 - 04 -简介 -  如何开发一个服务的客户端"></a>Apache CXF 使用 - 04 -简介 - 如何开发一个服务的客户端</h2><h3 id="WSDL2Java-生成客户端代码"><a href="#WSDL2Java-生成客户端代码" class="headerlink" title="WSDL2Java 生成客户端代码"></a>WSDL2Java 生成客户端代码</h3><p>最常见的情景是你有一个你能够或不能够管理的服务，且此服务有一个WSDL文件。在这种情况下需要从WSDL生成客户端（client），这为你提供了一个与服务交互的强类型的接口。一旦生成客户端代码，最典型的应用是：</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">HelloService service = <span class="keyword">new</span> HelloService();</div><div class="line">Hello client = service.getHelloHttpPort();</div><div class="line"></div><div class="line">String result = client.sayHi(<span class="string">"Joe"</span>);</div></pre></td></tr></table></figure><p>WSDL2Java 工具可以从WSDL生成JAX-WS客户端代码. WSDL2java有三种运行方式:</p><ul><li><a href="http://cxf.apache.org/docs/wsdl-to-java.html" target="_blank" rel="external">命令行</a></li><li><a href="http://cxf.apache.org/docs/using-cxf-with-maven.html" target="_blank" rel="external">Maven Plugin</a> - 推荐</li><li>WSDL2Java API</li></ul><p>更多信息查看 <a href="http://cxf.apache.org/docs/developing-a-consumer.html" target="_blank" rel="external">Developing a JAX-WS consumer</a></p><h4 id="JAX-WS-Proxy"><a href="#JAX-WS-Proxy" class="headerlink" title="JAX-WS Proxy"></a>JAX-WS Proxy</h4><p>除了直接使用wsdl2java生成的客户端存根（stub client），也可以使用<code>Service.create</code>来创建<code>Service</code>的实例。下述代码说明了此过程：</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">import</span> java.net.URL;</div><div class="line"><span class="keyword">import</span> javax.xml.ws.Service;</div><div class="line">...</div><div class="line"></div><div class="line">URL wsdlURL = <span class="keyword">new</span> URL(<span class="string">"http://localhost/hello?wsdl"</span>);</div><div class="line">QName SERVICE_NAME = <span class="keyword">new</span> QName(<span class="string">"http://apache.org/hello_world_soap_http"</span>, <span class="string">"SOAPService"</span>);</div><div class="line">Service service = Service.create(wsdlURL, SERVICE_NAME);</div><div class="line">Greeter client = service.getPort(Greeter.class);</div><div class="line">String result = client.greetMe(<span class="string">"test"</span>);</div></pre></td></tr></table></figure><h4 id="JAX-WS-Dispatch-APIs"><a href="#JAX-WS-Dispatch-APIs" class="headerlink" title="JAX-WS Dispatch APIs"></a>JAX-WS Dispatch APIs</h4><p>JAX-WS 提供了一种“dispatch”（派遣、调度）机制来使没有生成客户端代码的服务的动态调用更加简单。使用Dispatch 机制你可以创建消息 (消息可以是 JAXB 对象, Source 对象, 或 SAAJ Message) ，并将它们调度到服务器（ dispatch them to the server）.例如:</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">import</span> java.net.URL;</div><div class="line"><span class="keyword">import</span> javax.xml.transform.Source;</div><div class="line"><span class="keyword">import</span> javax.xml.ws.Dispatch;</div><div class="line"><span class="keyword">import</span> javax.xml.ws.Service;</div><div class="line">...</div><div class="line"></div><div class="line">URL wsdlURL = <span class="keyword">new</span> URL(<span class="string">"http://localhost/hello?wsdl"</span>);</div><div class="line">Service service = Service.create(wsdlURL, <span class="keyword">new</span> QName(<span class="string">"HelloService"</span>));</div><div class="line">Dispatch&lt;Source&gt; disp = service.createDispatch(<span class="keyword">new</span> QName(<span class="string">"HelloPort"</span>), Source.class, Service.Mode.PAYLOAD);</div><div class="line"></div><div class="line">Source request = <span class="keyword">new</span> StreamSource(<span class="string">"&lt;hello/&gt;"</span>)</div><div class="line">Source response = disp.invoke(request);</div></pre></td></tr></table></figure><p>注：也可以在没有WSDL的情况下使用dispatch。</p><h4 id="Simple-Frontend-Client-Proxy"><a href="#Simple-Frontend-Client-Proxy" class="headerlink" title="Simple Frontend Client Proxy"></a>Simple Frontend Client Proxy</h4><p>如果使用 simple frontend开发了一个服务,你可以使用 ClientProxyFactoryBean 的API 来为你的服务创建一个java代理客户端 . 这样，你就可以使用服务接口与你的服务进行对话. 参考 <a href="http://cxf.apache.org/docs/simple-frontend.html" target="_blank" rel="external">Simple Frontend</a>.</p><h4 id="动态客户端-Dynamic-Client"><a href="#动态客户端-Dynamic-Client" class="headerlink" title="动态客户端 Dynamic Client"></a>动态客户端 Dynamic Client</h4><p>CXF包含一个允许你激活操作和为操作传递参数的客户端接口。例如:</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">Client client = ....;</div><div class="line">Object[] result = client.invoke(<span class="string">"sayHi"</span>, <span class="string">"Dan"</span>);</div></pre></td></tr></table></figure><p>有两种方式在运行时创建Clients .第一种是使用 <code>ClientFactoryBean</code> 或 <code>JaxWsClientFactoryBean</code> 类. 这将为服务SEI（service endpoint interface）创建一些代理对象. 注意，这些代理不能够处理复杂对象.</p><p>第二种是使用<code>DynamicClientFactory</code>或其子类。<code>DynamicClientFactory</code>进一步为WSDL中描述的复杂对象生成和编译JAXB POJO，在运行时通过反射使用。</p><p>这在你将CXF与动态语言，如Groovy，一起使用时特别有用 ，但直接从java中使用反射也是可以的.</p><p>更多信息参考: <a href="http://cxf.apache.org/docs/dynamic-clients.html" target="_blank" rel="external">Dynamic Clients</a></p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Apache CXF 使用 - 03 -简介 -  如何开发一个服务]]></title>
      <url>houzw.github.io.git/2016/10/31/Apache%20CXF%20%E4%BD%BF%E7%94%A8%20-%2003%20-%E7%AE%80%E4%BB%8B%20-%20%20%E5%A6%82%E4%BD%95%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AA%E6%9C%8D%E5%8A%A1/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:01 GMT+0800 (中国标准时间) --><h2 id="Apache-CXF-使用-03-简介-如何开发一个服务"><a href="#Apache-CXF-使用-03-简介-如何开发一个服务" class="headerlink" title="Apache CXF 使用 - 03 -简介 -  如何开发一个服务"></a>Apache CXF 使用 - 03 -简介 - 如何开发一个服务</h2><blockquote><p><a href="http://cxf.apache.org/docs/how-do-i-develop-a-service.html" target="_blank" rel="external">How do I develop a service?</a></p><p><a href="https://my.oschina.net/huangyong/blog/286439" target="_blank" rel="external">Web Service 那点事儿（2）—— 使用 CXF 开发 SOAP 服务</a></p></blockquote><p>CXF 提供了多种建立service的方式</p><h3 id="service的类型"><a href="#service的类型" class="headerlink" title="service的类型"></a>service的类型</h3><p>CXF支持三大类service：</p><ul><li>SOAP</li><li>REST-ful - 参考 <a href="http://cxf.apache.org/docs/restful-services.html" target="_blank" rel="external">http://cxf.apache.org/docs/restful-services.html</a></li><li>CORBA</li></ul><h3 id="从Java建立JAX-WS注解服务（JAX-WS-Annotated-Services-from-Java）"><a href="#从Java建立JAX-WS注解服务（JAX-WS-Annotated-Services-from-Java）" class="headerlink" title="从Java建立JAX-WS注解服务（JAX-WS Annotated Services from Java）"></a>从Java建立JAX-WS注解服务（JAX-WS Annotated Services from Java）</h3><p>JAX-WS API包括了一系列用来建立服务的<a href="https://jax-ws.java.net/nonav/2.2.8/docs/ch03.html#users-guide-annotations" target="_blank" rel="external">注解</a>。这些服务基于一个包含一组操作的类。</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="meta">@WebService</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Hello</span> </span>&#123;</div><div class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">sayHi</span><span class="params">(String name)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="string">"Hello "</span> + name;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>JAX-WS 还包括以下注解：</p><ul><li><code>@WebMethod</code> - 允许自定义操作的名称，将某操作排除在服务之外等等；</li><li><code>@WebParam</code> - 允许自定义参数的名称、命名空间、方向（in/out)等；(所以如果没有加注解，编译后的类中，参数将被命名为arg0…)</li><li><code>@WebResult</code> - 允许自定义服务调用的返回值</li></ul><p>Data is marshalled from XML to Java and vice versa via the <a href="http://cxf.apache.org/docs/jaxb.html" target="_blank" rel="external">JAXB data-binding</a>.</p><p>更多情况下使用<strong>接口和其实现类</strong>进行service的开发：</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">//接口</span></div><div class="line"><span class="keyword">import</span> javax.jws.WebService;</div><div class="line"></div><div class="line"><span class="meta">@WebService</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">HelloService</span> </span>&#123;</div><div class="line">    <span class="function">String <span class="title">say</span><span class="params">(String name)</span></span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//实现类</span></div><div class="line"><span class="keyword">import</span> javax.jws.WebService;</div><div class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</div><div class="line"></div><div class="line"><span class="meta">@WebService</span></div><div class="line"><span class="meta">@Component</span> <span class="comment">//或 @Service</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloServiceImpl</span> <span class="keyword">implements</span> <span class="title">HelloService</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">say</span><span class="params">(String name)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="string">"hello "</span> + name;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="服务发布："><a href="#服务发布：" class="headerlink" title="服务发布："></a>服务发布：</h2><h3 id="JAX-WS标准端点（Endpoint）API"><a href="#JAX-WS标准端点（Endpoint）API" class="headerlink" title="JAX-WS标准端点（Endpoint）API"></a>JAX-WS标准端点（Endpoint）API</h3><h3 id="JaxWsServer-类-（JaxWsServerFactoryBean-）"><a href="#JaxWsServer-类-（JaxWsServerFactoryBean-）" class="headerlink" title="JaxWsServer 类 （JaxWsServerFactoryBean ）"></a>JaxWsServer 类 （JaxWsServerFactoryBean ）</h3><h3 id="CXF的XML配置格式之-lt-jaxws-endpoint-gt-（更简便）"><a href="#CXF的XML配置格式之-lt-jaxws-endpoint-gt-（更简便）" class="headerlink" title="CXF的XML配置格式之&lt;jaxws:endpoint ... /&gt;  （更简便）"></a>CXF的XML配置格式之<code>&lt;jaxws:endpoint ... /&gt;</code> （更简便）</h3><h3 id="CXF的XML配置格式之-lt-jaxws-server-gt"><a href="#CXF的XML配置格式之-lt-jaxws-server-gt" class="headerlink" title="CXF的XML配置格式之&lt;jaxws:server .../&gt;"></a>CXF的XML配置格式之<code>&lt;jaxws:server .../&gt;</code></h3><p>更多信息: <a href="http://cxf.apache.org/docs/a-simple-jax-ws-service.html" target="_blank" rel="external">A simple JAX-WS service</a>, <a href="http://cxf.apache.org/docs/developing-a-service.html" target="_blank" rel="external">Developing a JAX-WS Service</a> (更深入), <a href="http://cxf.apache.org/docs/writing-a-service-with-spring.html" target="_blank" rel="external">Writing a service with Spring</a></p><h4 id="从WSDL建立JAX-WS注解服务（JAX-WS-Annotated-Services-from-WSDL）"><a href="#从WSDL建立JAX-WS注解服务（JAX-WS-Annotated-Services-from-WSDL）" class="headerlink" title="从WSDL建立JAX-WS注解服务（JAX-WS Annotated Services from WSDL）"></a>从WSDL建立JAX-WS注解服务（JAX-WS Annotated Services from WSDL）</h4><p>如果已有一个服务的WSDL文件，或者希望先编写WSDL文件然后生成相关类，CXF提供了多种工具来实现此目的。</p><p><strong>WSDL2Java</strong> 工具将从WSDL文件生成一个JAX-WS注解的服务类和服务器存根（server stub）。可以从三种方式运行此工具：</p><ul><li><a href="http://cxf.apache.org/docs/wsdl-to-java.html" target="_blank" rel="external">命令行</a></li><li><a href="http://cxf.apache.org/docs/using-cxf-with-maven.html" target="_blank" rel="external">Maven 插件</a></li><li>WSDL2Java API</li></ul><p>也有<a href="http://cxf.apache.org/docs/simple-frontend.html" target="_blank" rel="external">Simple Frontend</a>允许基于XML配置文件而非注解来创建service</p><h4 id="JAX-WS-Providers"><a href="#JAX-WS-Providers" class="headerlink" title="JAX-WS Providers"></a>JAX-WS Providers</h4><p>JAX-WS Providers 允许你创建工作在消息层（message level ）的service——与工作在操作层（operation level ）注解类相对应。其有一个单独的<code>invoke</code>操作来接收消息数据（message payload），即SOAP消息体，或者整个消息本身（SOAP Envelope）。</p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="meta">@WebServiceProvider</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloProvider</span> </span>&#123;</div><div class="line">  <span class="function"><span class="keyword">public</span> Source <span class="title">invoke</span><span class="params">(Source request)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> ....;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h4><p>CXF也提供了一个javascript模块与Java Rhino库一起建立service。参考：<a href="http://cxf.apache.org/docs/javascript.html" target="_blank" rel="external">http://cxf.apache.org/docs/javascript.html</a></p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Apache CXF Web Service开发笔记 - 01]]></title>
      <url>houzw.github.io.git/2016/10/31/Apache%20CXF%20Web%20Service%E5%BC%80%E5%8F%91%20-%2001/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:01 GMT+0800 (中国标准时间) --><h1 id="Apache-CXF-Web-Service开发笔记-01"><a href="#Apache-CXF-Web-Service开发笔记-01" class="headerlink" title="Apache CXF Web Service开发笔记 - 01"></a>Apache CXF Web Service开发笔记 - 01</h1><blockquote><p>Naveen Balani, Rajeev Hathi. Apache CXF Web Service Development - Develop and deploy SOAP and RESTful Web Services. 2009 Packt Publishing</p></blockquote><h2 id="熟悉CXF"><a href="#熟悉CXF" class="headerlink" title="熟悉CXF"></a>熟悉CXF</h2><h3 id="Apache-CXF-介绍"><a href="#Apache-CXF-介绍" class="headerlink" title="Apache CXF 介绍"></a>Apache CXF 介绍</h3><blockquote><p><a href="https://www.ibm.com/developerworks/cn/education/java/j-cxf/" target="_blank" rel="external">https://www.ibm.com/developerworks/cn/education/java/j-cxf/</a></p></blockquote><p>Apache CXF 是一个开源的 Services 框架，CXF 帮助您利用 Frontend 编程 API 来构建和开发 Services ，像 JAX-WS 。这些 Services 可以支持多种协议，比如：SOAP、XML/HTTP、RESTful HTTP 或者 CORBA ，并且可以在多种传输协议上运行，比如：HTTP、JMS 或者 JBI，CXF 大大简化了 Services 的创建，同时它继承了 XFire 传统，一样可以天然地和 Spring 进行无缝集成。</p><p>CXF 继承了 Celtix 和 XFire 两大开源项目的精华，提供了对 JAX-WS 全面的支持，并且提供了多种 Binding 、DataBinding、Transport 以及各种 Format 的支持，并且可以根据实际项目的需要，采用代码优先（Code First）或者 WSDL 优先（WSDL First）来轻松地实现 Web Services 的发布和使用。</p><h2 id="相关术语"><a href="#相关术语" class="headerlink" title="相关术语"></a>相关术语</h2><ul><li>JAX-WS——Java API for XML Web Services</li><li>WSDL——Web Services Description Language 网络服务描述语言</li><li>MTOM——Message Transmission Optimization Mechanism</li><li>JAXB——Java Architecture for XML Binding</li><li>SAAJ——SOAP with Attachments API for Java</li><li>WS-I——Web Services Interoperability industry consortium</li></ul><h3 id="Web-service-标准技术"><a href="#Web-service-标准技术" class="headerlink" title="Web service 标准技术"></a>Web service 标准技术</h3><h4 id="XML-（可扩展标记语言，Extensible-Markup-Language）"><a href="#XML-（可扩展标记语言，Extensible-Markup-Language）" class="headerlink" title="XML （可扩展标记语言，Extensible Markup Language）"></a>XML （可扩展标记语言，Extensible Markup Language）</h4><p>XML规范或描述了用于交换的数据的格式。这些数据采用标签或元素以一种层次结构实现结构化表达。</p><blockquote><p>XML is a markup language that specifies or describes the format of the data to be exchanged between two parties. The data is significantly structured as tags or elements in a hierarchical order.</p></blockquote><p>与XML文档相关的标准技术：</p><ul><li><p>XML namespace —— XML命名空间是XML文档提供唯一的命名元素和属性的标准。它与Java中的包（package）概念类似，用于解决不同类之间的命名冲突。XML namespace 用<code>xmlns</code>属性声明，其值必须是一个URI（Uniform Resource Identifier）</p></li><li><p>XML schema —— XML模式提供了定义XML文档结构、内容和语义的一组方法。XML Schema 数据模型包括词汇 vocabulary (元素和属性名 element and attribute names), 内容模型 (关系与结构relationships and structure), 和数据类型.</p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">xs:schema</span> <span class="attr">xmlns:xs</span>=<span class="string">"http://www.w3.org/2001/XMLSchema"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">"address"</span> <span class="attr">type</span>=<span class="string">"Address"</span>/&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">xs:complexType</span> <span class="attr">name</span>=<span class="string">"Address"</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">xs:sequence</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">"addressLine1"</span> <span class="attr">type</span>=<span class="string">"xs:string"</span>/&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">"addressLine2"</span> <span class="attr">type</span>=<span class="string">"xs:string"</span>/&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">"city"</span> <span class="attr">type</span>=<span class="string">"xs:string"</span>/&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">"state"</span> <span class="attr">type</span>=<span class="string">"xs:string"</span>/&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">"country"</span> <span class="attr">type</span>=<span class="string">"xs:string"</span>/&gt;</span></div><div class="line">     <span class="tag">&lt;/<span class="name">xs:sequence</span>&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">xs:complexType</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">xs:schema</span>&gt;</span></div></pre></td></tr></table></figure><p>上述例子中，<code>xs</code> 表示 XML Schema的命名空间. <code>address</code>表示一个类型为<code>Address</code>的元素，而<code>Address</code>是一个<code>complexType</code>（类似于Java中的class），其由<code>string</code>类型的<code>addressLine1</code>,<code>addressLine2</code>, <code>city</code> ，<code>state</code>,和”country”组成。</p></li></ul><h4 id="SOAP-简单对象访问协议，Simple-Object-Access-Protocol"><a href="#SOAP-简单对象访问协议，Simple-Object-Access-Protocol" class="headerlink" title="SOAP (简单对象访问协议，Simple Object Access Protocol)"></a>SOAP (简单对象访问协议，Simple Object Access Protocol)</h4><p>SOAP是基于网络（主要是HTTP协议）交换XML信息的一种协议。SOAP消息格式由一个SOAP Envelope（封套、封装）包裹所有请求信息组成。SOAP Envelope又由可选的报头（消息头）和报体（header、body）组成。报头中可以包括诸如身份认证、事务、路由等方面的信息。Body 元素中包含发送给最终目标节点的信息、数据。</p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line">&lt;?xml version="1.0"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">soapenv:Envelope</span> <span class="attr">xmlns:soapenv</span>=<span class="string">"http://schemas.xmlsoap.org/soap/envelope/"</span> <span class="attr">xmlns:ns1</span>=<span class="string">"http://apress.com/beginjava6/address"</span></span></div><div class="line"><span class="attr">xmlns:xsd</span>=<span class="string">"http://www.w3.org/2001/XMLSchema"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">soapenv:Header</span>&gt;</span><span class="tag">&lt;/<span class="name">soapenv:Header</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">soapenv:Body</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">ns1:Address</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">ns1:addressLine1</span>&gt;</span>1501ACity<span class="tag">&lt;/<span class="name">ns1:addressLine1</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">ns1:addressLine2</span>&gt;</span>UCity<span class="tag">&lt;/<span class="name">ns1:addressLine2</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">ns1:city</span>&gt;</span>SFO<span class="tag">&lt;/<span class="name">ns1:city</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">ns1:state</span>&gt;</span>CA<span class="tag">&lt;/<span class="name">ns1:state</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">ns1:country</span>&gt;</span>US<span class="tag">&lt;/<span class="name">ns1:country</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">ns1:Address</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">soapenv:Body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">soapenv:Envelope</span>&gt;</span></div></pre></td></tr></table></figure><h4 id="WSDL-网络服务描述语言，Web-Services-Description-language"><a href="#WSDL-网络服务描述语言，Web-Services-Description-language" class="headerlink" title="WSDL (网络服务描述语言，Web Services Description language)"></a>WSDL (网络服务描述语言，Web Services Description language)</h4><blockquote><p>最好是参考 <a href="http://www.w3school.com.cn/wsdl/index.asp" target="_blank" rel="external">http://www.w3school.com.cn/wsdl/index.asp</a></p></blockquote><p>WSDL是基于标准XML来描述Web Service的语言。WSDL中，WebServices被描述为一组能进行消息交换的交流端点（endpoint），这些处理消息的网络端点被称为端口(port)。一个端点包含两个部分：</p><ul><li><p>由服务和消息（输入输出参数类型）提供的用于激活服务的操作的抽象定义（abstract definitions of operations）。一组抽象定义被当做端口类型</p><blockquote><p>the abstract definitions of operations (similar to methods in Java) provided by the services and messages (input and output parameter types for methods) which are needed to invoke the service. The set of abstract operation definitions is referred to as port type.</p></blockquote></li><li><p>抽象定义与具体网络协议的具体绑定。</p><blockquote><p>the concrete binding of those abstract definitions of operations to concrete network protocol, where the service is located, and message format for the service.</p></blockquote></li></ul><p>WSDL绑定描述了服务是如何与消息协议，特别是SOAP协议绑定的。WSDL文档通常由WebService框架提供的工具生成。</p><h4 id="REST-表述性状态转移，Representational-State-Transfer"><a href="#REST-表述性状态转移，Representational-State-Transfer" class="headerlink" title="REST (表述性状态转移，Representational State Transfer)"></a>REST (表述性状态转移，Representational State Transfer)</h4><p>REST是一种架构风格——在网络上表述资源的一组指导（a set of guidelines for exposing resources over the Web），而非技术或标准。REST架构风格与用URI表达的资源相关。具体参考：<a href="http://www.ruanyifeng.com/blog/2011/09/restful" target="_blank" rel="external">理解RESTful架构</a></p><h4 id="服务注册-Service-Registry"><a href="#服务注册-Service-Registry" class="headerlink" title="服务注册 Service Registry"></a>服务注册 Service Registry</h4><p>Service Registry 提供了一种查找web 服务的机制。传统上，一般使用UDDI 规范来实现服务注册和发现，但是其没有被相关企业大量采用。各个企业采用了自己的一套服务注册版本。</p><h4 id="web-services介绍"><a href="#web-services介绍" class="headerlink" title="web services介绍"></a>web services介绍</h4><p>W3C对Web Service的定义：</p><blockquote><p>A Web service is a software system identified by a URI whose public interfaces and bindings are defined and described using XML (specifically WSDL). Its definition can be discovered by other software systems. These systems may then interact with the web service in a manner prescribed by its definition, using XML-based messages conveyed by Internet protocols.</p></blockquote><ul><li>Web Services 是应用程序组件</li><li>Web Services 使用开放协议进行通信</li><li>Web Services 是独立的（self-contained）并可自我描述</li><li>Web Services 可通过使用UDDI来发现</li><li>Web Services 可被其他应用程序使用</li><li>XML 是 Web Services 的基础</li></ul><p>Web Service 可以被看做是一个可被发布、定位、通过网络激活的独立的、可自我描述的、模块化的应用程序。Web services最大的好处是互操作性。</p><p>web service包含三种类型角色： service consumer, service provider, 可选的 service registry。</p><p>在基于SOAP的web service中，服务提供者通过网络或服务注册发布契约（contract），也即WSDL文件。消费者根据WSDL文件利用框架提供的工具生成客户端代码来与服务端交互。</p><p>而在RESTful风格的web service中，service consumer和service provider之间不会有正式的契约（contract），服务请求者需要知道消息的类型，如XML或JSON，以及支持的操作。服务提供者通过标准HTTP方法，如GET或POST方法来暴露相关操作，然后请求者利用资源的URI通过HTTP协议来激活相应的方法获取资源。</p><h4 id="Web-service-SOAP-通信风格（communication-styles）"><a href="#Web-service-SOAP-通信风格（communication-styles）" class="headerlink" title="Web service SOAP 通信风格（communication styles）"></a>Web service SOAP 通信风格（communication styles）</h4><p>web service SOAP communication style在服务提供者和服务消费者之间的XML消息通信中扮演着重要的角色。</p><p>目前有两种SOAP消息风格（SOAP message styles）类型：<strong>Document</strong> 和<strong>RPC</strong>。</p><p>SOAP message styles作为SOAP绑定在WSDL文档中定义。SOAP绑定可以编码或文本方式使用。</p><p>Document 风格，将通常用XML schema定义生成的具有良好约定（contracts）的XML文档作为有效载荷数据（ payloads）。为了获得更好的互操作性，文本文档风格是首选方式。</p><p>RPC (远程过程调用，Remote Procedure Call) 风格预示着SOAP消息体（body）包含一个方法的XML表达。</p><h4 id="JAX-WS-Java-API-for-XML-Web-Services"><a href="#JAX-WS-Java-API-for-XML-Web-Services" class="headerlink" title="JAX-WS(Java API for XML Web Services)"></a>JAX-WS(Java API for XML Web Services)</h4><h4 id="JAXB（Java-Architecture-for-XML-Binding）"><a href="#JAXB（Java-Architecture-for-XML-Binding）" class="headerlink" title="JAXB（Java Architecture for XML Binding）"></a>JAXB（Java Architecture for XML Binding）</h4><p>通过提供一种将XML模式映射到Java代码表达的便利方式，JAXB具备了数据绑定能力。</p><blockquote><p>JAXB offers data binding capabilities by providing a convenient way to map XML schema to a epresentation in Java code.</p></blockquote><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Apache CXF 使用教程 - 02 - Maven]]></title>
      <url>houzw.github.io.git/2016/10/26/Apache%20CXF%20%E4%BD%BF%E7%94%A8%20-%2002%20-%20Maven/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:01 GMT+0800 (中国标准时间) --><h1 id="Apache-CXF-使用-工具-Maven"><a href="#Apache-CXF-使用-工具-Maven" class="headerlink" title="Apache CXF 使用 - 工具 - Maven"></a>Apache CXF 使用 - 工具 - Maven</h1><h2 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h2><p>要使用Maven来进行CXF开发，在POM文件中添加依赖：<br></p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">cxf.version</span>&gt;</span>3.1.8<span class="tag">&lt;/<span class="name">cxf.version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!--Java API for XML Web Services --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.cxf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cxf-rt-frontend-jaxws<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;cxf.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!--Java API for RESTful Web Services --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.cxf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cxf-rt-frontend-jaxrs<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;cxf.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.cxf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cxf-rt-transports-http<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;cxf.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- Jetty is needed if you're are not using the CXFServlet --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.cxf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cxf-rt-transports-http-jetty<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;cxf.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">   <span class="comment">&lt;!--JSON for RESTful Web Services --&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">       <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.jaxrs<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">       <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-jaxrs-json-provider<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">       <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div></pre></td></tr></table></figure><p></p><h2 id="额外依赖"><a href="#额外依赖" class="headerlink" title="额外依赖"></a>额外依赖</h2><p>根据CXF的使用，添加需要的依赖：<br></p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">&lt;!-- Use dependency blocks for these CXF artifact Ids just as above --&gt;</div><div class="line">cxf-rt-core</div><div class="line">cxf-rt-frontend-simple</div><div class="line">cxf-rt-frontend-jaxws</div><div class="line">cxf-rt-databinding-aegis</div><div class="line">cxf-rt-transports-local</div><div class="line">cxf-rt-transports-http</div><div class="line">cxf-rt-transports-http-jetty</div><div class="line">cxf-rt-transports-jms</div><div class="line">cxf-rt-management</div><div class="line">cxf-common-utilities</div></pre></td></tr></table></figure><p></p><h2 id="Maven-Snapshot-Repository"><a href="#Maven-Snapshot-Repository" class="headerlink" title="Maven Snapshot Repository"></a>Maven Snapshot Repository</h2><p>若需使用最新版本的CXF，可以添加 Apache 的Snapshot仓库：<br></p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">repositories</span>&gt;</span></div><div class="line">   ...other repos...</div><div class="line">   <span class="tag">&lt;<span class="name">repository</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>apache-snapshots<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">name</span>&gt;</span>Apache SNAPSHOT Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://repository.apache.org/snapshots/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span></div><div class="line">   ...other repos...</div><div class="line">   <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></div><div class="line">      ...same repo as above...</div><div class="line">   <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>插件仓库（plugin repositories ）部分是必须的，因为用于WSDL2Java, Java2WS等任务的 cxf-codegen-plugin需要从地址下载。.</p><h2 id="Maven-Java2WS-插件"><a href="#Maven-Java2WS-插件" class="headerlink" title="Maven Java2WS 插件"></a>Maven Java2WS 插件</h2><p>此插件用于从 Java 类生成 WSDL相关代码, 包括用于启动web service 的服务端代码和客户端代码.<br>插件的POM内容:<br></p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.cxf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cxf-java2ws-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;cxf.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.cxf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cxf-rt-frontend-jaxws<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;cxf.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.cxf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cxf-rt-frontend-simple<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;cxf.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">executions</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>process-classes<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">phase</span>&gt;</span>process-classes<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">className</span>&gt;</span>org.apache.hello_world.Greeter<span class="tag">&lt;/<span class="name">className</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">genWsdl</span>&gt;</span>true<span class="tag">&lt;/<span class="name">genWsdl</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">verbose</span>&gt;</span>true<span class="tag">&lt;/<span class="name">verbose</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>java2ws<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>选项及其默认值:<br></p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">className</span>&gt;</span>...<span class="tag">&lt;/<span class="name">className</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">classpath</span>&gt;</span>...<span class="tag">&lt;/<span class="name">classpath</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">outputFile</span>&gt;</span>...<span class="tag">&lt;/<span class="name">outputFile</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">genWsdl</span>&gt;</span>true<span class="tag">&lt;/<span class="name">genWsdl</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">genServer</span>&gt;</span>false<span class="tag">&lt;/<span class="name">genServer</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">genClient</span>&gt;</span>false<span class="tag">&lt;/<span class="name">genClient</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">genWrapperbean</span>&gt;</span>false<span class="tag">&lt;/<span class="name">genWrapperbean</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">frontend</span>&gt;</span>jaxws<span class="tag">&lt;/<span class="name">frontend</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">databinding</span>&gt;</span>jaxb<span class="tag">&lt;/<span class="name">databinding</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">serviceName</span>&gt;</span>...<span class="tag">&lt;/<span class="name">serviceName</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">soap12</span>&gt;</span>false<span class="tag">&lt;/<span class="name">soap12</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">targetNameSpace</span>&gt;</span>...<span class="tag">&lt;/<span class="name">targetNameSpace</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">verbose</span>&gt;</span>false<span class="tag">&lt;/<span class="name">verbose</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">quiet</span>&gt;</span>false<span class="tag">&lt;/<span class="name">quiet</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">attachWsdl</span>&gt;</span>true<span class="tag">&lt;/<span class="name">attachWsdl</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">address</span>&gt;</span>...<span class="tag">&lt;/<span class="name">address</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>更详细的配置查看 <a href="http://cxf.apache.org/docs/java-to-ws.html" target="_blank" rel="external">Java to WS</a>页面.<br>生成的文件默认为：<br><code>${project.build.directory}/generated/wsdl/${className}.wsdl</code></p><h2 id="Maven-cxf-codegen-plugin-WSDL-to-Java"><a href="#Maven-cxf-codegen-plugin-WSDL-to-Java" class="headerlink" title="Maven cxf-codegen-plugin (WSDL to Java)"></a>Maven cxf-codegen-plugin (WSDL to Java)</h2><p>CXF 包含一个从 WSDL生成Java代码的插件，其maven配置为：<br></p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.cxf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cxf-codegen-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;cxf.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">executions</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>generate-sources<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">phase</span>&gt;</span>generate-sources<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">sourceRoot</span>&gt;</span>$&#123;project.build.directory&#125;/generated/cxf<span class="tag">&lt;/<span class="name">sourceRoot</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">wsdlOptions</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">wsdlOption</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">wsdl</span>&gt;</span>$&#123;basedir&#125;/src/main/resources/myService.wsdl<span class="tag">&lt;/<span class="name">wsdl</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">wsdlOption</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">wsdlOptions</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>wsdl2java<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>本例中在 maven 的<code>generate-sources</code>阶段（phase）运行了 wsdl2java 目标（goal）. 通过运行 mvn generate-sources, CXF 将在<code>&lt;sourceRoot&gt;</code>目录生成指定的构件（ artifacts）. 每个 <code>&lt;wsdlOption&gt;</code> 元素与一个用于生成构件的WSDL 相对应。WSDL的位置由<code>&lt;wsdl&gt;</code> 选项指定. 根据 Maven 的标准目录结构, 如果想将WSDL打包到生成的JAR包之中， 需要将上述WSDL 放在 <code>/src/main/resources/</code>下(若不想放到JAR的根目录下，可以将其放在<code>resources</code>下的子文件夹中); 或者放在<code>/src/main/config</code> 文件夹中使 WSDL 不包括在JAR中.</p><p>下面的例子表明了一些自定义的选项. 默认条件下， codegen plugin 遵从 Maven 约定将生成的类代码放在<code>&quot;target/generated-sources/cxf&quot;</code> 输出文件夹。 可使用 <code>&lt;sourceRoot&gt;</code> 来覆盖默认配置, 但是通常不必. 其他配置参数可包括在<code>&lt;wsdlOption&gt;</code>元素中. 这些参数将被传递给插件及<a href="http://cxf.apache.org/docs/wsdl-to-java.html" target="_blank" rel="external">WSDL的java</a>页面中的相关选项。<br></p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">sourceRoot</span>&gt;</span>$&#123;project.build.directory&#125;/generated-code/mywebservice<span class="tag">&lt;/<span class="name">sourceRoot</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">wsdlOptions</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">wsdlOption</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">wsdl</span>&gt;</span>$&#123;basedir&#125;/src/main/resources/wsdl/myService.wsdl<span class="tag">&lt;/<span class="name">wsdl</span>&gt;</span></div><div class="line">                <span class="comment">&lt;!-- you can set the options of wsdl2java command by using the &lt;extraargs&gt; --&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">extraargs</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">extraarg</span>&gt;</span>-impl<span class="tag">&lt;/<span class="name">extraarg</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">extraarg</span>&gt;</span>-verbose<span class="tag">&lt;/<span class="name">extraarg</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">extraargs</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">wsdlOption</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">wsdlOptions</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>打开<a href="http://www.jroller.com/gmazza/entry/web_service_tutorial" target="_blank" rel="external">博客</a> （英文）来查看cxf-codegen-plugin生成的完整的 service 和 client 例子 .</p><p>例子 1: 生成 JAX-WS Binding 文件<br></p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">wsdlOptions</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">wsdlOption</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">wsdl</span>&gt;</span>$&#123;basedir&#125;/src/main/resources/wsdl/myService.wsdl<span class="tag">&lt;/<span class="name">wsdl</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">bindingFiles</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">bindingFile</span>&gt;</span>$&#123;basedir&#125;/src/main/resources/async_binding.xml<span class="tag">&lt;/<span class="name">bindingFile</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">bindingFiles</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">wsdlOption</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">wsdlOptions</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>本例中我们指定了一个想要在CXF中使用的 JAX-WS 绑定文件。绑定文件（ Binding files）是一种定制CXF生成的构件的输出的方式。 例如，其允许我们修改CXF使用的包名（package name）<br>例子 2: 指定绑定的数据<br></p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">wsdlOptions</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">wsdlOption</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">wsdl</span>&gt;</span>$&#123;basedir&#125;/src/main/resources/wsdl/myService.wsdl<span class="tag">&lt;/<span class="name">wsdl</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">extraargs</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">extraarg</span>&gt;</span>-databinding<span class="tag">&lt;/<span class="name">extraarg</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">extraarg</span>&gt;</span>jibx<span class="tag">&lt;/<span class="name">extraarg</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">extraargs</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">wsdlOption</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">wsdlOptions</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>In this example we’re specifying that we want CXF to use our data binding jibx. You can also using the data binding of xmlbeans, domsources, sdo etc.</p><p>例子 3: 指定生成构件的目标 service<br></p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">wsdlOptions</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">wsdlOption</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">wsdl</span>&gt;</span>$&#123;basedir&#125;/src/main/resources/wsdl/myService.wsdl<span class="tag">&lt;/<span class="name">wsdl</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">serviceName</span>&gt;</span>MyWSDLService<span class="tag">&lt;/<span class="name">serviceName</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">wsdlOption</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">wsdlOptions</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>In this example we’re specifying that we only want to generate artifacts for the service named “MyWSDLService” in the WSDL.</p><p>为了避免在多个<code>&lt;wsdlOption&gt;</code>中黏贴复制，可以声明一个<code>&lt;defaultOption&gt;</code>元素.</p><p>例子 4: 使用 defaultOption来避免重复<br></p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">defaultOptions</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">bindingFiles</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">bindingFile</span>&gt;</span>$&#123;basedir&#125;/src/main/jaxb/bindings.xml<span class="tag">&lt;/<span class="name">bindingFile</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">bindingFiles</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">noAddressBinding</span>&gt;</span>true<span class="tag">&lt;/<span class="name">noAddressBinding</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">defaultOptions</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">wsdlOptions</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">wsdlOption</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">wsdl</span>&gt;</span>$&#123;basedir&#125;/src/main/resources/wsdl/myService.wsdl<span class="tag">&lt;/<span class="name">wsdl</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">serviceName</span>&gt;</span>MyWSDLService<span class="tag">&lt;/<span class="name">serviceName</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">wsdlOption</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">wsdlOption</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">wsdl</span>&gt;</span>$&#123;basedir&#125;/src/main/resources/wsdl/myOtherService.wsdl<span class="tag">&lt;/<span class="name">wsdl</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">serviceName</span>&gt;</span>MyOtherWSDLService<span class="tag">&lt;/<span class="name">serviceName</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">wsdlOption</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">wsdlOptions</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p><code>&lt;defaultOption&gt;</code> 和 <code>&lt;wsdlOption&gt;</code> 对应的选项在 WSDL to Java 的页面中列出, 可以查看 <a href="http://svn.apache.org/repos/asf/cxf/trunk/maven-plugins/codegen-plugin/src/main/java/org/apache/cxf/maven_plugin/Option.java" target="_blank" rel="external">http://svn.apache.org/repos/asf/cxf/trunk/maven-plugins/codegen-plugin/src/main/java/org/apache/cxf/maven_plugin/Option.java</a> 了解更多信息.</p><p>At least, you can declare a common wsdlRoot folder where you store your WSDL files and use includes/excludes patterns to select the files to get used by the code generator</p><p>例子 5: 使用 wsdlRoot 和 includes/excludes 模式<br></p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">defaultOptions</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">bindingFiles</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">bindingFile</span>&gt;</span>$&#123;basedir&#125;/src/main/jaxb/bindings.xml<span class="tag">&lt;/<span class="name">bindingFile</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">bindingFiles</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">noAddressBinding</span>&gt;</span>true<span class="tag">&lt;/<span class="name">noAddressBinding</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">defaultOptions</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">wsdlRoot</span>&gt;</span>$&#123;basedir&#125;/src/main/resources/wsdl<span class="tag">&lt;/<span class="name">wsdlRoot</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">includes</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">include</span>&gt;</span>*Service.wsdl<span class="tag">&lt;/<span class="name">include</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>wsdlRoot 的默认值是<code>src/main/resources/wsdl</code> ，因此可以忽略此选项。.</p><p>例子 6: 从maven仓库加载 wsdl<br>对 CXF 2.3 及之后的版本有一个新的配置元素 <code>&lt;wsdlArtifact&gt;</code> 可以用来从仓库加载wsdl.<br></p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">wsdlOptions</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">wsdlOption</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">wsdlArtifact</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.pizza<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>PizzaService<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">     <span class="tag">&lt;/<span class="name">wsdlArtifact</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">wsdlOption</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">wsdlOptions</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>上述信息将会加载 wsdl<code>/org/apache/pizza/PizzaService-1.0.0.wsdl</code>到本地maven仓库，并根据它生成java 代码。</p><p>例子 7: 使用xjc扩展<br>通过 <code>&lt;extraarg&gt;</code> 元素可以定制标准的JAXB命令行, 每行一条命令或使用逗号（comma）分割。 CXF 同时也为代码生成提供了一些 JAXB 扩展. 它们可以作为依赖加入，然后一个包含内容 <code>-xjc-X&lt;extension id&gt;</code>的额外参数（extraarg ）来激活。</p><table><thead><tr><th>artifact id</th><th>description</th><th>extension id</th></tr></thead><tbody><tr><td>cxf-xjc-boolean</td><td>Adds getters for booleans</td><td>boolean</td></tr><tr><td>cxf-xjc-bug671</td><td>Workaroung for JAXB bug 671</td><td>bug671</td></tr><tr><td>cxf-xjc-dv</td><td>Default value support</td><td>dv</td></tr><tr><td>cxf-xjc-ts</td><td>Adds toString to objects</td><td>ts</td></tr><tr><td>cxf-xjc-wsdlextension</td><td>WsdlExtension support</td><td>wsdlextension</td></tr></tbody></table><p>jaxb-fluent-api|Fluent API for setters|fluent-api|</p><p>An example showing attachment of a JAXB binding file and the CXF toString() extension is below:<br></p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.cxf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cxf-codegen-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;cxf.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">executions</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">execution</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>generate-sources<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">phase</span>&gt;</span>generate-sources<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">wsdlOptions</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">wsdlOption</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">wsdl</span>&gt;</span>$&#123;basedir&#125;/src/main/resources/wsdl/myService.wsdl<span class="tag">&lt;/<span class="name">wsdl</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">extraargs</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">extraarg</span>&gt;</span>-xjc-b,binding.xjb<span class="tag">&lt;/<span class="name">extraarg</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">extraarg</span>&gt;</span>-xjc-Xts<span class="tag">&lt;/<span class="name">extraarg</span>&gt;</span></div><div class="line">          <span class="tag">&lt;/<span class="name">extraargs</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">wsdlOption</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">wsdlOptions</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">goals</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">goal</span>&gt;</span>wsdl2java<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">executions</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.cxf.xjcplugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cxf-xjc-ts<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;cxf.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>Example 8 - Using JAXB/JAX-WS 2.2 with Java 6<br>Java 6 includes JAXB/JAX-WS 2.1 API’s and a 2.1 implementations. However, sometimes it’s desirable to use JAXB or JAX-WS 2.2 instead to obtain various bug fixes and enhancements. Using 2.2 with Java 6 and Maven can be a bit tricky as it requires endorsing the API jars which requires configuration of a bunch of plugins, requires use of “forking”, etc… First off, both Surefire and the Compiler plugins need to be setup to point at an endorsed dir:<br></p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">pluginManagement</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">compilerArguments</span>&gt;</span></div><div class="line">                   <span class="tag">&lt;<span class="name">endorseddirs</span>&gt;</span>$&#123;project.build.directory&#125;/endorsed<span class="tag">&lt;/<span class="name">endorseddirs</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">compilerArguments</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">forkMode</span>&gt;</span>once<span class="tag">&lt;/<span class="name">forkMode</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">argLine</span>&gt;</span>-Djava.endorsed.dirs=$&#123;project.build.directory&#125;/endorsed<span class="tag">&lt;/<span class="name">argLine</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div><div class="line">         <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">pluginManagement</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>You will then need to use the maven-dependency-plugin to copy the needed artifacts into the endorsed.dir:<br></p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">       <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">       <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-dependency-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">       <span class="tag">&lt;<span class="name">executions</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">execution</span>&gt;</span></div><div class="line">             <span class="tag">&lt;<span class="name">phase</span>&gt;</span>generate-sources<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></div><div class="line">             <span class="tag">&lt;<span class="name">goals</span>&gt;</span></div><div class="line">                 <span class="tag">&lt;<span class="name">goal</span>&gt;</span>copy<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></div><div class="line">             <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></div><div class="line">             <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">                 <span class="tag">&lt;<span class="name">artifactItems</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">artifactItem</span>&gt;</span></div><div class="line">                       <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.xml.bind<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                       <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jaxb-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                       <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">artifactItem</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">artifactItem</span>&gt;</span></div><div class="line">                       <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.xml.ws<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                       <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jaxws-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                       <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">artifactItem</span>&gt;</span></div><div class="line">                  <span class="tag">&lt;/<span class="name">artifactItems</span>&gt;</span></div><div class="line">                  <span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span>$&#123;project.build.directory&#125;/endorsed<span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></div><div class="line">              <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div><div class="line">           <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></div><div class="line">       <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>最后,你需要为CXF Codegen plugin做通用的安装配置，从而使其能够使用2.2的API及其运行时：<br></p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.cxf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cxf-codegen-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;cxf.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">fork</span>&gt;</span>once<span class="tag">&lt;/<span class="name">fork</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">additionalJvmArgs</span>&gt;</span>-Djava.endorsed.dirs=$&#123;project.build.directory&#125;/endorsed<span class="tag">&lt;/<span class="name">additionalJvmArgs</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- rest of the normal codegen configuration options --&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.sun.xml.bind<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jaxb-impl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.sun.xml.bind<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jaxb-xjc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">     <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div></pre></td></tr></table></figure><p></p><h4 id="其他配置项-Other-configuration-options"><a href="#其他配置项-Other-configuration-options" class="headerlink" title="其他配置项 Other configuration options"></a>其他配置项 Other configuration options</h4><p>cxf-codegen-plugin 其他可能有用的配置:<br>| <code>&lt;fork&gt;false/always/once&lt;/fork&gt;</code> | Forks a separate JVM for the code generation |<br>| ——————————– | —————————————- |<br>| <code>&lt;additionalJvmArgs&gt;....</code> | Additional JVM args set on the forked process if fork is not false |<br>| <code>&lt;encoding&gt;UTF-8&lt;/encoding&gt;</code> | (new in 2.6.1, requires configuring plugin to use very latest JAXB 2.2 impl jars) |</p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Apache CXF 使用教程 - 01 - 简介 - CXF与应用程序的整合]]></title>
      <url>houzw.github.io.git/2016/10/26/Apache%20CXF%20%20%E4%BD%BF%E7%94%A8%20-%2001/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:01 GMT+0800 (中国标准时间) --><h2 id="Apache-CXF-使用-简介-CXF与应用程序的整合"><a href="#Apache-CXF-使用-简介-CXF与应用程序的整合" class="headerlink" title="Apache CXF 使用 - 简介 - CXF与应用程序的整合"></a>Apache CXF 使用 - 简介 - CXF与应用程序的整合</h2><blockquote><p><a href="http://cxf.apache.org/docs/how-do-i-integrate-my-application-with-cxf.html" target="_blank" rel="external">How do I integrate my application with CXF</a></p></blockquote><h3 id="信息传送-Transports"><a href="#信息传送-Transports" class="headerlink" title="信息传送 Transports"></a>信息传送 Transports</h3><p>目前 CXF 支持 HTTP, JMS 和 Local (即 “in-JVM”) 形式传输. Local 比较特殊，因为其不能跨机器，而只能在内存内发送信息。</p><h3 id="绑定-Bindings"><a href="#绑定-Bindings" class="headerlink" title="绑定 Bindings"></a>绑定 Bindings</h3><p>绑定将一种特定的服务信息映射到特定的协议。CXF 包括对多种特定绑定的支持。默认为 SOAP binding，其将信息映射到SOAP且能够被CXF内部不同的<code>WS-*</code> 模块使用。<br>Pure XML 绑定避免了SOAP <code>envelope</code>（封套）信息的序列化且仅仅发送了一个原始的XML消息。 同时，HTTP绑定使用 RESTful 语义将一个服务映射到HTTP。</p><h3 id="消息拦截与修正-Message-Interception-and-Modification"><a href="#消息拦截与修正-Message-Interception-and-Modification" class="headerlink" title="消息拦截与修正 Message Interception and Modification"></a>消息拦截与修正 Message Interception and Modification</h3><p>处理器/拦截器被用于：（Handlers/Interceptors ）</p><ul><li>基于报头（Header）执行身份验证 Performing authentication based on Headers</li><li>处理自定义的报头 Processing custom headers</li><li>转换消息 Transforming a message (如通过 XSLT 或 GZip)</li><li>重定向消息 Redirecting a message</li><li>访问原始的 I/O 或 XML流 Getting access to the raw I/O or XML stream</li></ul><h4 id="JAX-WS-处理器-JAX-WS-Handlers"><a href="#JAX-WS-处理器-JAX-WS-Handlers" class="headerlink" title="JAX-WS 处理器 JAX-WS Handlers"></a>JAX-WS 处理器 JAX-WS Handlers</h4><p>如果使用JAX-WS 前端，JAX-WS 支持逻辑和协议处理器。 Protocol handlers allow you to manipulate the message in its raw, often XML-based, form - i.e. a SAAJ SOAPMessage. Logical handlers allow you to manipulate the message after its already been bound from the protocol to the JAXB object that your service will receive. See this article to learn more about JAX-WS handlers.</p><h4 id="拦截器-Interceptors"><a href="#拦截器-Interceptors" class="headerlink" title="拦截器 Interceptors"></a>拦截器 Interceptors</h4><p>Interceptors 提供了对CXF提供所有特征的访问，允许你做任何事情，包括操作原始数据（raw bytes）或消息的XML.</p><h3 id="传送二进制数据-Transmitting-Binary-Data"><a href="#传送二进制数据-Transmitting-Binary-Data" class="headerlink" title="传送二进制数据 Transmitting Binary Data"></a>传送二进制数据 Transmitting Binary Data</h3><p>CXF 通过 MTOM 标准提供高效的二进制数据传送。正常情况下XML消息中的二进制数据必须使用Base64编码. This results in processing overhead and increases message size by 30%. If you use MTOM, CXF will send/receive MIME messages with the message stored as a MIME attachment, just like email. This results in much more efficient communication and allows you to transmit messages much larger than memory.</p><h3 id="WS"><a href="#WS" class="headerlink" title="WS-*"></a><code>WS-*</code></h3><p>CXF 提供多种<code>WS-*</code> 规范的支持：</p><ul><li>WS-Addressing</li><li>WS-Policy</li><li>WS-Security</li><li>WS-ReliableMessaging<h3 id="Invokers"><a href="#Invokers" class="headerlink" title="Invokers"></a>Invokers</h3>Invokers allow you to customize how a particular method or backend service object is executed. This is particularly useful if your underlying service objects are not plain javabeans and instead need to be created or looked up via a custom factory.</li></ul><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[GDAL Python 学习笔记 - 0 - 安装]]></title>
      <url>houzw.github.io.git/2016/10/25/GDAL%20Python%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%20-%200%20-%20%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:01 GMT+0800 (中国标准时间) --><h1 id="GDAL-Python-学习笔记-0-安装"><a href="#GDAL-Python-学习笔记-0-安装" class="headerlink" title="GDAL Python 学习笔记 - 0 - 安装"></a>GDAL Python 学习笔记 - 0 - 安装</h1><h2 id="安装（windows）"><a href="#安装（windows）" class="headerlink" title="安装（windows）"></a>安装（windows）</h2><blockquote><p>不建议自己编译安装，因为编译环境、版本等问题，会出现各种错误</p></blockquote><h3 id="使用Anaconda"><a href="#使用Anaconda" class="headerlink" title="使用Anaconda"></a>使用Anaconda</h3><p><code>conda install -c conda-forge gdal</code></p><p>不仅会安装GDAL的Python绑定，也会安装相应的gdal核心文件</p><p>也可以前往 <a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/#gdal" target="_blank" rel="external">lfd.uci.edu gdal</a> 下载相应的 <code>whl</code> 包安装</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">&gt;cd D:\ProgramData\Anaconda3\Scripts </div><div class="line">&gt;pip install GDAL-2.1.2-cp36-cp36m-win32.whl  # 注意 Anaconda 的 Python版本与 whl 文件对应版本</div></pre></td></tr></table></figure><p>可能需要 <a href="https://www.microsoft.com/en-us/download/details.aspx?id=48159" target="_blank" rel="external">VC++ 14 / Microsoft Build Tools 2015</a></p><blockquote><p><a href="https://blog.csdn.net/ivan_ljf/article/details/77005083" target="_blank" rel="external">https://blog.csdn.net/ivan_ljf/article/details/77005083</a></p></blockquote><h3 id="其他方式"><a href="#其他方式" class="headerlink" title="其他方式"></a>其他方式</h3><p>下载与所使用的系统相匹配的 <a href="https://trac.osgeo.org/gdal/wiki/DownloadingGdalBinaries" target="_blank" rel="external">GDAL的windows安装包</a>。主要有三种包含gdal二进制包的下载源：<a href="http://www.gisinternals.com/sdk/" target="_blank" rel="external">GISInternals</a> 、<a href="http://www.ms4w.com/" target="_blank" rel="external">MS4W (MapServer for Windows)</a> 、<a href="https://trac.osgeo.org/gdal/wiki/OSGeo4W" target="_blank" rel="external">OSGeo4W</a></p><h4 id="GISInternals"><a href="#GISInternals" class="headerlink" title="GISInternals"></a>GISInternals</h4><p>由Tamas Szekeres 根据 MapServer 和 GDAL 最新代码构建并维护的网站，包括 Stable Releases - Stable Branches - Development Versions - Development Kits - Archive Versions</p><ul><li><p>选择下载安装包<br>一般是以稳定版（Stable Releases）就ok<br><img src="http://ofcj2lgtd.bkt.clouddn.com/blogs/1477366619968.jpg" alt="GDAL 2.1.0 and MapServer 7.0.1"><br>选择最后一项：<code>MSVC 2013x64 release-1800-x64-gdal-2-1-0-mapserver-7-0-1</code>,然后选择gdal核心包：<code>gdal-201-1800-x64-core.msi</code>及相应python版本的python扩展，如<code>GDAL-2.1.0.win-amd64-py2.7.msi</code>：<br><img src="http://ofcj2lgtd.bkt.clouddn.com/blogs/1477372958016.jpg" alt="gdal安装包选择"></p></li><li><p>安装<br>首先安装核心包（core）。gdal默认安装到<code>C:\Program Files\GDAL</code>，安装时可以选择安装C#、java等语言绑定及HDF等相关组件。<br><img src="http://ofcj2lgtd.bkt.clouddn.com/blogs/1477381764685.jpg" alt="gdal安装"><br>​<br><img src="http://ofcj2lgtd.bkt.clouddn.com/blogs/1477381787670.jpg" alt="gdal安装组件选择"><br>​<br>然后安装python组件（与环境变量中设置的python绑定）。<br><img src="http://ofcj2lgtd.bkt.clouddn.com/blogs/1477382778177.jpg" alt="安装python组件"></p></li><li><p>添加系统环境变量</p><ol><li><p>将安装目录下的 <code>bin</code>文件夹 （或<code>C:\Program Files\GDAL</code>）加入到系统的<code>PATH</code>环境变量之后, 注意，path环境变量的各部分的值是以半角状态下的冒号;分割的。需添加的环境变量如：<code>C:\gdalwin32-1.7\bin</code></p></li><li><p>添加变量名为<code>GDAL_DATA</code>的环境变量，值为<code>C:\gdalwin32-1.7\data</code>（或<code>C:\Program Files\GDAL\gdal-data</code>）</p></li><li><p>测试</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> osgeo <span class="keyword">import</span> gdal</div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> osgeo <span class="keyword">import</span> ogr</div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> osgeo <span class="keyword">import</span> osr</div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> osgeo <span class="keyword">import</span> gdal_array</div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> osgeo <span class="keyword">import</span> gdalconst</div></pre></td></tr></table></figure></li></ol><p>其中，<code>from osgeo import gdal_array</code>可能会报错（<code>import gdalnumeric</code>同样）：</p></li></ul><blockquote><p>anaconda下安装的gdal没有报错</p></blockquote><p>原因可能是SWIG版本问题。</p><p><img src="http://ofcj2lgtd.bkt.clouddn.com/blogs/1477383609067.jpg" alt="gdal_array报错"><br>低版本gdal可能语句不一样：<br>If you are using GDAL 1.7 bindings, you should update your imports to utilize the usage above, but the following will work until at least GDAL 2.1.</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> gdal</div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> ogr</div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> osr</div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> gdalnumeric</div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> gdalconst</div></pre></td></tr></table></figure><h4 id="MS4W"><a href="#MS4W" class="headerlink" title="MS4W"></a>MS4W</h4><p>前往官网下载安装文件：<a href="http://www.ms4w.com/" target="_blank" rel="external">http://www.ms4w.com/</a><br>安装之后访问 <a href="http://www.ms4w.com/README_INSTALL.html?highlight=python#k-using-the-python-gdal-module" target="_blank" rel="external">Using the Python GDAL Module</a> 使用python模块。MS4W的python模块使用需要2.6以上版本的python，且添加了python的环境变量。<br>python gdal 模块安装目录为 <code>/ms4w/python/gdal/</code>。使用：</p><ul><li>打开命令行窗口</li><li>cd 到 ms4w目录</li><li>运行 setenv.bat</li><li>执行python根据方法，例如</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">D:\Program Files\ms4w&gt;gdal_merge.py</div><div class="line">No input files selected.</div><div class="line">Usage: gdal_merge.py [-o out_filename] [-of out_format] [-co NAME=VALUE]*</div><div class="line">                     [-ps pixelsize_x pixelsize_y] [-tap] [-separate] [-q] [-v] [-pct]</div><div class="line">                     [-ul_lr ulx uly lrx lry] [-init &quot;value [value...]&quot;]</div><div class="line">                     [-n nodata_value] [-a_nodata output_nodata_value]</div><div class="line">                     [-ot datatype] [-createonly] input_files</div><div class="line">                     [--help-general]</div></pre></td></tr></table></figure><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><blockquote><p>参考： <a href="https://pypi.python.org/pypi/GDAL/" target="_blank" rel="external">https://pypi.python.org/pypi/GDAL/</a></p></blockquote><p>If you have previous code that imported the global module and still need to support the old import, a simple try…except import can silence the deprecation warning and keep things named essentially the same as before::<br></p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">try</span>:</div><div class="line"><span class="meta">... </span><span class="keyword">from</span> osgeo <span class="keyword">import</span> gdal</div><div class="line"><span class="meta">... </span><span class="keyword">except</span> ImportError:</div><div class="line"><span class="meta">... </span><span class="keyword">import</span> gdal</div></pre></td></tr></table></figure><p></p><ul><li><p>Docstrings</p><p>Currently, only the OGR module has docstrings which are generated from the C/C++ API doxygen materials. Some of the arguments and types might not match up exactly with what you are seeing from Python, but they should be enough to get you going. Docstrings for GDAL and OSR are planned for a future<br>release.</p></li><li><p>Numpy/Numeric</p></li></ul><hr><p>One advanced feature of the GDAL Python bindings not found in the other language bindings (C#, Perl) is integration with the Python numerical array facilities. <code>The gdal.Dataset.ReadAsArray()</code> method can be used to read raster data as numerical arrays, ready to use with the Python numerical array capabilities.</p><p>These facilities have evolved somewhat over time. In the past the package was known as “Numeric” and imported using “import Numeric”. A new generation is imported using “import numpy”. Currently the old generation bindings only support the older Numeric package, and the new generation bindings only support the new generation numpy package. They are mostly compatible, and by importing gdalnumeric (or osgeo.gdal_array) you will get whichever isappropriate to the current bindings type.</p><ul><li>Examples</li></ul><p>One example of GDAL/numpy integration is found in the <code>val_repl.py</code>_ script.</p><ul><li>Performance Notes</li></ul><hr><p>ReadAsArray expects to make an entire copy of a raster band or dataset unless the data are explicitly subsetted as part of the function call. For large data, this approach is expected to be prohibitively memory intensive.</p><hr><p>.. _GDAL API Tutorial: <a href="http://www.gdal.org/gdal_tutorial.html" target="_blank" rel="external">http://www.gdal.org/gdal_tutorial.html</a><br>.. _GDAL Windows Binaries: <a href="http://gisinternals.com/sdk/" target="_blank" rel="external">http://gisinternals.com/sdk/</a><br>.. _Microsoft Knowledge Base doc: <a href="http://support.microsoft.com/kb/310519" target="_blank" rel="external">http://support.microsoft.com/kb/310519</a><br>.. _Python Cheeseshop: <a href="http://pypi.python.org/pypi/GDAL/" target="_blank" rel="external">http://pypi.python.org/pypi/GDAL/</a><br>.. _val_repl.py: <a href="http://trac.osgeo.org/gdal/browser/trunk/gdal/swig/python/samples/val_repl.py" target="_blank" rel="external">http://trac.osgeo.org/gdal/browser/trunk/gdal/swig/python/samples/val_repl.py</a><br>.. _GDAL: <a href="http://www.gdal.org" target="_blank" rel="external">http://www.gdal.org</a><br>.. _SWIG: <a href="http://www.swig.org" target="_blank" rel="external">http://www.swig.org</a></p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[基于DEM的水系/河网提取方法、流程学习笔记]]></title>
      <url>houzw.github.io.git/2016/10/20/%E5%9F%BA%E4%BA%8EDEM%E7%9A%84%E6%B2%B3%E7%BD%91%E6%8F%90%E5%8F%96%E6%B5%81%E7%A8%8B-1/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="基于DEM的水系-河网提取方法、流程学习笔记"><a href="#基于DEM的水系-河网提取方法、流程学习笔记" class="headerlink" title="基于DEM的水系/河网提取方法、流程学习笔记"></a>基于DEM的水系/河网提取方法、流程学习笔记</h1><h2 id="1-水系提取"><a href="#1-水系提取" class="headerlink" title="1. 水系提取"></a>1. 水系提取</h2><blockquote><p>汤国安等，数字高程模型及地学分析的原理和方法，p243</p></blockquote><h3 id="1-1-概述"><a href="#1-1-概述" class="headerlink" title="1.1 概述"></a>1.1 概述</h3><ol><li>集水流域：水流及其他物质流向流域出口的过程中所流经的区域，即流向集水出口的水流所流经的整个地区</li><li>集水出口：水流离开集水流域的点，是集水流域边界上的最低点</li><li>子流域：较大的集水流域结构中的一部分</li><li>分水岭：两个集水流域的边界</li><li>水流网络：流水到达集水出口所流经的网络结构，可视为一树状结构，根节点为集水出口，两支流的交点成为水流网络节点<br></li></ol><p><img src="http://ofcj2lgtd.bkt.clouddn.com/blogs/1476893824520.jpg" alt="流域"></p><h3 id="2-基于地表径流漫流模型的水系提取"><a href="#2-基于地表径流漫流模型的水系提取" class="headerlink" title="2. 基于地表径流漫流模型的水系提取"></a>2. 基于地表径流漫流模型的水系提取</h3><blockquote><p>地表径流漫流模型：模拟地表径流在地表的的流动来产生水系。基本原理是根据DEM栅格单元和八个相邻单元之间的最大坡度来确定水流方向，即D8算法，然后计算每个单元格的上游汇水面积，接着确定一个汇水面积阈值，不低于该阈值的单元格标记为水系的组成部分。</p></blockquote><h4 id="2-1-四个基本问题："><a href="#2-1-四个基本问题：" class="headerlink" title="2.1 四个基本问题："></a>2.1 四个基本问题：</h4><ol><li>洼地处理</li><li>平地处理</li><li>水流方向及水流累积量确定</li><li>水道真实位置确定</li></ol><h4 id="2-2-洼地处理"><a href="#2-2-洼地处理" class="headerlink" title="2.2 洼地处理"></a>2.2 洼地处理</h4><p>洼地是局部的最低点，由于<strong>水往低处流</strong>，故无法确定该点的水流方向，因此需要在提取水系之前对其进行无洼地化处理。<br>常用方法有两种：</p><ol><li>平滑处理：对原始数据平滑处理，只能处理较浅和小范围的洼地，改变了原始数据。</li><li>填平处理：将洼地内部高程增加至洼地出水口的高程。</li></ol><p>李志林（1999）、Martez和Garbrecht等提出了多种填平处理方法。李志林（1999）将洼地分为<em>单格网洼地</em>、<em>独立洼地（只有一个谷底点）</em>、<em>复合洼地（有多个谷底点，且各洼地区域相邻接）</em>。</p><h4 id="2-3-平地处理"><a href="#2-3-平地处理" class="headerlink" title="2.3 平地处理"></a>2.3 平地处理</h4><p>包括原始数据中的平地和填洼处理之后产生的平地。平地区域对水流方向确定有重要影响，可能生成平行状河流（平行河网）。<br>Martez和Garbrecht（1992）用高程增量叠加算法设定平坦格网内水流方向。即对平地范围内的单元格增加一微小增量，每个单元格的增量都不一样。</p><h4 id="2-4-流向及水流累积量确定"><a href="#2-4-流向及水流累积量确定" class="headerlink" title="2.4 流向及水流累积量确定"></a>2.4 流向及水流累积量确定</h4><p>水流方向指水流离开单元格时的指向。主要有 <em>单流向算法（SFD）</em> 和 <em>多流向算法（MFD）</em> 等类。单流向算法将某格网上产生的水流都流向一个最低的相邻单元格；多流向算法是将径流按一定的比例流向若干相对较低的相邻单元格。多流向算法分析评价可参考 <em>秦承志等（2006）</em> 的 <em>《基于栅格DEM的多流向算法述评》</em> 一文。</p><table><thead><tr><th>分类</th><th>主要算法</th></tr></thead><tbody><tr><td>单流向算法SFD</td><td>最大坡降算法D8(Deterministic eight-node)(O’Callaghan and Mark, 1984)<br>随机四方向算法Rho4(random four-node)（Fairefield et al.,1991）<br>随机八方向算法Rho8（Fairefield et al.,1991）<br>流向驱动法(aspect driven)(Lea,1992)</td></tr><tr><td>多流向算法MFD</td><td>基于坡度的MFD (Quinn et al. 1991)<br>基于坡度指数的MFD（Freeman ，1991);<br>流管法DEMON（Coast-Cabral et al.,1994）<br>无穷向算法Dinf（Tarboton，1997）<br>形态算法（Pilesjo et al.,1998）<br>水流分配策略随下坡坡度变化的多流向算法MFD-md(Qin et al., 2007)</td></tr><tr><td>其他</td><td>混合算法<br>多级骨架算法</td></tr></tbody></table><p>其中，MFD-md (Qin et al., 2007)以局域最大下坡的线性函数 来计算随局域地形条件自适应的水流分配指数。</p><h2 id="2-ArcHydro-Tools-及多源-DEM-提取河网"><a href="#2-ArcHydro-Tools-及多源-DEM-提取河网" class="headerlink" title="2. ArcHydro Tools 及多源 DEM 提取河网"></a>2. ArcHydro Tools 及多源 DEM 提取河网</h2><h3 id="2-1-缺乏辅助信息下的河网提取划分"><a href="#2-1-缺乏辅助信息下的河网提取划分" class="headerlink" title="2.1 缺乏辅助信息下的河网提取划分"></a>2.1 缺乏辅助信息下的河网提取划分</h3><blockquote><p>曾红伟等，ArcHydro Tools 及多源 DEM 提取河网与精度分析——以洮儿河流域为例</p></blockquote><ol><li>填洼</li><li>流向 Flow Direction</li><li>汇流累积（矩阵）生成 Flow Accumulation - 汇流累积栅格图</li><li>河流栅格图生成 Stream Definition 给定最小汇水面积阈值，并采用 Stream Segmentation 方法建立栅格河段上下游拓扑关系</li><li>流域边界生成 Catchment Grid Delineation，使用 Catchment Polygon Processing 方法, 生成的流域整体边界 Catchment</li><li>河网矢量化 Drainage Line Processing</li></ol><h3 id="2-2-辅助信息下河网提取"><a href="#2-2-辅助信息下河网提取" class="headerlink" title="2.2 辅助信息下河网提取"></a>2.2 辅助信息下河网提取</h3><blockquote><p>流域内真实河流</p></blockquote><p>增加步骤：</p><ol><li>河网校正 DEM Reconditioning</li><li>流域边界校正 Build Walls</li><li>划分流域与子流域: 以水文站点为流域出口, 划分各流域和子流域（Watershed &amp; Subwatershed）。</li></ol><h2 id="GIS环境下流域提取"><a href="#GIS环境下流域提取" class="headerlink" title="GIS环境下流域提取"></a>GIS环境下流域提取</h2><ul><li>对DEM数据进行填洼和削峰,</li><li>确定每个栅格单元的水流方向,</li><li>根据各栅格单元的水流方向,计算出每个栅格 单元的汇流能力</li><li>根据汇流能力采用阈值法确定河流网络</li><li>通过河流网络和流域出水口,快速识别出所有子流域。</li></ul><p>ARC/ INFO GRID 中的水文分析模块函数：</p><ol><li>FILL 填洼、削峰dem-f</li><li>FlowDirection(dem-f) 确定水流方向栅格dem-dir</li><li>FlowAccumulation(dem-dir) 产生流域汇流栅格dem-a</li><li>Basin(dem-dir) 确定流域边界dem-b1</li><li>CON(dem-a &gt; 10000 , 1) 确定河流网络dem-net</li><li>StreamLink(dem-net , dem-dir) 产生流域出水口dem-out</li><li>Watershed(dem-dir , dem-out) 确定子流域边界 dem-b2</li><li>选择大于阈值的流域 dem-b</li><li>GridPoly(dem-b) 将流域 GRID 转换为COVERAGE</li></ol><hr><p>参考文献：</p><blockquote><p>宋晓猛等，基于DEM的数字流域特征提取研究进展，2013<br>刘学军等，基于DEM的河网提取算法的比较，2006<br>汤国安等，数字高程模型及地学分析的原理和方法，2005<br>秦承志等，水流分配策略随下坡坡度变化的多流向算法，2010<br>秦承志等，基于栅格DEM的多流向算法述评，2006<br>曾红伟等，ArcHydro Tools 及多源 DEM 提取河网与精度分析——以洮儿河流域为例，2011<br>徐新良等，GIS环境下基于DEM的中国流域自动提取方法，2004</p></blockquote><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[TauDEM使用-ArcGIS工具箱-01]]></title>
      <url>houzw.github.io.git/2016/10/18/TauDEM%E4%BD%BF%E7%94%A8-ArcGIS%E5%B7%A5%E5%85%B7%E7%AE%B1/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="TauDEM使用-ArcGIS工具箱-01"><a href="#TauDEM使用-ArcGIS工具箱-01" class="headerlink" title="TauDEM使用-ArcGIS工具箱-01"></a>TauDEM使用-ArcGIS工具箱-01</h1><blockquote><p>本文介绍基于TauDEM Toolbox在ArcGIS中进行水文地形分析的操作方法流程。由于个别词汇难以查到确切的专业翻译，可能与常用术语有出入，欢迎指正！<br><br>原文：<br>《TauDEM 5.3 QUICK START GUIDE TO USING THE TAUDEM ARCGIS TOOLBOX》</p></blockquote><h2 id="TauDEM-简介"><a href="#TauDEM-简介" class="headerlink" title="TauDEM 简介"></a>TauDEM 简介</h2><p>TauDEM (Terrain Analysis Using Digital Elevation Models，基于DEM的地形分析) 是一个基于DEM（数字高程模型）地形数据进行水文信息提取和分析的工具集。TauDEM由犹他州立大学（Utah State University，USU）为数字水文高程模型分析和流域划分而开发，可以从<a href="http://hydrology.usu.edu/taudem/" target="_blank" rel="external">官方网站</a>获得安装包.<br>TauDEM有命令行（command line）和ArcGIS工具箱两种操作方式，本文仅说明其在ArcGIS中的操作</p><h2 id="系统需求"><a href="#系统需求" class="headerlink" title="系统需求"></a>系统需求</h2><p>完成本教程需要使用<strong> ArcGIS 10.0 +</strong>及<strong>TauDEM 5.3 </strong>。若安装过TauDEM的旧版本，需要先卸载掉。TauDEM 5.3包含以下依赖（安装TauDEM时会一并安装）：</p><ul><li>GDAL - <a href="http://www.gdal.org/" target="_blank" rel="external">Geospatial Data Abstraction Library</a></li><li>并行处理：Microsoft HPC Pack 2012 MS-MPI Redistributable Package.</li><li>VC++运行时： Microsoft Visual C++ run time libraries for 32 and 64 bit windows platforms.</li></ul><h2 id="安装并在ArcGIS中激活TauDEM-Toolbox"><a href="#安装并在ArcGIS中激活TauDEM-Toolbox" class="headerlink" title="安装并在ArcGIS中激活TauDEM Toolbox"></a>安装并在ArcGIS中激活TauDEM Toolbox</h2><ol><li><p>下载安装<a href="http://hydrology.usu.edu/taudem/taudem5/downloads.html" target="_blank" rel="external">TauDEM 5.3</a>，其依赖的GDAL等会自动安装（GDAL等会安装到C盘下面）</p><blockquote><p>只能安装到默认的目录中，安装到其他位置会提示找不到文件！</p></blockquote><ul><li><p><a href="https://github.com/dtarb/TauDEM/releases/download/v5.3.7/TauDEM537_setup.exe" target="_blank" rel="external">TauDEM 5.3.7 Complete Windows installer </a>(包含Windows下的可执行文件, ArcGIS toobox 和为ArcGIS 10.0+ 开发的 Python Scripts, GDAL Library 和使用 MS-MPI所需的内容. 注意，安装此文件不要求系统已安装ArcGIS. Without ArcGIS you will be able to run all the functions from the command line, but will not be able to use the ArcGIS toolbox.)</p></li><li><p>Separate components</p><ul><li><a href="https://github.com/dtarb/TauDEM/releases/download/v5.3.7/TauDEM537exeWin32.zip" target="_blank" rel="external">TauDEM 5.3.7 Command Line Executables for 32 bit Windows PC</a></li><li><a href="https://github.com/dtarb/TauDEM/releases/download/v5.3.7/TauDEM537exeWin64.zip" target="_blank" rel="external">TauDEM 5.3.7 Command Line Executables for 64 bit Windows PC</a></li><li><a href="https://github.com/dtarb/TauDEM/releases/download/v5.3.7/pyfiles537.zip" target="_blank" rel="external">ArcGIS toolbox and Python Scripts (Developed for ArcGIS 10.0 or higher)</a></li></ul></li><li><p>Dependencies</p></li><li><ul><li><a href="http://download.gisinternals.com/sdk/downloads/release-1800-gdal-2-1-0-mapserver-7-0-1/gdal-201-1800-core.msi" target="_blank" rel="external">GDAL 201 (MSVC 2013) for 32 bit Windows PC</a></li><li><a href="http://download.gisinternals.com/sdk/downloads/release-1800-x64-gdal-2-1-0-mapserver-7-0-1/gdal-201-1800-x64-core.msi" target="_blank" rel="external">GDAL 201 (MSVC 2013 Win 64) for 64 bit Windows PC</a></li><li><a href="http://download.gisinternals.com/sdk/downloads/release-1800-gdal-2-1-0-mapserver-7-0-1/GDAL-2.1.0.win32-py2.7.msi" target="_blank" rel="external">GDAL 2.1.0 for Python 2.7</a></li><li><a href="https://www.microsoft.com/en-us/download/details.aspx?id=52981" target="_blank" rel="external">Microsoft MPI v7.1</a></li><li><a href="https://www.microsoft.com/en-us/download/details.aspx?id=48145" target="_blank" rel="external">Microsoft Visual C++ 2015 Redistributable Package (x86)</a></li><li><a href="https://www.microsoft.com/en-us/download/details.aspx?id=48145" target="_blank" rel="external">Microsoft Visual C++ 2015 Redistributable Package (x64)</a></li></ul></li><li><p><a href="https://github.com/dtarb/TauDEM" target="_blank" rel="external">Source Code in GitHub</a></p></li><li><p><a href="http://hydrology.usu.edu/taudem/taudemdata" target="_blank" rel="external">Folder with data for testing TauDEM</a></p></li></ul></li><li><p>ArcGIS中激活TauDEM Toolbox</p></li></ol><ul><li>启动 ArcMap/ArcCatalog，打开 ArcToolbox 窗口<br><img src="http://ofcj2lgtd.bkt.clouddn.com/blogs/TauDEM-ArcGIS-f1fde.png" alt=""></li><li>在ArcToolbox 窗口右键选择【Add Toolbox】，然后找到安装目录下的【TauDEM Tools.tbx】添加，Done。<br><img src="http://ofcj2lgtd.bkt.clouddn.com/blogs/TauDEM-ArcGIS-217b2.png" alt=""></li></ul><h2 id="1-基本格网分析-Basic-Grid-Analysis"><a href="#1-基本格网分析-Basic-Grid-Analysis" class="headerlink" title="1. 基本格网分析 Basic Grid Analysis"></a>1. 基本格网分析 Basic Grid Analysis</h2><h4 id="1-1-下载-Cub-River-实验数据，解压后加入cubdem到ArcMap中。"><a href="#1-1-下载-Cub-River-实验数据，解压后加入cubdem到ArcMap中。" class="headerlink" title="1.1 下载 Cub River 实验数据，解压后加入cubdem到ArcMap中。"></a>1.1 下载 <a href="http://hydrology.usu.edu/taudem/" target="_blank" rel="external">Cub River 实验数据</a>，解压后加入<code>cubdem</code>到ArcMap中。</h4><p>注意：实验数据存放<strong>路径中不能出现中文</strong>，否则后续操作中会报错：</p><p><img src="http://ofcj2lgtd.bkt.clouddn.com/blogs/TauDEM-ArcGIS-4e0b9.png" alt=""></p><h4 id="1-2-填洼操作-Pit-Remove"><a href="#1-2-填洼操作-Pit-Remove" class="headerlink" title="1.2 填洼操作( Pit Remove )"></a>1.2 填洼操作( Pit Remove )</h4><ul><li>选择 pit remove 工具<br><img src="http://ofcj2lgtd.bkt.clouddn.com/blogs/TauDEM-ArcGIS-2e9a4.png" alt=""></li><li><p>选择输入(e.g. tiff, ESRI grid, img)输出数据，设置是否4邻域填充、掩膜数据（真实的不进行填充的洼地等）、处理器个数（物理内核个数2倍左右）参数（show-help可查看帮助）<br><img src="http://ofcj2lgtd.bkt.clouddn.com/blogs/TauDEM-ArcGIS-c7129.png" alt=""><br>确定之后执行填洼操作,获得以 <strong>文件名</strong>+<code>fel.tif</code>结尾的结果：<br><img src="http://ofcj2lgtd.bkt.clouddn.com/blogs/TauDEM-ArcGIS-1cac7.png" alt=""></p><h4 id="1-3-D8流向操作-D8-Flow-Direction"><a href="#1-3-D8流向操作-D8-Flow-Direction" class="headerlink" title="1.3 D8流向操作 D8 Flow Direction."></a>1.3 D8流向操作 D8 Flow Direction.</h4><p>此操作以填洼之后具有正确高程值的格网数据（<code>cubdenfel.tif</code>）为输入，输出基于D8算法的格网单元水流流向数据(<code>p</code>结尾：<code>cubdemp.tif</code>，以数字1-8来表示每个格网单元的最陡坡降方向（8邻域下的水流流向）)和每个格网的坡度(<code>sd8</code>结尾：<code>cubdemsd8.tif</code>)。</p><p><img src="http://ofcj2lgtd.bkt.clouddn.com/blogs/TauDEM-ArcGIS-62a19.png" alt=""></p><h4 id="1-4-D8-集水区（集水面积-汇水面积，Contributing-Area）"><a href="#1-4-D8-集水区（集水面积-汇水面积，Contributing-Area）" class="headerlink" title="1.4 D8 集水区（集水面积,汇水面积，Contributing Area）."></a>1.4 D8 集水区（集水面积,汇水面积，Contributing Area）.</h4><p>基于D8 流向数据计算流向各个格网的水流流过的格网数。每个格网的集水面积是其本身加上水流在其上坡方向流过的格网单元数（水流累积格网）。如果每个格网有权重，则是加权和。此操作结果数据以<code>ad8</code>结尾。<br><img src="http://ofcj2lgtd.bkt.clouddn.com/blogs/TauDEM-ArcGIS-2f99d.png" alt=""><br>此操作有两个可选项：（1）指定流域出口（outlet，shapefile文件）；（2）权重格网。在“show-help”中有详细的说明。指定流域出口会将水流累积格网的计算限制到指定出口的上游区域。还有一个选项是检查边界污染（edge contamination），即当水流方向由地形边界向内（inward）时计算集水区出现的问题。当DEM是根据流域边界剪切的，此项检查应该取消。<br><img src="http://ofcj2lgtd.bkt.clouddn.com/blogs/TauDEM-ArcGIS-f7c8a.png" alt=""></p></li></ul><h4 id="1-5-网格网络（Grid-Network）"><a href="#1-5-网格网络（Grid-Network）" class="headerlink" title="1.5 网格网络（Grid Network）"></a>1.5 网格网络（Grid Network）</h4><p>Grid Network操作以流向数据（<code>*p.tif</code>）为输入生成三种类型格网数据：（1）每个格网单元的最长流线（flow path）（<code>*plen.tif</code>）（2）每个格网单元作为结束点的所有流线的总长度（<code>*tlen.tif</code>）（3）格网网络序列（<code>*gord.tif</code>）。<br><img src="http://ofcj2lgtd.bkt.clouddn.com/blogs/TauDEM-ArcGIS-45374.png" alt=""><br>格网网络序列(Grid Network Order)结果图：<br><img src="http://ofcj2lgtd.bkt.clouddn.com/blogs/TauDEM-ArcGIS-2a609.png" alt=""></p><blockquote><p>基于D-Infinity算法的流向与集水区计算与前述基于D8算法的操作基本一致，请参照教程。</p></blockquote><h2 id="2-河流网络分析-Stream-Network-Analysis"><a href="#2-河流网络分析-Stream-Network-Analysis" class="headerlink" title="2. 河流网络分析 Stream Network Analysis"></a>2. 河流网络分析 Stream Network Analysis</h2><h4 id="2-1-基于阈值确定河道（Stream-Definition-by-Threshold）"><a href="#2-1-基于阈值确定河道（Stream-Definition-by-Threshold）" class="headerlink" title="2.1 基于阈值确定河道（Stream Definition by Threshold）"></a>2.1 基于阈值确定河道（Stream Definition by Threshold）</h4><h5 id="2-1-1-基于输入的阈值确定河流栅格格网。"><a href="#2-1-1-基于输入的阈值确定河流栅格格网。" class="headerlink" title="2.1.1 基于输入的阈值确定河流栅格格网。"></a>2.1.1 基于输入的阈值确定河流栅格格网。</h5><p>打开【Stream Definition By Threshold】，首先以水流累积格网<code>*ad8.tif</code>为输入数据，取<strong>100</strong>为阈值（阈值通常为100-200个格网单元），输出<code>*src.tif</code>数据<br><img src="http://ofcj2lgtd.bkt.clouddn.com/blogs/TauDEM-ArcGIS-6a078.png" alt=""></p><h5 id="2-1-2-移动出口点到河道上（Move-Outlets-to-Streams）"><a href="#2-1-2-移动出口点到河道上（Move-Outlets-to-Streams）" class="headerlink" title="2.1.2 移动出口点到河道上（Move Outlets to Streams）"></a>2.1.2 移动出口点到河道上（Move Outlets to Streams）</h5><p>勾绘流域出口（如水量站）上游的边界是一种常见的需求。由于站点与基于DEM勾绘出的河流之间的位置误差，站点往往不会精确地位于河流上，这时候就需要沿着D8流向往下坡方向移动直到站点遇到河道。</p><ul><li>加入站点数据<code>CubGauge.shp</code></li><li>打开Move Outlets to Streams根据面板</li><li>选择流向数据（<code>*p.tif</code>）和上一步生成的流域河道数据(<code>*src.tif</code>)</li><li><p>生成结果数据<code>*_Outletmv.shp</code>,加入到ArcMap中<br><img src="http://ofcj2lgtd.bkt.clouddn.com/blogs/TauDEM-ArcGIS-761b0.png" alt=""><br>图中红色三角形为结果，绿色圆形为原数据,蓝色为河道：<br><br><img src="http://ofcj2lgtd.bkt.clouddn.com/blogs/TauDEM-ArcGIS-a15ab.png" alt=""></p><blockquote><p>若遇到“该文件没有与之关联的程序来执行该操作”的错误，找到”C:\Program Files\TauDEM\TauDEM5Arc\MoveOutletsToStreams.py”，右键【打开方式】,找到并选择【python.exe】</p></blockquote></li></ul><h5 id="2-1-3-D8-Contributing-Area"><a href="#2-1-3-D8-Contributing-Area" class="headerlink" title="2.1.3 D8 Contributing Area"></a>2.1.3 D8 Contributing Area</h5><p>再次打开【D8 Contributing Area】工具，在【Outlets Shapefile】中选择刚刚得到的结果数据，执行得到只包括该站点上游流域的结果<code>cubdemssa.tif</code><br><img src="http://ofcj2lgtd.bkt.clouddn.com/blogs/TauDEM-ArcGIS-7aad2.png" alt=""></p><h5 id="2-1-4-Stream-Definition-By-Threshold"><a href="#2-1-4-Stream-Definition-By-Threshold" class="headerlink" title="2.1.4 Stream Definition By Threshold"></a>2.1.4 Stream Definition By Threshold</h5><p>再次打开【Stream Definition By Threshold】，以上一步生成的<code>cubdemssa.tif</code>为输入数据执行操作，生成<code>*src2.tif</code>.<br><img src="http://ofcj2lgtd.bkt.clouddn.com/blogs/TauDEM-ArcGIS-bb2ab.png" alt=""><br>结果数据（<code>*src</code>为整个区域，<code>*src2</code>为水量站为出口定义的流域）：<br><img src="http://ofcj2lgtd.bkt.clouddn.com/blogs/TauDEM-ArcGIS-24bd6.png" alt=""></p><h4 id="2-2-河区及流域-（Stream-Reach-and-Watershed）"><a href="#2-2-河区及流域-（Stream-Reach-and-Watershed）" class="headerlink" title="2.2 河区及流域 （Stream Reach and Watershed）"></a>2.2 河区及流域 （Stream Reach and Watershed）</h4><p>打开【Stream Reach and Watershed】，输入填洼后的DEM（<code>*fel.tif</code>）、D8流向格网数据（<code>*p.tif</code>）、D8集水面积数据（<code>*ad8.tif</code>）、河道栅格数据（<code>*src2.tif</code>）、移动后的出口点数据（<code>*_Outletmv.shp</code>/<code>*_moved.shp</code>），输出一个河网shapefile数据<code>*net.shp</code>及与之相关的子流域数据<code>*w.tif</code>、河流分级序列格网<code>*ord.tif</code>及网络连接树数据（<code>*tree.txt</code>）和网络坐标(<code>*coord.txt</code>数据)<br><img src="http://ofcj2lgtd.bkt.clouddn.com/blogs/TauDEM-ArcGIS-ec8b4.png" alt=""><br>结果图：<br><img src="http://ofcj2lgtd.bkt.clouddn.com/blogs/TauDEM-ArcGIS-a2f35.png" alt=""></p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[OpenLayers3 学习-0-简介]]></title>
      <url>houzw.github.io.git/2016/10/18/Openlayers-3-01/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="OpenLayers3-学习-0-简介"><a href="#OpenLayers3-学习-0-简介" class="headerlink" title="OpenLayers3 学习-0-简介"></a>OpenLayers3 学习-0-简介</h1><blockquote><p>OpenLayers 3 is a high-performance, feature-packed library for creating interactive maps on the web. It can display map tiles, vector data and markers loaded from any source on any web page. OpenLayers has been developed to further the use of geographic information of all kinds. It is completely free, Open Source JavaScript, released under the 2-clause BSD License (also known as the FreeBSD).<br><br>OpenLayers 3是一个高性能、功能强大的在网络上创建交互式地图的Javascript库。它可以在任何网页上显示来源于任何数据源的地图瓦片,矢量数据和地图标记。OpenLayers被开发用于促进各种地理信息的使用。它是完全免费的,开源的JavaScript, 基于FreeBSD许可。</p></blockquote><hr><p>OpenLayers3（OL3）对OL2进行了重新设计和实现，支持多种格式的商业和免费的地图数据源。未来的版本将包括显示3D地图或利用WebGL进行大规模矢量数据的展示的功能。</p><p>OL3基于Google的 Closure Tools，大量应用了Closure Library中的内容。</p><p>OL3利用了Canvas, DOM和WebGL来实现数据渲染。因此，IE9以下的浏览器是不支持的。OL3的设计目标是能够在桌面/平板和移动设备上都能应用。<br><br>OL3应用了和Closure library类似的对象层次结构。顶层是<code>ol</code>命名空间（即 <code>var ol={}</code>）. 其下又分为几类：</p><ol><li>更深一层的命名空间： 如<code>ol.layers</code>,以<strong>小写</strong>字母开头；</li><li>包含静态属性和方法的简单对象，如<code>ol.animation</code>，同样以<strong>小写</strong>字母开头；</li><li>类型（types）以<strong>大写</strong>字母开头。他们主要是一些<strong>类</strong>，即拥有构造函数，如<code>ol.Map</code>,<code>ol.layer.Vector</code>。也有一些是简单类型，如数组类型的<code>ol.Extent</code>.</li></ol><p>类命名空间，如<code>ol.layer</code>,拥有同名的基本类类型，如<code>ol.layer.Layer</code>，主要是用于给其他类继承的抽象类。<br><br>OL3的源码的组织方式和命名空间类似，如<code>ol/layer/vectorlayer.js</code>.</p><hr><h1 id="OpenLayers3-学习-1-基本概念"><a href="#OpenLayers3-学习-1-基本概念" class="headerlink" title="OpenLayers3 学习-1-基本概念"></a>OpenLayers3 学习-1-基本概念</h1><h2 id="Map-地图"><a href="#Map-地图" class="headerlink" title="Map - 地图"></a>Map - 地图</h2><p>OL3的核心组件是<strong>地图</strong>（<code>ol.map</code>）.他被渲染到 <code>target</code>容器（即一个在页面上包含地图的<code>div</code>）。所有的地图属性可以在创建地图时设置，或是使用 setter 方法，如<code>setTarget()</code>。<br></p><figure class="highlight html"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"map"</span> <span class="attr">style</span>=<span class="string">"width: 100%, height: 400px"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line">    <span class="keyword">var</span> map = <span class="keyword">new</span> ol.Map(&#123;<span class="attr">target</span>: <span class="string">'map'</span>&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure><p></p><h2 id="View-视图"><a href="#View-视图" class="headerlink" title="View - 视图"></a>View - 视图</h2><p><code>ol.Map</code>不负责地图的<em>中心点、缩放和投影</em>属性设置，它们是<code>ol.View</code>的实例的属性。<br></p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">map.setView(<span class="keyword">new</span> ol.View(&#123;</div><div class="line">    <span class="attr">center</span>: [<span class="number">0</span>, <span class="number">0</span>],</div><div class="line">    <span class="attr">zoom</span>: <span class="number">2</span></div><div class="line">  &#125;));</div></pre></td></tr></table></figure><p></p><p><code>ol.View</code>同时拥有<code>projection</code>属性。投影决定了坐标系统的中心（center）和地图分辨率的计算单位。OL3默认的投影是<strong>球形墨卡托</strong>（Spherical Mercator，EPSG:3857），单位为 米。</p><p><code>zoom</code>属性是一个设定地图分辨率的便捷的方法。可用的缩放级别由<code>maxZoom</code>（默认28）、<code>zoomFactor</code>（默认2）和<code>maxResolution</code>（默认值根据投影的有效范围适应256X256像素的瓦片来计算）。0级时分辨率是<em>每像素maxResolution个单元</em>，缩放时根据<code>zoomFactor</code>计算，直到<code>maxZoom</code>。</p><h2 id="Source-源"><a href="#Source-源" class="headerlink" title="Source - 源"></a>Source - 源</h2><p>OL3利用<code>ol.source.Source</code>子类来加载远程数据。商业地图服务源如<em>OpenStreetMap、Bing</em>，以及OGC规范源如<em>WMS、WMTS</em>，以及矢量数据如<em>GeoJSON、KML</em>都是可以使用的。<br></p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> osmSource = <span class="keyword">new</span> ol.source.OSM();</div></pre></td></tr></table></figure><p></p><h2 id="Layer-图层"><a href="#Layer-图层" class="headerlink" title="Layer - 图层"></a>Layer - 图层</h2><p>layer 是<em>source</em>数据的可视化表达。OL3 有3种基本图层类型：<code>ol.layer.Tile</code>、<code>ol.layer.Image</code>和<code>ol.layer.Vector</code>。</p><ul><li><code>ol.layer.Tile</code>用来表达那些提供预渲染的、依据缩放级别决定分辨率并以格网形式平铺的图片数据。（原文感觉有点拗口）</li><li><code>ol.layer.Image</code> 用来表达由服务端渲染的、可提供任意范围和分辨率的图片数据。</li><li><code>ol.layer.Vector</code> 用来表达在客户端渲染的矢量数据。<figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> osmLayer = <span class="keyword">new</span> ol.layer.Tile(&#123;<span class="attr">source</span>: osmSource&#125;);</div><div class="line">  map.addLayer(osmLayer);</div></pre></td></tr></table></figure></li></ul><h2 id="综合"><a href="#综合" class="headerlink" title="综合"></a>综合</h2><figure class="highlight html"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"map"</span> <span class="attr">style</span>=<span class="string">"width: 100%, height: 400px"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line"><span class="keyword">new</span> ol.Map(&#123;</div><div class="line">    <span class="attr">layers</span>: [</div><div class="line">      <span class="keyword">new</span> ol.layer.Tile(&#123;<span class="attr">source</span>: <span class="keyword">new</span> ol.source.OSM()&#125;)</div><div class="line">    ],</div><div class="line">    <span class="attr">view</span>: <span class="keyword">new</span> ol.View(&#123;</div><div class="line">      <span class="attr">center</span>: [<span class="number">0</span>, <span class="number">0</span>],</div><div class="line">      <span class="attr">zoom</span>: <span class="number">2</span></div><div class="line">    &#125;),</div><div class="line">    <span class="attr">target</span>: <span class="string">'map'</span></div><div class="line">  &#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure><p>参考：<br><a href="http://openlayers.org/en/latest/doc/tutorials/concepts.html" target="_blank" rel="external">http://openlayers.org/en/latest/doc/tutorials/concepts.html</a></p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[网络地理信息处理服务 Web Processing Service (WPS)]]></title>
      <url>houzw.github.io.git/2016/10/18/WPS/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="网络地理信息处理服务-Web-Processing-Service-WPS"><a href="#网络地理信息处理服务-Web-Processing-Service-WPS" class="headerlink" title="网络地理信息处理服务 Web Processing Service (WPS)"></a>网络地理信息处理服务 Web Processing Service (WPS)</h1><h2 id="0-概述"><a href="#0-概述" class="headerlink" title="0. 概述"></a>0. 概述</h2><blockquote><p>以下内容引用OSGeo的相关介绍：<a href="https://live.osgeo.org/zh/standards/wps_overview.html" target="_blank" rel="external">https://live.osgeo.org/zh/standards/wps_overview.html</a></p></blockquote><p>WPS 标准为网络地理信息处理服务提供了标准化的输入和输出。当前WPS标准最新版本是2.0，其具体内容可查看 <a href="http://docs.opengeospatial.org/is/14-065/14-065.html" target="_blank" rel="external">OGC 14-065</a>。</p><p>OGC® Web Processing Service (WPS) 标准描述了如何通过远程的任何算法和模型处理获得地理空间的栅格或矢量信息产品。WPS 提供的服务可以是简单的空间定位ｉｄｅ两份数据相减，也可以是复杂大气模型等运算。(<a href="http://www.opengeospatial.org/standards/wps)。" target="_blank" rel="external">http://www.opengeospatial.org/standards/wps)。</a></p><p>WPS 可用于：</p><ul><li>使用即插即用的机制降低数据处理流程的复杂性。</li><li>连接不同的处理操作。</li><li>开发可以被其它用户重用的处理过程。</li><li>处理流程和模型集中与服务提供者，方便维护。</li><li>利用中央服务器集群的高运算性能。</li><li>方便对复杂模型的公共使用。</li></ul><p><img src="http://ofcj2lgtd.bkt.clouddn.com/blogs/WPS-8dbc9.png" alt=""></p><h2 id="1-WPS-服务"><a href="#1-WPS-服务" class="headerlink" title="1. WPS 服务"></a>1. WPS 服务</h2><blockquote><p>以下内容引用 ArcGIS for Server的文档：<a href="http://server.arcgis.com/zh-cn/server/latest/publish-services/linux/wps-services.htm" target="_blank" rel="external">http://server.arcgis.com/zh-cn/server/latest/publish-services/linux/wps-services.htm</a></p></blockquote><h3 id="为何使用-WPS-服务？"><a href="#为何使用-WPS-服务？" class="headerlink" title="为何使用 WPS 服务？"></a>为何使用 WPS 服务？</h3><p>如果要在不同的平台和客户端之间以一种开放并经认可的方式提供地理处理服务，则 WPS 服务非常有用。任何原生支持 WPS 规范的客户端均可查看和使用您的服务。</p><h3 id="范围和兼容性"><a href="#范围和兼容性" class="headerlink" title="范围和兼容性"></a>范围和兼容性</h3><p>客户端应用程序可通过向服务的 URL 附加参数来使用 WPS 服务。<br><br>发布到 ArcGIS Server 的 WPS 服务支持以下强制性的操作：</p><ul><li>请求服务的元数据 (<code>GetCapabilities</code>)</li><li>请求有关可运行在服务上的进程的详细信息 (<code>DescribeProcess</code>)</li><li>请求运行一个由 WPS 服务实现的进程 (<code>Execute</code>)</li></ul><h3 id="WPS-执行模式"><a href="#WPS-执行模式" class="headerlink" title="WPS 执行模式"></a>WPS 执行模式</h3><p>WPS 服务及其随附的任务或者是<strong>同步</strong>，或者是<strong>异步</strong>。同步意味着，当任务在服务器上执行时，客户端应用程序<strong>必须等待完成</strong>才能执行其他任务。异步意味着，客户端应用程序<strong>不必等待</strong>服务器上的任务完成即可继续执行其他任务。对于这两种执行模式，任务结果都可以存储在服务器中并通过 URL 进行引用，或者直接将结果返回到客户端。</p><p>选择以同步还是异步方式执行 WPS 服务需要取决于具体情况。只有那些<strong>执行速度快</strong>且<strong>仅输出小型数据集</strong>的任务，才应被发布为<strong>同步</strong> WPS 服务。</p><h3 id="支持-WPS-服务的数据类型"><a href="#支持-WPS-服务的数据类型" class="headerlink" title="支持 WPS 服务的数据类型"></a>支持 WPS 服务的数据类型</h3><p>只有某些数据类型才可用作 WPS 服务的输入和输出参数。下表列出了 WPS 服务中所支持的输入和输出数据类型及其等效的子类型。</p><table><thead><tr><th>输入/输出数据类型</th><th>子类型</th></tr></thead><tbody><tr><td rowspan="6">标准</td><td>长整型</td></tr><tr><td>双精度</td></tr><tr><td>字符串</td></tr><tr><td>日期</td></tr><tr><td>布尔型</td></tr><tr><td>线性单位</td></tr><tr><td>要素集</td><td>GML 3-SF</td></tr><tr><td>记录集</td><td>GML 3-SF</td></tr><tr><td rowspan="4">文件</td><td>.zip</td></tr><tr><td>二进制</td></tr><tr><td>XML</td></tr><tr><td>纯文本</td></tr><tr><td rowspan="2">栅格</td><td>图像/TIFF</td></tr><tr><td>二进制（仅输入）</td></tr></tbody></table><h3 id="发布-WPS-服务"><a href="#发布-WPS-服务" class="headerlink" title="发布 WPS 服务"></a>发布 WPS 服务</h3><blockquote><p>与具体平台相关，参考：<a href="http://server.arcgis.com/zh-cn/server/latest/get-started/windows/tutorial-publishing-a-wps-service.htm" target="_blank" rel="external">教程：发布 WPS 服务</a></p></blockquote><h3 id="使用-WPS-服务"><a href="#使用-WPS-服务" class="headerlink" title="使用 WPS 服务"></a>使用 WPS 服务</h3><blockquote><p>来源同上</p></blockquote><h4 id="客户端的类型"><a href="#客户端的类型" class="headerlink" title="客户端的类型"></a>客户端的类型</h4><p>发布 WPS 服务后，可以在任何支持 WPS 的客户端中使用它(如：<a href="https://wiki.52north.org/bin/view/Processing/52nWebProcessingService" target="_blank" rel="external">52north</a>、<a href="http://udig.refractions.net/" target="_blank" rel="external">uDig</a>、<br><a href="http://openlayers.org/" target="_blank" rel="external">OpenLayers</a>、<a href="http://www.zoo-project.org/" target="_blank" rel="external">ZOO</a>)。Web 浏览器是 WPS 服务最简单的客户端之一。可以通过 HTTP 请求信息，然后响应或者异常会通过浏览器返回。</p><h4 id="URL-结构"><a href="#URL-结构" class="headerlink" title="URL 结构"></a>URL 结构</h4><blockquote><p><a href="http://server.arcgis.com/zh-cn/server/latest/publish-services/windows/wps-services.htm" target="_blank" rel="external">http://server.arcgis.com/zh-cn/server/latest/publish-services/windows/wps-services.htm</a></p></blockquote><p>要使用 WPS 服务，需要了解 URL 链接地址的结构。URL 链接需要遵循下面的模式：<br><code>http://gisserver.domain.com:6080/arcgis/services/folder/service/GPServer/WPSServer?</code></p><p>例如，如果在地理处理服务 <code>WPSDemoService</code> 中启用了 WPS 功能并将其发布到服务器 <code>gisserver</code>（端口号为 6080）上名为 <code>DemoFolder</code> 的文件夹中，则 URL 将如下所示：<br><code>http://gisserver:6080/arcgis/services/DemoFolder/WPSDemoService/GPServer/WPSServer?</code></p><p><code>GetCapabilities</code>、<code>DescribeProcess</code> 和 <code>Execute</code> 操作的 WPS 请求都可通过 HTTP 发送至此 URL。这些请求的响应和异常随后将返回到客户端。有关以上操作及其参数的详细信息，请参阅 <code>OGC WPS</code> 规范。</p><h4 id="访问WPS-服务"><a href="#访问WPS-服务" class="headerlink" title="访问WPS 服务"></a>访问WPS 服务</h4><p>可按照以下步骤通过 Web 浏览器访问 WPS 服务：</p><ol><li>打开 <code>Web</code> 浏览器。</li><li>执行 <code>GetCapabilities</code> 和 <code>DescribeProcess</code> 请求，如以下部分中所示。</li></ol><blockquote><p>示例中使用的是 WPS 1.0.0 规范</p></blockquote><h5 id="GetCapabilities"><a href="#GetCapabilities" class="headerlink" title="GetCapabilities"></a>GetCapabilities</h5><p>此请求以 <code>GML</code> 格式通过服务返回所有<strong>元数据</strong>并处理<strong>可用数据</strong>。要使用 <code>GetCapabilities</code> 操作，请复制 WPS 服务 URL 并将其粘贴到地址栏中，然后在 URL 末尾添加 <code>?SERVICE=WPS&amp;VERSION=1.0.0&amp;REQUEST=GetCapabilities</code>。</p><p>URL 示例： <code>http://gisserver.domain.com:6080/arcgis/services/my_wps/GPServer/WPSServer?SERVICE=WPS&amp;VERSION=1.0.0&amp;REQUEST=GetCapabilities</code></p><h5 id="DescribeProcess"><a href="#DescribeProcess" class="headerlink" title="DescribeProcess"></a>DescribeProcess</h5><p>对 <code>DescribeProcess</code> 请求的响应包含提供的<strong>特定过程详细信息</strong>，其基本描述了过程的唯一标识符和标识符、类型以及过程的每个强制或可选输入/输出参数的方案。WPS<strong>客户端需要此信息</strong>来发布后续执行请求以进行实际的地理空间处理。要使用 <code>DescribeProcess</code> 操作，请复制 WPS 服务 URL 并将其粘贴到地址栏中，然后在 URL 末尾添加 <code>?SERVICE=WPS&amp;VERSION=1.0.0&amp;REQUEST=DescribeProcess</code>。</p><p>URL 示例： <code>http://gisserver.domain.com:6080/arcgis/services/my_wps/GPServer/WPSServer?SERVICE=WPS&amp;VERSION=1.0.0&amp;REQUEST=DescribeProcess&amp;Identifier=output_feature_layer</code></p><h4 id="执行-WPS-服务处理"><a href="#执行-WPS-服务处理" class="headerlink" title="执行 WPS 服务处理"></a>执行 WPS 服务处理</h4><p>要在 Web 上执行地理空间处理，可通过 WPS 客户端发送<strong>执行请求</strong>到 WPS 服务。执行请求通常载有 WPS 进程的每个<strong>输入/输出参数的值或参考</strong>，也可指定 WPS 服务应如何发回进程的结果。对执行请求的响应包含空间处理的嵌入式结果，可配置为返回最近的空间处理作业的结果。</p><p>通常可在 WPS 客户端中通过 HTTP POST 请求调用执行操作。以下是一个执行请求示例：</p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">wps:Execute</span> <span class="attr">xmlns:wps</span>=<span class="string">"http://www.opengis.net/wps/1.0.0"</span> <span class="attr">service</span>=<span class="string">"WPS"</span> <span class="attr">version</span>=<span class="string">"1.0.0"</span> <span class="attr">language</span>=<span class="string">"en-US"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">ows:Identifier</span> <span class="attr">xmlns:ows</span>=<span class="string">"http://www.opengis.net/ows/1.1"</span>&gt;</span>SampleProcessId<span class="tag">&lt;/<span class="name">ows:Identifier</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">wps:DataInputs</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">wps:Input</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">ows:Identifier</span> <span class="attr">xmlns:ows</span>=<span class="string">"http://www.opengis.net/ows/1.1"</span>&gt;</span>Input_String<span class="tag">&lt;/<span class="name">ows:Identifier</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">wps:Data</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">wps:LiteralData</span> <span class="attr">dataType</span>=<span class="string">"xs:string"</span>&gt;</span>abcdefg<span class="tag">&lt;/<span class="name">wps:LiteralData</span>&gt;</span></div><div class="line">         <span class="tag">&lt;/<span class="name">wps:Data</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">wps:Input</span>&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">wps:DataInputs</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">wps:ResponseForm</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">wps:ResponseDocument</span> <span class="attr">storeExecuteResponse</span>=<span class="string">"true"</span> <span class="attr">lineage</span>=<span class="string">"true"</span> <span class="attr">status</span>=<span class="string">"false"</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">wps:Output</span> <span class="attr">schema</span>=<span class="string">"http://www.w3.org/TR/xmlschema-2/#string"</span> <span class="attr">asReference</span>=<span class="string">"false"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">ows:Identifier</span> <span class="attr">xmlns:ows</span>=<span class="string">"http://www.opengis.net/ows/1.1"</span>&gt;</span>Output_String<span class="tag">&lt;/<span class="name">ows:Identifier</span>&gt;</span></div><div class="line">         <span class="tag">&lt;/<span class="name">wps:Output</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">wps:ResponseDocument</span>&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">wps:ResponseForm</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">wps:Execute</span>&gt;</span></div></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[开源地理空间基金会 OSGeo简介]]></title>
      <url>houzw.github.io.git/2016/10/10/%E5%BC%80%E6%BA%90%E5%9C%B0%E7%90%86%E7%A9%BA%E9%97%B4%E5%9F%BA%E9%87%91%E4%BC%9A%C2%A0OSGeo%E5%8F%8A%E7%9B%B8%E5%85%B3%E9%A1%B9%E7%9B%AE%E4%BB%8B%E7%BB%8D/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Jul 02 2018 09:30:02 GMT+0800 (中国标准时间) --><h1 id="开源地理空间基金会-OSGeo"><a href="#开源地理空间基金会-OSGeo" class="headerlink" title="开源地理空间基金会 OSGeo"></a>开源地理空间基金会 OSGeo</h1><p><img src="http://www.osgeo.org/sites/all/themes/osgeo/logo.png" alt="主页"></p><blockquote><p>相关站点：<br>OSGeo官方站点：<a href="http://www.osgeo.org/home" target="_blank" rel="external">http://www.osgeo.org/home</a><br>OSGeo中国中心：<a href="http://www.osgeo.cn/" target="_blank" rel="external">http://www.osgeo.cn/</a><br>OSGeo GitHub站点：<a href="https://github.com/OSGeo" target="_blank" rel="external">https://github.com/OSGeo</a></p></blockquote><p>[TOC]</p><h2 id="1-关于OSGeo基金会"><a href="#1-关于OSGeo基金会" class="headerlink" title="1. 关于OSGeo基金会"></a>1. 关于OSGeo基金会</h2><h3 id="1-1-OSGeo-简介"><a href="#1-1-OSGeo-简介" class="headerlink" title="1.1 OSGeo 简介"></a>1.1 OSGeo 简介</h3><p><a href="http://www.osgeo.org/home" target="_blank" rel="external">OSGeo（开源地理空间基金会）</a>（Open Source Geospatial Foundation）是一个非盈利组织。其主要目标是支持和推广开源地理空间技术和数据的协作开发。OSGeo基金会向许多开源地理空间社区提供了财政、组织和法律方面的支持。它同时也是独立的法人组织机构，社区成员可以贡献代码、资金和其他资源。这些贡献的资源将会以公众利益为目标来维护。OSGeo也作为开源地理空间社区的延伸，提供了公共论坛以及跨项目协作的共享基础。</p><h3 id="1-2-OSGeo-使命"><a href="#1-2-OSGeo-使命" class="headerlink" title="1.2 OSGeo 使命"></a>1.2 OSGeo 使命</h3><blockquote><p>To support the development of open source geospatial software, and promote its widespread use.</p></blockquote><p>支持开放源代码的地理空间软件发展及其推广应用。</p><h3 id="1-3-OSGeo-目标"><a href="#1-3-OSGeo-目标" class="headerlink" title="1.3 OSGeo 目标"></a>1.3 OSGeo 目标</h3><ul><li>为基金会项目提供诸如信息基础设施、基金和法律等方面的资源支持</li><li>促进免费地学数据的使用——没有数据，软件就是没有任何作用</li><li>促进开源软件在地理空间业界的使用，包括公关、培训、拓广等活动</li><li>鼓励开放标准的实现和基于标准的基金项目互操作</li><li>为了建立项目的“品牌”，确保基金会项目的高质量</li><li>使基金会和相关软件更容易地被用户使用，例如软件打包、文档等</li><li>通过开设课程、提供支持等推进OSGeo软件在教学中的使用</li><li>鼓励OSGeo不同语言(eg. Java/C/Python)和平台(eg. Win32, Unix, MacOS)社区之间的交流与合作</li><li>通过软件和社区拓展服务的国际化来支持全球社区对基金会项目的使用和贡献</li><li>组织年度 OSGeo 会议，可能与相关组织合作(eg. EOGEO).</li><li>为优秀的OSGeo社区服务者颁发 Sol Katz 奖</li></ul><h2 id="2-OSGeo-项目"><a href="#2-OSGeo-项目" class="headerlink" title="2. OSGeo 项目"></a>2. OSGeo 项目</h2><blockquote><p>部分项目网站以无法访问，故没有在文中列出。</p></blockquote><h3 id="2-1-网络制图（Web-Mapping）"><a href="#2-1-网络制图（Web-Mapping）" class="headerlink" title="2.1 网络制图（Web Mapping）"></a>2.1 网络制图（Web Mapping）</h3><h4 id="2-1-1-deegree"><a href="#2-1-1-deegree" class="headerlink" title="2.1.1 deegree"></a>2.1.1 <a href="http://www.deegree.org/" target="_blank" rel="external">deegree</a></h4><p><img src="http://www.deegree.org/images/logos/deegree.png" alt="deegree.org"><br>deegree是面向空间数据基础设施和网络地理空间的一个髋开源软件。 deegree 提供了一系列数据获取、可视化、数据发现和数据安全方法的空间数据管理组件。 deegree 的核心是开放标准.</p><h4 id="2-1-2-geomajas"><a href="#2-1-2-geomajas" class="headerlink" title="2.1.2 geomajas"></a>2.1.2 <a href="http://www.geomajas.org/" target="_blank" rel="external">geomajas</a></h4><p><img src="http://www.geomajas.org/sites/default/files/logo.png" alt=""><br>Geomajas 是一系列完全的端到端（end-to-end）网络制图解决方案的开源免费GIS库、工具和API的集合。<br>Geomajas 是一个创建 Web GIS 应用的开源平台:</p><ul><li>显示和编辑多源地理数据</li><li>通过一系列插件和地图部件（plugins &amp; map widgets）提供开箱即用的功能（Out-of-the-box functionality）</li><li>Enterprise-ready with integrated security</li><li>Java | GWT | Javascript API</li></ul><h4 id="2-1-3-GeoMOOSE"><a href="#2-1-3-GeoMOOSE" class="headerlink" title="2.1.3 GeoMOOSE"></a>2.1.3 <a href="http://www.geomoose.org/" target="_blank" rel="external">GeoMOOSE</a></h4><p><img src="http://www.geomoose.org/_static/logo_2011.png" alt="GeoMOOSE Logo"><br>GeoMOOSE 是一个用于展示分布式制图数据的JavaScript Web 客户端框架。 GeoMOOSE 的优势包括模块化、可配置性，安装包中包含了一系列的核心功能组件。对于服务器而言，GeoMOOSE 也是轻量级的，可使服务器轻松应对大量用户和大量的图层及服务。</p><p>GeoMOOSE 的核心使用JavaScript 和HTML编写. 完全可以只使用基础的web服务器 (Nginx, Apache, IIS)来运行GeoMOOSE . 但除了基本的客户端核心, GeoMOOSE 也打包了一系列使用PHP编写的内置服务. 这些服务使得GeoMOOSE 具备了信息查询, 选择和搜索数据集的功能。如果你有能够执行类似功能的脚本，GeoMOOSE 可以can be tuned to work with those services, no matter which language they were written.</p><h4 id="2-1-4-GeoServer"><a href="#2-1-4-GeoServer" class="headerlink" title="2.1.4 GeoServer"></a>2.1.4 <a href="http://geoserver.org/" target="_blank" rel="external">GeoServer</a></h4><p><img src="http://geoserver.org/img/geoserver-logo.png" alt=""><br>GeoServer is a Java-based software server that allows users to view and edit geospatial data. Using open standards set forth by the <a href="http://www.opengeospatial.org/" target="_blank" rel="external">Open Geospatial Consortium (OGC)</a>, GeoServer allows for great flexibility in map creation and data sharing.</p><h4 id="2-1-5-Mapbender"><a href="#2-1-5-Mapbender" class="headerlink" title="2.1.5 Mapbender"></a>2.1.5 <a href="http://mapbender3.org/" target="_blank" rel="external">Mapbender</a></h4><p><img src="http://mapbender3.org/sites/default/files/mapbender-Logo_03-rgb_2_0.jpg" alt="Home"><br>Mapbender is the back office software and client framework for spatial data infrastructures. The software is implemented in PHP und JavaScript and licenced under <a href="https://opensource.org/licenses/MIT" title="MIT" target="_blank" rel="external">MIT</a>. It provides a data model and web based interfaces for displaying, navigating and interacting with OGC compliant map services.</p><p>Mapbender3 is the successor of the Mapbender 2 Version and is based on the frameworks Symfony2, JQuery and OpenLayers.</p><h4 id="2-1-6-MapFish"><a href="#2-1-6-MapFish" class="headerlink" title="2.1.6 MapFish"></a>2.1.6 <a href="http://www.mapfish.org/" target="_blank" rel="external">MapFish</a></h4><p><img src="http://www.mapfish.org/static/mapfish_white.png" alt="Logo"><br>MapFish is a flexible and complete framework for building rich web-mapping applications. It emphasizes high productivity, and high-quality development.</p><p>MapFish is based on the <a href="http://pylonshq.com/" target="_blank" rel="external">Pylons</a> Python web framework. MapFish extends Pylons with geospatial-specific functionality. For example MapFish provides specific tools for creating web services that allows querying and editing geographic objects.</p><p>MapFish also provides a complete RIA-oriented JavaScript toolbox, a JavaScript testing environment, and tools for compressing JavaScript code. The JavaScript toolbox is composed of the <a href="http://extjs.com/" target="_blank" rel="external">ExtJS</a>,<a href="http://www.openlayers.org/" target="_blank" rel="external">OpenLayers</a> , <a href="http://www.geoext.org/" target="_blank" rel="external">GeoExt</a> JavaScript toolkits.</p><p>MapFish is compliant with the <a href="http://www.opengeospatial.org/" target="_blank" rel="external">Open Geospatial Consortium</a> standards. This is achieved through OpenLayers or GeoExt supporting several OGC norms, like WMS, WFS, WMC, KML, GML etc..</p><p>MapFish is open source, and distributed under the <a href="http://www.opensource.org/licenses/bsd-license.php" target="_blank" rel="external">BSD</a> license.</p><h4 id="2-1-7-MapGuide-Open-Source"><a href="#2-1-7-MapGuide-Open-Source" class="headerlink" title="2.1.7 MapGuide Open Source"></a>2.1.7 <a href="http://mapguide.osgeo.org/" target="_blank" rel="external">MapGuide Open Source</a></h4><p><img src="http://trac.osgeo.org/mapguide/chrome/site/mgos.gif" alt=""><br>MapGuide Open Source is a web-based platform that enables users to develop and deploy web mapping applications and geospatial web services. MapGuide features an interactive viewer that includes support for feature selection, property inspection, map tips, and operations such as buffer, select within, and measure. MapGuide includes an XML database for managing content, and supports most popular geospatial file formats, databases, and standards. MapGuide can be deployed on Linux or Windows, supports Apache and IIS web servers, and offers extensive PHP, .NET, Java, and JavaScript APIs for application development. MapGuide Open Source is licensed under the LGPL.</p><h4 id="2-1-8-MapServer"><a href="#2-1-8-MapServer" class="headerlink" title="2.1.8 MapServer"></a>2.1.8 <a href="http://www.mapserver.org/" target="_blank" rel="external">MapServer</a></h4><p><img src="http://www.mapserver.org/_static/banner.png" alt="MapServer banner"><br>MapServer 是一个在网络上发布空间数据和交互式制图应用的开源组件. 最早在20世纪90年代中期在 University of Minnesota开发, MapServer 以 <a href="http://www.mapserver.org/copyright.html#license" target="_blank" rel="external">MIT-style license</a> 发布, 可在各主流操作系统平台运行 (<a href="http://www.mapserver.org/download.html#windows" target="_blank" rel="external">Windows</a>, <a href="http://www.mapserver.org/download.html#linux" target="_blank" rel="external">Linux</a>, <a href="http://www.mapserver.org/download.html#osx" target="_blank" rel="external">Mac OS X</a>). MapServer 不是一个全功能的 <a href="http://en.wikipedia.org/wiki/Geographic_information_system" target="_blank" rel="external">GIS</a> 系统, 将来也不会是.</p><p>MapServer由被 <a href="http://www.osgeo.org/" target="_blank" rel="external">OSGeo</a> 认可的项目指导委员会（<a href="http://www.mapserver.org/psc.html#psc" target="_blank" rel="external">Project Steering Committee (PSC)</a>）来组织管理全球开发者和用户支持下的项目的维护、升级.</p><h4 id="2-1-9-OpenLayers"><a href="#2-1-9-OpenLayers" class="headerlink" title="2.1.9 OpenLayers"></a>2.1.9 <a href="http://openlayers.org/" target="_blank" rel="external">OpenLayers</a></h4><p><img src="index_files/e5c6e1d2-a9d2-4f27-9bf0-cd389576b576.jpg" alt=""><br>OpenLayers makes it easy to put a dynamic map in any web page. It can display map tiles, vector data and markers loaded from any source. OpenLayers has been developed to further the use of geographic information of all kinds. It is completely free, Open Source JavaScript, released under the 2-clause BSD License (also known as the FreeBSD).<br><img src="index_files/c8f7d6f1-15bd-46f8-811a-e7104c2fef25.jpg" alt=""></p><h3 id="2-2-桌面GIS应用（Desktop-Applications）"><a href="#2-2-桌面GIS应用（Desktop-Applications）" class="headerlink" title="2.2. 桌面GIS应用（Desktop Applications）"></a>2.2. 桌面GIS应用（Desktop Applications）</h3><h4 id="2-2-1-GRASS-GIS"><a href="#2-2-1-GRASS-GIS" class="headerlink" title="2.2.1 GRASS GIS"></a>2.2.1 <a href="http://grass.osgeo.org/" target="_blank" rel="external">GRASS GIS</a></h4><p><img src="https://grass.osgeo.org/uploads/images/30-years-grass-gis-logo-black-300px.png" alt="30 YEARS OF GRASS GIS!"><br><strong>GRASS GIS</strong>, 一般称为 GRASS (Geographic Resources Analysis Support System), 是一个免费开源的 <a href="http://en.wikipedia.org/wiki/Geographic_information_system" target="_blank" rel="external">Geographic Information System</a> (GIS) 软件套件，可用于空间数据管理和分析、图像处理、图形和地图产品制作、空间建模与可视化等. GRASS GIS 目前不仅被全球的学术和商业机构使用，也被许多政府机构和环境咨询公司使用. 他是 <a href="http://www.osgeo.org/" target="_blank" rel="external">Open Source Geospatial Foundation</a> (OSGeo)的创始成员.</p><h4 id="2-2-2-gvSIG"><a href="#2-2-2-gvSIG" class="headerlink" title="2.2.2 gvSIG"></a>2.2.2 <a href="http://www.gvsig.com/" target="_blank" rel="external">gvSIG</a></h4><p><img src="http://www.gvsig.net:9090/documents/10184/13596/gvSIG_association.jpg/5390de76-f9b1-4972-8978-8e2d8c44f58f?t=1400586991791" alt="gvSIG Association"><br>A powerful, user-friendly, interoperable GIS used by thousands of users worldwide.</p><p>It is easy to work in a variety of formats with gvSIG Desktop, vector and raster files, databases and remote services. There are always available all kinds of tools to analyze and manage your geographic information.</p><p>gvSIG Desktop is designed to be an easily extensible solution, allowing thus continually improving the software application and developing tailor made solutions.</p><p>gvSIG Desktop is open source software, GNU / GPL license, this makes its free use, distribution, study and improvement.</p><p>Download <a href="http://www.gvsig.com/products/gvsig-desktop/downloads" target="_blank" rel="external">gvSIG Desktop</a>, access <a href="http://www.gvsig.com/products/gvsig-desktop/documentation" target="_blank" rel="external">quick guide</a> and start using it!</p><h4 id="2-2-3-Marble"><a href="#2-2-3-Marble" class="headerlink" title="2.2.3 Marble"></a>2.2.3 <a href="http://marble.kde.org/" target="_blank" rel="external">Marble</a></h4><p><img src="https://marble.kde.org/img/marble-logo.png" alt=""><br>Marble is a virtual globe and world atlas — your swiss army knife for maps.</p><h4 id="2-2-4-QGIS"><a href="#2-2-4-QGIS" class="headerlink" title="2.2.4 QGIS"></a>2.2.4 <a href="http://www.qgis.org/" target="_blank" rel="external">QGIS</a></h4><p><img src="http://www.qgis.org/en/_static/images/trademark.png" alt=""><br>QGIS 是一个用户友好的开源 GIS 软件，以 GNU General Public License发布. QGIS 是 Open Source Geospatial Foundation (OSGeo)的官方项目. 它能够在 Linux, Unix, Mac OSX, Windows 和Android 上运行，支持多种类型的矢量、栅格数据和数据库格式与功能 vector, raster, and database formats and functionalities.</p><h3 id="2-3-地理空间库（Geospatial-Libraries）"><a href="#2-3-地理空间库（Geospatial-Libraries）" class="headerlink" title="2.3 地理空间库（Geospatial Libraries）"></a>2.3 地理空间库（Geospatial Libraries）</h3><h4 id="2-3-1-FDO"><a href="#2-3-1-FDO" class="headerlink" title="2.3.1 FDO"></a>2.3.1 <a href="http://fdo.osgeo.org/" target="_blank" rel="external">FDO</a></h4><p><img src="http://fdo.osgeo.org/files/fdo_arch_thumb.gif" alt="FDO"><br>FDO Data Access Technology 是处理、定义和分析存储于任何位置的地理空间信息的API. FDO uses a provider-based model for supporting a variety of geospatial data sources, where each provider typically supports a particular data format or data store. FDO (“Feature Data Object”) is free, open source software licensed under the <a href="http://fdo.osgeo.org/lgpl.html" target="_blank" rel="external">LGPL</a>.</p><h4 id="2-3-2-GDAL-OGR"><a href="#2-3-2-GDAL-OGR" class="headerlink" title="2.3.2 GDAL/OGR"></a>2.3.2 <a href="http://www.gdal.org/" target="_blank" rel="external">GDAL/OGR</a></h4><p><img src="http://trac.osgeo.org/gdal/chrome/site/trac_logo.png" alt="GDAL"><br>GDAL 是一个栅格和矢量空间数据格式转换库，以 <a href="http://www.osgeo.org/" target="_blank" rel="external">Open Source Geospatial Foundation</a> 的 <a href="http://trac.osgeo.org/gdal/wiki/FAQGeneral#WhatlicensedoesGDALOGRuse" target="_blank" rel="external">X/MIT</a> style 开源许可发布. 作为一个程序库, 它为所有支持的格式向调用它的应用程序提供了单一栅格抽象数据模型（<a href="http://www.gdal.org/gdal_datamodel.html" target="_blank" rel="external">single raster abstract data model</a> ）和单一矢量抽象数据模型（ <a href="http://www.gdal.org/ogr_arch.html" target="_blank" rel="external">single vector abstract data model</a>. 他同时也包括了一系列数据转换和处理的实用的命令行方法。 <a href="http://trac.osgeo.org/gdal/wiki/Release/2.1.1-News" target="_blank" rel="external">NEWS</a> 页面说明了 2016 年发布的 GDAL/OGR 2.1.1 的情况.</p><h4 id="2-3-3-GEOS"><a href="#2-3-3-GEOS" class="headerlink" title="2.3.3 GEOS"></a>2.3.3 <a href="https://trac.osgeo.org/geos/" target="_blank" rel="external">GEOS</a></h4><p><img src="https://trac.osgeo.org/geos/chrome/site/geos.gif" alt="GEOS"><br>GEOS (Geometry Engine - Open Source) is a C++ port of the <a href="http://tsusiatsoftware.net/jts/main.html" target="_blank" rel="external">Java Topology Suite</a> (JTS). As such, it aims to contain the complete functionality of JTS in C++. This includes all the <a href="http://www.opengeospatial.org/standards/sfs" target="_blank" rel="external">OpenGIS Simple Features for SQL</a> spatial predicate functions and spatial operators, as well as specific JTS enhanced topology functions.</p><p>GEOS is available under the terms of <a href="http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html" target="_blank" rel="external">GNU Lesser General Public License</a> (LGPL).</p><h4 id="2-3-4-GeoTools"><a href="#2-3-4-GeoTools" class="headerlink" title="2.3.4 GeoTools"></a>2.3.4 <a href="http://www.geotools.org/" target="_blank" rel="external">GeoTools</a></h4><p><img src="http://geotools.org/_static/img/geotools-logo.png" alt=""><br>GeoTools is an open source (LGPL) Java code library which provides standards compliant methods for the manipulation of geospatial data, for example to implement Geographic Information Systems (GIS). The GeoTools library implements Open Geospatial Consortium (OGC) specifications as they are developed.</p><h4 id="2-3-5-OSSIM"><a href="#2-3-5-OSSIM" class="headerlink" title="2.3.5 OSSIM"></a>2.3.5 <a href="https://trac.osgeo.org/ossim/" target="_blank" rel="external">OSSIM</a></h4><p><img src="https://trac.osgeo.org/ossim/chrome/site/ossim.jpg" alt="OSSIM"><br>OSSIM is a powerful suite of geospatial libraries and applications used to process imagery, maps, terrain, and vector data. The software has been under active development <a href="https://trac.osgeo.org/ossim/wiki/history" target="_blank" rel="external">since 1996</a> and is deployed across a number of private, federal and civilian agencies.</p><h4 id="2-3-6-PostGIS"><a href="#2-3-6-PostGIS" class="headerlink" title="2.3.6 PostGIS"></a>2.3.6 <a href="http://postgis.net/" target="_blank" rel="external">PostGIS</a></h4><p><img src="http://postgis.net/images/postgis-logo.png" alt=""><br>PostGIS is a spatial database extender for <a href="http://postgresql.org/" target="_blank" rel="external">PostgreSQL</a> object-relational database. It adds support for geographic objects allowing location queries to be run in SQL.<br>In addition to basic location awareness, PostGIS offers many features rarely found in other competing spatial databases such as Oracle Locator/Spatial and SQL Server. Refer to <a href="http://postgis.net/features" target="_blank" rel="external">PostGIS Feature List</a> for more details.<br>PostGIS is released under the GNU General Public License (<a href="http://opensource.org/licenses/gpl-2.0.php" target="_blank" rel="external">GPLv2</a>).</p><h3 id="2-4-元数据目录（Metadata-Catalogs）"><a href="#2-4-元数据目录（Metadata-Catalogs）" class="headerlink" title="2.4 元数据目录（Metadata Catalogs）"></a>2.4 元数据目录（Metadata Catalogs）</h3><h4 id="2-4-1-GeoNetwork"><a href="#2-4-1-GeoNetwork" class="headerlink" title="2.4.1 GeoNetwork"></a>2.4.1 <a href="http://geonetwork-opensource.org/" target="_blank" rel="external">GeoNetwork</a></h4><p><img src="http://geonetwork-opensource.org/_static/chrome/geonetwork3-logo.png" alt=""><br>GeoNetwork is a catalog application to <strong>manage spatially referenced resources</strong>. It provides powerful<strong>metadata editing</strong> and <strong>search</strong> functions as well as an interactive web map viewer. It is currently used in<strong>numerous Spatial Data Infrastructure initiatives across the world</strong>.</p><h4 id="2-4-2-pycsw"><a href="#2-4-2-pycsw" class="headerlink" title="2.4.2 pycsw"></a>2.4.2 <a href="http://pycsw.org/" target="_blank" rel="external">pycsw</a></h4><p><img src="http://pycsw.org/img/pycsw-logo.png" alt="pycsw"><br>pycsw is an OGC <a href="https://opengeospatial.org/standards/cat" title="CSW" target="_blank" rel="external">CSW</a> server implementation written in <a href="http://www.python.org/" target="_blank" rel="external">Python</a>. Started in 2010 (more formally announced in <a href="http://www.kralidis.ca/blog/2011/02/04/help-wanted-baking-a-csw-server-in-python/" target="_blank" rel="external">2011</a>), pycsw allows for the publishing and discovery of geospatial metadata via numerous APIs (CSW 2/CSW 3, OpenSearch, OAI-PMH, SRU), providing a standards-based metadata and catalogue component of spatial data infrastructures. pycsw is <a href="http://opensource.org/" target="_blank" rel="external">Open Source</a>, released under an MIT <a href="http://docs.pycsw.org/en/latest/license.html" target="_blank" rel="external">license</a>, and runs on all major platforms (Windows, Linux, Mac OS X).</p><h3 id="2-5-外延项目（Outreach-Projects）"><a href="#2-5-外延项目（Outreach-Projects）" class="headerlink" title="2.5 外延项目（Outreach Projects）"></a>2.5 外延项目（Outreach Projects）</h3><h4 id="2-5-1-Public-Geospatial-Data"><a href="#2-5-1-Public-Geospatial-Data" class="headerlink" title="2.5.1 Public Geospatial Data"></a>2.5.1 <a href="http://www.osgeo.org/geodata" target="_blank" rel="external">Public Geospatial Data</a></h4><p>The geodata group is a gathering of people who are committed to these objectives:</p><ul><li>Promote the use of open geospatial formats</li><li>Promote public access to state-collected geodata</li><li>Run a repository of open geodata</li><li>Present and explain licenses for public geodata</li></ul><h4 id="2-5-2-Education-and-Curriculum"><a href="#2-5-2-Education-and-Curriculum" class="headerlink" title="2.5.2 Education and Curriculum"></a>2.5.2 <a href="http://www.osgeo.org/education" target="_blank" rel="external">Education and Curriculum</a></h4><p><img src="http://www.geoforall.org/resources/images/geoforallC.png" alt="logo"><br><a href="http://www.geoforall.org/" target="_blank" rel="external">“Geo for All”</a> is the Open Source Geospatial Foundation’s Open Educational outreach with our partners worldwide with the mission for making geospatial education and opportunities accessible to all.</p><h4 id="2-5-3-OSGeo-Live"><a href="#2-5-3-OSGeo-Live" class="headerlink" title="2.5.3 OSGeo Live"></a>2.5.3 <a href="http://live.osgeo.org/" target="_blank" rel="external">OSGeo Live</a></h4><p><img src="http://live.osgeo.org/_images/banner.png" alt=""><br><a href="http://live.osgeo.org/" target="_blank" rel="external">OSGeo-Live</a> is a self-contained bootable DVD, USB thumb drive or Virtual Machine based on <a href="http://lubuntu.net/" target="_blank" rel="external">Lubuntu</a>, that allows you to try a wide variety of open source geospatial software without installing anything. It is composed entirely of free software, allowing it to be freely distributed, duplicated and passed around.</p><p>It provides pre-configured applications for a range of geospatial use cases, including storage, publishing, viewing, analysis and manipulation of data. It also contains sample datasets and documentation.</p><p>To try out the applications, simply:</p><ol><li>Insert DVD or USB thumb drive in computer or virtual machine.</li><li>Reboot computer. (verify boot device order if necessary)</li><li>Press “Enter” to startup &amp; login.</li><li>Select and run applications from the “Geospatial” menu.</li></ol><h2 id="3-培育项目（Incubating-Projects）"><a href="#3-培育项目（Incubating-Projects）" class="headerlink" title="3. 培育项目（Incubating Projects）"></a>3. 培育项目（Incubating Projects）</h2><h3 id="3-1-网络制图-Web-Mapping"><a href="#3-1-网络制图-Web-Mapping" class="headerlink" title="3.1 网络制图 Web Mapping"></a>3.1 网络制图 Web Mapping</h3><h4 id="3-1-1-istSOS"><a href="#3-1-1-istSOS" class="headerlink" title="3.1.1 istSOS"></a>3.1.1 <a href="http://istsos.org/" target="_blank" rel="external">istSOS</a></h4><p><img src="http://wiki.osgeo.org/images/thumb/a/a3/Logo-istSOS.png/300px-Logo-istSOS.png" alt=""><br>istSOS is an OGC SOS server implementation written in Python. istSOS allows for managing and dispatch observations from monitoring sensors according to the Sensor Observation Service standard.</p><p>The project provides also a Graphical user Interface that allows for easing the daily operations and a RESTful Web api for automatizing administration procedures.</p><p>istSOS is released under the GPL License, and runs on all major platforms (Windows, Linux, Mac OS X), even though tests were conducted under a Linux environment.</p><h4 id="3-1-2-PyWPS"><a href="#3-1-2-PyWPS" class="headerlink" title="3.1.2 PyWPS"></a>3.1.2 <a href="http://www.pywps.org/" target="_blank" rel="external">PyWPS</a></h4><p><img src="http://pywps.org/images/pywps.png" alt=""><br>PyWPS is an implementation of the <a href="http://opengeospatial.org/standards/wps" target="_blank" rel="external">Web Processing Service</a> standard from the <a href="http://opengeospatial.org/" target="_blank" rel="external">Open Geospatial Consortium</a>. PyWPS is written in <a href="https://python.org/" target="_blank" rel="external">Python</a>.<br>PyWPS enables integration, publishing and execution of Python processes via the WPS standard.<br>PyWPS is Open Source and released under an MIT <a href="http://pywps.org/license" target="_blank" rel="external">license</a>.</p><h4 id="3-1-3-ZOO-Project"><a href="#3-1-3-ZOO-Project" class="headerlink" title="3.1.3 ZOO-Project"></a>3.1.3 <a href="http://www.zoo-project.org/" target="_blank" rel="external">ZOO-Project</a></h4><p><img src="http://www.zoo-project.org/img/zoo-sun-logo.png" alt=""><br><a href="http://zoo-project.org/" target="_blank" rel="external">ZOO-Project</a> is a WPS (Web Processing Service) implementation written in C, Python and JavaScript. It is an open source platform which implements the <a href="http://www.opengeospatial.org/standards/wps/" target="_blank" rel="external">WPS 1.0.0</a> and <a href="http://www.opengeospatial.org/standards/wps/" target="_blank" rel="external">WPS 2.0.0</a> standards edited by the <a href="http://www.opengeospatial.org/" target="_blank" rel="external">Open Geospatial Consortium</a>(OGC).<br>The <a href="http://zoo-project.org/" target="_blank" rel="external">ZOO-Project</a> platform is made up of the following components:</p><ul><li><a href="http://zoo-project.org/docs/kernel/index.html#kernel-index" target="_blank" rel="external">ZOO-Kernel</a>: A WPS compliant implementation written in C offering a powerful WPS server able to manage and chain WPS services. by loading dynamic libraries and code written in different languages.</li><li><a href="http://zoo-project.org/docs/services/index.html#services-index" target="_blank" rel="external">ZOO-Services</a>: A growing collection of ready to use Web Processing Services built on top of reliable open source libraries such as GDAL, GRASS GIS, OrfeoToolbox, CGAL and SAGA GIS.</li><li><a href="http://zoo-project.org/docs/api/index.html#api-index" target="_blank" rel="external">ZOO-API</a>: A server-side JavaScript API for creating, chaining and orchestrating the available WPS Services.</li><li><a href="http://zoo-project.org/docs/client/index.html#client-index" target="_blank" rel="external">ZOO-Client</a>: A client side JavaScript API for interacting with WPS servers and executing standard requests from web applications.</li></ul><h3 id="3-2-桌面应用-Desktop-Applications"><a href="#3-2-桌面应用-Desktop-Applications" class="headerlink" title="3.2 桌面应用 Desktop Applications"></a>3.2 桌面应用 Desktop Applications</h3><h4 id="3-2-1-Opticks"><a href="#3-2-1-Opticks" class="headerlink" title="3.2.1 Opticks"></a>3.2.1 <a href="http://opticks.org/" target="_blank" rel="external">Opticks</a></h4><p>（网站打不开— The website is dead）</p><h3 id="3-3-地理空间库-Geospatial-Libraries"><a href="#3-3-地理空间库-Geospatial-Libraries" class="headerlink" title="3.3 地理空间库 Geospatial Libraries"></a>3.3 地理空间库 Geospatial Libraries</h3><h4 id="3-3-1-MetaCRS"><a href="#3-3-1-MetaCRS" class="headerlink" title="3.3.1 MetaCRS"></a>3.3.1 <a href="http://metacrs.osgeo.org/" target="_blank" rel="external">MetaCRS</a></h4><p>MetaCRS is a project encompassing several projections, and coordinate system related technologies. Our plan is to treat a variety of coordinate system activities as one Project from an OSGeo point of view. This helps provide enough “project mass” to justify the full OSGeo project treatment. But more importantly it would give us a forum to cooperate. Sharing things like coordinate system dictionaries, test suites and mathematical formulations.</p><h5 id="Sub-projects"><a href="#Sub-projects" class="headerlink" title="Sub-projects"></a>Sub-projects<a href="https://trac.osgeo.org/metacrs/#Sub-projects" title="链接至本节" target="_blank" rel="external"></a></h5><p>The following are sub-projects of MetaCRS:</p><ul><li><a href="http://trac.osgeo.org/proj" target="_blank" rel="external">PROJ.4</a> - lead - Frank Warmerdam</li><li><a href="http://trac.osgeo.org/proj4js" target="_blank" rel="external">Proj4js</a> - lead - Mike Adair</li><li><a href="http://trac.osgeo.org/csmap" target="_blank" rel="external">CS-Map</a> - lead - Hugues Wisiewski</li><li><a href="http://geotiff.osgeo.org/" target="_blank" rel="external">GeoTIFF/libgeotiff</a> - lead - Frank Warmerdam</li><li><a href="https://trac.osgeo.org/metacrs/wiki/SpatialReferenceOrg" target="_blank" rel="external">SpatialReference.org</a> - lead - Howard? Chris?</li><li><a href="http://trac.osgeo.org/proj4j/" target="_blank" rel="external">Proj4J</a> - lead - Martin Davis</li></ul><h4 id="3-3-2-Orfeo-ToolBox-OTB"><a href="#3-3-2-Orfeo-ToolBox-OTB" class="headerlink" title="3.3.2 Orfeo ToolBox (OTB)"></a>3.3.2 <a href="http://www.orfeo-toolbox.org/otb/" target="_blank" rel="external">Orfeo ToolBox (OTB)</a></h4><p><img src="https://www.orfeo-toolbox.org/wp-content/uploads/2016/03/logo-orfeo-toolbox.png" alt=""><br>Orfeo ToolBox (OTB) is an open-source C++ library for remote sensing images processing, distributed under the CeCILL-v2 license. It has been initiated and funded by CNES (French space agency) in the frame of a program named ORFEO to prepare, accompany and promote the use and the exploitation of the images derived from Pléiades satellites (PHR). Orfeo ToolBox aims at enabling large images state-of-the-art processing even on limited resources laptops, and is shipped with a set of extensible ready-to-use tools for classical remote sensing tasks, as well as a fully integrated, end-users oriented software called Monteverdi.</p><h3 id="3-4-内容管理系统（Content-Management-Systems）"><a href="#3-4-内容管理系统（Content-Management-Systems）" class="headerlink" title="3.4 内容管理系统（Content Management Systems）"></a>3.4 内容管理系统（Content Management Systems）</h3><h4 id="3-4-1-GeoNode"><a href="#3-4-1-GeoNode" class="headerlink" title="3.4.1 GeoNode"></a>3.4.1 <a href="http://geonode.org/" target="_blank" rel="external">GeoNode</a></h4><p><img src="http://geonode.org/static/img/hero_img.png" alt=""><br>GeoNode is a web-based application and platform for developing geospatial information systems (GIS) and for deploying spatial data infrastructures (SDI).<br>It is designed to be extended and modified, and can be integrated into existing platforms.</p><h2 id="4-OSGeo社区项目（OSGeo-Community-Projects）"><a href="#4-OSGeo社区项目（OSGeo-Community-Projects）" class="headerlink" title="4. OSGeo社区项目（OSGeo Community Projects）"></a>4. OSGeo社区项目（OSGeo Community Projects）</h2><h3 id="4-1-Geoinformatica"><a href="#4-1-Geoinformatica" class="headerlink" title="4.1  Geoinformatica"></a>4.1 <a href="https://wiki.osgeo.org/wiki/Geoinformatica" target="_blank" rel="external">Geoinformatica</a></h3><p><a href="https://github.com/ajolma/geoinformatica" target="_blank" rel="external">Geoinformatica</a> is a geospatial toolkit that builds on GDAL, Perl, GTK+, various libraries and Perl modules. The functionality of the toolkit is mostly in those and here are only geospatial web service programs, and a simple graphical application.</p><h3 id="4-2-GeoWebCache"><a href="#4-2-GeoWebCache" class="headerlink" title="4.2  GeoWebCache"></a>4.2 <a href="https://wiki.osgeo.org/wiki/GeoWebCache" target="_blank" rel="external">GeoWebCache</a></h3><p><img src="https://avatars0.githubusercontent.com/u/422721?v=3&amp;s=200" alt="GeoWebCache"><br><a href="https://github.com/GeoWebCache/geowebcache" target="_blank" rel="external">GeoWebCache</a> is a tile caching server implemented in Java that provides various tile caching services like WMS-C, TMS, WMTS, Google Maps, MS Bing and more</p><h3 id="4-3-pgRouting"><a href="#4-3-pgRouting" class="headerlink" title="4.3  pgRouting"></a>4.3 <a href="https://wiki.osgeo.org/wiki/PgRouting" target="_blank" rel="external">pgRouting</a></h3><p><img src="http://pgrouting.org/_images/pgrouting.png" alt="pgRouting Project"><br>pgRouting extends the <a href="http://www.postgis.net/" target="_blank" rel="external">PostGIS</a> / <a href="http://www.postgresql.org/" target="_blank" rel="external">PostgreSQL</a> geospatial database to provide geospatial routing functionality.<br>Advantages of the database routing approach are:</p><ul><li>Data and attributes can be modified by many clients, like <a href="http://www.qgis.org/" target="_blank" rel="external">QGIS</a> and <a href="http://udig.refractions.net/" target="_blank" rel="external">uDig</a> through JDBC, ODBC, or directly using Pl/pgSQL. The clients can either be PCs or mobile devices.</li><li>Data changes can be reflected instantaneously through the routing engine. There is no need for precalculation.</li><li>The “cost” parameter can be dynamically calculated through SQL and its value can come from multiple fields or tables.</li></ul><p>pgRouting is available under the GPLv2 license and is supported by a growing community of individuals, businesses and organizations.</p><h3 id="4-4-Virtual-Terrain-Project"><a href="#4-4-Virtual-Terrain-Project" class="headerlink" title="4.4  Virtual Terrain Project"></a>4.4 <a href="https://wiki.osgeo.org/wiki/Virtual_Terrain_Project" target="_blank" rel="external">Virtual Terrain Project</a></h3><p><img src="http://vterrain.org/Logo/VTP-logo-b2.png" alt="VTP"><br>The goal of <a href="http://vterrain.org/" target="_blank" rel="external">VTP</a> is to foster <strong>the creation of tools for easily constructing any part of the real world in interactive, 3D digital form.</strong></p><!-- rebuild by neat -->]]></content>
    </entry>
    
  
  
</search>
